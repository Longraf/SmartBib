(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
let Account = new Lure.Content({
    Name: 'Account',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '.user-menu_account'
    },

    Content: `<div class="account content">
                <h2 class="h2">Моя учетная запись</h2>
                
              </div>`,
    Proto: {

    },
    Props: function () {

    },
    Methods: function () {

    },
    Refresh: function () {

    },
    BeforeShow: function () {

    },
    AfterBuild: function () {

    }
});
window.Account = Account;
require('./_change-pass');

module.exports = Account;

},{"./_change-pass":2}],2:[function(require,module,exports){
module.exports = new Lure.Content({
    Parent: Account,
    Name: 'AccountChangePass',
    Type: 'account-content',
    Visible: true,
    Content: `<div class="change-pass">
                <div class="h3">Изменение Пароля</div>
                <div class="line"><input class="textbox l-textbox pass1" type="password" placeholder="Новый пароль"></div>
                <div class="line"><input class="textbox l-textbox pass2" type="password" placeholder="Новый пароль еще раз"></div>
                <button class="button l-button btn-commit">Сменить</button> 
              </div>`,
    Props: function () {
        this.TextBoxPass1 = this.Select('.pass1');
        this.TextBoxPass2 = this.Select('.pass2');
        this.ButtonChangePass = this.Select('.btn-commit');
    },
    Methods: function () {
        this.ChangePass = function () {
            let pass1 = this.TextBoxPass1.value;
            let pass2 = this.TextBoxPass2.value;

            if (pass1.length < 8)
                return Lure.System.Warn('Пароль менее 8 символов');

            if (pass1 !== pass2){
                return Lure.System.Warn('Пароли не совпрадают');
            }

            Lure.Button.Lock(this.ButtonChangePass);
            api.ChangePass(pass1, {
                Then: ()=>{
                    Lure.System.Success('Пароль изменен');
                },
                Catch: (e)=>{
                    Lure.System.Error('не удалось сменить пароль', e);
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonChangePass);
                }
            })
        }
    },
    AfterBuild: function () {
        this.ButtonChangePass.addEventListener('click', ()=>{
            this.ChangePass();
        })
    }
});
},{}],3:[function(require,module,exports){
//import * as Dictionary from "../global/dictionary";
const D = require('./../_common/dictionary');


let Admin = new Lure.Content({
    Name: 'Admin',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '#nav-admin'
    },
    Permission: {
        Roles: [D.Role.AdminCBS, D.Role.AdminUserManagement, D.Role.AdminTechManagement, D.Role.AdminUserCreate]
    },
    Content: `<div class="admin content">
                <!--<h2 class="h2">CBSMyAdmin</h2>-->
                
              </div>`,
    Proto: {
        LibraryRegionID: 1,
    },
    Props: function () {},
    Methods: function () {},
    Refresh: function () {},
    BeforeShow: function () {},
    AfterBuild: function () {}
});
window.Admin = Admin;
require('./UserManagement/UserCreator.js');
require('./UserManagement/UserEditor.js');

require('./TechnicianManagement/TechnicianEditor');

module.exports = Admin;

},{"./../_common/dictionary":102,"./TechnicianManagement/TechnicianEditor":5,"./UserManagement/UserCreator.js":6,"./UserManagement/UserEditor.js":7}],4:[function(require,module,exports){
let ListSelector = require('../../_common/list-selector/list-selector');
const D = require('./../../_common/dictionary');

Admin.TechnicianManager.Creator = new Lure.Content({
    Parent: Admin.TechnicianManager,
    Name: 'TechnicianCreator',
    Route: false,
    Visible: false,
    Permission: {
        Roles: [D.Role.AdminCBS, D.Role.AdminUserManagement]
    },

    Control: {
        Target: '.btn-technician-add'
    },
    Content: `<div class="technician-creator">
                <div class="inner-wrap">
                    <div class="l-row l-line">
                        <div class="caption">Пользователь, который станет техником: </div>
                        <div class="value">
                          <select class="user-select"></select>
                        </div>
                    </div>
                    <div class="user-card">
                        <div class="l-row l-line">
                            <div class="caption">ID:</div>
                            <div class="value">{{ID}}</div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Логин:</div>
                            <div class="value">{{Login}}</div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Имя:</div>
                            <div class="value ">{{Name}}</div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Email:</div>
                            <div class="value ">{{Email}}</div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Телефон:</div>
                            <div class="value ">{{Phone}}</div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Должность:</div>
                            <div class="value ">{{Position}}</div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Библиотеки:</div>
                            <div class="value value-library">
                            {{#each LibraryIDList}}
                                <div class="value" title="{{$g.Lure.User.Cache.LibraryListDict[$this].Name}}">— {{$g.Lure.User.Cache.LibraryListDict[$this].Name}}</div>
                            {{#endeach}}
                            </div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Типы заявок:</div>
                            <div class="value value-requesttypes">
                            {{#each HelpRequestTypeIDList}}
                                <div class="value" title="{{$g.D.LibraryRegionDict[$this]}}">— {{$g.D.HelpRequestTypeDict[$this]}}</div>
                            {{#endeach}}
                            </div>
                        </div>
                        
                    </div>
                    <div class="button-holder">
                      <button class="button l-button btn-technician-add-commit">Готово</button>
                    </div>
                </div>
              </div>`,

    Controller: {
        Target: '.user-select',
        ListElement: `<option value="{{ID}}">{{Name}}</option>`,
    },
    State: {
        ID: -1,
        Login: '',
        Name: '',
        Email: '',
        Phone: '',
        Position: 'Techman',
        LibraryIDList: [],
        HelpRequestTypeIDList: [],
    },
    Load: '.inner-wrap',

    Props: function(){
        this.SelectUser = this.Select('.user-select');
        this.ButtonCommit = this.Select('.btn-technician-add-commit')
    },
    Methods: function(){
        this.SetUser = function () {
            let UserID = parseInt(this.SelectUser.value);
            let User = this.Controller.Data.Where(x=>x.ID === UserID).FirstOrDefault();
            User.LibraryIDList = [];
            User.HelpRequestTypeIDList = [];
            this.ListSelectorLibraries.SetSelected([]);
            this.ListSelectorHelpRequestTypes.SetSelected([]);
            this.State = User;

            this.Proto.Refresh();
        };
        this.Commit = function () {
            let State = this.State;
            if (State.LibraryIDList.length < 1)
                return Lure.System.ShowWarn('Выберите библиотеки обслуживания');
            if (State.HelpRequestTypeIDList.length < 1)
                return Lure.System.ShowWarn('Выберите типы обслуживания библиотек');

            api.Admin_Technician_Add(Admin.TechnicianManager.CurrentLibraryRegionID, State.ID, State.LibraryIDList, State.HelpRequestTypeIDList, {
                Then: (res)=>{
                    if (res < 0){
                        return Lure.System.Error('error')
                    }
                    Lure.System.Success(`Техник назначен на пользователя "${State.Name}"`);
                    Admin.TechnicianManager.TechLoginIDs.push(State.ID);
                    State.LibraryIDList = [];
                    State.HelpRequestTypeIDList = [];
                    this.Hide();
                },
                Finally: ()=>{
                    this.Load.Hide();
                }
            });
        }
    },
    Refresh: function(){
        this.Load.Show();
        api.Admin_UserListGet(Admin.TechnicianManager.CurrentLibraryRegionID, -1, {
           Then: (list)=>{
               list = list.Where(x=>Admin.TechnicianManager.TechLoginIDs.indexOf(x.LoginID) < 0);
               this.Controller.Refresh(list);
               this.SetUser();
               this.Load.Hide();
           }
        });
    },
    BeforeShow: function () {
        this.Refresh();
    },
    AfterBuild: function () {
        this.ListSelectorLibraries = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-library'),
            Data: Lure.User.Cache.LibraryGroupList.Where(g=>g.ID === Admin.TechnicianManager.CurrentLibraryRegionID).FirstOrDefault().LibraryList,
            MultiSelect: true,
            Selected: this.State.LibraryIDList,
            OnSelect: (selected)=>{
                if (this.State.ID < 0)
                    return;
                this.Proto.SetProperty('LibraryIDList', selected);
            }
        });
        this.ListSelectorHelpRequestTypes = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-requesttypes'),
            Data: Static.HelpRequestTypes,
            MultiSelect: true,
            Selected: this.State.LibraryIDList,
            OnSelect: (selected)=>{
                if (this.State.ID < 0)
                    return;
                this.Proto.SetProperty('HelpRequestTypeIDList', selected);
            },
            Groups: [
                {
                    Name: 'Все',
                    Values: Static.HelpRequestTypes.Select(x=>x.ID)
                },
                {
                    Name: 'ИТ',
                    Values: D.HelpRequestTypeITList,
                },
                {
                    Name: 'АХД',
                    Values: D.HelpRequestTypeAHDList,
                }
            ]
        });

        this.SelectUser.addEventListener('change', ()=>this.SetUser());
        this.ButtonCommit.addEventListener('click', ()=>this.Commit());
    }
});
},{"../../_common/list-selector/list-selector":112,"./../../_common/dictionary":102}],5:[function(require,module,exports){
let ListSelector = require('../../_common/list-selector/list-selector');
const D = require('./../../_common/dictionary');

Admin.TechnicianManager = new Lure.Content({
    Parent: Admin,
    Name: 'TechnicianManager',
    Type: 'admin-content',
    Permission: {
        Roles: [D.Role.AdminTechManagement],
    },
    Control: {
        Target: '#nav-admin-technician-management'
    },
    Content: `<div class="technician-manager">
                <h2 class="h2">CBSMyAdmin - Управление техниками</h2> 
                <div class="block library-region">
                    <div class="title">Управление в рамках ЦБС:</div>
                </div>
                <div class="l-row">
                    <div class="user-card-wrap">
                        <div class="user-card">
                            <div class="l-row l-line">
                                <div class="caption">ID:</div>
                                <div class="value">{{ID}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Логин:</div>
                                <div class="value">{{Login}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Имя:</div>
                                <div class="value ">{{Name}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Email:</div>
                                <div class="value ">{{Email}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Телефон:</div>
                                <div class="value ">{{Phone}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Должность:</div>
                                <div class="value ">{{Position}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Библиотеки:</div>
                                <div class="value value-library">
                                {{#each LibraryIDList}}
                                    <div class="value" title="{{$g.Lure.User.Cache.LibraryListDict[$this].Name}}">— {{$g.Lure.User.Cache.LibraryListDict[$this].Name}}</div>
                                {{#endeach}}
                                </div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Типы заявок:</div>
                                <div class="value value-requesttypes">
                                {{#each HelpRequestTypeIDList}}
                                    <div class="value" title="{{$g.D.LibraryRegionDict[$this]}}">— {{$g.D.HelpRequestTypeDict[$this]}}</div>
                                {{#endeach}}
                                </div>
                            </div>
                            
                        </div>
                    </div>
                    <div class="l-col">
                        <div class="l-row sort-user-list">
                            <div class="element name sort-name">по имени</div>
                            <div class="element position sort-position">по должности</div>
                        </div>
                        <div class="user-list"></div>
                    </div>
                </div>
                <div class="button-holder">
                    <button class="button l-button btn-technician-add">Назначить нового техника</button>
                </div>
              </div>`,
    GetSet:{
        get CurrentLibraryRegionID() {
            return this._LibRegions.Value;
        },
    },
    Controller: {
        Target: '.user-list',
        ListElement: `<div class="tr l-row user-list_element">
                         <div class="element flex-100">{{Name}}</div>
                         <div class="element position">{{Position}}</div>
                      </div>`,
        EmptyMessage: `<div class="list-empty">empty</div>`,
    },
    Sort: {
        Name: '.sort-name',
        Position: '.sort-position',
    },
    State: {
        ID: -1,
        Login: '',
        Name: '',
        Email: '',
        Phone: '',
        Position: 'Techman',
        LibraryIDList: [],
        HelpRequestTypeIDList: [],
    },
    SubContent: function () {
        this._LibRegions = new Lure.Content({
            Target: '.library-region',
            Content: `<select class="select select-cbs"></select>`,
            Controller: {
                ListElement: `<option value="{{ID}}">{{Name}}</option>`,
                AfterBuild: function () {
                    this.Content.value = this.Controller.Data.FirstOrDefault({}).ID;
                    this.Value = this.Controller.Data.FirstOrDefault({}).ID;
                }
            },
            Props: function(){
                this.CData = Lure.User.Cache.LibraryRegions.Select(x=>{return {ID: x, Name: D.LibraryRegionDict[x]}});
                this.Value = this.CData[0].ID;
            },
            AfterBuild: function () {
                this.Controller.Refresh(this.CData);
                this.Content.addEventListener('change', (e)=>{
                    this.Value = parseInt(e.currentTarget.value);

                    this.Parent.OnChangeCBS();
                })
            }
        });
    },
    Props: function(){
        this.LoadCard = new Lure.Load({Target: this.Select('.user-card')});
    },
    Methods: function(){
        this.GetTechnicianList = function () {
            this.Load.Show();
            return api.Admin_TechnicianListGet(this.CurrentLibraryRegionID, {
                Then: (list)=>{
                    this.TechLoginIDs = list.Select(x=>x.LoginID);
                    this.Controller.Refresh(list);
                },
                Catch: (e)=>{
                    Lure.System.Error(e);
                },
                Finally: ()=>{
                    this.Load.Hide();
                }

            });
        };
        this.PrepareUser = function (Technician) {
            this.State = Technician;
            this.ListSelectorLibraries.SetSelected(Technician.LibraryIDList);
            this.ListSelectorHelpRequestTypes.SetSelected(Technician.HelpRequestTypeIDList);
            this.Proto.Refresh();
        };
    },
    Refresh: function(){
        this.GetTechnicianList();
    },
    BeforeShow: function () {
        this.Refresh();
    },
    AfterBuild: function () {
        this.ListSelectorLibraries = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-library'),
            Data: Lure.User.Cache.LibraryGroupList.Where(g=>g.ID === this.CurrentLibraryRegionID).FirstOrDefault().LibraryList,
            MultiSelect: true,
            Selected: this.State.LibraryIDList,
            OnSelect: (selected)=>{
                if (this.State.ID < 0)
                    return;
                api.Admin_TechnicianEdit_Libraries(this.CurrentLibraryRegionID, this.State.ID, selected, {
                    Then: (res)=>{
                        if (res > 0){
                            Lure.System.Success('LibraryIDList Changed');
                            this.Proto.SetProperty('LibraryIDList', selected);
                        }
                    },
                    Catch: ()=>{
                        Lure.System.Error('LibraryIDList changing error');
                    }
                });

            },

        });
        this.ListSelectorHelpRequestTypes = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-requesttypes'),
            Data: Static.HelpRequestTypes,
            MultiSelect: true,
            Selected: this.State.LibraryIDList,
            OnSelect: (selected)=>{
                if (this.State.ID < 0)
                    return;
                api.Admin_TechnicianEdit_HelpRequestTypes(this.CurrentLibraryRegionID, this.State.ID, selected, {
                    Then: (res)=>{
                        if (res > 0){
                            Lure.System.Success('HelpRequestTypes Changed');
                            this.Proto.SetProperty('HelpRequestTypeIDList', selected);
                        }
                    },
                    Catch: ()=>{
                        Lure.System.Error('HelpRequestTypes changing error');
                    }
                });

            },
            Groups: [
                {
                    Name: 'Все',
                    Values: Static.HelpRequestTypes.Select(x=>x.ID)
                },
                {
                    Name: 'ИТ',
                    Values: D.HelpRequestTypeITList,
                },
                {
                    Name: 'АХД',
                    Values: D.HelpRequestTypeAHDList,
                }
            ]
        });

        this.AddEventListener('click', '.user-list_element:not(.active)', function (e, p) {
            for (let v of this.Controller.DataItems)
                v.DOM.classList.remove('active');
            e.currentTarget.classList.add('active');
            let DataItem = this.Controller.GetDataItemByLineID(p.LineID);
            this.PrepareUser(DataItem.Data);
        });
    }
});
require('./TechnicianCreator');
//module.exports = Admin.TechnicianManager;
},{"../../_common/list-selector/list-selector":112,"./../../_common/dictionary":102,"./TechnicianCreator":4}],6:[function(require,module,exports){
//import * as Dictionary from "../../global/dictionary";
const D = require('../../_common/dictionary');
let ListSelector = require('../../_common/list-selector/list-selector');
let UserPositionPreset = require('./_RolePositionsPreset');

Admin.UserCreator = new Lure.Content({
    Parent: Admin,
    Name: 'UserCreator',
    Type: 'admin-content',
    Visible: true,
    Permission: {
        Roles: [D.Role.AdminUserCreate]
    },
    Control:{
        Target: '#nav-admin-user-create'
    },
    Content: `<div class="user-creator">
                <h2 class="h2">CBSMyAdmin - Новый пользователь</h2> 
                <div class="block library-region">
                    <div class="title">Library Region (CBS):</div>
                </div>
                <div class="user-card-wrap">
                    <div class="button-holder l-row">
                        <div class="l-button button l-pointer btn-load-default-roles none">Load default position's roles</div>
                    </div>
                    <div class="user-card">
                        <div class="l-row l-line">
                            <div class="caption">Логин:</div>
                            <div class="value"><input class="l-textbox textbox user-login" type="text" placeholder="логин"> </div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Имя:</div>
                            <div class="value"><input class="l-textbox textbox user-name" type="text" placeholder="имя пользователя"></div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Email:</div>
                            <div class="value"><input class="l-textbox textbox user-email" type="email" placeholder="email@host.ru"></div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Телефон:</div>
                            <div class="value"><input class="l-textbox textbox user-phone" type="text" placeholder="000-00-00"></div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Должность:</div>
                            <div class="value"><input class="l-textbox textbox user-position" type="text" placeholder="должность"></div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Комментарии:</div>
                            <div class="value"><input class="l-textbox textbox user-position" type="text" placeholder="Описание"></div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Права доступа:</div>
                            <div class="value value-role">
                            {{#each Roles}}
                                <div class="value" title="{{$g.D.RoleDict[$this]}}">— {{$g.D.RoleDict[$this]}}</div>
                            {{#endeach}}
                            </div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">Библиотеки:</div>
                            <div class="value value-library">
                            {{#each LibraryIDList}}
                                <div class="value" title="{{$g.Lure.User.Cache.LibraryListDict[$this].Name}}">— {{$g.Lure.User.Cache.LibraryListDict[$this].Name}}</div>
                            {{#endeach}}
                            </div>
                        </div>
                        <div class="l-row l-line">
                            <div class="caption">ЦБС:</div>
                            <div class="value value-cbs">
                            {{#each LibraryRegionIDList}}
                                <div class="value" title="{{$g.D.LibraryRegionDict[$this]}}">{{$g.D.LibraryRegionDict[$this]}}</div>
                            {{#endeach}}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="button-holder l-row">
                    <button class="l-button button l-pointer btn-management-commit">Create user</button>
                </div>
              </div>`,
    Load: '',
    GetSet:{
        get CurrentLibraryRegionID() {
            return this._LibRegions.Value;
        },
    },
    State: {
        ID: -1,
        Login: '',
        Name: '',
        Position: 'Librarian',
        Email: '',
        Phone: '',
        Roles: UserPositionPreset[1],
        LibraryIDList: [440],
        LibraryRegionIDList: [],

        UserPositions: Static.UserPositions
    },
    SubContent: function(){
        this._LibRegions = new Lure.Content({
            Target: '.library-region',
            Content: `<select class="select select-cbs"></select>`,
            Controller: {
                ListElement: `<option value="{{ID}}">{{Name}}</option>`,
                AfterBuild: function () {
                    this.Content.value = this.Controller.Data.FirstOrDefault({}).ID;
                    this.Value = this.Controller.Data.FirstOrDefault({}).ID;
                }
            },
            Props: function(){
                this.CData = Lure.User.Cache.LibraryRegions.Select(x=>{return {ID: x, Name: D.LibraryRegionDict[x]}});
                this.Value = this.CData[0].ID;
            },
            AfterBuild: function () {
                this.Controller.Refresh(this.CData);
                this.Content.addEventListener('change', (e)=>{
                    this.Value = parseInt(e.currentTarget.value);

                    this.Parent.OnChangeCBS();
                })
            }
        });
    },

    Props: function () {
        this.ButtonCommit = this.Select('.btn-management-commit');
        this.ButtonLoadDefaultRoles = this.Select('.btn-load-default-roles');
    },
    Methods: function () {
        this.OnChangeCBS = function () {
            this.ListSelectorLibraries.Refresh(Lure.User.Cache.LibraryGroupList.Where(g=>g.ID === this.CurrentLibraryRegionID).FirstOrDefault({LibraryList:[]}).LibraryList);
            this.Proto.SetProperty('LibraryIDList', []);
        };
        this.Commit = function () {
            let User = this.State;
            if (User.Login === '')
                return Lure.System.Warn('Enter user LOGIN');
            if (User.Name === '')
                return Lure.System.Warn('Enter user NAME');
            if ( User.LibraryRegionIDList.length < 1 && (User.Roles.indexOf(D.Role.AdminCBS) > -1 || User.Roles.indexOf(D.Role.ModeratorCBS) > -1)){
                return Lure.System.Warn('For admin or moderator creation you have to select LibraryRegions (CBS)');
            }
            User.Pass = Lure.String.Random(8);
            Lure.Button.Lock(this.ButtonCommit);
            return api.Admin_UserAdd(this.CurrentLibraryRegionID, User, {
                Then: (res)=>{
                    if (res === -2){
                        return Lure.System.Warn('LOGIN already exists');
                    }
                    if (res === -1){
                        return Lure.System.Error('Server error');
                    }
                    //User.ID = res;
                    Lure.Confirm('User creation', `User created. Login: <strong>${User.Login}</strong> Password: <strong>${User.Pass}</strong>`);
                    Lure.System.Success(`User created: ${User.Login}, ${User.Name}`);
                },
                Catch: (e)=>{
                    Lure.System.Error('Server connection error', e);
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonCommit);
                }
            });
        };
    },
    AfterBuild: function () {
        this.ListSelectorRoles = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-role'),
            Data: Static.Roles.Where(r=>r.ID > 2 && r.ID !== 14 && r.ID !== 16).sort((a,b)=>{return a.Name>b.Name ? 1:-1}),
            MultiSelect: true,
            Selected: this.State.Roles,
            OnSelect: (selected)=>{
                this.Proto.SetProperty('Roles', selected);
            }
        });
        this.ListSelectorLibraries = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-library'),
            Data: Lure.User.Cache.LibraryGroupList.Where(g=>g.ID === this.CurrentLibraryRegionID).FirstOrDefault().LibraryList,
            MultiSelect: true,
            Selected: this.State.LibraryIDList,
            OnSelect: (selected)=>{
                this.Proto.SetProperty('LibraryIDList', selected);
            }
        });
        this.ListSelectorCBS = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-cbs'),
            isAllowEmpty: true,
            Data: Static.LibraryRegions.Where(x=>Lure.User.Cache.LibraryRegions.indexOf(x.ID) > -1),
            MultiSelect: true,
            Selected: [],
            OnSelect: (selected)=>{
                this.Proto.SetProperty('LibraryRegionIDList', selected);
            }
        });
        this.Select('.user-login').addEventListener('change', (e)=>{
            this.State.Login = e.currentTarget.value;
        });
        this.Select('.user-name').addEventListener('change', (e)=>{
            this.State.Name = e.currentTarget.value;
        });
        this.Select('.user-email').addEventListener('change', (e)=>{
            this.State.Email = e.currentTarget.value;
        });
        this.Select('.user-phone').addEventListener('change', (e)=>{
            this.State.Phone = e.currentTarget.value;
        });
        this.Select('.user-position').addEventListener('keyup', (e)=>{
            this.State.Position = e.currentTarget.value
        });
        this.ButtonLoadDefaultRoles.addEventListener('click', ()=>{
            //this.LoadDefaultRoles();
            this.ListSelectorRoles.SetSelected(this.Proto.Data.Roles);
        });
        this.ButtonCommit.addEventListener('click', ()=>{
            this.Commit();
        })
    }
});

},{"../../_common/dictionary":102,"../../_common/list-selector/list-selector":112,"./_RolePositionsPreset":8}],7:[function(require,module,exports){
let ListSelector = require('../../_common/list-selector/list-selector');
let UserPositionPreset = require('./_RolePositionsPreset');
const D = require('../../_common/dictionary');
Admin.UserManagement = new Lure.Content({
    Parent: Admin,
    Name: 'UserEditor',
    Type: 'admin-content',
    Control:{
        Target: '#nav-admin-user-management'
    },
    Permission: {
        Roles: [D.Role.AdminUserManagement],
    },
    Content: `<div class="user-management">
                <h2 class="h2">CBSMyAdmin - Управление пользователем</h2> 
                <div class="h3">Основные данные пользователя</div>
                <div class="block library-region">
                    <div class="title">Управление в рамках ЦБС:</div>
                </div>
                <div class="button-holder l-row">
                    <div class="l-button button l-pointer btn-load-default-roles none">Load default position's roles</div>
                </div>
                <div class="l-row">
                    <div class="user-card-wrap">
                        <div class="user-card">
                            <div class="l-row l-line">
                                <div class="caption">ID:</div>
                                <div class="value">{{ID}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Логин:</div>
                                <div class="value">{{Login}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Имя:</div>
                                <div class="value editable">{{Name}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Email:</div>
                                <div class="value editable">{{Email}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Телефон:</div>
                                <div class="value editable">{{Phone}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Должность:</div>
                                <div class="value editable">{{Position}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Должность:</div>
                                <div class="value editable">{{Position}}</div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Права доступа:</div>
                                <div class="value value-role">
                                {{#each Roles}}
                                    <div class="value" title="{{$g.D.RoleDict[$this]}}">{{$g.D.RoleDict[$this]}}</div>
                                {{#endeach}}
                                </div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">Библиотеки:</div>
                                <div class="value value-library">
                                {{#each LibraryIDList}}
                                    <div class="value" title="{{$g.Lure.User.Cache.LibraryListDict[$this].Name}}">— {{$g.Lure.User.Cache.LibraryListDict[$this].Name}}</div>
                                {{#endeach}}
                                </div>
                            </div>
                            <div class="l-row l-line">
                                <div class="caption">ЦБС:</div>
                                <div class="value value-cbs">
                                {{#each LibraryRegionIDList}}
                                    <div class="value" title="{{$g.D.LibraryRegionDict[$this]}}">— {{$g.D.LibraryRegionDict[$this]}}</div>
                                {{#endeach}}
                                </div>
                            </div>
                            
                        </div>
                    </div>
                    <div class="l-col">
                        <div class="l-row sort-user-list">
                            <div class="element name sort-name">по имени</div>
                            <div class="element position sort-position">по должности</div>
                        </div>
                        <div class="user-list"></div>
                    </div>
                </div>
                <div class="pass-changing">
                    <div class="h3">Задать новый пароль выбранного пользователя</div>
                    <div class="line"><input class="textbox l-textbox input-change-pass" type="password" placeholder="новый пароль"></div>
                    <div class="line"><input class="textbox l-textbox input-change-pass2" type="password" placeholder="новый пароль повтор"></div>
                    <div class="line"><button class="l-button button btn-change-pass">Задать пароль</button></div>
                </div>
                
                <div class="user-killer">
                    <div class="h3">Удалить выбранного пользователя</div>
                    <div class="line"><button class="l-button button btn-user-kill">Удалить пользователя</button></div>
                </div>
              </div>`,
    Load: '',

    State: {
        ID: -1,
        Login: '',
        Name: '',
        Email: '',
        Phone: '',
        Position: 'Librarian',
        Roles: UserPositionPreset[1],
        LibraryIDList: [440],
        LibraryRegionIDList: [1],

        TestOptions: [{Value: 3, Name: 333},{Value: 1, Name: 111},{Value: 2, Name: 222},{Value: 4, Name: 444},]
    },
    Controller: {
        Target: '.user-list',
        ListElement: `<div class="tr l-row user-list_element">
                         <div class="element flex-100">{{Name}}</div>
                         <div class="element position">{{Position}}</div>
                      </div>`,
        EmptyMessage: `<div class="list-empty">empty</div>`,
    },
    Sort: {
        Name: '.sort-name',
        Position: '.sort-position',
    },
    OnChange: function(Param, Value){
        if (this.State.ID < 0)
            return Promise.reject('');
        console.log(`OnChange-> ${Param}=${Value}`);
        if (Param === 'Name')
            return api.Admin_UserEdit_Name(this.CurrentLibraryRegionID, this.State.ID, Value, {});
        if (Param === 'Position')
            return api.Admin_UserEdit_Position(this.CurrentLibraryRegionID, this.State.ID, Value, {});
        if (Param === 'Email')
            return api.Admin_UserEdit_Email(this.CurrentLibraryRegionID, this.State.ID, Value, {});
        if (Param === 'Phone')
            return api.Admin_UserEdit_Phone(this.CurrentLibraryRegionID, this.State.ID, Value, {});


        return Promise.resolve('');
    },
    // PropTypes: {
    //     PositionID: Lure.PropTypes.Int
    // },
    // PropFormat: {
    //     PositionID: (p)=>D.UserPositionDict[p]
    // },
    GetSet:{
        get CurrentLibraryRegionID() {
            return this._LibRegions.Value;
        },
    },

    SubContent: function(){
        this._LibRegions = new Lure.Content({
            Target: '.library-region',
            Content: `<select class="select select-cbs"></select>`,
            Controller: {
                ListElement: `<option value="{{ID}}">{{Name}}</option>`,
                AfterBuild: function () {
                    this.Content.value = this.Controller.Data.FirstOrDefault({}).ID;
                    this.Value = this.Controller.Data.FirstOrDefault({}).ID;
                }
            },
            Props: function(){
                this.CData = Lure.User.Cache.LibraryRegions.Select(x=>{return {ID: x, Name: D.LibraryRegionDict[x]}});
                this.Value = this.CData[0].ID;
            },
            AfterBuild: function () {
                this.Controller.Refresh(this.CData);
                this.Content.addEventListener('change', (e)=>{
                    this.Value = parseInt(e.currentTarget.value);

                    this.Parent.OnChangeCBS();
                })
            }
        });
    },
    Props: function () {
        this.LoadCard = new Lure.Load({Target: this.Select('.user-card')});
        // this.ControllerUsers = new Lure.Controller.Templator({
        //
        //     Owner: this,
        // });

        this.ButtonCommit = this.Select('.btn-management-commit');
        this.ButtonLoadDefaultRoles = this.Select('.btn-load-default-roles');
        this.UserList = this.Select('.user-list');

        this.TextBoxPass = this.Select('.input-change-pass');
        this.TextBoxPass2 = this.Select('.input-change-pass2');
        this.ButtonChangePass = this.Select('.btn-change-pass');
        this.ButtonUserKill = this.Select('.btn-user-kill');
    },
    Methods: function () {
        this.OnChangeCBS = function () {
            this.GetUserList();
        };
        this.GetUserList = function () {
            this.Load.Show();
            return api.Admin_UserListGet(Admin.UserManagement.CurrentLibraryRegionID, -1, {
                Then: (list)=>{
                    this.Controller.Refresh(list);
                },
                Catch: (e)=>{
                    Lure.System.Error(e);
                },
                Finally: ()=>{
                    this.Load.Hide();
                }

            });
        };
        // this.LoadDefaultRoles = function () {
        //     this.Proto.SetProperty('Roles', UserPositionPreset[this.Proto.Data.PositionID]);
        // };
        this.PrepareUser = function (UserID) {
            this.LoadCard.Show();
            return api.Admin_UserGet(this.CurrentLibraryRegionID, UserID, {
                Then: (user)=>{
                    this.Proto.Refresh(user);
                    this.ListSelectorRoles.SetSelected(user.Roles);
                    this.ListSelectorLibraries.SetSelected(user.LibraryIDList);
                    this.ListSelectorCBS.SetSelected(user.LibraryRegionIDList);
                    this.Show();
                },
                Finally: ()=>{
                    this.LoadCard.Hide();
                }
            })
        };
        this.ChangePass = function () {
            if (this.State.ID < 0)
                return Lure.System.Warn(`Учетная запись не выбрана`);

            let Pwd = this.TextBoxPass.value;
            let Pwd2 = this.TextBoxPass2.value;
            if (Pwd.length < 1){
                return Lure.System.Warn('Enter new password');
            }
            if (Pwd !==  Pwd2){
                return Lure.System.Warn(`Passwords aren't same`);
            }
            Lure.Button.Lock(this.ButtonChangePass);
            api.Admin_UserEdit_Pass(this.CurrentLibraryRegionID, this.State.ID, Pwd, {
                Then: (res)=>{
                    if (res > 0){
                        Lure.System.Success('Password changed');
                    } else{
                        Lure.System.Warn(`Password isn't chanded`);
                    }
                },
                Catch: (e)=>{
                    Lure.System.Error(`Server error`, e);
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonChangePass);
                }
            })
        };
        this.KillUser = function () {
            if (this.State.ID < 0)
                return Lure.System.Warn(`Учетная запись не выбрана`);

            Lure.Confirm('Внимание', `Вы собираетесь удалить пользователя <strong>${this.State.Login}</strong>. Продолжить?`, {
                OnAgree: ()=>{
                    api.Admin_User_Kill(this.CurrentLibraryRegionID, this.State.ID, {
                        Then: (res)=>{
                            if (res > 0){
                                Lure.System.Success('Учетная запись удалена');
                                let LineID = this.Controller.GetDataItemByDelegate(x=>x.ID === this.State.ID).LineID;
                                this.Controller.Remove(LineID);
                                this.Proto.SetProperty("ID", -1);
                            }
                            else{
                                Lure.System.Warn('Учетную запись удалеть не удалось');
                            }
                        },
                        Catch: (e)=>{
                            Lure.System.Warn('Ошибка удаления пользователя', e);
                        },
                        Finally: ()=>{

                        }
                    });
                },
                OnCancel: ()=>{}
            });
        }
    },
    Refresh: function () {

    },
    BeforeShow: function () {
        if (this.Controller.Data.length < 1)
            this.GetUserList();
    },
    AfterBuild: function () {
        this.ListSelectorRoles = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-role'),
            Data: Static.Roles.Where(r=>r.ID > 2 && r.ID !== 14 && r.ID !== 16).sort((a,b)=>{return a.Name>b.Name ? 1:-1}),
            MultiSelect: true,
            Selected: this.State.Roles,
            OnSelect: (selected)=>{
                if (this.State.ID < 0)
                    return;
                api.Admin_UserEdit_Roles(this.CurrentLibraryRegionID, this.State.ID, selected, {
                    Then: (res)=>{
                        if (res > 0){
                            Lure.System.Success('Roles Changed');
                            this.Proto.SetProperty('Roles', selected);
                        }
                    },
                    Catch: ()=>{
                        Lure.System.Error('Roles changing error');
                    }
                });

            }
        });
        this.ListSelectorLibraries = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-library'),
            Data: Lure.User.Cache.LibraryGroupList.Where(g=>g.ID === this.CurrentLibraryRegionID).FirstOrDefault().LibraryList,
            MultiSelect: true,
            Selected: this.State.LibraryIDList,
            OnSelect: (selected)=>{
                if (this.State.ID < 0)
                    return;
                api.Admin_UserEdit_Libraries(this.CurrentLibraryRegionID, this.State.ID, selected, {
                    Then: (res)=>{
                        if (res > 0){
                            Lure.System.Success('LibraryIDList Changed');
                            this.Proto.SetProperty('LibraryIDList', selected);
                        }
                    },
                    Catch: ()=>{
                        Lure.System.Error('LibraryIDList changing error');
                    }
                });

            }
        });
        this.ListSelectorCBS = new ListSelector({
            Target: this.Content,
            Control: this.Select('.value-cbs'),
            isAllowEmpty: true,
            Data: Static.LibraryRegions.Where(x=>Lure.User.Cache.LibraryRegions.indexOf(x.ID) > -1),
            MultiSelect: true,
            Selected: [],
            OnSelect: (selected)=>{
                if (this.State.ID < 0)
                    return;
                api.Admin_UserEdit_LibraryRegions(this.CurrentLibraryRegionID, this.State.ID, selected, {
                    Then: (res)=>{
                        if (res > 0){
                            Lure.System.Success('LibraryRegionIDList Changed');
                            this.Proto.SetProperty('LibraryRegionIDList', selected);
                        }
                    },
                    Catch: ()=>{
                        Lure.System.Error('LibraryRegionIDList changing error');
                    }
                });

            }
        });
        this.ButtonLoadDefaultRoles.addEventListener('click', ()=>{
            this.LoadDefaultRoles();
            this.ListSelectorRoles.Context.Selected = this.Proto.Data.Roles;
        });
        this.AddEventListener('click', '.user-list_element:not(.active)', function (e, p) {
            for (let v of this.Controller.DataItems)
                v.DOM.classList.remove('active');
            e.currentTarget.classList.add('active');
            let DataItem = this.Controller.GetDataItemByLineID(p.LineID);
            this.PrepareUser(DataItem.Data.ID);
        });
        this.ButtonChangePass.addEventListener('click', ()=>{
            this.ChangePass();
        });
        this.ButtonUserKill.addEventListener('click', ()=>{
            this.KillUser();
        });
    }
});

},{"../../_common/dictionary":102,"../../_common/list-selector/list-selector":112,"./_RolePositionsPreset":8}],8:[function(require,module,exports){
const D = require('../../_common/dictionary');

let UserPositionPreset = {};
UserPositionPreset[D.UserPosition.Librarian] = [
    D.Role.DairyInput,
    D.Role.DairyInputMovings,
    D.Role.Helpdesk
];
UserPositionPreset[D.UserPosition.Master] = [
    D.Role.DairySummary,
    D.Role.DairySummaryEdit,
    D.Role.Dashboard,
    D.Role.Passport,
    D.Role.Helpdesk,
    D.Role.Meter,
];
UserPositionPreset[D.UserPosition.MasterElder] = [D.Role.Helpdesk, D.Role.Passport, D.Role.Meter, D.Role.Dashboard, D.Role.DairySummary, D.Role.DairySummaryEdit];
UserPositionPreset[D.UserPosition.Moderator] = [
    D.Role.Helpdesk,
    D.Role.Passport,
    D.Role.Meter,
    D.Role.Dashboard,
    D.Role.DairySummary,
    D.Role.DairySummaryEdit,
    D.Role.ModeratorCBS,
];
UserPositionPreset[D.UserPosition.RegionModerator] = [
    D.Role.Helpdesk,
    D.Role.Passport,
    D.Role.Meter,
    D.Role.Dashboard,
    D.Role.DairySummary,
    D.Role.DairySummaryEdit,
    D.Role.ModeratorCBS,
];
UserPositionPreset[D.UserPosition.RegionAdmin] = [
    D.Role.Helpdesk,
    D.Role.Passport,
    D.Role.Meter,
    D.Role.Dashboard,
    D.Role.DairySummary,
    D.Role.DairySummaryEdit,
    D.Role.ModeratorCBS,
    D.Role.AdminCBS,
];
UserPositionPreset[D.UserPosition.Admin] = [
    D.Role.Helpdesk,
    D.Role.Passport,
    D.Role.Meter,
    D.Role.Dashboard,
    D.Role.DairySummary,
    D.Role.DairySummaryEdit,
    D.Role.ModeratorCBS,
    D.Role.AdminCBS,
    D.Role.Admin,
    D.Role.TesterPanel,
];

module.exports = UserPositionPreset;
},{"../../_common/dictionary":102}],9:[function(require,module,exports){

Dash.DashMain = new Lure.Content({
    //Disabled: true,
    Name: 'DashMain',
    Target: '',
    Type: 'dash-content',
    Visible: true,
    Control:{
        Target: '#nav-dash-main'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content: `
<div>
    <div class="diary-bread l-row">
        <div class="li l-row l-flexa-center flex-100">
            <div>Подразделение: &nbsp;&nbsp;</div>
            <div class="flex-100 library-tree-control strong">__</div>
        </div>
    </div>
    
    <div class="period-picker">
        <div class="periods">
            <div class="per today selected">Сегодня</div>
            <div class="per yesterday">Вчера</div>
            <div class="per week">Неделя</div>
            <div class="per month">Месяц</div>
            <div class="per quarter">Квартал</div>
            <div class="per year">Год</div>
        </div>
        <div class="per calendar-period">
            <div class="icon">&#128198;</div>
            <div class="dates"></div>
        </div>
    </div>
    <div class="pies">
    
        <div class="pie-visitors-wrap">
            <div class="chart-header">Посещаемость</div>
            <div class="pie-visitors">
                <div class="pie visitors-chart"></div>
                <div class="chart-subscript">
                    <div class="sub-icon param-icon"><span>{{Visitors.Sum}}</span><span>{{Divider}}</span><span>{{Visitors.Target}}</span></div>
                    <div class="sub-caption">выполнение<br>госзадания</div>
                </div>
            </div>
            <div class="parameters">
                <div class="param-header">
                    <div class="header-text">&nbsp;</div>
                    <div class="percent-123" data-type="Visitors"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                </div>
                <div class="row" data-type="v-0"><div class="color-mark new-reg">&nbsp;</div><div class="parameter-name">вновь записавшиеся</div><div class="parameter-value">{{Visitors.New}}</div></div>
                <div class="row" data-type="v-1"><div class="color-mark stationary">&nbsp;</div><div class="parameter-name">стационар</div><div class="parameter-value">{{Visitors.Stationary}}</div></div>
                <div class="row" data-type="v-2"><div class="color-mark events">&nbsp;</div><div class="parameter-name">мероприятия</div><div class="parameter-value">{{Visitors.Events}}</div></div>
                <div class="row" data-type="v-3"><div class="color-mark clubs">&nbsp;</div><div class="parameter-name">клубы</div><div class="parameter-value">{{Visitors.Clubs}}</div></div>
            </div>
        </div>
        
        <div class="pie-registers-double">
            <div class="chart-header">Записавшиеся</div>
            <div class="pie-registers-double-wrap">
                <div class="pie-registers-wrap">
                    <div class="pie-registers">
                        <div class="pie social-groups-chart"></div>
                        <div class="chart-subscript">
                            <div class="sub-icon param-icon"><span>{{Registers.Sum}}</span><span>{{Divider}}</span><span>{{Registers.Target}}</span></div>
                            <div class="sub-caption">выполнение<br>госзадания</div>
                        </div>
                    </div>
                    <div class="parameters">
                        <div class="param-header">
                            <div class="header-text">Социальные группы</div>
                            <div class="percent-123" data-type="Registers"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                        </div>
                        <div class="row" data-type="sg-0"><div class="color-mark pensioner">&nbsp;</div><div class="parameter-name">пенсионеры</div><div class="parameter-value">{{Registers.pensioner}}</div></div>
                        <div class="row" data-type="sg-1"><div class="color-mark employee">&nbsp;</div><div class="parameter-name">служащие</div><div class="parameter-value">{{Registers.employee}}</div></div>
                        <div class="row" data-type="sg-2"><div class="color-mark students">&nbsp;</div><div class="parameter-name">студенты</div><div class="parameter-value">{{Registers.students}}</div></div>
                        <div class="row" data-type="sg-3"><div class="color-mark schools">&nbsp;</div><div class="parameter-name">школьники</div><div class="parameter-value">{{Registers.schools}}</div></div>
                        <div class="row" data-type="sg-4"><div class="color-mark under-school">&nbsp;</div><div class="parameter-name">дошкольники</div><div class="parameter-value">{{Registers.under_school}}</div></div>
                        <div class="row" data-type="sg-5"><div class="color-mark rdch">&nbsp;</div><div class="parameter-name">рдч</div><div class="parameter-value">{{Registers.rdch}}</div></div>
                        <div class="row" data-type="sg-6"><div class="color-mark others">&nbsp;</div><div class="parameter-name">прочие</div><div class="parameter-value">{{Registers.others}}</div></div>
                        <div class="row"><div class="color-mark all-register">&nbsp;</div><div class="parameter-name">всего</div><div class="parameter-value">{{Registers.SumPerc}}</div></div>
                    </div>
                </div>
                <div class="pie-registers rotor">
                    <div class="gender-age-chart-wrap rotor-flip curr_side">
                        <div  class="pie gender-age-chart"></div>
                        <div class="parameters">
                            <div class="param-header">
                                <div class="header-text double-chart">Половозрастная структура</div>
                                <div class="percent-123" data-type="GenderAge"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                            </div>
                            <table class="gender-age-table">
                                <tbody>
                                    <tr class="head"><td class="no-border"></td><td>Женщины</td><td>Мужчины</td><td>Всего</td></tr>
                                    <tr>
                                        <td>30+</td>
                                        <td class="second" data-type="ga-0"><div class="color-mark women-30">&nbsp;</div><span>{{GenderAge.women_30}}</span></td>
                                        <td class="second" data-type="ga-3"><div class="color-mark men-30">&nbsp;</div><span>{{GenderAge.men_30}}</span></td>
                                        <td>{{GenderAge._30}}</td>
                                    </tr>
                                    <tr>
                                        <td>14-30</td>
                                        <td class="second" data-type="ga-1"><div class="color-mark women-14-30">&nbsp;</div><span>{{GenderAge.women_14_30}}</span></td>
                                        <td class="second" data-type="ga-4"><div class="color-mark men-14-30">&nbsp;</div><span>{{GenderAge.men_14_30}}</span></td>
                                        <td>{{GenderAge._14_30}}</td>
                                    </tr>
                                    <tr>
                                        <td>0-14</td>
                                        <td class="second" data-type="ga-2"><div class="color-mark women-14">&nbsp;</div><span>{{GenderAge.women_14}}</span></td>
                                        <td class="second" data-type="ga-5"><div class="color-mark men-14">&nbsp;</div><span>{{GenderAge.men_14}}</span></td>
                                        <td>{{GenderAge._14}}</td>
                                    </tr>
                                    <tr>
                                        <td>Всего</td>
                                        <td class="second"><div class="color-mark women-all">&nbsp;</div><span>{{GenderAge.women}}</span></td>
                                        <td class="second"><div class="color-mark men-all">&nbsp;</div><span>{{GenderAge.men}}</span></td>
                                        <td class="no-border"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="gender-age-chart-2-wrap rotor-flip next next_side">
                        <div  class="pie gender-age-chart-2"></div>
                        <div class="parameters">
                            <div class="param-header">
                                <div class="header-text double-chart">Половозрастная структура</div>
                                <div class="percent-123" data-type="GenderAge"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                            </div>
                            <table class="gender-age-table">
                                <tbody>
                                    <tr class="head"><td class="no-border"></td><td>0 - 14</td><td>14 - 30</td><td>30+</td><td>Всего</td></tr>
                                    <tr>
                                        <td>Женщины</td>
                                        <td class="second" data-type="ag-4"><div class="color-mark women-14">&nbsp;</div><span>{{GenderAge.women_14}}</span></span></td>
                                        <td class="second" data-type="ag-2"><div class="color-mark women-14-30">&nbsp;</div><span>{{GenderAge.women_14_30}}</span></td>
                                        <td class="second" data-type="ag-0"><div class="color-mark women-30">&nbsp;</div><span>{{GenderAge.women_30}}</span></td>
                                        <td>{{GenderAge.women}}</td>
                                    </tr>
                                    <tr>
                                        <td>Мужчины</td>
                                        <td class="second" data-type="ag-5"><div class="color-mark men-14">&nbsp;</div><span>{{GenderAge.men_14}}</span></td>
                                        <td class="second" data-type="ag-3"><div class="color-mark men-14-30">&nbsp;</div><span>{{GenderAge.men_14_30}}</span></td>
                                        <td class="second" data-type="ag-1"><div class="color-mark men-30">&nbsp;</div><span>{{GenderAge.men_30}}</span></td>
                                        <td>{{GenderAge.men}}</td>
                                    </tr>
                                    <tr>
                                        <td>Всего</td>
                                        <td class="second"><div class="color-mark all-14">&nbsp;</div><span>{{GenderAge._14}}</span></td>
                                        <td class="second"><div class="color-mark all-14-30">&nbsp;</div><span>{{GenderAge._14_30}}</span></td>
                                        <td class="second"><div class="color-mark all-30">&nbsp;</div><span>{{GenderAge._30}}</span></td>
                                        <td class="no-border"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="pie-book-giving-wrap">
            <div class="chart-header">Книговыдача</div>
            <div class="pie-book-giving">
                <div class="pie book-giving-chart"></div>
                <div class="chart-subscript">
                    <div class="sub-icon param-icon"><span>{{BookGiving.Sum}}</span><span>{{Divider}}</span><span>{{BookGiving.Target}}</span></div>
                    <div class="sub-caption">выполнение<br>госзадания</div>
                </div>
            </div>
            <div class="parameters">
                <div class="param-header">
                    <div class="header-text">Категории</div>
                    <div class="percent-123" data-type="BookGiving"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                </div> 
                <div class="row" data-type="bg-0"><div class="color-mark new-reg">&nbsp;</div><div class="parameter-name">книги и брошюры</div><div class="parameter-value">{{BookGiving.Books}}</div></div>
                <div class="row" data-type="bg-1"><div class="color-mark stationary">&nbsp;</div><div class="parameter-name">документы и копии</div><div class="parameter-value">{{BookGiving.DocsCopies}}</div></div>
                <div class="row" data-type="bg-2"><div class="color-mark events">&nbsp;</div><div class="parameter-name">справки и консультации</div><div class="parameter-value">{{BookGiving.Consults}}</div></div>
                <div class="row" data-type="bg-3"><div class="color-mark clubs">&nbsp;</div><div class="parameter-name">прочее</div><div class="parameter-value">{{BookGiving.Other}}</div></div>
            </div>
        </div>
        
    </div>
    <div class="daily-chart">
        <div class="chart-header"></div>
        <div class="chart-wrap"></div>
    </div>
</div>`,
    // Controller:{
    //     Target: '.lib-list',
    //     ListElement: `<option value="{{ID}}">{{Name}}</option>`
    // },
    Proto:{
        Visitors: {
            New: 10,
            Stationary: 20,
            Events: 30,
            Clubs: 40,
            Target: 300,
            Sum: function() { let s = 0; for (let k in this) if (this.hasOwnProperty(k) && k !== 'Sum' && k !== 'Target') s += this[k]; return s; }
        },
        Registers: {
            pensioner: 5,
            employee: 10,
            students: 15,
            schools: 20,
            under_school: 15,
            rdch: 20,
            others: 15,
            Target: 600,
            Sum: function() { let s = 0; for (let k in this) if (this.hasOwnProperty(k) && k !== 'Sum' && k !== 'Target') s += this[k]; return s; }
        },
        GenderAge: {
            women_30: 15,
            women_14_30: 25,
            women_14: 35,
            men_30: 28,
            men_14_30: 41,
            men_14: 23,
            Sum: function() { let s = 0; for (let k in this) if (this.hasOwnProperty(k)) k !== 'Sum' ? s += this[k] : s += 0; return s; }
        },
        BookGiving: {
            Books: 11,
            DocsCopies: 22,
            Consults: 33,
            Other: 44,
            Target: 300,
            Sum: function() { let s = 0; for (let k in this) if (this.hasOwnProperty(k) && k !== 'Sum' && k !== 'Target') s += this[k]; return s; }
        },
        Percent: {
            Visitors: false,
            Registers: false,
            GenderAge: false,
            BookGiving: false
        }
    },
    PropFormat: {
        'Visitors.New': (x, p) => p.Percent.Visitors ? (x === 0 ? 0 : Math.round(x / p.Visitors.Sum() * 100)) + ' %' : x, // функция для посещаемости
        'Visitors.Stationary': (x, p) => p.Percent.Visitors ? (x === 0 ? 0 : Math.round(x / p.Visitors.Sum() * 100)) + ' %' : x,
        'Visitors.Events': (x, p) => p.Percent.Visitors ? (x === 0 ? 0 : Math.round(x / p.Visitors.Sum() * 100)) + ' %' : x,
        'Visitors.Clubs': (x, p) => p.Percent.Visitors ? (x === 0 ? 0 : Math.round(x / p.Visitors.Sum() * 100)) + ' %' : x,
        'Visitors.Sum': (x, p) => p.Visitors.Sum(),

        'Registers.pensioner': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x, // функция для Регистрации
        'Registers.employee': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.students': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.schools': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.under_school': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.rdch': (x, p) => p.Percent.Registers ? (x === 0 ? 0 :  Math.round(x / p.Registers.Sum() * 100)) + ' %' : x,
        'Registers.others': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.Sum': (x, p) => p.Registers.Sum(),
        'Registers.SumPerc': (x, p) => p.Percent.Registers ? '100 %' : p.Registers.Sum(),

        'GenderAge.women_14_30': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x, // функция для половозрастной структуры
        'GenderAge.women_14': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge.men_30': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge.men_14_30': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge.men_14': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge.women_30': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge._14': (x, p, n) => (n = (p.GenderAge.men_14 + p.GenderAge.women_14), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),
        'GenderAge._14_30': (x, p, n) => (n = (p.GenderAge.men_14_30 + p.GenderAge.women_14_30), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),
        'GenderAge._30': (x, p, n) => (n = (p.GenderAge.men_30 + p.GenderAge.women_30), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),
        'GenderAge.men': (x, p, n) => (n = (p.GenderAge.men_14 + p.GenderAge.men_14_30 + p.GenderAge.men_30), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),
        'GenderAge.women': (x, p, n) => (n = (p.GenderAge.women_14 + p.GenderAge.women_14_30 + p.GenderAge.women_30), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),

        'BookGiving.Books': (x, p) => p.Percent.BookGiving ? (x === 0 ? 0 : Math.round(x / p.BookGiving.Sum() * 100))+ ' %' : x, // функция для книговыдачи
        'BookGiving.DocsCopies': (x, p) => p.Percent.BookGiving ? (x === 0 ? 0 : Math.round(x / p.BookGiving.Sum() * 100))+ ' %' : x,
        'BookGiving.Consults': (x, p) => p.Percent.BookGiving ? (x === 0 ? 0 :  Math.round(x / p.BookGiving.Sum() * 100)) + ' %' : x,
        'BookGiving.Other': (x, p) => p.Percent.BookGiving ? (x === 0 ? 0 : Math.round(x / p.BookGiving.Sum() * 100))+ ' %' : x,
        'BookGiving.Sum': (x, p) => p.BookGiving.Sum(),
        'Divider': (x, p) => (p.BookGiving.Target > 9999 || p.Registers.Target > 9999 || p.Visitors.Target > 9999) ? "<div style='border-top: 2px solid black;'></div>" : '/'
    },
    GetSet: {
        get CurrentLibraries(){
            return this.Proto.Data.LibraryIDListSelected;
        },
    },
    Props: function () {
        let p = this.Proto.Data;
        this.GetChartOptions = function (target, series) {
            let res = {
                Target: target,
                Type: 'pie',
                Labels: {Visible: false},
                Legend: {Visible: false},
                Series: [ ],
                Grid: {Visible: false,},
                Tooltip: {
                    Format: (Tip) => {
                        let sum = Tip.Episode.Data.reduce((a, b) => a + b);
                        let perc = Math.floor(sum === 0 ? 0 : (Tip.Value / sum) * 10000) / 100;
                        return `<div class="tip">
                                      <div class="tip-bg"></div>
                                      <div class="tip-value">
                                            <div class="l-row l-flexa-center">
                                                <div class="tip-icon" style="background-color: ${Tip.Color}"></div>
                                                <div class="tip-label">${Tip.Name}: ${Tip.Value} (${perc}%)</div>
                                            </div>
                                      </div>
                                </div>`;
                    }
                },
                AxisY: {Visible: false}
            };
            for (let d of series) {
                let e = {
                    Labels: {Data: d.Labels},
                    Data: d.Data,
                    Colors: d.Colors,
                    Type: d.Type ? d.Type : 'ring',
                    AngleStart: -90
                };
                if (d.Width) e.Width = d.Width;
                if (d.Margin) e.Margin = d.Margin;
                res.Series.push(e);
            }
            return res;
        };
        this.ChartVisitors = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.visitors-chart'),
            [{
                Labels: ['вновь записавшиеся', 'стационар', 'мероприятия', 'клубы'],
                Data: [p.Visitors.New, p.Visitors.Stationary, p.Visitors.Events, p.Visitors.Clubs],
                Colors: ['#416E75', '#79CDDB', '#708284', '#51A2A8'],
                Width: 32
            }, {
                Labels: ["Посетили", "Осталось"],
                Data: [p.Visitors.Sum(), p.Visitors.Target - p.Visitors.Sum()],
                Colors: ["#5DA85D", "#4A8453"],
                Width: 22,
                Margin: 3
            }]
        ));
        this.ChartVisitors.Load = new Lure.Load({Target: this.ChartVisitors.Target});

        // Книговыдача
        this.ChartBookGiving = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.book-giving-chart'),
            [{
                Labels: ['книги и брошюры', 'документы и копии', 'справки и консультации', 'прочее'],
                Data: [p.BookGiving.Books, p.BookGiving.DocsCopies, p.BookGiving.Consults, p.BookGiving.Other],
                Colors: ['#416E75', '#79CDDB', '#708284', '#51A2A8'],
                Width: 32
            }, {
                Labels: ['выдано', 'осталось'],
                Data: [p.BookGiving.Sum(), p.BookGiving.Target - p.BookGiving.Sum()],
                Colors:  ["#5DA85D", "#4A8453"],
                Width: 22,
                Margin: 3
            }]
        ));
        this.ChartBookGiving.Load = new Lure.Load({Target: this.ChartBookGiving.Target});

        // Социальные группы
        this.ChartSocialGroups = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.social-groups-chart'),
            [{
                Labels: ['пенсионеры', 'служащие', 'студенты', 'школьники', 'дошкольники', 'рдч', 'прочее'],
                Data: [p.Registers.pensioner, p.Registers.employee, p.Registers.students, p.Registers.schools, p.Registers.under_school, p.Registers.rdch, p.Registers.others],
                Colors: ['#51A1A7', '#416E75', '#79CCDA', '#20A4A4', '#4B7798', '#40667F', '#345466'],
                Width: 32
            }, {
                Labels: ['выдано', 'осталось'],
                Data: [p.Registers.Sum(), p.Registers.Target - p.Registers.Sum()],
                Colors: ["#5DA85D", "#4A8453"],
                Width: 22,
                Margin: 3
            }]
        ));
        this.ChartSocialGroups.Load = new Lure.Load({Target: this.ChartSocialGroups.Target});

        // Половозрастная структура 1
        this.ChartGenderAge = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.gender-age-chart'),
            [{
                Labels: ['женщины 30+', 'женщины 14-30', 'женщины 0-14', 'мужчины 30+', 'мужчины 14-30', 'мужчины 0-14'],
                Data: [p.GenderAge.women_30, p.GenderAge.women_14_30, p.GenderAge.women_14, p.GenderAge.men_30, p.GenderAge.men_14_30, p.GenderAge.men_14],
                Colors: ['#993F73', '#7F3663', '#662C53', '#345466', '#40667F', '#4B7799'],
                Width: 32
            }, {
                Labels: ['женщины', 'мужчины'],
                Data: [p.GenderAge.women_30 + p.GenderAge.women_14_30 + p.GenderAge.women_14, p.GenderAge.men_30 + p.GenderAge.men_14_30 + p.GenderAge.men_14],
                Colors: ['#D7569C', '#6CA9E0'],
                Type: 'pie',
                Margin: 3
            }]
        ));
        this.ChartGenderAge.Load = new Lure.Load({Target: this.ChartGenderAge.Target});

        // Половозрастная структура 2
        this.ChartAgeGender = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.gender-age-chart-2'),
            [{
                Labels: ['женщины 30+', 'мужчины 30+', 'женщины 14-30', 'мужчины 14-30', 'женщины 0-14', 'мужчины 0-14'],
                Data: [p.GenderAge.women_30, p.GenderAge.men_30, p.GenderAge.women_14_30, p.GenderAge.men_14_30, p.GenderAge.women_14, p.GenderAge.men_14],
                Colors: ['#993F73', '#345466', '#7F3663', '#40667F', '#662C53', '#4B7799'],
                Width: 32
            }, {
                Labels: ['Старше 30', 'От 14 до 30', 'Младше 14'],
                Data: [p.GenderAge.women_30 + p.GenderAge.men_30, p.GenderAge.women_14_30 + p.GenderAge.men_14_30, p.GenderAge.women_14 + p.GenderAge.men_14],
                Colors: ['#74B87A', '#589255', '#3C5F42'],
                Type: 'pie',
                Margin: 3
            }]
        ));
        this.ChartAgeGender.Load = new Lure.Load({Target: this.ChartAgeGender.Target});

        ////////////////////// ANOTHER PROPS \\\\\\\\\\\\\\\\\\\
        this.selectedPeriod = [ Lure.Date().DayStart, Lure.Date().DayEnd ];
        this.SelectLibrary = this.Select('.lib-list');

        this.DailyChart = new Lure.Chart({
            Target: this.Select('.daily-chart .chart-wrap'),
            Type: 'Line',
            Name: 'Сводный график',
            Legend: {Position: 'right'},
            AxisX: {Data: (new Array(12)).Select((a, b) => Lure.Date(new Date(2018, b)).Format('MMMM'))},
            Series: [{
                Name: 'Посещаемость',
                Color: '#65599E',
                Data: (new Array(12)).Select((a, b) => b % 5),
            }, {
                Name: 'Запись',
                Color: '#53AA62',
                Data: (new Array(12)).Select((a, b) => b % 7),
            }, {
                Name: 'Книговыдача',
                Color: '#9F4944',
                Data: (new Array(12)).Select((a, b) => b % 9),
            }],
            Tooltip: {
                Format: Tip =>
                    `<div class="tip">
                        <div class="tip-bg"></div>
                        <div class="tip-value">
                            <div class="l-row">
                                <div class="tip-icon" style="background-color: ${Tip.Episode.Color}"></div>
                                <div class="tip-label">${Tip.ValueX}</div>
                            </div>
                            <div class="l-row">${Tip.Episode.Name}: ${Tip.Value}</div>
                        </div>
                    </div>`
            }
        });
        this.DailyChart.Load = new Lure.Load({Target: this.DailyChart.Target});
        // this.DailyChart.Redraw();
    },
    Show: function () {
        this.Refresh();
    },
    Refresh: function() {
        if (this.isVisible)
            this.ChartsUpdate();
    },
    Methods: function() {
        this.selectPeriod = function (period, e) {
            this.Select('.per.selected').classList.remove('selected');
            e.classList.add('selected');

            let date_start = Lure.Date();
            let date_end = Lure.Date();
            if ((typeof period) === 'string') {
                this.DatePicker.Reset();
                switch (period) {
                    case 'today':
                        date_start = date_start.DayStart;
                        date_end = date_end.DayEnd;
                        break;
                    case 'yesterday':
                        date_start.AddDays(-1);
                        date_end.AddDays(-1);
                        date_start = date_start.DayStart;
                        date_end = date_end.DayEnd;
                        break;
                    case 'week':
                        date_start = date_start.WeekStart;
                        date_end = date_end.WeekEnd;
                        break;
                    case 'month':
                        date_start = date_start.MonthStart;
                        date_end = date_end.MonthEnd;
                        break;
                    case 'quarter':
                        let month;
                        let cm = date_start.Date.getMonth();
                        if (cm <= 2)
                            month = 0;
                        else if (cm >= 3 && cm <= 5)
                            month = 3;
                        else if (cm >= 6 && cm <= 9)
                            month = 6;
                        else month = 9;
                        date_start = Lure.Date(new Date(date_start.Date.getFullYear(), month)).MonthStart;
                        date_end = Lure.Date(new Date(date_end.Date.getFullYear(), month + 2)).MonthEnd;
                        break;
                    case 'year':
                        date_start = new Date(date_start.Date.getFullYear(), 0, 1, 0, 0, 0);
                        date_end = new Date(date_end.Date.getFullYear(), 11, 31, 23, 59, 59);
                        break;
                }
                this.selectedPeriod = [date_start, date_end];
                // Lure.System.Notice(date_start.Format('D MMMM YYYY', true) + ' - ' + date_end.Format('D MMMM YYYY', true));
            }
            else {
                date_start = Lure.Date(period[0]).DayStart;
                date_end = Lure.Date(period[1]).DayEnd;
                this.selectedPeriod = [date_start, date_end];
            }
            //console.log(period, this.selectedPeriod);
            this.ChartsUpdate();
        };
        this.ChangePercent123 = function (elem) {
            let type = elem.dataset['type'];
            this.Proto.Data.Percent[type] = !this.Proto.Data.Percent[type];
            this.Proto.Refresh();
            if (type === 'GenderAge')
                for (let e of this.SelectAll('.percent-123[data-type="' + type + '"]')) {
                    e.children[0].classList.toggle('selected');
                    e.children[1].classList.toggle('selected');
                }
            else {
                elem.children[0].classList.toggle('selected');
                elem.children[1].classList.toggle('selected');
            }
            // console.log(elem, type);
        };
        this.ChartsUpdate = function () {
            let plus_or_zero = (x = []) => {
                for (let k in x)
                    if (x.hasOwnProperty(k) && x[k] < 0)
                        x[k] = 0;
                return x;
            };

            let date_start = new Date(this.selectedPeriod[0]);
            let date_end = new Date(this.selectedPeriod[1]);
            // console.log('DATES: ', date_start, date_end);
            let lib = this.CurrentLibraries;
            // Посещаемость
            this.ChartVisitors.Load.Show();
            api.Dash_Visitation_Get(lib, date_start, date_end)
                .then(
                    r => {
                        r = plus_or_zero(r);
                        Object.assign(this.Proto.Data.Visitors, {
                            New: r.Registered,
                            Stationary: r.Stationary,
                            Events: r.Event,
                            Clubs: r.Club,
                            Target: r.CountPlan
                        });
                        this.Proto.Refresh();
                        let p = this.Proto.Data.Visitors;
                        this.ChartVisitors.Options.Series[0].Data = [p.New, p.Stationary, p.Events, p.Clubs];
                        this.ChartVisitors.Options.Series[1].Data = plus_or_zero([p.Sum(), p.Target - p.Sum()]);
                        this.ChartVisitors.Load.Hide();
                        this.ChartVisitors.Refresh();
                    }).catch(console.error);
            // Записавшиеся Социальные группы
            this.ChartSocialGroups.Load.Show();
            api.Dash_VisitRegistered_Get(lib, date_start, date_end)
                .then(
                    r => {
                        r = plus_or_zero(r);
                        Object.assign(this.Proto.Data.Registers, {
                            pensioner: r.Retired,
                            employee: r.Servant,
                            students: r.Student,
                            schools: r.Schooler,
                            under_school: r.Preschooler,
                            rdch: r.RDC,
                            others: r.Other,
                            Target: r.CountPlan
                        });
                        this.Proto.Refresh();
                        let p = this.Proto.Data.Registers;
                        this.ChartSocialGroups.Options.Series[0].Data = [p.pensioner, p.employee, p.students, p.schools, p.under_school, p.rdch, p.others];
                        this.ChartSocialGroups.Options.Series[1].Data = plus_or_zero([p.Sum(), p.Target - p.Sum()]);
                        this.ChartSocialGroups.Load.Hide();
                        this.ChartSocialGroups.Refresh();
                    }).catch(console.error);
            // Записавшиеся Половозрастная структура
            this.ChartGenderAge.Load.Show();
            this.ChartAgeGender.Load.Show();
            api.Dash_VisitGengerAge_Get(lib, date_start, date_end)
                .then(
                    r => {
                        r = plus_or_zero(r);
                        Object.assign(this.Proto.Data.GenderAge, {
                            women_30: r.Female_Over30,
                            women_14_30: r.Female_30,
                            women_14: r.Female_14,
                            men_30: r.Male_Over30,
                            men_14_30: r.Male_30,
                            men_14: r.Male_14
                        });
                        this.Proto.Refresh();
                        let p = this.Proto.Data.GenderAge;
                        this.ChartGenderAge.Options.Series[0].Data = [p.women_30, p.women_14_30, p.women_14, p.men_30, p.men_14_30, p.men_14];
                        this.ChartGenderAge.Options.Series[1].Data = [p.women_30 + p.women_14_30 + p.women_14, p.men_30 + p.men_14_30 + p.men_14];
                        this.ChartAgeGender.Options.Series[0].Data = [p.women_30, p.men_30, p.women_14_30, p.men_14_30, p.women_14, p.men_14];
                        this.ChartAgeGender.Options.Series[1].Data = [p.women_30 + p.men_30, p.women_14_30 + p.men_14_30, p.women_14 + p.men_14];
                        this.ChartGenderAge.Load.Hide();
                        this.ChartAgeGender.Load.Hide();
                        this.ChartGenderAge.Refresh();
                        this.ChartAgeGender.Refresh();
                    }).catch(console.error);
            // Книговыдача
            this.ChartBookGiving.Load.Show();
            api.Dash_GivingBook_Get(lib, date_start, date_end)
                .then(
                    r => {
                        r = plus_or_zero(r);
                        Object.assign(this.Proto.Data.BookGiving, {
                            Books: r.GivingBook,
                            DocsCopies: r.GivingDoc,
                            Consults: r.GivingConsult,
                            Other: r.GivingOther,
                            Target: r.CountPlan
                        });
                        this.Proto.Refresh();
                        let p = this.Proto.Data.BookGiving;
                        this.ChartBookGiving.Options.Series[0].Data = [p.Books, p.DocsCopies, p.Consults, p.Other];
                        this.ChartBookGiving.Options.Series[1].Data = plus_or_zero([p.Sum(), p.Target - p.Sum()]);
                        this.ChartBookGiving.Load.Hide();
                        this.ChartBookGiving.Refresh();
                    }).catch(console.error);
            // Сводный график
            let date_diff = Math.floor((date_end.getTime() - date_start.getTime()) / 1000);
            if (date_diff < 90000)
                this.DailyChart.Target.classList.add('none');
            else {
                this.DailyChart.Target.classList.remove('none');
                this.DailyChart.Load.Show();
                api.Dash_SummaryGraph_Get(lib, Lure.Date(date_start), Lure.Date(date_end))
                    .then(
                        r => {
                            let labels;
                            if (date_diff / 86400 < 32)
                                labels = r.map(a => Lure.Date(a.Date).Format('D MMMM', true));
                            else
                                labels = r.map(a => Lure.Date(a.Date).Format('MMMM YYYY', false));
                            this.DailyChart.Options.Series[0].Data = r.map(a => a.Visit);
                            this.DailyChart.Options.Series[1].Data = r.map(a => a.Registration);
                            this.DailyChart.Options.Series[2].Data = r.map(a => a.BookGiving);

                            this.DailyChart.Options.AxisX.Data = labels;
                            if (!this.DailyChart.Options.Graph)
                                this.DailyChart.Redraw();

                            this.DailyChart.Options.Graph[0].AxisX.Data = labels;
                            this.DailyChart.Options.Graph[1].AxisX.Data = labels;
                            this.DailyChart.Options.Graph[2].AxisX.Data = labels;
                            this.DailyChart.Load.Hide();
                            this.DailyChart.Redraw();
                        }).catch(console.error);
            }
        };
    },
    AfterBuild: function() {
        new LibraryTree(this, this.Select('.library-tree-control'));
        this.Proto.Data.LibraryIDListSelected = [Lure.User.Cache.LibraryList.Last().ID];
        let self = this;
        this.DatePicker = new Lure.PeriodPicker({
            Target: '.calendar-period .dates',
            OnConfirm: function () {
                self.selectPeriod(this.Date, this.Target.parentElement);
            }
        });
        this.DatePicker.Reset();

        let curr = this.Select('.curr_side');
        let next = this.Select('.next_side');
        this.AddEventListener('click', '.double-chart', () => {
            curr.classList.toggle('flipped');
            next.classList.toggle('next');
        });
        this.AddEventListener('click', '.periods .per', (e) => this.selectPeriod(e.currentTarget.classList[1], e.currentTarget));
        this.AddEventListener('click', '.percent-123', (e) => this.ChangePercent123(e.currentTarget));
        this.AddEventListener('click', '.gender-age-chart-2-wrap td, .gender-age-chart-wrap td, .pie-registers-wrap .row, .pie-book-giving-wrap .row, .pie-visitors-wrap .row', (e) => {
            if (e.currentTarget.dataset['type']) {
                let data = e.currentTarget.dataset['type'].split('-');
                data[1] = parseInt(data[1]);
                e.currentTarget.classList.toggle('series-hide');
                switch (data[0]) {
                    case 'v':  this.ChartVisitors.SerieSwitch(0, data[1]); break;
                    case 'bg': this.ChartBookGiving.SerieSwitch(0, data[1]); break;
                    case 'sg': this.ChartSocialGroups.SerieSwitch(0, data[1]); break;
                    case 'ga': this.ChartGenderAge.SerieSwitch(0, data[1]); break;
                    case 'ag': this.ChartAgeGender.SerieSwitch(0, data[1]); break;
                }
            }
        });
        //this.SelectLibrary.onchange = () => this.ChartsUpdate();
    }
});
// window.Dash.DashMain = DashMain;
// module.exports = Dash;

},{}],10:[function(require,module,exports){
const Dictionary = require("../_common/dictionary");
let Dash = new Lure.Content({
    //Disabled: true,
    Name: 'Dash',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '#nav-dash'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content: `<div class="dash content"></div>`,
    Show: function () {
        this.SixNK.Refresh();
    }
});
window.Dash = Dash;
require('./dash-main/dash-main.js');
require('./summary/dash-summary.js');
require('./six-nk/six-nk.js');
module.exports = Dash;

},{"../_common/dictionary":102,"./dash-main/dash-main.js":9,"./six-nk/six-nk.js":19,"./summary/dash-summary.js":20}],11:[function(require,module,exports){
Dash.SixNK.SixNKMain = new Lure.Content({
    Name: 'SixNKMain',
    Target: '',
    Type: 'SixNK-content',
    Parent: Dash.SixNK,
    Visible: true,
    Control: {
        Target: '.six-nk .req-tab.main'
    },
    Content:
`<div class="data-part">
    <div class="strong center border">ФЕДЕРАЛЬНОЕ СТАТИСТИЧЕСКОЕ НАБЛЮДЕНИЕ</div>
    <div class="center border">КОНФИДЕНЦИАЛЬНОСТЬ ГАРАНТИРУЕТСЯ ПОЛУЧАТЕЛЕМ ИНФОРМАЦИИ</div>																																																																																																																								
    <div class="grey-back center border">Нарушение порядка представления статистической информации, а равно представление недостоверной статистической информации<br>
    влечет ответственность, установленную статьей 13.19 Кодекса Российской Федерации об административных правонарушениях<br>
    от 30.12.2001 № 195-ФЗ, а также статьей 3 Закона Российской Федерации от 13.05.92 № 2761-1 "Об ответственности за нарушение<br>
    порядка представления государственной статистической отчетности"</div>
    <div class="center border">ВОЗМОЖНО ПРЕДОСТАВЛЕНИЕ В ЭЛЕКТРОННОМ ВИДЕ</div>
    <div class="center grey-back border">СВЕДЕНИЯ ОБ ОБЩЕДОСТУПНОЙ (ПУБЛИЧНОЙ) БИБЛИОТЕКЕ<br>за ${(new Date).getFullYear()} год</div>
    <div class="flex">
        <div class="flex4">
            <table>
                <thead>
                    <tr>
                        <th colspan="2">Предоставляют:</th>
                        <th>Сроки предоставления</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="2">юридические лица - общедоступные библиотеки, подведомственные: органу местного самоуправления, осуществляющему управление в сфере культуры; органу исполнительной власти субъекта Российской Федерации, осуществляющему управление в сфере культуры; Министерству культуры Российской Федерации:</td>
                        <td class="center">15 января</td>
                    </tr> 
                    <tr>
                        <td colspan="2">- соответствующему органу управления в сфере культуры (по принадлежности); юридические лица - общедоступные библиотеки, кроме подведомственных: органу местного самоуправления, осуществляющему управление в сфере культуры; органу исполнительной власти субъекта Российской Федерации, осуществляющему управление в сфере культуры; Министерству культуры Российской Федерации:</td>
                        <td class="center">15 января</td>
                    </tr>
                    <tr>
                        <td colspan="2">-территориальному органу Росстата в субъекте Российской Федерации по установленному им адресу; орган местного самоуправления, осуществляющий управление в сфере культуры, сводные отчеты по подведомственным учреждениям:</td>
                        <td class="center">20 февраля</td>
                    </tr>
                    <tr>
                        <td colspan="2">-органу исполнительной власти субъекта Российской Федерации, осуществляющему управление в сфере культуры; органы исполнительной власти субъекта Российской Федерации, осуществляющие управление в сфере культуры, сводные отчеты по субъекту Российской Федерации: -Министерству культуры Российской Федерации;</td>
                        <td class="center">10 марта</td>
                    </tr> 
                    <tr>
                        <td colspan="2">Росстат, сводные отчеты по основным показателям деятельности общедоступных  библиотек, не относящихся к сфере ведения Министерства культуры Российской Федерации: -Министерству культуры Российской Федерации</td>
                        <td class="center">30 апреля</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="flex1 mar-7-all">
            <div class="center strong grey-back border">Форма № 6-НК</div>
            <div class="center">Приказ Росстата:<br>Об утверждении формы<br>от 08.10.2015 № 464<br>О внесении изменений (при наличии)</div>
            <div class="center">от _________ № ____</div>
            <div class="center">от _________ № ____</div>
            <div class="center border grey-back" style="padding: 7px;">{{DateRange}}</div>
        </div>
    </div>
    <div class="flex-row wid-100"><div>Наименование отчитывающейся организации</div><div class="underline flex1"></div></div>
    <div class="flex-row wid-100"><div>Почтовый адрес</div><div class="underline flex1"></div></div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">Код формы по ОКУД</th>
                    <th colspan="3">Код</th>
                </tr>
                <tr>
                    <th>отчитывающейся организации по ОКПО</th>
                    <th></th>
                    <th></th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">0609521</td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div>
        <div class="flex-row"><div class="flex1">Наименование учредителя</div><div class="underline flex1">Департамент культуры города Москвы</div></div>
        <div class="flex-row"><div class="flex1">Наименование централизованной системы, в которую входит библиотека</div><div class="underline flex1">Государственно бюджетное учреждение культуры города Москвы "Централизованная библиотечная система Центрального административного округа"</div></div>
        <div class="flex-row"><div class="flex1">Наименование и тип библиотеки (библиотеки-филиала)</div><div class="underline flex1"></div></div>
        <div class="flex-row"><div class="flex1">Направление основной деятельности головной организации</div><div class="underline flex1">ОКВЭД 92.51</div></div>
    </div>
</div>`,
    Proto: {
        DateRange: ({1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[Math.floor(((new Date).getMonth()) / 3) + 1]
    }/*,
    PropFormat: {
        DateRange: function (x) {
            return this.Parent.Proto.Data.DatesResult;
        }
    }*/
});

},{}],12:[function(require,module,exports){
Dash.SixNK.SixNKPart1 = new Lure.Content({
    Name: 'SixNKPart1',
    Target: '',
    Type: 'SixNK-content',
    Parent: Dash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p1'
    },
    Content:
`<div class="data-part">
    <div class="center border strong">1. Материально-техническая база</div>
    <div>
        <div class="right">Коды по ОКЕИ: единица - 642; квадратный метр - 055</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">№ строки</th>
                    <th colspan="2">Объекты культурного наследия</th>
                    <th colspan="3">Здания (помещения) доступны для лиц с нарушениями</th>
                    <th colspan="3">Площадь помещений,<br> кв. м</th>
                    <th colspan="3">Площадь помещений по форме <br> пользования (из гр. 7), кв. м</th>
                    <th colspan="2">Техническое состояние помещений (из гр. 10), кв. м</th>
                </tr>
                <tr>
                    <th>федерального значения (да - 1, нет - 0)</th>
                    <th>регионального значения (да - 1,     нет - 0)</th>
                    <th>зрения (да - 1, нет - 0)</th>
                    <th>слуха   (да - 1, нет - 0)</th>
                    <th>опорнодвигательного аппарата (да -1, нет - 0)</th>
                    <th>всего</th>
                    <th>для хранения фондов (из гр. 7)</th>
                    <th>для обслуживания пользователей (из гр. 7)</th>												
                    <th>в оперативном управлении</th>	
                    <th>по договору аренды</th>							
                    <th>прочие</th>
                    <th>требует капитального ремонта</th>
                    <th>аварийное</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">01</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">№ строки</th>
                    <th rowspan="2">Число пунктов вне стационарного обслуживания пользователей библиотеки,<br>единиц</th>
                    <th colspan="3">Число посадочных мест для пользователей, единиц</th>
                    <th colspan="4">Наличие автоматизированных технологий (да - 1, нет - 0)</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из них (из гр.16) компьютеризованных, с возможностью доступа </th>
                    <th>из них (из гр.16) <br>с возможностью выхода в Интернет</th>
                    <th>обработки поступлений <br>и ведения электронного каталога (каталогизация и научная обработка)</th>
                    <th>организации и учета выдачи фондов (книговыдача)</th>
                    <th>организации и учета доступа посетителей (обслуживание)</th>
                    <th>учета документов библиотечного фонда (учет фондов)</th>
                </tr>
                <tr>
                    <th>1</th><th>15</th><th>16</th><th>17</th><th>18</th><th>19</th><th>20</th><th>21</th><th>22</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">01</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
    
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">№ строки</th>
                    <th rowspan="2">Число единиц специализированного оборудования для инвалидов</th>
                    <th colspan="3">число единиц копировально-множительной техники</th>
                    <th colspan="2">число транспортных средств, единиц</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из них для пользователей библиотеки</th>
                    <th>из них для оцифровки фонда</th>
                    <th>всего</th>
                    <th>из них число специализированных транспортных средств</th>
                </tr>
                <tr>
                    <th>1</th><th>23</th><th>24</th><th>25</th><th>26</th><th>27</th><th>28</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">01</td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>`
});
},{}],13:[function(require,module,exports){
Dash.SixNK.SixNKPart2 = new Lure.Content({
    Name: 'SixNKPart2',
    Target: '',
    Type: 'SixNK-content',
    Parent: Dash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p2'
    },
    Content:
`<div class="data-part">
    <div class="strong border">2. Формирование и использование библиотечного фонда на физических (материальных) носителях</div>
    <div>
        <div class="right">Код по ОКЕИ: единица - 642</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">Наименование показателей</th>
                    <th rowspan="2">№ строки</th>
                    <th rowspan="2">Всего (сумма гр. 4 - 7) единиц</th>
                    <th colspan="4">В том числе (из гр. 3), единиц</th>
                    <th rowspan="2">Документы в специальных форматах для слепых и слабовидящих, единиц (из гр. 3)</th>
                    <th colspan="2">Из общего объема фонда (из гр. 3), единиц</th>
                </tr>
                <tr>
                    <th>печатные  издания и неопубликован-ные документы</th>
                    <th>электронные документы на съемных носителях</th>
                    <th>документы на микроформах</th>
                    <th>документы на других видах носителей</th>
                    <th>на языках народов России</th>
                    <th>на иностранных языках</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th></th><th></th>
                </tr>
            </thead>
            <tbody>

                <tr>
                    <td>Поступило документов за отчетный год, единиц</td><td  class="center">02</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Выбыло документов за отчетный год, единиц</td><td class="center">03</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Состоит документов на конец отчетного года, единиц</td><td class="center">04</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Переведено в электронную форму за отчетный год, единиц</td><td class="center">05</td><td></td><td></td><td class="center">X</td><td></td><td></td><td class="center">X</td><td></td><td class="center">X</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>`
});
},{}],14:[function(require,module,exports){
Dash.SixNK.SixNKPart3 = new Lure.Content({
    Name: 'SixNKPart3',
    Target: '',
    Type: 'SixNK-content',
    Parent: Dash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p3'
    },
    Content:
`<div class="data-part">
    <div class="strong border">3. Электронные (сетевые) ресурсы</div>
    <div>
        <div class="right">Код по ОКЕИ: единица - 642</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">Наименование показателей</th>
                    <th rowspan="2">№ строки</th>
                    <th colspan="2">Объем электронного каталога</th>
                    <th colspan="2">Объем электронной (цифровой) библиотеки</th>
                    <th colspan="2">Инсталлированные документы</th>
                    <th colspan="2">Сетевые удаленные лицензионные документы</th>
                </tr>
                <tr>
                    <th>общее число записей, единиц</th>
                    <th>из них (из гр. 3) число записей, доступных в Интернете, единиц</th>
                    <th>общее число сетевых локальных документов, единиц</th>
                    <th>из них (из гр. 5) число документов в открытом доступе, единиц</th>
                    <th>число баз данных, единиц</th>
                    <th>в них полтнотекстовых документов, единиц</th>
                    <th>число баз данных, единиц</th>
                    <th>в них полтнотекстовых документов, единиц</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Создано, приобретено за отчетный год, единиц</td><td class="center">06</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Выбыло за отчетный год, единиц</td><td class="center">07</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Объем на конец отчетного года, единиц</td><td class="center">08</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="wid-100">
        <div class="flex-row"><div>Наличие доступа в Интернет (да - 1, нет - 0) (09)</div><div class="underline flex1 center">1</div></div>
        <div class="flex-row"><div>Наличие возможности доступа в Интернет для посетителей (да - 1, нет - 0) (10)</div><div class="underline flex1 center">1</div></div>
        <div class="flex-row"><div>Наличие собственного Интернет-сайта или Интернет-страницы библиотеки (да - 1, нет - 0) (11)</div><div class="underline flex1 center">0</div></div>
        <div class="flex-row"><div>Наличие Интернет-сайта или Интернет-страницы, доступного для слепых и слабовидящих (да - 1, нет - 0) (12)</div><div class="underline flex1 center">0</div></div>
    </div>
</div>`
});
},{}],15:[function(require,module,exports){
Dash.SixNK.SixNKPart4 = new Lure.Content({
    Name: 'SixNKPart4',
    Target: '',
    Type: 'SixNK-content',
    Parent: Dash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p4'
    },
    Content:
`<div class="data-part">
    <div class="strong border">4. Число пользователей и посещений библиотеки</div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">№ строки</th>
                    <th colspan="5">Число зарегистрированных пользователей библиотеки, человек</th>
                    <th colspan="3">Число посещений библиотеки, посещений</th>
                    <th colspan="2">Число обращений </th>
                </tr>
                <tr>
                    <th rowspan="2">всего</th>
                    <th colspan="3">в том числе пользователей, обслуженных в стенах библиотеки (из гр. 2)</th>
                    <th rowspan="2">в том числе удаленных пользователей (из гр. 2)</th>
                    <th rowspan="2">всего</th>
                    <th rowspan="2">из них для получения библиотечно-информационных услуг (из гр. 7)</th>
                    <th rowspan="2">число посещений массовых мероприятий (из гр. 7)</th>
                    <th rowspan="2">всего</th>
                    <th rowspan="2">из них обращений к веб-сайту (из гр. 10)</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из них (из гр. 3) дети до 14 лет включительно</th>
                    <th>из них (из гр. 3) молодежь 15 - 30 лет</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">12</td>
                    <td class="center">{{P4L12V2}}</td>
                    <td class="center">{{P4L12V3}}</td>
                    <td class="center">{{P4L12V4}}</td>
                    <td class="center">{{P4L12V5}}</td>
                    <td class="center">{{P4L12V6}}</td>
                    <td class="center">{{P4L12V7}}</td>
                    <td class="center">{{P4L12V8}}</td>
                    <td class="center">{{P4L12V9}}</td>
                    <td class="center">{{P4L12V10}}</td>
                    <td class="center">{{P4L12V11}}</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>`,
    Proto: {
        P4L12V2: 0,
        P4L12V3: 0,
        P4L12V4: 0,
        P4L12V5: 0,
        P4L12V6: 0,
        P4L12V7: 0,
        P4L12V8: 0,
        P4L12V9: 0,
        P4L12V10: 0,
        P4L12V11: 0,
    },
    Show: function () {
        if (!this.Parent.Updated) {
            this.Parent.RefreshData();
            this.Parent.Updated = true;
        }
    },
    Load: 'table',
    Methods: function () {
        this.RefreshData = function (data) {
            for (let key in this.Proto.Data)
                if (this.Proto.Data.hasOwnProperty(key))
                    this.Proto.Data[key] = data[key];
            this.Proto.Refresh();
        }
    }
});
},{}],16:[function(require,module,exports){
Dash.SixNK.SixNKPart5 = new Lure.Content({
    Name: 'SixNKPart5',
    Target: '',
    Type: 'SixNK-content',
    Parent: Dash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p5'
    },
    Content:
`<div class="data-part">
    <div class="strong border">5. Библиотечно-информационное обслуживание пользователей</div>
    <div>
        <div class="right">Код по ОКЕИ: единица - 642</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">Категории пользователей</th>
                    <th rowspan="3">№ строки</th>
                    <th colspan="5">Выдано (просмотрено) документов из фондов данной библиотеки, единиц</th>
                    <th colspan="3">Выдано (просмотрено) документов из фондов других библиотек, единиц</th>
                    <th rowspan="3">Изготовлено для пользователей</th>
                    <th rowspan="3">Выполнено справок и консультаций, единиц</th>
                </tr>
                <tr>
                    <th rowspan="2">всего</th>
                    <th colspan="4">в том числе (из гр. 3)</th>
                    <th rowspan="2">всего</th>
                    <th colspan="2">в том числе (из гр. 8)</th>
                </tr>
                <tr>
                    <th>из фонда на физических носителях</th>
                    <th>из электронной (цифровой) библиотеки</th>
                    <th>инсталлированных документов</th>
                    <th>сетевых удаленных лицензионных документов</th>
                    <th>полученных по системе МБА и ММБА</th>
                    <th>доступных в виртуальных читальных залах</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>В стационарном режиме</td>
                    <td class="center">13</td>
                    <td class="center">{{P5L13V3}}</td>
                    <td class="center">{{P5L13V4}}</td>
                    <td class="center">{{P5L13V5}}</td>
                    <td class="center">{{P5L13V6}}</td>
                    <td class="center">{{P5L13V7}}</td>
                    <td class="center">{{P5L13V8}}</td>
                    <td class="center">{{P5L13V9}}</td>
                    <td class="center">{{P5L13V10}}</td>
                    <td class="center">{{P5L13V11}}</td>
                    <td class="center">{{P5L13V12}}</td>
                </tr>
                <tr>
                    <td>в том числе дети до 14 лет</td>
                    <td class="center">14</td>
                    <td class="center">{{P5L14V3}}</td>
                    <td class="center">{{P5L14V4}}</td>
                    <td class="center">{{P5L14V5}}</td>
                    <td class="center">{{P5L14V6}}</td>
                    <td class="center">{{P5L14V7}}</td>
                    <td class="center">{{P5L14V8}}</td>
                    <td class="center">{{P5L14V9}}</td>
                    <td class="center">{{P5L14V10}}</td>
                    <td class="center">{{P5L14V11}}</td>
                    <td class="center">{{P5L14V12}}</td>
                </tr>
                <tr>
                    <td>в том числе молодежь 14 - 30 лет</td>
                    <td class="center">15</td>
                    <td class="center">{{P5L15V3}}</td>
                    <td class="center">{{P5L15V4}}</td>
                    <td class="center">{{P5L15V5}}</td>
                    <td class="center">{{P5L15V6}}</td>
                    <td class="center">{{P5L15V7}}</td>
                    <td class="center">{{P5L15V8}}</td>
                    <td class="center">{{P5L15V9}}</td>
                    <td class="center">{{P5L15V10}}</td>
                    <td class="center">{{P5L15V11}}</td>
                    <td class="center">{{P5L15V12}}</td>
                </tr>
                <tr>
                    <td>Удаленные пользователи</td>
                    <td class="center">16</td>
                    <td class="center">{{P5L16V3}}</td>
                    <td class="center">{{P5L16V4}}</td>
                    <td class="center">{{P5L16V5}}</td>
                    <td class="center">X</td>
                    <td class="center">{{P5L16V7}}</td>
                    <td class="center">X</td>
                    <td class="center">X</td>
                    <td class="center">X</td>
                    <td class="center">{{P5L16V11}}</td>
                    <td class="center">{{P5L16V12}}</td>
                </tr>
                <tr>
                    <td>Всего (сумма строк 13 и 16)</td>
                    <td class="center">17</td>
                    <td class="center">{{P5L17V3}}</td>
                    <td class="center">{{P5L17V4}}</td>
                    <td class="center">{{P5L17V5}}</td>
                    <td class="center">{{P5L17V6}}</td>
                    <td class="center">{{P5L17V7}}</td>
                    <td class="center">{{P5L17V8}}</td>
                    <td class="center">{{P5L17V9}}</td>
                    <td class="center">{{P5L17V10}}</td>
                    <td class="center">{{P5L17V11}}</td>
                    <td class="center">{{P5L17V12}}</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>`,
    Proto: {
        P5L13V3: 0,
        P5L13V4: 0,
        P5L13V5: 0,
        P5L13V6: 0,
        P5L13V7: 0,
        P5L13V8: 0,
        P5L13V9: 0,
        P5L13V10: 0,
        P5L13V11: 0,
        P5L13V12: 0,

        P5L14V3: 0,
        P5L14V4: 0,
        P5L14V5: 0,
        P5L14V6: 0,
        P5L14V7: 0,
        P5L14V8: 0,
        P5L14V9: 0,
        P5L14V10: 0,
        P5L14V11: 0,
        P5L14V12: 0,

        P5L15V3: 0,
        P5L15V4: 0,
        P5L15V5: 0,
        P5L15V6: 0,
        P5L15V7: 0,
        P5L15V8: 0,
        P5L15V9: 0,
        P5L15V10: 0,
        P5L15V11: 0,
        P5L15V12: 0,

        P5L16V3: 0,
        P5L16V4: 0,
        P5L16V5: 0,
        P5L16V6: 0,
        P5L16V7: 0,
        P5L16V8: 0,
        P5L16V9: 0,
        P5L16V10: 0,
        P5L16V11: 0,
        P5L16V12: 0,

        P5L17V3: 0,
        P5L17V4: 0,
        P5L17V5: 0,
        P5L17V6: 0,
        P5L17V7: 0,
        P5L17V8: 0,
        P5L17V9: 0,
        P5L17V10: 0,
        P5L17V11: 0,
        P5L17V12: 0
    },
    Show: function () {
        if (!this.Parent.Updated) {
            this.Parent.RefreshData();
            this.Parent.Updated = true;
        }
    },
    Load: 'table',
    Methods: function () {
        this.RefreshData = function (data) {
            for (let key in this.Proto.Data)
                if (this.Proto.Data.hasOwnProperty(key))
                    this.Proto.Data[key] = data[key];
            this.Proto.Refresh();
        }
    }
});
},{}],17:[function(require,module,exports){
Dash.SixNK.SixNKPart6 = new Lure.Content({
    Name: 'SixNKPart6',
    Target: '',
    Type: 'SixNK-content',
    Parent: Dash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p6'
    },
    Content:
`<div class="data-part">
    <div class="strong border">6. Персонал библиотеки</div>
    <div>
        <div class="right">Код по ОКЕИ: единица - 642</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="5">№ строки</th>
                    <th rowspan="5">Штат библиотеки на конец отчетного года, единиц</th>
                    <th colspan="14">Численность работников, человек</th>
                </tr>
                <tr>
                    <th rowspan="4">всего</th>
                    <th rowspan="4">из них имеют инвалид-ность</th>
                    <th colspan="6">из них (из гр. 3) основной персонал библиотеки</th>
                    <th colspan="3">в том числе со стажем работы в библиотеках (из гр. 5)</th>
                    <th colspan="3">в том числе по возрасту (из гр. 5)</th>
                </tr>
                <tr>
                    <th rowspan="3">всего</th>
                    <th rowspan="3">Из них прошли обучение (инструктиро-вание) по вопросам, связанным с предоставле-нием услуг инвалидам (из гр. 3)</th>
                    <th colspan="4">из них имеют образование (из гр. 5)</th>
                    <th rowspan="3">от 0 до 3 лет</th>
                    <th rowspan="3">от 3 до 10 лет</th>
                    <th rowspan="3">свыше 10 лет</th>
                    <th rowspan="3">до 30 лет</th>
                    <th rowspan="3">от 30 до 55 лет</th>
                    <th rowspan="3">55 лет и старше</th>
                </tr>
                <tr>
                    <th colspan="2">высшее</th>
                    <th colspan="2">среднее профессиональное</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из них библио-течное (из гр. 7)</th>
                    <th>всего</th>
                    <th>из них библио-течное (из гр. 9)</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th><th>16</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">18</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>

            </tbody>
        </table>
    </div>
</div>`
});
},{}],18:[function(require,module,exports){
Dash.SixNK.SixNKPart7 = new Lure.Content({
    Name: 'SixNKPart7',
    Target: '',
    Type: 'SixNK-content',
    Parent: Dash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p7'
    },
    Content:
`<div class="data-part">
    <div class="strong border">7. Поступление и использование финансовых средств</div>
    <div>
        <div class="right">Код по ОКЕИ: тысяча рублей - 384</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">№ строки</th>
                    <th rowspan="3">Поступило за год всего (сумма граф 3, 4, 5, 9)</th>
                    <th colspan="7">из них (из гр. 2)</th>
                </tr>
                <tr>
                    <th rowspan="2">бюджетные ассигнования  учредителя</th>
                    <th rowspan="2">финансирование из бюджетов других уровней</th>
                    <th rowspan="2">от приносящей доход деятельности</th>
                    <th colspan="3">из них (из гр.5)</th>
                    <th rowspan="2">от сдачи имущества в аренду</th>
                </tr>
                <tr>
                    <th>от основных видов уставной деятельности</th>
                    <th>благотворительные и спонсорские вклады</th>
                    <th>от иной приносящей доход деятельности</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">19</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>

            </tbody>
        </table>
    </div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">№ строки</th>
                    <th rowspan="3">Израсходовано, всего</th>
                    <th colspan="6">из них (из гр. 10)</th>
                </tr>
                <tr>
                    <th colspan="3">расходы на оплату труда</th>
                    <th colspan="3">на комплектование фонда</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из общих расходов на оплату труда (из гр. 11) основному персоналу</th>
                    <th>из них за счет собственных средств (из гр. 12)</th>
                    <th>всего (из гр. 10)</th>
                    <th>из них на подписку на доступ к удаленным сетевым ресурсам (из гр. 14)</th>
                    <th>из них за счет собственных средств (из гр. 15)</th>
                </tr>
                <tr>
                    <th>1</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th><th>16</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">19</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>

            </tbody>
        </table>
    </div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">№ строки</th>
                    <th colspan="9">из них</th>
                </tr>
                <tr>
                    <th colspan="2">расходы на капитальный ремонт и реконструкцию</th>
                    <th colspan="3">расходы на приобретение (замену) оборудования</th>
                    <th colspan="2">на организацию и проведение мероприятий</th>
                    <th colspan="2">на информатизацию библиотечной деятельности, в т.ч. создание электронных каталогов и оцифровку библиотечного фонда</th>
                </tr>
                <tr>
                    <th>всего (из гр. 10)</th>
                    <th>из них за счет собственных средств</th>
                    <th>всего (из гр. 10)</th>
                    <th>из них для улучшения условий доступности для инвалидов и лиц с ОВЗ</th>
                    <th>из них за счет собственных средств (из гр. 19)</th>
                    <th>всего (из гр. 10)</th>
                    <th>из них за счет собственных средств</th>
                    <th>всего (из гр. 10)</th>
                    <th>из них за счет собственных средств</th>
                </tr>
                <tr>
                    <th>1</th><th>17</th><th>18</th><th>19</th><th>20</th><th>21</th><th>22</th><th>23</th><th>24</th><th>25</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">19</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>

            </tbody>
        </table>
    </div>
    <div class="flex-row wid-100">
        <div class="flex1">Должностное лицо, ответственное за предоставление статистической информации (лицо, уполномоченное предоставлять статистическую информацию от имени юридического лица)</div>
        <div class="divide mar-7 flex1"><div class="underline center">Заведующий библиотекой</div><div class="divide-sub">(должность)</div></div>
        <div class="divide mar-7 flex1"><div class="underline"></div><div class="divide-sub">(Ф.И.О.)</div></div>
        <div class="divide mar-7 flex1"><div class="underline"></div><div class="divide-sub">(подпись)</div></div>
    </div>
    <div class="flex-row wid-100">
        <div class="flex1"></div>
        <div class="divide mar-7 flex1"><div class="underline"></div><div class="divide-sub">(номер контактного телефона)</div></div>
        <div class="divide mar-7 flex1"><div class="underline"></div><div class="divide-sub">(E-mail)</div></div>
        <div class="divide mar-7 flex1"><div class="center underline">«______» ________________ 20_____ год</div><div class="divide-sub">(дата составления документа)</div></div>
        
    </div>
</div>`

});
},{}],19:[function(require,module,exports){
let CheckBoxSelector = require('../../_common/filter-selector/filter-selector.js');
let SixNK = new Lure.Content({
    Name: 'SixNK',
    Target: '',
    Type: 'dash-content',
    Parent: Dash,
    Control: {
        Target: '#nav-six-nk'
    },
    Content:
`<div class="six-nk">
    <div class="diary-bread l-row">
        <div class="li date-range">
            <div class="calendar-icon">&#128198;</div>
            <div class="dates"></div>
            <div class="dates-result">
                <select class="select-six-nk-range">
                    <option value="0">Год</option>
                    <option value="1" {{SelectedQ1}}>1 Квартал</option>
                    <option value="2" {{SelectedQ2}}>2 Квартал</option>
                    <option value="3" {{SelectedQ3}}>3 Квартал</option>
                    <option value="4" {{SelectedQ4}}>4 Квартал</option>
                </select>
            </div>
        </div>
        <div class="li l-row l-flexa-center flex-100">
            <div>Подразделение: &nbsp;&nbsp;</div>
            <div class="flex-100 library-tree-control strong">__</div>
        </div>
        <div class="li button-holder l-row">
            <button class="l-button button btn-refresh">Обновить</button> 
        </div>
        <div class="li button-holder l-row">
            <button class="l-button button button-get-xls">Экспорт</button>
        </div> 
    </div>
    <div class="part-header">
        <div class="req-tab active main">ГЛАВНАЯ</div>
        <div class="req-tab p1">МАТЕРИАЛЬНО-ТЕХНИЧЕСКАЯ БАЗА</div>
        <div class="req-tab p2">ФОРМИРОВАНИЕ ФОНДА НА ФИЗИЧЕСКИХ НОСИТЕЛЯХ</div>
        <div class="req-tab p3">ЭЛЕКТРОННЫЕ РЕСУРСЫ</div>
        <div class="req-tab p4">ПОСЕЩЕНИЯ БИБЛИОТЕКИ</div>
        <div class="req-tab p5">ИНФОРМАЦИОННОЕ ОБСЛУЖИВАНИЕ</div>
        <div class="req-tab p6">ПЕРСОНАЛ</div>
        <div class="req-tab p7">ФИНАНСЫ</div>
    </div>
    <div class="data-tables">
        
    </div>
</div>`,
    GetSet: {
        get CurrentLibraries() {
            return this.Proto.Data.LibraryIDListSelected;
        },
    },
    Proto: {
        DatesResult: ({1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[Math.floor(((new Date).getMonth()) / 3) + 1],
        SelectedQ1: Math.floor(((new Date).getMonth()) / 3) + 1 === 1 ? 'selected' : '',
        SelectedQ2: Math.floor(((new Date).getMonth()) / 3) + 1 === 2 ? 'selected' : '',
        SelectedQ3: Math.floor(((new Date).getMonth()) / 3) + 1 === 3 ? 'selected' : '',
        SelectedQ4: Math.floor(((new Date).getMonth()) / 3) + 1 === 4 ? 'selected' : ''
    },
    Show: function () {
        this.RefreshData();
    },
    Props: function(){
        this.ButtonGetXLS = this.Select('.button-get-xls');
        this.ButtonRefresh = this.Select('.btn-refresh');
    },
    Refresh: function () {
        if (this.isVisible)
            this.RefreshData();
    },
    Methods: function () {
/*        this.DateChanged = function (val) {
           console.log(val);
        };*/
        this.RefreshData = function () {
            // this.Proto.Data.DatesResult = ({1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[parseInt(this.RangeSelector.value)];
            this.SixNKMain.Proto.SetProperty('DateRange',  ({0: 'Годовая', 1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[parseInt(this.RangeSelector.value)]);
            this.SixNKPart4.Load.Show();
            this.SixNKPart5.Load.Show();
            api.Diary_Summary_6NK_Get(this.CurrentLibraries, (new Date).getFullYear(), this.RangeSelector.value, {
                Then: r => {
                    this.SixNKPart4.RefreshData(r[0]);
                    this.SixNKPart5.RefreshData(r[0]);
                },
                Finally: () => {
                    this.SixNKPart4.Load.Hide();
                    this.SixNKPart5.Load.Hide();
                }
            });
            this.Updated = true;
        };
        this.GetXLS = function () {
            //InputBox.Hide();
            //this.Load.Show();
            Lure.Button.Lock(this.ButtonGetXLS);
            let Dt = Lure.Date();
            api.Diary_Summary_6NK_GetXLS(this.CurrentLibraries, Dt.Year, this.RangeSelector.value, {
                Then: (Blob)=>{
                    Lure.SaveBlob(Blob, `6-НК ${Dt.Format('YYYY')}.xlsx`);
                },
                Catch: ()=>{
                    Lure.System.Error('Невозможно получить отчет');
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonGetXLS);
                    this.Load.Hide();
                },
            })
        };
    },
    AfterBuild: function () {
        new LibraryTree(this, this.Select('.library-tree-control'), {MultiSelect: true});
        // this.SixNKMain.Proto.SetProperty('DateRange',  ({0: 'Годовая', 1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[this.Proto.Data.DatesResult]);

        this.RangeSelector = this.Select('.select-six-nk-range');
        this.RangeSelector.onchange = () => this.RefreshData();
        this.ButtonGetXLS.addEventListener('click', this.GetXLS);
        this.ButtonRefresh.addEventListener('click', this.RefreshData);
    }
});
window.Dash.SixNK = SixNK;
require('./parts/main-part.js');
require('./parts/part1.js');
require('./parts/part2.js');
require('./parts/part3.js');
require('./parts/part4.js');
require('./parts/part5.js');
require('./parts/part6.js');
require('./parts/part7.js');

},{"../../_common/filter-selector/filter-selector.js":104,"./parts/main-part.js":11,"./parts/part1.js":12,"./parts/part2.js":13,"./parts/part3.js":14,"./parts/part4.js":15,"./parts/part5.js":16,"./parts/part6.js":17,"./parts/part7.js":18}],20:[function(require,module,exports){
let CheckBoxSelector = require('../../_common/filter-selector/filter-selector.js');
Dash.DashSummary = new Lure.Content({
    //Disabled: true,
    Name: 'DashSummary',
    Target: '',
    Type: 'dash-content',
    Control: {
        Target: '#nav-dash-summary'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
        `<div class="dash-summary">
            <div class="diary-bread l-row">
                <div class="li date-range">
                    <div class="calendar-icon">&#128198;</div>
                    <div class="dates"></div>
                    <div class="dates-result">{{DatesResult}}</div>
                </div>
                <div class="li l-row l-flexa-center flex-100">
                    <div>Подразделение: &nbsp;&nbsp;</div>
                    <div class="flex-100 library-tree-control strong">__</div>
                </div>
                <div class="li button-holder l-row">
                    <button class="l-button button btn-refresh">Обновить</button> 
                </div>
                <div class="li button-holder l-row">
                    <button class="l-button button button-get-xls">Экспорт</button>
                </div> 
            </div>
            <div class="summary-content"></div>
        </div>`,
    Proto: {
        // Months: (new Array((new Date).getMonth() + 1)).Select((x, i) => ({MNum: i + 1, Name: Lure.Date(Lure.Date().MonthStart.setMonth(i)).Format('MMMM YYYY'), Now: (new Date).getMonth() === i ? 'selected' : ''})),
        Part1236: [],
        Part4: [],
        Part5: [],
        DatesResult: [(new Date).getMonth() + 1]
    },
    PropFormat: {
        DatesResult: (x) => x.length > 0 ? x.map(m => Lure.Date(Lure.Date().MonthStart.setMonth(m - 1)).Format('MMMM')).join(', ') : 'Не выбрано'
    },
    GetSet: {
        get CurrentLibraries() {
            return this.Proto.Data.LibraryIDListSelected;
        },
        // get CurDates() {
        // //     let m = this.DateSelector.value;
        // //     let d = Lure.Date().MonthStart;
        // //     d.setMonth(m - 1);
        // //     return [d, Lure.Date(d).MonthEnd];
        //     return [new Date(), new Date()]
        // }
    },
    Refresh: function () {
        // console.log('REFRESH');
        if (this.isVisible) {
            this.RefreshData();
            this.isRefreshed = true;
        }
    },
    Show: function () {
        // console.log('SHOW');
        if (!this.isRefreshed) {
            this.Refresh();
            this.isRefreshed = true;
        }
    },
    Load: '',
    Props: function () {
        let m = (new Date()).getMonth();
        this.DateSelector = this.Select('.dates-selector');
        this.CurDates = [((new Date).getMonth() + 1) + ''];

        this.ButtonExport = this.Select('.button-get-xls');
        this.ButtonRefresh = this.Select('.btn-refresh');
    },
    Methods: function () {
        this.RefreshData = function () {
            if (this.CurrentLibraries.length < 1) return;

            this.Load.Show();
            let [dateStart, dateEnd] = [Lure.Date(Lure.Date().MonthStart.setMonth(this.CurDates[0] - 1)).Date, Lure.Date(Lure.Date().MonthStart.setMonth(this.CurDates.Last() - 1)).MonthEnd];
            // console.log([dateStart, dateEnd]);

            api.Diary_Summary_Part1236View_Get(this.CurrentLibraries, (new Date).getFullYear(), this.CurDates, {})
                .then(data => {
                    let res = {p11: [], p12: [], p21: [], p22: [], p23: [], p3: [], p61: [], p62: []};
                    for (let r of data) {
                        switch (r.DateValue) {
                            case -1:
                                r.DateValue = 'Ранее';
                                r.QQQ = -2;
                                break;
                            case 100:
                                r.DateValue = 'Месяц';
                                r.QQQ = -2;
                                break;
                            case 101:
                                r.DateValue = 'Сумма';
                                r.QQQ = -2;
                                break;
                        }
                        let [p11, p12, p21, p22, p23, p3, p61, p62] = (new Array(8)).Select(x => ({DateValue: r.DateValue, QQQ: r.QQQ, IsDayOff: r.IsDayOff}));
                        for (let k in r)
                            if (r.hasOwnProperty(k))
                                switch (k[1]) {
                                    case '1':
                                        parseInt(k.substr(3)) >= 21 ? p12[k] = r[k] : p11[k] = r[k];
                                        break;
                                    case '2':
                                        if (parseInt(k.substr(3)) >= 34)
                                            p23[k] = r[k];
                                        else {
                                            if (parseInt(k.substr(3)) <= 18)
                                                p21[k] = r[k];
                                            else p22[k] = r[k];
                                        }
                                        break;
                                    case '3':
                                        p3[k] = r[k];
                                        break;
                                    case '6':
                                        if (k[2] === '1') p61[k] = r[k];
                                        if (k[2] === '2') p62[k] = r[k];
                                        break;
                                }

                        res.p11.push(p11);  // P1V2 .. P1V20 - p11
                        res.p12.push(p12);  // P1V21 .. P1V36 - p12
                        res.p21.push(p21);  // P2V2 .. P2V18 - p21
                        res.p22.push(p22);  // P2V19 .. P2V33 - p22
                        res.p23.push(p23);  // P2V34 .. P2V44 - p23
                        res.p3.push(p3);    // P3V2 .. P3V6 - p3
                        res.p61.push(p61);  // P61V2 .. P61V7 - p61
                        res.p62.push(p62);  // P62V2 .. P62V17 - p62
                    }

                    this.Part1.Proto.Data.p11 = res.p11;
                    this.Part1.Proto.Data.p12 = res.p12;
                    this.Part1.Proto.Refresh();
                    this.Part2.Proto.Data.p21 = res.p21;
                    this.Part2.Proto.Data.p22 = res.p22;
                    this.Part2.Proto.Data.p23 = res.p23;
                    this.Part2.Proto.Refresh();
                    this.Part3.Proto.Data.p3 = res.p3;
                    this.Part3.Proto.Refresh();
                    this.Part6.Proto.Data.p61 = res.p61;
                    this.Part6.Proto.Data.p62 = res.p62;
                    this.Part6.Proto.Refresh();
                })
                .then(() => api.Diary_SummaryPart4_Get(this.CurrentLibraries, dateStart, dateEnd))
                .then(data => {
                    this.Part4.Proto.Data.Part4 = data.filter(x => this.CurDates.indexOf((Lure.Date(x.DateStart).Month + 1) + '') !== -1 || this.CurDates.indexOf((Lure.Date(x.DateFinish).Month + 1) + '') !== -1);
                    this.Part4.Proto.Refresh();
                })
                .then(() => api.Diary_SummaryPart5_Get(this.CurrentLibraries, dateStart, dateEnd))
                .then(data => {
                    this.Part5.Proto.Data.Part5 = data.filter(x => this.CurDates.indexOf((Lure.Date(x.DateStart).Month + 1) + '') !== -1 || this.CurDates.indexOf((Lure.Date(x.DateFinish).Month + 1) + '') !== -1);
                    this.Part5.Proto.Refresh();
                })
                .then(() => this.Load.Hide())
                .catch(e => {
                    console.error(e);
                    this.Load.Hide();
                });
        };
        this.GetXLS = function () {
            this.Load.Show();
            let Dt = Lure.Date(this.CurrentDate);
            // let [dateStart, dateEnd] = this.CurDates;
            api.Diary_Summary_GetXLS(this.CurrentLibraries, (new Date).getFullYear(), this.CurDates, {
                Then: (Blob) => Lure.SaveBlob(Blob, `Сводная таблица ${Dt.Format('MMMM YYYY')}.xlsx`),
                Catch: () => Lure.System.Error('Невозможно получить отчет'),
                Finally: () => this.Load.Hide(),
            })
        };
        this.DateChanged = function (months) {
            if (months.length === 0) return;
            this.Proto.SetProperty('DatesResult', months);
            this.CurDates = months;
            this.RefreshData();
        };
    },
    AfterBuild: function() {
        new LibraryTree(this, this.Select('.library-tree-control'), {MultiSelect: true});
        this.Proto.Data.LibraryIDListSelected = [Lure.User.Cache.LibraryList.Last().ID];
        // this.DateSelector.onchange = () => this.RefreshData();
        this.ButtonExport.addEventListener('click', () => this.GetXLS());
        this.ButtonRefresh.addEventListener('click', () => this.Refresh());

        this.DatesSelector = CheckBoxSelector({
            target: this.Select('.dates'),
            Data: () => (new Array((new Date).getMonth() + 1)).Select((x, i) => ({MNum: i + 1, Name: Lure.Date(Lure.Date().MonthStart.setMonth(i)).Format('MMMM YYYY'), Check: i === (new Date).getMonth()})),
            Key: 'MNum',
            Value: 'Name',
            Control: this.Select('.date-range .dates-result'),
            onOK: r => this.DateChanged(r),
            checked: 'key'
        });
    }
});

require("./parts/part1.js");
require("./parts/part2.js");
require("./parts/part3.js");
require("./parts/part4.js");
require("./parts/part5.js");
require("./parts/part6.js");

},{"../../_common/filter-selector/filter-selector.js":104,"./parts/part1.js":21,"./parts/part2.js":22,"./parts/part3.js":23,"./parts/part4.js":24,"./parts/part5.js":25,"./parts/part6.js":26}],21:[function(require,module,exports){
Dash.DashSummary.Part1 = new Lure.Content({
    Name: 'DashPart1',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Visible: true,
    Control:{
        Target: '#nav-dash-summ-p1'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected p11">ЗАПИСЬ И ПОСЕЩЕНИЯ</div>
      <div class="req-tab p12">МЕРОПРИЯТИЯ И КЛУБЫ</div>
   </div>
   <table class="data-table p11 fixed-height">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего</th>
            <th colspan="1" rowspan="2" >Вновь записавшихся</th>
            <th colspan="1" rowspan="2" >Всего стационар</th>
            <th colspan="2" rowspan="1" >Возраст</th>
            <th colspan="1" rowspan="2" >Удаленные пользователи</th>
            <th colspan="5" rowspan="1" >Школьники</th>
            <th colspan="4" rowspan="1" >Отдельные группы</th>
            <th colspan="1" rowspan="2" >Всего посещений</th>
            <th colspan="3" rowspan="1" >В том числе</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >до 14 лет</th>
            <th colspan="1" rowspan="1" >14-30 лет</th>
            <th colspan="1" rowspan="1" >д/ш</th>
            <th colspan="1" rowspan="1" >7-10 лет</th>
            <th colspan="1" rowspan="1" >11-14 лет</th>
            <th colspan="1" rowspan="1" >Старшеклассники</th>
            <th colspan="1" rowspan="1" >РДЧ</th>
            <th colspan="1" rowspan="1" >Пенсионеры</th>
            <th colspan="1" rowspan="1" >Служащие</th>
            <th colspan="1" rowspan="1" >Студенты</th>
            <th colspan="1" rowspan="1" >Прочие</th>
            <th colspan="1" rowspan="1" >Стационар</th>
            <th colspan="1" rowspan="1" >Внестационар</th>
            <th colspan="1" rowspan="1" >Интернет</th>
         </tr>
      </thead>
      <tbody>
         {{#each p11}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P1V2">{{P1V2}}</td>
            <td data-prop="P1V3">{{P1V3}}</td>
            <td data-prop="P1V4">{{P1V4}}</td>
            <td data-prop="P1V5">{{P1V5}}</td>
            <td data-prop="P1V6">{{P1V6}}</td>
            <td data-prop="P1V7">{{P1V7}}</td>
            <td data-prop="P1V8">{{P1V8}}</td>
            <td data-prop="P1V9">{{P1V9}}</td>
            <td data-prop="P1V10">{{P1V10}}</td>
            <td data-prop="P1V11">{{P1V11}}</td>
            <td data-prop="P1V12">{{P1V12}}</td>
            <td data-prop="P1V13">{{P1V13}}</td>
            <td data-prop="P1V14">{{P1V14}}</td>
            <td data-prop="P1V15">{{P1V15}}</td>
            <td data-prop="P1V16">{{P1V16}}</td>
            <td data-prop="P1V17">{{P1V17}}</td>
            <td data-prop="P1V18">{{P1V18}}</td>
            <td data-prop="P1V19">{{P1V19}}</td>
            <td data-prop="P1V20">{{P1V20}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
   <table class="data-table p12 fixed-height none">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего посещений мероприятия стационар</th>
            <th colspan="2" rowspan="1" >Посещения мероприятий</th>
            <th colspan="1" rowspan="2" >Всего мероприятий</th>
            <th colspan="2" rowspan="1" >Количество мероприятий</th>
            <th colspan="1" rowspan="2" >Всего посещений мероприятия внестационар</th>
            <th colspan="2" rowspan="1" >Посещения мероприятий</th>
            <th colspan="1" rowspan="2" >Всего мероприятий внестационар</th>
            <th colspan="2" rowspan="1" >Посещения мероприятий</th>
            <th colspan="2" rowspan="1" >Бесплатные клубы</th>
            <th colspan="2" rowspan="1" >Платные клубы</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Бесплатные</th>
            <th colspan="1" rowspan="1" >Платные</th>
            <th colspan="1" rowspan="1" >Бесплатные</th>
            <th colspan="1" rowspan="1" >Платные</th>
            <th colspan="1" rowspan="1" >Бесплатные</th>
            <th colspan="1" rowspan="1" >Платные</th>
            <th colspan="1" rowspan="1" >Бесплатные</th>
            <th colspan="1" rowspan="1" >Платные</th>
            <th colspan="1" rowspan="1" >Количество заседаний</th>
            <th colspan="1" rowspan="1" >Число посещений</th>
            <th colspan="1" rowspan="1" >Количество заседаний</th>
            <th colspan="1" rowspan="1" >Число посещений</th>
         </tr>
      </thead>
      <tbody>
         {{#each p12}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P1V21">{{P1V21}}</td>
            <td data-prop="P1V22">{{P1V22}}</td>
            <td data-prop="P1V23">{{P1V23}}</td>
            <td data-prop="P1V24">{{P1V24}}</td>
            <td data-prop="P1V25">{{P1V25}}</td>
            <td data-prop="P1V26">{{P1V26}}</td>
            <td data-prop="P1V27">{{P1V27}}</td>
            <td data-prop="P1V28">{{P1V28}}</td>
            <td data-prop="P1V29">{{P1V29}}</td>
            <td data-prop="P1V30">{{P1V30}}</td>
            <td data-prop="P1V31">{{P1V31}}</td>
            <td data-prop="P1V32">{{P1V32}}</td>
            <td data-prop="P1V33">{{P1V33}}</td>
            <td data-prop="P1V34">{{P1V34}}</td>
            <td data-prop="P1V35">{{P1V35}}</td>
            <td data-prop="P1V36">{{P1V36}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Show: function () {
        this.Proto.Refresh()
    },
    Props: function () {
        this.SelectedTab = this.Select('.req-tab.selected');
        this.T_p11 = this.Select('table.p11');
        this.T_p12 = this.Select('table.p12');
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.part-header .req-tab', e => {
            if (e.currentTarget === this.SelectedTab) return;
            this.SelectedTab.classList.remove('selected');
            this.SelectedTab = e.currentTarget;
            let cl = e.currentTarget.classList;
            cl.add('selected');
            if (cl.contains('p11')) {
                this.T_p11.classList.remove('none');
                this.T_p12.classList.add('none');
            }
            if (cl.contains('p12')) {
                this.T_p11.classList.add('none');
                this.T_p12.classList.remove('none');
            }

        })
    }
});
},{}],22:[function(require,module,exports){
Dash.DashSummary.Part2 = new Lure.Content({
    Name: 'DashPart2',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-dash-summ-p2'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected p21">КНИГИ И БРОШЮРЫ</div>
      <div class="req-tab p22">ДОКУМЕНТЫ И КОПИИ</div>
      <div class="req-tab p23">СПРАВКИ И КОНСУЛЬТАЦИИ</div>
   </div>
   <table class="data-table fixed-height p21">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего выдано</th>
            <th colspan="5" rowspan="1" >По типу носителя</th>
            <th colspan="11" rowspan="1" >По содержанию</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >На физ носителях</th>
            <th colspan="1" rowspan="1" >Внестационар и на дому (6.1, 6.2)</th>
            <th colspan="1" rowspan="1" >Из электронной библиотеки</th>
            <th colspan="1" rowspan="1" >Инсталированные</th>
            <th colspan="1" rowspan="1" >Удаленные лицензионные</th>
            <th colspan="1" rowspan="1" >ОПЛ</th>
            <th colspan="1" rowspan="1" >Е/зн</th>
            <th colspan="1" rowspan="1" >Техника</th>
            <th colspan="1" rowspan="1" >С/х</th>
            <th colspan="1" rowspan="1" >Искусство</th>
            <th colspan="1" rowspan="1" >Спорт</th>
            <th colspan="1" rowspan="1" >81.83</th>
            <th colspan="1" rowspan="1" >Справочники</th>
            <th colspan="1" rowspan="1" >Дет. лит-ра</th>
            <th colspan="1" rowspan="1" >Худ. лит-ра</th>
            <th colspan="1" rowspan="1" >Дополнит.</th>
         </tr>
      </thead>
      <tbody>
         {{#each p21}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P2V2">{{P2V2}}</td>
            <td data-prop="P2V3">{{P2V3}}</td>
            <td data-prop="P2V4">{{P2V4}}</td>
            <td data-prop="P2V5">{{P2V5}}</td>
            <td data-prop="P2V6">{{P2V6}}</td>
            <td data-prop="P2V7">{{P2V7}}</td>
            <td data-prop="P2V8">{{P2V8}}</td>
            <td data-prop="P2V9">{{P2V9}}</td>
            <td data-prop="P2V10">{{P2V10}}</td>
            <td data-prop="P2V11">{{P2V11}}</td>
            <td data-prop="P2V12">{{P2V12}}</td>
            <td data-prop="P2V13">{{P2V13}}</td>
            <td data-prop="P2V14">{{P2V14}}</td>
            <td data-prop="P2V15">{{P2V15}}</td>
            <td data-prop="P2V16">{{P2V16}}</td>
            <td data-prop="P2V17">{{P2V17}}</td>
            <td data-prop="P2V18">{{P2V18}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
   <table class="data-table p22 fixed-height none">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="6" rowspan="1" >Выдано документов детям до 14 лет</th>
            <th colspan="6" rowspan="1" >Выдано документов пользователям 14-30 лет</th>
            <th colspan="3" rowspan="1" >Изготовлено и выдано копий</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Всего выдано</th>
            <th colspan="1" rowspan="1" >На физ носителях</th>
            <th colspan="1" rowspan="1" >Внестационар и на дому (6.1, 6.2)</th>
            <th colspan="1" rowspan="1" >Из электронной библиотеки</th>
            <th colspan="1" rowspan="1" >Инсталированные</th>
            <th colspan="1" rowspan="1" >Удаленные лицензионные</th>
            <th colspan="1" rowspan="1" >Всего выдано</th>
            <th colspan="1" rowspan="1" >На физ носителях</th>
            <th colspan="1" rowspan="1" >Внестационар и на дому (6.1, 6.2)</th>
            <th colspan="1" rowspan="1" >Из электронной библиотеки</th>
            <th colspan="1" rowspan="1" >Инсталированные</th>
            <th colspan="1" rowspan="1" >Удаленные лицензионные</th>
            <th colspan="1" rowspan="1" >Всего</th>
            <th colspan="1" rowspan="1" >Детям до 14 лет</th>
            <th colspan="1" rowspan="1" >Пользователям 14-30 лет</th>
         </tr>
      </thead>
      <tbody>
         {{#each p22}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P2V19">{{P2V19}}</td>
            <td data-prop="P2V20">{{P2V20}}</td>
            <td data-prop="P2V21">{{P2V21}}</td>
            <td data-prop="P2V22">{{P2V22}}</td>
            <td data-prop="P2V23">{{P2V23}}</td>
            <td data-prop="P2V24">{{P2V24}}</td>
            <td data-prop="P2V25">{{P2V25}}</td>
            <td data-prop="P2V26">{{P2V26}}</td>
            <td data-prop="P2V27">{{P2V27}}</td>
            <td data-prop="P2V28">{{P2V28}}</td>
            <td data-prop="P2V29">{{P2V29}}</td>
            <td data-prop="P2V30">{{P2V30}}</td>
            <td data-prop="P2V31">{{P2V31}}</td>
            <td data-prop="P2V32">{{P2V32}}</td>
            <td data-prop="P2V33">{{P2V33}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
   <table class="data-table p23 fixed-height none">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего выдано из фондов других библиотек</th>
            <th colspan="2" rowspan="1" >Выдано (просмотрено) док-ов из фондов других библиотек, единиц</th>
            <th colspan="1" rowspan="2" >Всего выполнено справок и консультаций</th>
            <th colspan="2" rowspan="1" >По возрасту</th>
            <th colspan="5" rowspan="1" >По типу</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >По системе МБА и ММБА</th>
            <th colspan="1" rowspan="1" >Виртуальные читальные залы</th>
            <th colspan="1" rowspan="1" >до 14 лет</th>
            <th colspan="1" rowspan="1" >14-30 лет</th>
            <th colspan="1" rowspan="1" >Тематические</th>
            <th colspan="1" rowspan="1" >Фактографич.</th>
            <th colspan="1" rowspan="1" >Библиографич.</th>
            <th colspan="1" rowspan="1" >Консультации</th>
            <th colspan="1" rowspan="1" >Удаленные справки</th>
         </tr>
      </thead>
      <tbody>
         {{#each p23}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P2V34">{{P2V34}}</td>
            <td data-prop="P2V35">{{P2V35}}</td>
            <td data-prop="P2V36">{{P2V36}}</td>
            <td data-prop="P2V37">{{P2V37}}</td>
            <td data-prop="P2V38">{{P2V38}}</td>
            <td data-prop="P2V39">{{P2V39}}</td>
            <td data-prop="P2V40">{{P2V40}}</td>
            <td data-prop="P2V41">{{P2V41}}</td>
            <td data-prop="P2V42">{{P2V42}}</td>
            <td data-prop="P2V43">{{P2V43}}</td>
            <td data-prop="P2V44">{{P2V44}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Show: function () {

    },
    Props: function () {
        this.SelectedTab = this.Select('.req-tab.selected');
        this.T_p21 = this.Select('table.p21');
        this.T_p22 = this.Select('table.p22');
        this.T_p23 = this.Select('table.p23');
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.part-header .req-tab', e => {
            if (e.currentTarget === this.SelectedTab) return;
            this.SelectedTab.classList.remove('selected');
            this.SelectedTab = e.currentTarget;
            let cl = e.currentTarget.classList;
            cl.add('selected');
            if (cl.contains('p21')) {
                this.T_p21.classList.remove('none');
                this.T_p22.classList.add('none');
                this.T_p23.classList.add('none');
            }
            if (cl.contains('p22')) {
                this.T_p21.classList.add('none');
                this.T_p22.classList.remove('none');
                this.T_p23.classList.add('none');
            }
            if (cl.contains('p23')) {
                this.T_p21.classList.add('none');
                this.T_p22.classList.add('none');
                this.T_p23.classList.remove('none');
            }

        })
    }
});
},{}],23:[function(require,module,exports){
Dash.DashSummary.Part3 = new Lure.Content({
    Name: 'DashPart3',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-dash-summ-p3'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected">УЧЕТ ВЫДАЧИ ЭЛЕКТРОННЫХ РЕСУРСОВ</div>
   </div>
   <table class="data-table fixed-height">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего выдано</th>
            <th colspan="4" rowspan="1" >По типу носителя</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Инсталлированные документы</th>
            <th colspan="1" rowspan="1" >Сетевые удаленные лицензионные</th>
            <th colspan="1" rowspan="1" >Из электронной (цифровой) библиотеки</th>
            <th colspan="1" rowspan="1" >DVD / CD-ROM</th>
         </tr>
      </thead>
      <tbody>
         {{#each p3}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P3V2">{{P3V2}}</td>
            <td data-prop="P3V3">{{P3V3}}</td>
            <td data-prop="P3V4">{{P3V4}}</td>
            <td data-prop="P3V5">{{P3V5}}</td>
            <td data-prop="P3V6">{{P3V6}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Show: function () {

    }
});
},{}],24:[function(require,module,exports){
Dash.DashSummary.Part4 = new Lure.Content({
    Name: 'DashPart4',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-dash-summ-p4'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected">КУЛЬТУРНО-МАССОВАЯ РАБОТА</div>
   </div>
   <table class="data-table">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Даты проведения</th>
            <th colspan="1" rowspan="2" >Название мероприятия</th>
            <th colspan="1" rowspan="2" >Форма проведения</th>
            <th colspan="5" rowspan="1" >Стационар</th>
            <th colspan="5" rowspan="1" >Внестационар</th>
            <th colspan="3" rowspan="1" >Бесплатные клубы</th>
            <th colspan="3" rowspan="1" >Платные клубы</th>
            <th colspan="1" rowspan="2" >Выездное (название)</th>
            <th colspan="1" rowspan="2" >Ответственный</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Бесплатно</th>
            <th colspan="1" rowspan="1" >Платно</th>
            <th colspan="1" rowspan="1" >Инвалиды</th>
            <th colspan="1" rowspan="1" >Мигранты</th>
            <th colspan="1" rowspan="1" >Проф. семинары, лекции, и т.п.</th>
            <th colspan="1" rowspan="1" >Бесплатно</th>
            <th colspan="1" rowspan="1" >Платно</th>
            <th colspan="1" rowspan="1" >Инвалиды</th>
            <th colspan="1" rowspan="1" >Мигранты</th>
            <th colspan="1" rowspan="1" >Проф. семинары, лекции, и т.п.</th>
            <th colspan="1" rowspan="1" >Посещения</th>
            <th colspan="1" rowspan="1" >Инвалиды</th>
            <th colspan="1" rowspan="1" >Мигранты</th>
            <th colspan="1" rowspan="1" >Посещения</th>
            <th colspan="1" rowspan="1" >Инвалиды</th>
            <th colspan="1" rowspan="1" >Мигранты</th>
         </tr>
      </thead>
      <tbody>
         {{IsEmpty}}
         {{#each Part4}}
         <tr>
            <td data-prop="P4V1">{{DateStart}}<br>{{DateFinish}}</td>
            <td data-prop="P4V2" style="white-space: pre-wrap;">{{P4V2}}</td>
            <td data-prop="P4V3">{{P4V3}}</td>
            <td data-prop="P4V4">{{P4V4}}</td>
            <td data-prop="P4V5">{{P4V5}}</td>
            <td data-prop="P4V6">{{P4V6}}</td>
            <td data-prop="P4V7">{{P4V7}}</td>
            <td data-prop="P4V8">{{P4V8}}</td>
            <td data-prop="P4V9">{{P4V9}}</td>
            <td data-prop="P4V10">{{P4V10}}</td>
            <td data-prop="P4V11">{{P4V11}}</td>
            <td data-prop="P4V12">{{P4V12}}</td>
            <td data-prop="P4V13">{{P4V13}}</td>
            <td data-prop="P4V14">{{P4V14}}</td>
            <td data-prop="P4V15">{{P4V15}}</td>
            <td data-prop="P4V16">{{P4V16}}</td>
            <td data-prop="P4V17">{{P4V17}}</td>
            <td data-prop="P4V18">{{P4V18}}</td>
            <td data-prop="P4V19">{{P4V19}}</td>
            <td data-prop="P4V20" title='{{P4V20}}' class="cut-cell">{{P4V20}}</td>
            <td data-prop="P4V21" title='{{P4V21}}' class="cut-cell">{{P4V21}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Proto: {
        IsEmpty: ''
    },
    PropFormat: {
        DateStart: x => Lure.Date(x).Format('DD.MM.YYYY'),
        DateFinish: x => Lure.Date(x).Format('DD.MM.YYYY'),
        P4V3: x => Dictionary.EventTypeDict[x] || x,
        'IsEmpty': (x, p) => (p.Part4 || []).length > 0 ? '' : `<tr><td class="empty-row" colspan="21">Нет данных</td></tr>`,
        'P4V21': (UserID)=>{
            let User = Lure.User.Cache.UserList.Where(x=>x.ID === UserID).FirstOrDefault();
            if (User === null)
                return 'Не задан *';
            return User.Name
        }
    },
    Show: function () {

    }
});
},{}],25:[function(require,module,exports){
Dash.DashSummary.Part5 = new Lure.Content({
    Name: 'DashPart5',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-dash-summ-p5'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected">ВЫСТАВКИ</div>
   </div>
   <table class="data-table">
      <thead>
         <tr class="trow head-1">
            <th colspan="1" rowspan="1" >Дата</th>
            <th colspan="1" rowspan="1" >Название</th>
            <th colspan="1" rowspan="1" >Количество представленных документов</th>
            <th colspan="1" rowspan="1" >Количество выданных документов</th>
            <th colspan="1" rowspan="1" >Ответственный</th>
            <th colspan="1" rowspan="1" >Примечания</th>
         </tr>
      </thead>
      <tbody>
         {{IsEmpty}}
         {{#each Part5}}
         <tr>
            <td data-prop="DATES">{{DateStart}} - {{DateFinish}}</td>
            <td data-prop="P5V2">{{P5V2}}</td>
            <td data-prop="P5V3">{{P5V3}}</td>
            <td data-prop="P5V4">{{P5V4}}</td>
            <td data-prop="P5V5">{{P5V5}}</td>
            <td data-prop="P5V6">{{P5V6}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Proto: {
        IsEmpty: ''
    },
    PropFormat: {
        IsEmpty: (x, p) => (p.Part5 || []).length > 0 ? '' : `<tr><td class="empty-row" colspan="6">Нет данных</td></tr>`,
        DateStart: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
        DateFinish: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
        'P5V5': (UserID)=>{
            let User = Lure.User.Cache.UserList.Where(x=>x.ID === UserID).FirstOrDefault();
            if (User === null)
                return 'Не задан *';
            return User.Name
        }
    },
    Show: function () {

    }
});
},{}],26:[function(require,module,exports){
Dash.DashSummary.Part6 = new Lure.Content({
    Name: 'DashPart6',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-dash-summ-p6'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected p61">ПОЛЬЗОВАТЕЛИ НА ДОМУ</div>
      <div class="req-tab p62">РАБОТА ПЕРЕДВИЖЕК</div>
   </div>
   <table class="data-table p61 fixed-height">
      <thead>
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Зарегестрировано пользователей</th>
            <th colspan="1" rowspan="2" >Из них инвалидов</th>
            <th colspan="1" rowspan="2" >Выдано книг на дом</th>
            <th colspan="3" rowspan="1" >Работа с передвижками</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Посещение пользователей</th>
            <th colspan="1" rowspan="1" >Консультация пользователей</th>
            <th colspan="1" rowspan="1" >Семинар передвижников</th>
         </tr>
      </thead>
      <tbody>
         {{#each p61}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P6V2">{{P61V2}}</td>
            <td data-prop="P6V3">{{P61V3}}</td>
            <td data-prop="P6V4">{{P61V4}}</td>
            <td data-prop="P6V5">{{P61V5}}</td>
            <td data-prop="P6V6">{{P61V6}}</td>
            <td data-prop="P6V7">{{P61V7}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
   <table class="data-table p62 fixed-height none">
      <thead>
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Количество передвижек</th>
            <th colspan="1" rowspan="2" >Число читателей в них</th>
            <th colspan="1" rowspan="2" >Всего выдано книг</th>
            <th colspan="11" rowspan="1" >По тематике</th>
            <th colspan="2" rowspan="1" >Массовые мероприятия</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >ОПЛ</th>
            <th colspan="1" rowspan="1" >Е/зн</th>
            <th colspan="1" rowspan="1" >Техника</th>
            <th colspan="1" rowspan="1" >С/х</th>
            <th colspan="1" rowspan="1" >Искусство</th>
            <th colspan="1" rowspan="1" >Спорт</th>
            <th colspan="1" rowspan="1" >81.83</th>
            <th colspan="1" rowspan="1" >Справочники</th>
            <th colspan="1" rowspan="1" >Дет. лит-ра</th>
            <th colspan="1" rowspan="1" >Худ. лит-ра</th>
            <th colspan="1" rowspan="1" >Дополнит.</th>
            <th colspan="1" rowspan="1" >Количество</th>
            <th colspan="1" rowspan="1" >Число обслуженных</th>
         </tr>
      </thead>
      <tbody>
         {{#each p62}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P62V2">{{P62V2}}</td>
            <td data-prop="P62V3">{{P62V3}}</td>
            <td data-prop="P62V4">{{P62V4}}</td>
            <td data-prop="P62V5">{{P62V5}}</td>
            <td data-prop="P62V6">{{P62V6}}</td>
            <td data-prop="P62V7">{{P62V7}}</td>
            <td data-prop="P62V8">{{P62V8}}</td>
            <td data-prop="P62V9">{{P62V9}}</td>
            <td data-prop="P62V10">{{P62V10}}</td>
            <td data-prop="P62V11">{{P62V11}}</td>
            <td data-prop="P62V12">{{P62V12}}</td>
            <td data-prop="P62V13">{{P62V13}}</td>
            <td data-prop="P62V14">{{P62V14}}</td>
            <td data-prop="P62V15">{{P62V15}}</td>
            <td data-prop="P62V16">{{P62V16}}</td>
            <td data-prop="P62V17">{{P62V17}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Show: function () {

    },
    Props: function () {
        this.SelectedTab = this.Select('.req-tab.selected');
        this.T_p61 = this.Select('table.p61');
        this.T_p62 = this.Select('table.p62');
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.part-header .req-tab', e => {
            if (e.currentTarget === this.SelectedTab) return;
            this.SelectedTab.classList.remove('selected');
            this.SelectedTab = e.currentTarget;
            let cl = e.currentTarget.classList;
            cl.add('selected');
            if (cl.contains('p61')) {
                this.T_p61.classList.remove('none');
                this.T_p62.classList.add('none');
            }
            if (cl.contains('p62')) {
                this.T_p61.classList.add('none');
                this.T_p62.classList.remove('none');
            }

        })
    }
});
},{}],27:[function(require,module,exports){
const D = require('../../_common/dictionary');

DataInput.DataAfficheInput = new Lure.Content({
    Parent: DataInput,
    Name: 'DataInput',
    Target: '.data-affiche-input',
    Type: 'data-input-content',
    Control: {
        Target: '#nav-data-input-affiche'
    },
    Permission: {
        Roles: [D.Role.SetupEvent]
    },
    Content:
        `<div class="data-input affiche-input">
            <div class="diary-bread l-row">
                <div class="li date-range">
                    <div class="calendar-icon">&#128198;</div>
                    <div class="date-affiche-interval"></div>
                </div>
                <div class="li">
                    Подразделение: 
                    <select class="l-select select lib-list"></select>
                </div>
                <div class="li">
                    <button class="add-new-event l-button">ДОБАВИТЬ МЕРОПРИЯТИЕ</button>
                </div>
<!--                <div class="li">
                    <button class="wizard-open l-button">WIZARD!</button>
                </div>-->
            </div>
            <div class="affiche-table">
                <table>
                    <thead><tr>
                        <th class="ev-checks">
                            <div class="wrap">
                                <div><input type="checkbox" class="mass-actions"></div>
                                <div style="position:relative;" class="all-check-checkbox {{NoneMassActions}}">
                                    <button class="mass-actions l-button">M</button>
                                    <div class="action-list none">
                                        <div class="action-type" data-acttype="delete-sel">Удалить выбранные</div>
                                        <div class="action-type" data-acttype="moderate-sel">Подтвердить правильность</div>
                                        <!--<div class="action-type" data-acttype="">Что-то еще</div>
                                        <div class="action-type" data-acttype="">Последний вариант</div>-->
                                    </div>
                                </div>
                            </div>
                        </th>
                        <th>№</th>
                        <th>Подтверждено модератором</th>
                        <th>Наименование подразделение</th>
                        <th>Наименование мероприятия</th>
                        <th class="date-start-finish">Дата начала и окончания  мероприятия</th>
                        <th>Запланированное число посетителей</th>
                        <th>Цена</th>
                        <th>ФИО, должность, телефон, e-mail ответственного</th>
                        <th>Проводится в рамках: гос. задание (ГЗ),<br>внебюджетная деятельность (В),<br>иные основания (И)</th>
                    </tr></thead>
                    <tbody>
                    
                    </tbody>
                </table>
            </div>
<div class="wizard-wrap">
    <div class="wizard"></div>
</div>
        </div>`,
    Sort: {
        DateStart: '.date-start-finish'
    },
    Controller: {
        Target: '.affiche-table tbody',
        Data: [],
        ListElement: `
            <tr class="single-event-line ev-line-{{ID }}">
                <td class="mass-check"><input type="checkbox" class="mass-actions"></td>
                <td class="center">{{ID}}</td>
                <td class="center">{{IsModerated}}</td>
                <td>{{LibraryID}}</td>
                <td>{{Name}}</td>
                <td class="center"><span>{{DateStart}}</span> - <span>{{DateFinish}}</span></td>
                <td class="center">{{PlanCount}}</td>
                <td class="center">{{Price}}</td>
                <td>{{Curator}}</td>
                <td class="center">{{Initiator || ''}}</td>
            </tr>`,
        EmptyMessage:
            `<td colspan=15 style="text-align: center;">Мероприятия отсутствуют</td>`
    },
    PropFormat: {
        DateStart: x => Lure.Date(x).Format("DD.MM.YYYY"),
        DateFinish: x => Lure.Date(x).Format("DD.MM.YYYY"),
        LibraryID: (id, p, r) => (r = Lure.User.Cache.LibraryList.filter((x) => x.ID === id)[0], r ? r.Name : ''),
        Curator: (c) => {
            if (c < 0) return 'Не назначен';
            const x = Lure.User.Cache.UserDict[c];
            // if (!u) return 'Неизвестный пользователь';
            return x ? [x.Name, x.Email, x.Phone, x.Position].join(', ') : 'Не назначен';
        },
        IsModerated: x => x ? 'Да' : 'Нет'
    },
    Load: '',
    Props: function () {
        this.LibContrl = new Lure.Controller.Templator({
            Target: '.affiche-input .lib-list',
            Data: [],
            ListElement: `<option value="{{ID}}">{{Name}}</option>`
        });
        this.DatePicker = new Lure.PeriodPicker({
            Target: '.date-affiche-interval',
            DateRange: [Lure.Date().MonthStart, Lure.Date().MonthEnd],
            OnConfirm: () => this.RefreshData()
        });
        this.LibSelect = this.Select('.affiche-input .lib-list');
        this.EventList = [];
    },
    Proto: {
        NoneMassActions: 'none'
    },
    Show: function () {
        this.RefreshData();
    },
    Refresh: function () {
        this.RefreshData()
    },
    Methods: function () {
        this.RefreshData = function () {
            this.Load.Show();
            this.EventsEditor.Hide();
            this.EventsEditor.EditingNewEv = false;
            let dtStart = Lure.Date(this.DatePicker.Date[0]).DateCs;
            let dtEnd = Lure.Date(this.DatePicker.Date[1]).DateCs;
            // DataInput_Event_Get(LibraryID, EventID, DateStart, DateFinish, Handlers)
            api.DataInput_Event_Get(this.LibSelect.value, -1, dtStart, dtEnd, {
                Then: r => {
/*                    r = r.sort((a, b) => {
                        let a_ds = +Lure.Date(a.DateStart).Date;
                        let a_df = +Lure.Date(a.DateFinish).Date;
                        let b_ds = +Lure.Date(b.DateStart).Date;
                        let b_df = +Lure.Date(b.DateFinish).Date;
                        return (a_ds > b_ds) ? 1 : ((a_ds === b_ds) ? ((a_df > b_df) ? 1 : -1) : -1)
                    });*/
                    this.EventList = r;
                    this.Controller.Refresh(r);
                },
                Error: console.error,
                Finally: r => this.Load.Hide()
            });
        };
        this.ToggleSelectedEventRow = function (elem, mode = true) {
            let oldSel = this.Select('.single-event-line.selected');
            if (oldSel) oldSel.classList.remove('selected');
            if (mode) elem.classList.add('selected');
        };

        let allCheck = this.Select('input.mass-actions');
        this.ChangeMassCheck = function (line, checked) {
            this.Controller.Data[line].MassSelect = checked;
            if (!checked) allCheck.checked = false;
            let list = this.Controller.Data.filter(x => x.MassSelect);
            if (list.length > 0 )
                this.Proto.SetProperty('NoneMassActions', '');
            else this.Proto.SetProperty('NoneMassActions', 'none');
        };
        this.DoMassAction = function (type, elem) {
            let list = [];
            for (let i = 0; i < this.Controller.Data.length; i++)
                if (this.Controller.Data[i].MassSelect)
                    list.push({ID: this.Controller.Data[i].ID, Line: i});

            if (type === 'delete-sel')
                Lure.Confirm("УДАЛЕНИЕ МЕРОПРИЯТИЙ", 'Удалить выбранные мероприятия?', {
                    OnAgree: async () => {
                        for (let x of list)
                            if (await api.DataInput_Event_Remove(this.Controller.Data[x.Line].LibraryID, this.Controller.Data[x.Line].ID) !== -1) {
                                this.Controller.Data[x.Line].MassSelect = false;
                                this.Controller.Refresh(x.Line);
                                Lure.Select('input', this.Controller.GetDataItemByLineID(x.Line).DOM).checked = false;
                            }

                        if (this.Controller.Data.filter(x => x.MassSelect).length === 0)
                            this.Proto.SetProperty('NoneMassActions', 'none');
                        this.Select('.action-list').classList.add('none');
                        this.RefreshData();
                    }, OnCancel: () => {}
                });

            if (type === 'moderate-sel')
                Lure.Confirm("МОДЕРИРОВАНИЕ МЕРОПРИЯТИЙ", 'Подтвердить правильность выбранных мероприятий?', {
                    OnAgree: async () => {
                        if (await api.DataInput_Event_Moderate(this.LibSelect.value, list.map(x => x.ID)) !== -1)
                            for (let x of list) {
                                this.Controller.Data[x.Line].MassSelect = false;
                                this.Controller.Refresh(x.Line);
                                Lure.Select('input', this.Controller.GetDataItemByLineID(x.Line).DOM).checked = false;
                            }
                        if (this.Controller.Data.filter(x => x.MassSelect).length === 0)
                            this.Proto.SetProperty('NoneMassActions', 'none');
                        this.Select('.action-list').classList.add('none');
                        this.RefreshData();
                    }, OnCancel: () => {}
                });
        };
        this.SelectDeselectAll = function (checked) {
            let c = this.Controller.DataItems;
            for (let e of c) {
                if (checked)
                    e.DOM.classList.add('mass-select');
                else e.DOM.classList.remove('mass-select');
                Lure.Select('input', e.DOM).checked = checked;
                e.Data.MassSelect = checked;
            }
            let list = c.filter(x => x.Data.MassSelect);
            if (list.length > 0 )
                this.Proto.SetProperty('NoneMassActions', '');
            else this.Proto.SetProperty('NoneMassActions', 'none');
        };
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.single-event-line td:not(.mass-check)', e => {
            if (this.EventsEditor.ShowEvent(this.EventList[parseInt(e.currentTarget.parentElement.dataset['line'])]) !== false)
                this.ToggleSelectedEventRow(e.currentTarget.parentElement);
        });
        this.Select('button.add-new-event').onclick = () => this.EventsEditor.CreateNewEvent();
        this.LibContrl.Refresh(Lure.User.Cache.LibraryList);
        this.LibSelect.onchange = () => this.RefreshData();

        this.AddEventListener('change', '.single-event-line .mass-check .mass-actions', e => {
            e.currentTarget.parentElement.parentElement.classList.toggle('mass-select');
            this.ChangeMassCheck(e.currentTarget.parentElement.parentElement.dataset['line'], e.currentTarget.checked);
        });
        let list = this.Select('.action-list');
        this.Select('button.mass-actions').onclick = e => {list.classList.toggle('none'); e.stopPropagation()};
        this.AddEventListener('click', '.action-list .action-type', e => this.DoMassAction(e.currentTarget.dataset['acttype'], e.currentTarget));
        this.Select('.ev-checks input.mass-actions').onchange = e => this.SelectDeselectAll(e.currentTarget.checked);
        this.AddEventListener('click', '*:not(.ev-checks)', e => !list.classList.contains('none') ? list.classList.add('none') : '');
        // this.Select('button.wizard-open').onclick = () => this.EventWizard.Show();
    }
});

require('./event-editor/event-editor.js');
// require('./event-wizard/event-wizard.js');

},{"../../_common/dictionary":102,"./event-editor/event-editor.js":28}],28:[function(require,module,exports){
const InputBox = require("../../../_common/input-box/input-box");
const D = require("../../../_common/dictionary");

/**
 *
 * @class AfficheEditor
 */
const AfficheEditor = new Lure.Content({
    Parent: DataInput.DataAfficheInput,
    Type: 'side-events-editor',
    Route: false,
    Content:
        `<div class="events-editor l-col">
            <div class="head">
                <h2 class="h2"><span>{{HeaderEditOrAdd}}</span> мероприятия</h2>
            </div>
            <div class="side-event-editor list">
                <div class="concr-list">
                    <div class="concr-list l-t-content">
                       <div class="line-item l-row l-flex-between {{Invalid.ID?'invalid':''}} {{Disabled.ID?'disabled':''}} l-invert ">
                          <div class="name">
                             <div>№</div>
                          </div>
                          <div class="value" data-type="ID">
                             <div class="value-value ">{{Event.ID}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.LibraryID?'invalid':''}} {{Disabled.LibraryID?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Наименование подразделения</div>
                             <div class="error-text">{{ErrorText.LibraryID || ''}}</div>
                          </div>
                          <div class="value" data-type="LibraryID">
                             <div class="value-value ">{{Event.LibraryID}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Name?'invalid':''}} {{Disabled.Name?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Наименование мероприятия</div>
                             <div class="error-text">{{ErrorText.Name || ''}}</div>
                          </div>
                          <div class="value" data-type="Name">
                             <div class="value-value editable editable-special">{{Event.Name}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Initiator?'invalid':''}} {{Disabled.Initiator?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Мероприятие проводится в рамках</div>
                             <div class="error-text">{{ErrorText.Initiator || ''}}</div>
                          </div>
                          <div class="value" data-type="Initiator">
                             <div class="value-value editable editable-special">{{Event.Initiator}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.EventTypeID?'invalid':''}} {{Disabled.EventTypeID?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Тип мероприятия</div>
                             <div class="error-text">{{ErrorText.EventTypeID || ''}}</div>
                          </div>
                          <div class="value" data-type="EventTypeID">
                             <div class="value-value editable editable-special">{{Event.EventTypeID}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.EventKindID?'invalid':''}} {{Disabled.EventKindID?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Вид мероприятия</div>
                             <div class="error-text">{{ErrorText.EventKindID || ''}}</div>
                          </div>
                          <div class="value" data-type="EventKindID">
                             <div class="value-value editable editable-special">{{Event.EventKindID}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.InvolvedStatus?'invalid':''}} {{Disabled.InvolvedStatus?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Статус участия (организатор / участник)</div>
                             <div class="error-text">{{ErrorText.InvolvedStatus || ''}}</div>
                          </div>
                          <div class="value" data-type="InvolvedStatus">
                             <div class="value-value editable editable-special">{{Event.InvolvedStatus}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Price?'invalid':''}} {{Disabled.Price?'disabled':''}} l-invert ">
                          <div class="name">
                             <div>Бесплатное / платное / стоимость посещения</div>
                             <div class="error-text">{{ErrorText.Price || ''}}</div>
                          </div>
                          <div class="value" data-type="Price">
                             <div class="value-value editable editable-special">{{Event.Price}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.EventPlaceTypeID?'invalid':''}} {{Disabled.EventPlaceTypeID?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Стационар / внестационар</div>
                             <div class="error-text">{{ErrorText.EventPlaceTypeID || ''}}</div>
                          </div>
                          <div class="value" data-type="EventPlaceTypeID">
                             <div class="value-value editable editable-special">{{Event.EventPlaceTypeID}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.EventTrend?'invalid':''}} {{Disabled.EventTrend?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Направление мероприятия</div>
                             <div class="error-text">{{ErrorText.EventTrend || ''}}</div>
                          </div>
                          <div class="value" data-type="EventTrend">
                             <div class="value-value editable editable-special">{{Event.EventTrend}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.EventCelebration?'invalid':''}} {{Disabled.EventCelebration?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Какой дате посвящено мероприятие</div>
                             <div class="error-text">{{ErrorText.EventCelebration || ''}}</div>
                          </div>
                          <div class="value" data-type="EventCelebration">
                             <div class="value-value editable editable-special">{{Event.EventCelebration}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Tags?'invalid':''}} {{Disabled.Tags?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Теги</div>
                             <div class="error-text">{{ErrorText.Tags || ''}}</div>
                          </div>
                          <div class="value" data-type="Tags">
                             <div class="value-value editable editable-special">{{Event.Tags}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Description?'invalid':''}} {{Disabled.Description?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Краткое описание (до 300 знаков)</div>
                             <div class="error-text">{{ErrorText.Description || ''}}</div>
                          </div>
                          <div class="value" data-type="Description">
                             <div class="value-value editable editable-special">{{Event.Description}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.PlanCount?'invalid':''}} {{Disabled.PlanCount?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Запланированное число посетителей</div>
                             <div class="error-text">{{ErrorText.PlanCount || ''}}</div>
                          </div>
                          <div class="value" data-type="PlanCount">
                             <div class="value-value editable editable-special">{{Event.PlanCount}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Curator?'invalid':''}} {{Disabled.Curator?'disabled':''}} l-invert">
                          <div class="name">
                             <div>ФИО ответственного, e-mail, телефон, должность</div>
                             <div class="error-text">{{ErrorText.Curator || ''}}</div>
                          </div>
                          <div class="value" data-type="Curator">
                             <div class="value-value editable editable-special">{{Event.Curator}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.TargetAudience?'invalid':''}} {{Disabled.TargetAudience?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Целевая аудитория</div>
                             <div class="error-text">{{ErrorText.TargetAudience || ''}}</div>
                          </div>
                          <div class="value" data-type="TargetAudience">
                             <div class="value-value editable editable-special">{{Event.TargetAudience}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.TargetAgeRange?'invalid':''}} {{Disabled.TargetAgeRange?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Возрастная категория</div>
                             <div class="error-text">{{ErrorText.TargetAgeRange || ''}}</div>
                          </div>
                          <div class="value" data-type="TargetAgeRange">
                             <div class="value-value editable editable-special">{{Event.TargetAgeRange}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.AgeLimit?'invalid':''}} {{Disabled.AgeLimit?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Возрастной ценз</div>
                             <div class="error-text">{{ErrorText.AgeLimit || ''}}</div>
                          </div>
                          <div class="value" data-type="AgeLimit">
                             <div class="value-value editable editable-special">{{Event.AgeLimit}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Guests?'invalid':''}} {{Disabled.Guests?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Районные СМИ, ТВ-каналы</div>
                             <div class="error-text">{{ErrorText.Guests || ''}}</div>
                          </div>
                          <div class="value" data-type="Guests">
                             <div class="value-value editable editable-special">{{Event.Guests}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Allow_Blind?'invalid':''}} {{Disabled.Allow_Blind?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Доступность для лиц с ОВЗ по зрению</div>
                             <div class="error-text">{{ErrorText.Allow_Blind || ''}}</div>
                          </div>
                          <div class="value" data-type="Allow_Blind">
                             <div class="value-value editable editable-special">{{Event.Allow_Blind}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Allow_Deaf?'invalid':''}} {{Disabled.Allow_Deaf?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Доступность для лиц с ОВЗ по слуху</div>
                             <div class="error-text">{{ErrorText.Allow_Deaf || ''}}</div>
                          </div>
                          <div class="value" data-type="Allow_Deaf">
                             <div class="value-value editable editable-special">{{Event.Allow_Deaf}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Allow_Disabled?'invalid':''}} {{Disabled.Allow_Disabled?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Доступность для лиц с ОВЗ опорно-двигательного аппарата</div>
                             <div class="error-text">{{ErrorText.Allow_Disabled || ''}}</div>
                          </div>
                          <div class="value" data-type="Allow_Disabled">
                             <div class="value-value editable editable-special">{{Event.Allow_Disabled}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.DateStart?'invalid':''}} {{Disabled.DateStart?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Дата начала</div>
                             <div class="error-text">{{ErrorText.DateStart || ''}}</div>
                          </div>
                          <div class="value" data-type="DateStart">
                             <div class="value-value editable ">{{Event.DateStart}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.DateFinish?'invalid':''}} {{Disabled.DateFinish?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Дата окончания</div>
                             <div class="error-text">{{ErrorText.DateFinish || ''}}</div>
                          </div>
                          <div class="value" data-type="DateFinish">
                             <div class="value-value editable ">{{Event.DateFinish}}</div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.Tiser?'invalid':''}} {{Disabled.Tiser?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Тизер</div>
                             <div class="error-text">{{ErrorText.Tiser || ''}}</div>
                          </div>
                          <div class="value" data-type="Tiser">
                             <div class="value-value editable editable-special" style="justify-content:center"><button class="l-button">ИЗМЕНИТЬ</button> </div>
                          </div>
                       </div>
                       <!--<div class="line-item l-row l-flex-between {{Invalid.IsModerated?'invalid':''}} {{Disabled.IsModerated?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Подтверждено модератором</div>
                             <div class="error-text">{{ErrorText.IsModerated || ''}}</div>
                          </div>
                          <div class="value" data-type="IsModerated">
                             <div class="value-value editable editable-special">{{Event.IsModerated}}</div>
                          </div>
                       </div>-->
                       <div class="line-item l-row l-flex-between {{Invalid.AfficheImage?'invalid':''}} {{Disabled.AfficheImage?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Афиша</div>
                             <div class="error-text"></div>
                          </div>
                          <div class="value" data-type="AfficheImage">
                             <div class="value-value editable editable-special">{{Event.AfficheImage}}</div>
                          </div>
                          <div class="center-img"><img class="affiche-img none" src=""></div>
                          <div><input type="file" class="affiche-image-file none" accept="image/*"></div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.IsModerated?'invalid':''}} {{Disabled.IsModerated?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Подтверждено модератором</div>
                             <div class="error-text">{{ErrorText.IsModerated || ''}}</div>
                          </div>
                          <div class="value" data-type="IsModerated">
                             <div class="value-value">{{Event.IsModerated}}</div>
                             <div style="text-align:center" class="{{NoneIfNoModer}}"><button class="l-button confirm-moder">ПОДТВЕРДИТЬ</button></div>
                          </div>
                       </div>
                       <div class="line-item l-row l-flex-between {{Invalid.MultipleDates?'invalid':''}} {{Disabled.MultipleDates?'disabled':''}} l-invert">
                          <div class="name">
                             <div>Повторения</div>
                             <div class="error-text">{{ErrorText.MultipleDates || ''}}</div>
                          </div>
                          <div class="value" data-type="MultipleDates">
                             <div class="value-value editable-none">{{Event.MultipleDates}}</div>
                          </div>
                       </div>
                    </div>
                </div>
                <div class="add-comps">
                    <button class="l-button delete-event {{NoneOnAdd}}">УДАЛИТЬ МЕРОПРИЯТИЕ</button>
                    <button class="l-button repeat-settings-button {{NotNoneOnAdd}}">ЗАДАТЬ ПЕРИОДИЧНОСТЬ</button>
                </div>
                <div class="repeat-settings">
                   <div class="one-day" data-day="1">
                      <div class="flex1"><label><input type="checkbox" class="check-day" data-day="1"> ПН</label></div>
                      <div><input disabled="" class="time-start" type="time" value="10:00">:<input disabled="" type="time" class="time-finish" value="18:00"></div>
                      <div>
                         <select class="each-week" disabled="">
                            <option value="0">Каждую неделю</option>
                            <option value="1">Раз в 2 недели</option>
                            <option value="2">Раз в 3 недели</option>
                            <option value="3">Раз в 4 недели</option>
                         </select>
                      </div>
                   </div>
                   <div class="one-day" data-day="2">
                      <div class="flex1"><label><input type="checkbox" class="check-day" data-day="2"> ВТ</label></div>
                      <div><input disabled="" class="time-start" type="time" value="10:00">:<input disabled="" type="time" class="time-finish" value="18:00"></div>
                      <div>
                         <select class="each-week" disabled="">
                            <option value="0">Каждую неделю</option>
                            <option value="1">Раз в 2 недели</option>
                            <option value="2">Раз в 3 недели</option>
                            <option value="3">Раз в 4 недели</option>
                         </select>
                      </div>
                   </div>
                   <div class="one-day" data-day="3">
                      <div class="flex1"><label><input type="checkbox" class="check-day" data-day="3"> СР</label></div>
                      <div><input disabled="" class="time-start" type="time" value="10:00">:<input disabled="" type="time" class="time-finish" value="18:00"></div>
                      <div>
                         <select class="each-week" disabled="">
                            <option value="0">Каждую неделю</option>
                            <option value="1">Раз в 2 недели</option>
                            <option value="2">Раз в 3 недели</option>
                            <option value="3">Раз в 4 недели</option>
                         </select>
                      </div>
                   </div>
                   <div class="one-day" data-day="4">
                      <div class="flex1"><label><input type="checkbox" class="check-day" data-day="4"> ЧТ</label></div>
                      <div><input disabled="" class="time-start" type="time" value="10:00">:<input disabled="" type="time" class="time-finish" value="18:00"></div>
                      <div>
                         <select class="each-week" disabled="">
                            <option value="0">Каждую неделю</option>
                            <option value="1">Раз в 2 недели</option>
                            <option value="2">Раз в 3 недели</option>
                            <option value="3">Раз в 4 недели</option>
                         </select>
                      </div>
                   </div>
                   <div class="one-day" data-day="5">
                      <div class="flex1"><label><input type="checkbox" class="check-day" data-day="5"> ПТ</label></div>
                      <div><input disabled="" class="time-start" type="time" value="10:00">:<input disabled="" type="time" class="time-finish" value="18:00"></div>
                      <div>
                         <select class="each-week" disabled="">
                            <option value="0">Каждую неделю</option>
                            <option value="1">Раз в 2 недели</option>
                            <option value="2">Раз в 3 недели</option>
                            <option value="3">Раз в 4 недели</option>
                         </select>
                      </div>
                   </div>
                   <div class="one-day" data-day="6">
                      <div class="flex1"><label><input type="checkbox" class="check-day" data-day="6"> СБ</label></div>
                      <div><input disabled="" class="time-start" type="time" value="10:00">:<input disabled="" type="time" class="time-finish" value="18:00"></div>
                      <div>
                         <select class="each-week" disabled="">
                            <option value="0">Каждую неделю</option>
                            <option value="1">Раз в 2 недели</option>
                            <option value="2">Раз в 3 недели</option>
                            <option value="3">Раз в 4 недели</option>
                         </select>
                      </div>
                   </div>
                   <div class="one-day" data-day="7">
                      <div class="flex1"><label><input type="checkbox" class="check-day" data-day="7"> ВС</label></div>
                      <div><input disabled="" class="time-start" type="time" value="10:00">:<input disabled="" type="time" class="time-finish" value="18:00"></div>
                      <div>
                         <select class="each-week" disabled="">
                            <option value="0">Каждую неделю</option>
                            <option value="1">Раз в 2 недели</option>
                            <option value="2">Раз в 3 недели</option>
                            <option value="3">Раз в 4 недели</option>
                         </select>
                      </div>
                   </div>
                   <div class="date-range-block">
                      <div data-lsmarti="3087">Интервал события</div>
                      <div class="repeat-date-range"></div>
                   </div>
                   <div class="button-center"><button class="l-button calculate-range">РАССЧИТАТЬ</button></div>
                </div>
            </div>
            <div class="foot l-row l-flex-center">
                <button class="l-button button button2 btn-cancel">ОТМЕНА</button>
                <button class="l-button button btn-confirm">СОХРАНИТЬ</button>
            </div>
        </div>`,
    Animation: {
        Show: 'animation-show',
        Hide: 'animation-hide'
    },
    Load: '',
    Proto: {
        HeaderEditOrAdd: 'edit',
        DaysOfWeek: [
            {Num: 1, Name: 'ПН', Disable: false},
            {Num: 2, Name: 'ВТ', Disable: false},
            {Num: 3, Name: 'СР', Disable: false},
            {Num: 4, Name: 'ЧТ', Disable: false},
            {Num: 5, Name: 'ПТ', Disable: false},
            {Num: 6, Name: 'СБ', Disable: false},
            {Num: 7, Name: 'ВС', Disable: false}
        ],
        Event: {
            AgeLimit: 0,
            Allow_Blind: false,
            Allow_Deaf: false,
            Allow_Disabled: false,
            Curator: Lure.User.ID,
            DateFinish: Lure.Date().DateCs,
            DateStart: Lure.Date().DateCs,
            Description: "",
            EventCelebration: 0,
            EventKindID: 1,
            EventTrend: 12,
            EventTypeID: 1,
            Guests: "Нет",
            ID: 0,
            Initiator: 'ГЗ',
            InvolvedStatus: 'организатор',
            LibraryID: 0,
            Name: "",
            PlanCount: 0,
            Price: 0,
            Tags: "",
            TargetAgeRange: "0+",
            TargetAudience: "0-100",
            EventPlaceTypeID: 1,
            MultipleDates: [],
            Tiser: '',
            IsModerated: false,
            AfficheImage: ''
        },
        Disabled: {/* AgeLimit: false, .... */},
        Invalid: {},
        ErrorText: {}
    },
    PropFormat: {
        Invalid: (x, p) => !p.Invalid ? '' : 'invalid',
        Disabled: x => x ? 'disabled' : '',
        'Event.EventTypeID': x => D.LibraryEventTypeDict[x] || '', // 1: "Бесплатное мероприятие", 2: "Платное мер...
        'Event.EventKindID': x => D.EventTypeDict[x] || '', // 0: "акция", 1: "бал", 2: "беседа", ...
        'Event.EventCelebration': x => D.CelebrationDict[x] || '', // 0: "Нет", 1: "Библионочь (общегородское мероприятие)", 2: "Бит
        'Event.LibraryID': x => (Lure.User.Cache.LibraryList.filter(lib => lib.ID === x)[0] || {Name: ''}).Name,
        'Event.DateStart': x => Lure.Date(x).Format(Lure.Culture.DateFormat),
        'Event.DateFinish': x => Lure.Date(x).Format(Lure.Culture.DateFormat),
        'Event.EventPlaceTypeID': x => D.EventPlaceTypeDict[x],
        'Event.AgeLimit': x => x + '+',
        'Event.Price': x => x === 0 ? 'бесплатно' : (x + ' ' + (x % 10 === 1 && x % 100 !== 11 ? 'рубль' : (x % 10 >= 2 && x % 10 <= 4 && (x % 100 < 11 || x % 100 > 19)) ? 'рубля' : ' рублей')),
        'Event.Allow_Blind': x => x ? 'доступно' : 'недоступно',
        'Event.Allow_Deaf': x => x ? 'доступно' : 'недоступно',
        'Event.Allow_Disabled': x => x ? 'доступно' : 'недоступно',
        'Event.Curator': x => {
            let d = Lure.User.Cache.UserDict[x];
            return d ? [d.Name, d.Email, d.Phone, d.Position].join(', ') : 'Не назначен'
        },
        'Event.MultipleDates': x => x.map(d => '<div>' + Lure.Date(d[0]).Format('DD MMMM YYYY HH:mm', true) + ' - ' + Lure.Date(d[1]).Format('HH:mm') + '</div>').join('') || 'Нет повторений',
        'Event.EventTrend': x => D.EventTrendsDict[parseInt(x)] || x,
        'Event.AfficheImage': x => 'Изменить',
        'Event.IsModerated': x => x ? 'Да' : 'Нет',
        HeaderEditOrAdd: x => x === 'edit' ? 'Редактирование данных' : 'Добавление',
        NoneOnAdd: (x, p) => p.HeaderEditOrAdd === 'edit' ? '' : 'none',
        NotNoneOnAdd: (x, p) => p.HeaderEditOrAdd === 'edit' ? 'none' : '',
        ErrorText: x => x || '',
        /**
         * @this AfficheEditor
         * @returns {string}
         */
        NoneIfNoModer: function () {return this.EditingNewEv ?  'none' : ( Lure.User.Roles.indexOf(D.Role.Moderator) !== -1 ? '' : 'none')}
    },
    PropTypes: {
        'Event.DateStart': Lure.PropTypes.Date,
        'Event.DateFinish': Lure.PropTypes.Date,
    },
    Props: function () {
        this.ButtonConfirm = this.Select('.btn-confirm');
        this.Editing = false;
        this.EditingNewEv = false;
        this.PeriodPickers = [];
        this.AfficheFileInput = this.Select('.affiche-image-file');
        this.AffImage = this.Select('.affiche-img');
        this.LoadAffImage = new Lure.Load({Target: this.AffImage.parentElement.parentElement});

        let EConvert = x => Object.entries(x).map(([k, v]) => ({Key: k, Value: v}));

        this.EventTypes = EConvert(D.LibraryEventTypeDict);
        this.EventKinds = EConvert(D.EventTypeDict).filter(x => x.Key > 0);
        this.EventCelebrations = EConvert(D.CelebrationDict);
        this.EventTrends = EConvert(D.EventTrendsDict);
        this.UserList = Lure.User.Cache.UserList.map(x => ({Key: x.ID, Value: [x.Name, x.Email, x.Phone, x.Position].join(', ')}));
    },
    Hide: function () {
        this.Editing = false;
    },
    Show: function () {
        this.Select('.repeat-settings').classList.add('none');
        if (this.DaysElems)
            for (let d of this.DaysElems)
                if (d.check.checked) d.check.click();
    },
    Methods: function () {
        this.CancelEdit = function () {
            InputBox.Hide();

            this.Parent.ToggleSelectedEventRow(null, false);
            for (let pp of this.PeriodPickers)
                pp.Hide();
            this.PeriodPickers = [];
            this.Hide();
        };
        this.Cancel = function () {
            this.EditingNewEv = false;
            this.CancelEdit();
        };
        this.Confirm = function () {
            if (this.CheckWrong()) { // true - что-то неверно
                Lure.System.ShowError('Проверьте правильность заполнения полей');
                return;
            }

            this.SaveEventInfo(this.Proto.Data.Event).then(() => {
                this.EditingNewEv = false;
                this.CancelEdit();
            });
        };
        this.CheckWrong = function (single) {
            let invalid = false;
            let toCheck;
            if (single)
                toCheck = [single];
            else
                toCheck = ['DateStart', 'DateFinish', 'Description', 'Name', 'InvolvedStatus', 'EventTypeID', 'EventKindID', 'Price', 'TargetAudience', 'TargetAgeRange', 'PlanCount', 'EventTrend', 'Guests'];
            let ev = this.Proto.Data.Event, er = this.Proto.Data.ErrorText, inv = this.Proto.Data.Invalid;
            for (let key of toCheck)
                switch (key) {
                    case 'Price':
                        // debugger
                        if (ev[key] > 0 && (ev['Initiator'] === 'ГЗ')) {
                            inv[key] = true; invalid = true; er[key] = '*Мероприятие в рамках ГЗ не может быть платным';
                        } else if (ev[key] > 0 && (['1', '3', '5'].indexOf(ev['EventTypeID'] + '') > -1)) {
                            inv[key] = true; invalid = true; er[key] = '*Бесплатное мероприятие не может иметь цену';
                        } else if(ev[key] === 0 && ['2', '4'].indexOf(ev['EventTypeID']) > -1) {
                            inv[key] = true; invalid = true; er[key] = '*Укажите цену для платного мероприятия';
                        } else {inv[key] = false; er[key] = '';}
                        break;
                    case 'EventTypeID':
                        if ((['2', '4'].indexOf(ev[key] + '') > -1) && ev['Initiator'] === 'ГЗ') {
                            inv[key] = true; invalid = true; er[key] = '*Мероприятие в рамках ГЗ не может быть платным';
                        } else {inv[key] = false; er[key] = '';}
                        break;
                    case 'EventKindID':
                        if (ev[key] + '' === '14' && (['3', '4'].indexOf(ev['EventTypeID'] + '') > -1)) {
                            inv[key] = true; invalid = true; er[key] = '*Указан клуб, укажите в типе клуб';
                        } else {inv[key] = false; er[key] = '';}
                        break;
                    default:
                        if (ev[key] === null || ev[key] === 0 || ev[key] === '') {
                            inv[key] = true; invalid = true; er[key] = '*Поле не может быть пустым, введите значение';
                        } else {inv[key] = false; er[key] = '';}
                }
            this.Proto.Refresh();
            return invalid;
        };
        this.SaveEventInfo = function (data) {
            // console.log(data);
            this.Load.Show();
            data.DateStart = Lure.Date(data.DateStart).DateCs;
            data.DateFinish = Lure.Date(data.DateFinish).DateCs;
            if (this.EditingNewEv === true)
                return api.DataInput_Event_Add(data.LibraryID, data, {
                    Then: (res)=>{
                        if (res < 0)
                            return Lure.System.Error('Не удалось зарегистрировать событие');
                        this.Parent.RefreshData();
                        if (this.AfficheFileInput.files[0])
                            return api.DataInput_Event_AddFile(this.AfficheFileInput.files[0], {LibraryEventID: res});
                    },
                    Finally: () => this.Load.Hide()
                });
            else
                return api.DataInput_Event_Edit(data.LibraryID, data.ID, data, {
                    Then: () => {
                        this.Parent.RefreshData();
                        if (this.AfficheFileInput.files[0])
                            return api.DataInput_Event_AddFile(this.AfficheFileInput.files[0], {LibraryEventID: data.ID});
                    },
                    Finally: () => this.Load.Hide()
                });
        };

        this.CreateNewEvent = function () {
            this.EditingNewEv = true;
            this.ShowEvent();
        };
        this.ShowEvent = function (event) {
            if (this.Editing) {
                Lure.System.Notice('Вы уже редактируете мероприятие.<br>Закройте его или сохраните, чтобы редактировать другое');
                return false;
            } else
                this.Editing = true;
            if (!this.EditingNewEv)
                this.Proto.SetProperty('HeaderEditOrAdd', 'edit');
            else
                this.Proto.SetProperty('HeaderEditOrAdd', 'add');
            let startDisabled = {};
            if (!event) {
                event = {
                    AgeLimit: 0,
                    Allow_Blind: false,
                    Allow_Deaf: false,
                    Allow_Disabled: false,
                    Curator: Lure.User.ID,
                    DateFinish: Lure.Date().DateCs,
                    DateStart: Lure.Date().DateCs,
                    Description: "",
                    EventCelebration: 0,
                    EventKindID: 1,
                    EventTrend: 12,
                    EventTypeID: 1,
                    Guests: "Нет",
                    ID: 0,
                    Initiator: 'ГЗ',
                    InvolvedStatus: 'организатор',
                    LibraryID: parseInt(this.Parent.LibSelect.value),
                    Name: "",
                    PlanCount: 0,
                    Price: 0,
                    Tags: "",
                    TargetAgeRange: "0+",
                    TargetAudience: "0-100",
                    EventPlaceTypeID: 1,
                    MultipleDates: [],
                    Tiser: '',
                    AfficheImage: '',
                    IsModerated: false
                };
                startDisabled = {Price: true};
            }
/*            let fieldLocale = {
                AgeLimit: 'Возрастной ценз',
                Allow_Blind: 'Доступность для лиц с ОВЗ по зрению',
                Allow_Deaf: 'Доступность для лиц с ОВЗ по слуху',
                Allow_Disabled: 'Доступность для лиц с ОВЗ опорно-двигательного аппарата',
                Curator: 'ФИО ответственного, e-mail, телефон, должность',
                DateStart: 'Дата начала',
                DateFinish: 'Дата окончания',
                Description: 'Краткое описание (до 300 знаков)',
                EventCelebration: 'Какой дате посвящено мероприятие', // CelebrationDict
                EventKindID: 'Вид мероприятия',
                EventTrend: 'Направление мероприятия',
                EventTypeID: 'Тип мероприятия',
                Guests: "Районные СМИ, ТВ-каналы",
                ID: '№',
                InvolvedStatus: 'Статус участия (организатор / участник)',
                LibraryID: 'Наименование подразделения',
                Name: 'Наименование мероприятия',
                PlanCount: 'Запланированное число посетителей',
                Price: 'Бесплатное / платное / стоимость посещения',
                TargetAgeMax: 'Возрастная категория (макс)',
                TargetAgeMin: 'Возрастная категория (мин)',
                TargetAgeRange: 'Возрастная категория',
                TargetAudience: 'Целевая аудитория',
                Tags: 'Теги',
                Initiator: 'Мероприятие проводится в рамках',
                EventPlaceTypeID: 'Стационар / внестационар',
                MultipleDates: 'Повторения',
                Tiser: 'Тизер',
                IsModerated: 'Подтверждено модератором',
                AfficheImage: 'Афиша'
            };*/
            this.Proto.Data.Event = event;
            this.Proto.Data.Disabled = startDisabled;
            this.Proto.Data.ErrorText = {};
            this.Proto.Data.Invalid = {};
            this.AfficheFileInput.value = '';
            this.Proto.Refresh();
            this.AffImage.classList.add('none');
            if (!this.EditingNewEv) {
                this.LoadAffImage.Show();
                api.DataInput_Event_GetFile(event.LibraryID, event.ID, {
                    Then: r => {
                        if (r.size === 0) return;
                        let reader = new FileReader();
                        reader.onloadend = () => {this.AffImage.src = reader.result; this.AffImage.classList.remove('none');};
                        reader.readAsDataURL(r);
                    },
                    Finally: () => this.LoadAffImage.Hide()
                });
            } else this.AffImage.classList.add('none');
            this.Show();
            return event;
        };
        this.HandleEdit = function (elem, type, line) {
            if (this.Proto.Data.Disabled[type]) return;
            let runInpDialog = true;
            let runNumPad = false;
            let data, caption, customFun = () => {};
            switch (type) {
                /* case 'LibraryID':
                    caption = 'Наименование подразделения';
                    data = Lure.UserCache.LibraryList.map(x => ({Key: x.ID, Value: x.Name}));
                    break;*/
                case 'AfficheImage':
                    this.AfficheFileInput.click();
                    this.AfficheFileInput.onchange = e => {
                        let file = this.AfficheFileInput.files[0];
                        this.Proto.SetProperty('Event.AfficheImage', file.name);
                        let reader = new FileReader();
                        reader.onloadend = () => {this.AffImage.src = reader.result; this.AffImage.classList.remove('none');};
                        reader.readAsDataURL(file);
                    };
                    return;
                case 'Tiser':
                    caption = 'Тизер';
                    break;
                case 'Guests':
                    caption = 'Районные СМИ, ТВ-каналы';
                    break;
                case 'Name':
                    caption = 'Название мероприятия';
                    break;
                case 'InvolvedStatus':
                    caption = 'Статус участия';
                    data = [{Key: 'участник', Value: 'участник'}, {Key: 'организатор', Value: 'организатор'}];
                    break;
                case 'EventKindID':
                    data = this.EventKinds;
                    caption = 'Вид мероприятия';
                    break;
                case 'EventTypeID':
                    data = this.EventTypes;
                    caption = 'Тип мероприятия';
                    customFun = (line) => {
                        let p = this.Proto.Data;
                        p.Event['EventTypeID'] = parseInt(p.Event['EventTypeID']);
                        if (p.Event['EventTypeID'] === 5) {
                            p.Event['EventKindID'] = 8;
                            p.Disabled['EventKindID'] = true;
                        } else if (p.Event['EventTypeID'] === 3 || p.Event['EventTypeID'] === 4) {
                            p.Event['EventKindID'] = 14;
                            p.Disabled['EventKindID'] = true;
                        } else p.Disabled['EventKindID'] = false;

                        if (p.Event['EventTypeID'] === 1 || p.Event['EventTypeID'] === 3) {
                            p.Event['Price'] = 0;
                            p.Disabled['Price'] = true;
                        } else p.Disabled['Price'] = false;
                        // this.Proto.Refresh();
                    };
                    break;
                case 'EventPlaceTypeID':
                    data = [{Key: D.EventPlaceType.Stationary, Value: 'Стационар'}, {Key: D.EventPlaceType.NonStationary, Value: 'Внестационар'}];
                    caption = 'Стационар / внестационар';
                    break;
                case 'EventTrend':
                    caption = 'Направление мероприятия';
                    data = this.EventTrends;
                    break;
                case 'EventCelebration':
                    data = this.EventCelebrations;
                    caption = 'Какой дате посвящено мероприятие';
                    break;
                case 'Tags':
                    caption = 'Теги';
                    break;
                case 'Description':
                    caption = 'Краткое описание';
                    break;
                /*case 'DateStart':
                case 'DateFinish':
                    let self = this;
                    let pp;
                    if (!elem.pp) {
                        pp = new Lure.PeriodPicker({
                            Target: elem,
                            NoRange: true,
                            DateTarget: Lure.Date(self.Proto.Data.Event[type]),
                            AutoConfirm: true,
                            OnConfirm: function () {
                                self.Proto.SetProperty('Event.'+ type, Lure.Date(this.Date).DateCs);
                                elem.pp = '';
                            }
                        });
                        elem.pp = pp;
                        this.PeriodPickers.push(pp);
                    } else
                        pp = elem.pp;
                    pp.Show();
                    runInpDialog = false;
                    break;*/
                case 'PlanCount':
                    caption = 'Запланированное число посетителей';
                    runNumPad = true;
                    runInpDialog = false;
                    break;
                case 'Curator':
                    caption = 'ФИО ответственного';
                    data = this.UserList;
                    break;
                case 'TargetAudience':
                    caption = 'Целевая аудитория';
                    // break;
                    let split = this.Proto.Data.Event['TargetAudience'].split('-');
                    if (!split[1])
                        split = [];
                    InputBox.Run(elem, '',
                        x => {
                            this.Proto.Data.Event['TargetAudience'] = x.join('-');
                            this.Proto.Data.Invalid['TargetAudience'] = false;
                            this.Proto.Refresh();
                        }, {
                            Caption: caption,
                            Type: 'range',
                            MinValue: 0,
                            MaxValue: 100,
                            Value: split
                        });
                    return;
                case 'AgeLimit':
                    caption = 'Возр. ценз';
                    data = (new Array(10)).Select((x, i) => ({Key: i * 2, Value: i * 2 + '+'}));
                    break;
                case 'TargetAgeRange':
                    caption = 'Возр. категория';
                    break;
                case 'Allow_Blind':
                    data = [{Key: true, Value: 'доступно'}, {Key: false, Value: 'недоступно'}];
                    caption = 'ОВЗ по зрению';
                    break;
                case 'Allow_Deaf':
                    data = [{Key: true, Value: 'доступно'}, {Key: false, Value: 'недоступно'}];
                    caption = 'ОВЗ по слуху';
                    break;
                case 'Allow_Disabled':
                    data = [{Key: true, Value: 'доступно'}, {Key: false, Value: 'недоступно'}];
                    caption = 'ОВЗ по опорно-двигательному аппарату';
                    break;
                case 'Price':
                    caption = 'Стоимость посещения';
                    runNumPad = true;
                    runInpDialog = false;
                    break;
                case 'Initiator':
                    data = [{Key: 'ГЗ', Value: 'ГЗ'}, {Key: 'В', Value: 'В'}, {Key: 'И', Value: 'И'}];
                    caption = 'Проводится в рамках';
                    break;
                default:
                    return;
            }
            let needHuge = ['Name', 'Curator', 'Description', 'Tiser'];
            if (runInpDialog) {
                let CustomWidth = needHuge.indexOf(type) > -1 ? 300 : 0;
                if (type === 'Tiser')
                    CustomWidth = 600;

                InputBox.Run(elem, this.Proto.Data.Event[type],
                    x => {
                        let d = this.Proto.Data.Event;
                        if (x === 'true') d[type] = true;
                        else if (x === 'false') d[type] = false;
                        else if (parseInt(x) + '' === x + '') d[type] = parseInt(x);
                        else d[type] = x;
                        // d.Edited = true;
                        this.Proto.Data.Invalid[type] = false;
                        this.Proto.Data.ErrorText[type] = '';
                        customFun(line);
                        this.Proto.Refresh();
                        this.CheckWrong(/*type*/);
                    }, {
                        Caption: caption,
                        KeyValue: 'Key',
                        KeyView: 'Value',
                        Data: data,
                        TextArea: needHuge.indexOf(type) > -1,
                        Type: type === 'Tiser' ? 'editor' : (needHuge.indexOf(type) > -1 ? 'text' : 'auto'),
                        CustomWidth: CustomWidth,
                        CustomHeight: needHuge.indexOf(type) > -1 ? 120 : 0
                    });
            }
            if (runNumPad)
                InputBox.Run(elem, this.Proto.Data.Event[type],
                    x => {
                        let d = this.Proto.Data.Event;
                        d[type] = parseInt(x);
                        this.Proto.Data.Invalid[type] = false;
                        this.Proto.Data.ErrorText[type] = '';
                        this.Proto.Refresh();
                        this.CheckWrong(/*type*/);
                    }, {Caption: caption});
        };
        this.CalculateDateRange = function () {
            let dateStart = ((new Date) > this.RepeatDateRange.Date[0] ? new Date : this.RepeatDateRange.Date[0]),
                dateEnd = this.RepeatDateRange.Date[1],
                arr = this.DaysElems,
                res = [],
                skip = [0, 0, 0, 0, 0, 0, 0];

            for (let d = new Date(dateStart); d <= dateEnd; d.setDate(d.getDate() + 1)) {
                let w = d.getDay() === 0 ? 6 : d.getDay() - 1;
                if (arr[w].check.checked) {
                    if (!arr[w].timeStart.value || !arr[w].timeFinish.value) {Lure.System.Error('Время не задано, проверьте правильность'); return}
                    if (skip[w] === 0) {
                        res.push([
                            Lure.Date(new Date(d.getFullYear(), d.getMonth(), d.getDate(), arr[w].timeStart.value.split(':')[0], arr[w].timeStart.value.split(':')[1])).DateCs,
                            Lure.Date(new Date(d.getFullYear(), d.getMonth(), d.getDate(), arr[w].timeFinish.value.split(':')[0], arr[w].timeFinish.value.split(':')[1])).DateCs
                        ]);
                        skip[w] = parseInt(arr[w].eachWeek.value);
                    }
                    else
                        skip[w]--;
                }
            }
            this.Select('.repeat-settings').classList.add('none');
            this.Proto.SetProperty('Event.MultipleDates', res);
        };
    },
    AfterBuild: function () {
        this.ButtonConfirm.onclick = () => this.Confirm();
        this.Select('.btn-cancel').onclick = () => this.Cancel();
        this.AddEventListener('click', '.line-item .value', e => this.HandleEdit(e.currentTarget, e.currentTarget.dataset['type'], e.currentTarget.parentElement.dataset['line']));

        let b = this.Select('.repeat-settings-button');
        b.onclick = () => {
            if (!this.RepeatDateRange)
                this.RepeatDateRange = new Lure.PeriodPicker({
                    Target: this.Select('.repeat-settings .repeat-date-range'),
                    Min: Lure.Date().DayStart,
                    OnConfirm: function () {
                    }
                });
            if (!this.DaysElems) {
                this.DaysElems = [];
                for (let i = 1; i <= 7; i++) {
                    let p = this.Select('.one-day[data-day="' + i + '"]');
                    this.DaysElems.push({
                        Day: i,
                        check: Lure.Select('.check-day', p),
                        timeStart: Lure.Select('.time-start', p),
                        timeFinish: Lure.Select('.time-finish', p),
                        eachWeek: Lure.Select('.each-week', p),
                    });
                }
            }
            this.Select('.repeat-settings').classList.remove('none');
            b.classList.add('none');
        };

        this.AddEventListener('click', '.add-comps .delete-event', () => {
            Lure.Confirm("УДАЛЕНИЕ МЕРОПРИЯТИЙ", 'Удалить это мероприятие?', {
                OnAgree: () => {
                    api.DataInput_Event_Remove(this.Proto.Data.Event['LibraryID'], this.Proto.Data.Event['ID'], {
                        Then: r => {
                            this.Cancel();
                            this.Parent.RefreshData();
                        }
                    });
                }, OnCancel: () => {}
            });
        });

        this.AddEventListener('click', '.calculate-range', e => this.CalculateDateRange());
        this.AddEventListener('click', '.confirm-moder', e => {
            Lure.Confirm("МОДЕРИРОВАНИЕ МЕРОПРИЯТИЙ", 'Подтвердить правильность выбранных мероприятий?', {
                OnAgree: async () => {
                    await api.DataInput_Event_Moderate(this.Proto.Data.Event.LibraryID, [this.Proto.Data.Event.ID]);
                    let PLine = this.Parent.Controller.GetDataItemByDelegate(x => x.ID === this.Proto.Data.Event.ID);
                    PLine.Data.IsModerated = true;
                    this.Parent.Controller.Refresh(PLine.LineID);
                    this.Proto.SetProperty('Event.IsModerated', true);

                }, OnCancel: () => {}
            });
        });

        this.AddEventListener('change', '.check-day', e => {
            let n = e.currentTarget.dataset['day'] - 1;
            this.DaysElems[n].timeStart.disabled = !e.currentTarget.checked;
            this.DaysElems[n].timeFinish.disabled = !e.currentTarget.checked;
            this.DaysElems[n].eachWeek.disabled = !e.currentTarget.checked;
        });
    }
});
DataInput.DataAfficheInput.EventsEditor = AfficheEditor;
},{"../../../_common/dictionary":102,"../../../_common/input-box/input-box":110}],29:[function(require,module,exports){
//let DataPlanInputContent = require('./data-plan-input/data-plan-input.js');

let DataInput = new Lure.Content({
    Name: 'DataInput',
    Target: '.body',
    Type: 'content',
    Control: {
        Target: '#nav-data-input'
    },
    Permission: {
        Roles: [Dictionary.Role.SetupEvent, Dictionary.Role.SetupPlan]
    },
    Content: `<div class="data-input l-col">
                  <div class="data-plan-input"></div>
                  <div class="data-affiche-input"></div>
               </div>`,
    /*SubContent: function(){

    },
    Props: function(){
        //this.DataPlanInput = require('./data-plan-input/data-plan-input.js');
    },*/
    Show: function (){
        this.ShowSubContent();
        //this.DataPlanInput.RefreshOnShow();
        // this.DataAfficheInput.Show();
    }/*,
    AfterBuild: function () {

    }*/
});
window.DataInput = DataInput;

require('./data-plan-input/data-plan-input.js');
require('./data-affiche-input/data-affiche-input.js');

module.exports = DataInput;

},{"./data-affiche-input/data-affiche-input.js":27,"./data-plan-input/data-plan-input.js":32}],30:[function(require,module,exports){
const InputBox = require("../../../_common/input-box/input-box");

DataInput.DataPlanInput.Calendar = new Lure.Content({
    Parent: DataInput.DataPlanInput,
    Name: 'Calendar',
    Target: '.data-plan-container',
    Visible: true,
    Permission: {
        Rules: {
            Edit: {
                Roles:  [D.Role.SetupPlanEdit]
            }
        }
    },
    Content:
`<div class="plan-calendar widget-container">
    <div class="container-header strong">
        <div class="header-month-year"> Редактирование месяца: <span class="less"></span><span> {{CurrentMonth}} </span><span class="more"></span> <span>{{CurrentYear}}</span> </div>
        <div class="header-counts">{{filledCount}} / {{fullCount}}</div>
    </div>
    <div class="container-body">
        <div class="week-days-names">
            <div class="day-name">понедельник</div>
            <div class="day-name">вторник</div>
            <div class="day-name">среда</div>
            <div class="day-name">четверг</div>
            <div class="day-name">пятница</div>
            <div class="day-name">суббота</div>
            <div class="day-name">воскресенье</div>
        </div>
    </div>
    <div class="bottom-buttons" data-permission="Edit">
        <button class="l-button cancel-button">ОТМЕНА</button>
        <button class="l-button distribute-evenly-button">РАСПРЕДЕЛИТЬ РАВНОМЕРНО</button>
        <button class="l-button save-button">СОХРАНИТЬ</button>
    </div> 
</div>`,
    Controller: {
        Target: '.container-body',
        Data: [],
        EmptyMessage: `<div class="empty-calendar">Выберите месяц</div>`,
        ListElement:
            `<div class="day {{DayInWeek}} {{Current}} ">
                <div class="day-date"> 
                    <div class="date-day-number">{{DayNumber}} </div> 
                    <div class="date-month-name">{{Month}}</div>
                </div>
                <div class="param-icon holiday-icon {{#if ($item.Holiday == 0)?'not-locked' : 'locked'}}"></div>
                <div class="param-icon locked-icon {{#if ($item.Locked == 0)?'not-locked' : 'locked'}}"></div>
                <div class="day-parameters">
                    <div class="param visitors">
                        <div class="param-icon people-icon"></div>
                        <div data-type="Visitors" class="param-value" data-hint="Посещения - {{DayNumber}} {{Month}}">{{Visitors}}</div>
                    </div>
                    <div class="param registers">
                        <div class="param-icon card-icon"></div>
                        <div data-type="Registers" class="param-value" data-hint="Запись - {{DayNumber}} {{Month}}">{{Registers}}</div>
                    </div> 
                    <div class="param book-giving">
                        <div class="param-icon books-icon"></div>
                        <div data-type="BookGiving" class="param-value" data-hint="Книговыдача - {{DayNumber}} {{Month}}">{{BookGiving}}</div>
                    </div>
                </div>
            </div>`
    },
    PropFormat: {
        Month: function (x) { return  Lure.Date(new Date(this.Parent.CurrentYear, x - 1)).Format('MMMM', true) },
        DayInWeek: (x) => x > 5 ? ' weekend' : '',
        Current: function(x, p){ return this.Proto.Data.CurrentMonth !== p.Month ?' other-month ':'' },
        CurrentMonth: (x) => Lure.Date(new Date(new Date().getFullYear(), x - 1)).Format('MMMM'),
        filledCount: (x) => x.toLocaleString(),
        fullCount: (x) => x.toLocaleString(),
        CurrentYear: function () { return this.Parent.CurrentYear }
    },
    Props: function () {
        this.SaveButton = this.Select('.save-button');
        this.CalCreated = false;
    },
    Proto: {
        CurrentMonth: (new Date()).getMonth() + 1,
        filledCount: 0,
        fullCount: 0
    },
    Methods: function () {
        this.MakeCalendar = function (month, value = null) {
            this.Proto.SetProperty('CurrentMonth', month);
            // month--;
            value = {V: 0, R: 0, B: 0};
            let CY = this.Parent.AllMonthsData[this.Parent.CurrentYear];
            if (!CY[month - 1]) CY[month - 1] = [];
            if (!CY[month]) CY[month] = [];
            if (!CY[month + 1]) CY[month + 1] = [];
            let day = (dn, dw, m, bv, br, bg, h, l) => ({DayNumber: dn, DayInWeek: dw, Month: m, Visitors: bv, Registers: br, BookGiving: bg, Holiday: h, Locked: l });

            let dayNumber = new Date(this.Parent.CurrentYear, month - 1, 1).getDay(); // Номер первого дня в месяце
            if (dayNumber === 0) dayNumber = 7;
            let oldDay = new Date(this.Parent.CurrentYear, month - 1, 1 - dayNumber).getDate() + 1; // число первого дня недели

            let fullCount = 0;
            let data = [];
            let dn = 1;
            for (let i = oldDay; i <= new Date(new Date().getFullYear(), month - 1, 0).getDate(); i++) {
                if (CY[month - 1][i - 1])
                    data.push(CY[month - 1][i - 1]);
                else data.push(day(i, dn, month - 1, 0, 0, 0, 0, 0));
                dn++;
            }
            let week = 1;
            for (let i = 1; i <= new Date(this.Parent.CurrentYear, month, 0).getDate(); i++) {
                let index;
                if (CY[month][i - 1]) {
                    index = data.push(CY[month][i - 1]);
                    value.V += CY[month][i - 1].Visitors;
                    value.R += CY[month][i - 1].Registers;
                    value.B += CY[month][i - 1].BookGiving;
                }
                else {
                    let newDay = day(i, dayNumber, month, 0, 0, 0, Math.round(Math.random() / 1.45), 0);
                    index = data.push(newDay);
                    CY[month].push(newDay);
                }
                index--;
                // fullCount += data[index].Visitors + data[index].Registers + data[index].BookGiving;
                if (dayNumber === 7) {
                    dayNumber = 1;
                    week++;
                } else
                    dayNumber++;
            }

            let addDays = 7 - dayNumber;
            if (week <= 4) addDays += 7;
            if (dayNumber !== 1)
                for (let i = 0; i <= addDays; i++)
                    if (CY[month + 1][i])
                        data.push(CY[month + 1][i]);
                    else data.push(day(i + 1, (i + dayNumber) % 7 === 0 ? 7 : (i + dayNumber) % 7, month + 1, 0, 0, 0, 0, 0));

            this.Controller.Refresh(data);
            this.RefreshFilled();
            // this.Proto.SetProperty('fullCount', fullCount);
            this.Proto.SetProperty('fullCount', value.V + value.R + value.B );
        };

        this.DistributeEvenlySimple = function (MonthID, MonthSumValue) {

            let DateCursor = Lure.Date(new Date(this.Parent.CurrentYear, MonthID, 1));

            let Daily = Math.floor(MonthSumValue / DateCursor.CountDays);
            let Remained = MonthSumValue % DateCursor.CountDays;
            let MonthData = (new Array(DateCursor.CountDays)).Select(()=>Daily);
            let i = 0;
            while (Remained > 0){
                MonthData[i]++;
                Remained--;
                i++;
            }
            return MonthData;
        };
        this.DistrEvenClick = function () {
            let a = this.Parent.YearData[this.Parent.CurrentYear][Math.floor((this.Proto.Data.CurrentMonth - 1) / 3)].Months[(this.Proto.Data.CurrentMonth - 1) % 3];
            let value = [a.visitors, a.registration, a.books];
            // Lure.System.ShowNotice(value);
            this.DistributeEvenly(value);
        };

        this.DistributeEvenly = function (x, curMonth = -1) {
            this.Proto.SetProperty('fullCount', x.reduce((a,b) => a + b));

            if (curMonth === -1)
                curMonth = this.Proto.Data.CurrentMonth;

            let res = this.DistributeEvenlyMethod(x, this.Controller.Data, curMonth);
            if (res.length > 0)
                this.Controller.Refresh(res);
            this.RefreshFilled();
        };

        this.DistributeEvenlyMethod = function (x, arr, month) {
            let unlockedCount = 0;

            for (let d of arr)
                if (d.Month === month) {
                    if (d.Holiday === 0)
                        if (d.Locked === 0)
                            unlockedCount++;
                        else {
                            x[0] -= d.Visitors;
                            x[1] -= d.Registers;
                            x[2] -= d.BookGiving;
                        }
                }
            if (x[0] < 0 || x[2] < 0 || x[1] < 0) {
                Lure.System.Error('Отрицательное значение');
                return [];
            }

            let xRem = [x[0] % unlockedCount, x[1] % unlockedCount, x[2] % unlockedCount];
            x = [Math.floor(x[0] / unlockedCount), Math.floor(x[1] / unlockedCount), Math.floor(x[2] / unlockedCount)];
            for (let d of arr) {
                if (d.Locked === 1 || month !== d.Month) continue;
                if (d.Holiday === 0) {
                    d.Visitors = xRem[0] > 0 ? (xRem[0]--, x[0] + 1) : x[0];
                    d.Registers = xRem[1] > 0 ? (xRem[1]--, x[1] + 1) : x[1];
                    d.BookGiving = xRem[2] > 0 ? (xRem[2]--, x[2] + 1) : x[2];
                } else
                    [d.Visitors, d.Registers, d.BookGiving] = [0,0,0];
                d.Changed = true;
            }
            return arr;
        };

        this.ToggleLocked = function (x) {
            x.classList.toggle('locked');
            x.classList.toggle('not-locked');
        };
        this.RefreshFilled = function () {
            let sum = 0;
            for (let d of this.Controller.Data)
                if (d.Month === this.Proto.Data.CurrentMonth)
                    sum += parseInt(d.Visitors) + parseInt(d.Registers) + parseInt(d.BookGiving);
            this.Proto.SetProperty('filledCount', sum);
        };
        this.NumPadSetValue = function (v, lineID, paramName) {
            // let dict = {'visitors': 'Visitors', 'registers': 'Registers', 'book-giving': 'BookGiving'};
            let elemData = this.Controller.GetDataItemByLineID(lineID).Data;
            elemData[paramName] = parseInt(v);
            elemData.Changed = true;
            this.Controller.Refresh(lineID);
            this.RefreshFilled();
        };
        this.SaveData = function () {
            Lure.Button.Lock(this.SaveButton);
            // setTimeout(() => {

            if (this.Proto.Data.filledCount === this.Proto.Data.fullCount) {
                if (this.Parent.SaveMonthData(this.SaveButton))
                    this.Parent.RefreshBigChart();
            } else {
                let x = this.Select('.header-counts');
                x.classList.add('alert');
                setTimeout(() => x.classList.remove('alert'), 3000);
                Lure.System.Error('Плановые и установленные вручную значения не совпадают');
            }

            // }, 2000 );
        };
        this.ChangeMonth = function (x) {
            this.Proto.Data.CurrentMonth += x;
            let next_month = this.Proto.Data.CurrentMonth;
            if (next_month > 12 || next_month < 1) {
                if (next_month > 12) { next_month = 1; this.Parent.CurrentYear++; }
                if (next_month < 1) {
                    if (this.Parent.CurrentYear - 1 < 2017) { next_month = 1; return; }
                    next_month = 12; this.Parent.CurrentYear--;
                }
                this.Parent.DataPlanLoad().then(() => this.Parent.Charts.SelectMonthNum(next_month));
            } else
                this.Parent.Charts.SelectMonthNum(next_month);
        };
    },
    AfterBuild: function () {
        // this.MakeCalendar((new Date).getMonth() + 1);
        this.Select('.distribute-evenly-button').onclick = () => this.DistrEvenClick();
        this.SaveButton.onclick = () => this.SaveData();
        this.Select('.cancel-button').onclick = () => Lure.System.ShowNotice("Отмена");

        this.AddEventListener('click', '.day:not(.other-month) .holiday-icon, .day:not(.other-month) .locked-icon', (e, p) => {
            let elemData = this.Controller.GetDataItemByLineID(p.LineID).Data;
            this.ToggleLocked(e.currentTarget);
            if (e.currentTarget.classList.contains('locked-icon')) elemData.Locked = 1 - elemData.Locked;
            if (e.currentTarget.classList.contains('holiday-icon')) { elemData.Holiday = 1 - elemData.Holiday; elemData.Changed = true; this.DistrEvenClick(); }
        });
        this.AddEventListener('click', '.day:not(.other-month) .param .param-value',
            (e, p) => InputBox.Run(e.currentTarget, e.currentTarget.innerHTML, (v) => this.NumPadSetValue(v, parseInt(p.LineID), e.currentTarget.dataset['type']), {Caption: e.currentTarget.dataset['hint']})
        );
        this.Select('.less').onclick = () => this.ChangeMonth(-1);
        this.Select('.more').onclick = () => this.ChangeMonth(1);
    }
});

},{"../../../_common/input-box/input-box":110}],31:[function(require,module,exports){
const InputBox = require("../../../_common/input-box/input-box");

DataInput.DataPlanInput.Charts = new Lure.Content({
    Parent: DataInput.DataPlanInput,
    Name: 'Charts',
    Target: '.data-plan-container',
    Visible: true,
    Permission: {
        Rules: {
            Edit: {
                Roles:  [D.Role.SetupPlanEdit]
            }
        }
    },
    Content:
`<div class="plan-charts widget-container"> 
    <div class="container-header strong">План на 2018 год</div>
    <div class="container-body">
        <div class="charts">
            <div class="chart-container l-row">
                <div class="chart flex-100">
                    <div class="left-chart-container"></div>
                    <div class="chart-subscript">
                        <div class="sub-icon param-icon people-icon"></div>
                        <div class="sub-caption" data-type="year.year_sum_visitors" data-hint="Посещения - год">{{year_sum_visitors}}</div>
                    </div>
                </div>
                <div class="chart flex-100">
                    <div class="center-chart-container"></div>
                    <div class="chart-subscript">
                        <div class="sub-icon param-icon card-icon"></div>
                        <div class="sub-caption" data-type="year.year_sum_registration" data-hint="Запись - год">{{year_sum_registration}}</div>
                    </div>
                </div>
                <div class="chart flex-100">
                    <div class="right-chart-container"></div>
                    <div class="chart-subscript">
                        <div class="sub-icon param-icon books-icon"></div>
                        <div class="sub-caption" data-type="year.year_sum_books" data-hint="Книговыдача - год">{{year_sum_books}}</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="index-table">
            <div class="table-header-data ">
                <div class="column-name column-period-header"><div class="period-name">Период</div></div>
                <div class="column-name column-visitors-header"><span class="param-icon people-icon"></span> Посещения</div>
                <div class="column-name column-registration-header"><span class="param-icon card-icon"></span> Запись</div>
                <div class="column-name column-books-header"><span class="param-icon books-icon"></span> Книговыдача</div>
            </div>
            <div class="table-holder"></div>
            <div class="full-year">
                <div class="year column-period"><div class="period-name">Год</div></div>
                <div class="year column-visitors" data-type="year.year_sum_visitors" data-hint="Посещения - год">{{year_sum_visitors}}</div>
                <div class="year column-registration" data-type="year.year_sum_registration" data-hint="Запись - год">{{year_sum_registration}}</div>
                <div class="year column-books" data-type="year.year_sum_books" data-hint="Книговыдача - год">{{year_sum_books}}</div>
            </div>
        </div>
    </div>
    <div class="bottom-buttons" data-permission="Edit">
        <button class="l-button cancel-button">ОТМЕНА</button>
        <button class="l-button distribute-evenly-button">РАСПРЕДЕЛИТЬ РАВНОМЕРНО</button>
        <button class="l-button save-button">СОХРАНИТЬ</button>
    </div>
</div>`,
    Controller: {
        Target: '.table-holder',
        ListElement:
            `<div class="quarter-{{QuarterNum}} quarter">
                {{#each Months}}
                    <div class="month {{month}} {{none}}">
                        <div class="column-holder period">
                            <div class="lock param-icon locked-icon {{locked_mon}}"></div>
                            <div class="column-period {{grey_month}}" data-type="month.{{$this.month}}.full">{{monthRU}}</div>
                        </div>
                        <div class="column-holder">
                            <div class="lock param-icon locked-icon {{locked_vis}}"></div>
                            <div class="column-visitors" data-type="month.{{$this.month}}.visitors" data-hint="Посещения - {{monthRU}}">{{visitors}}</div>
                        </div>
                        <div class="column-holder">
                            <div class="lock param-icon locked-icon {{locked_reg}}"></div>
                            <div class="column-registration" data-type="month.{{$this.month}}.registration" data-hint="Запись - {{monthRU}}">{{registration}}</div>
                        </div>
                        <div class="column-holder">
                            <div class="lock param-icon locked-icon {{locked_bok}}"></div>
                            <div class="column-books" data-type="month.{{$this.month}}.books" data-hint="Книговыдача - {{monthRU}}">{{books}}</div>
                        </div>
                    </div>
                {{#endeach}}
                <div class="quarter-sumary-{{QuarterNum}} quarter-month {{grey_back}}">
                    <div class="column-holder first-column">
                        <div class="lock param-icon locked-icon {{locked_mon}}"></div>
                        <div class="column-period" data-type="quarter.{{$this.Quarter}}.full">{{QuarterRU}}</div>
                    </div>
                    <div class="column-holder">
                        <div class="lock param-icon locked-icon {{locked_vis}}"></div>
                        <div class="column-visitors" data-type="quarter.{{$this.Quarter}}.visitors" data-hint="Посещения - {{QuarterRU}}">{{visitors}}</div>
                    </div>
                    <div class="column-holder" >
                        <div class="lock param-icon locked-icon {{locked_reg}}"></div>
                        <div class="column-registration" data-type="quarter.{{$this.Quarter}}.registration" data-hint="Запись - {{QuarterRU}}">{{registration}}</div>
                    </div>
                    <div class="column-holder">
                        <div class="lock param-icon locked-icon {{locked_bok}}"></div>
                        <div class="column-books" data-type="quarter.{{$this.Quarter}}.books" data-hint="Книговыдача - {{QuarterRU}}">{{books}}</div>
                    </div>
                </div>
            </div>`,
        Data: [ ],
    },
    PropFormat: {
        // month: (x) => ({1:  'january', 2:  'february', 3:  'march', 4:  'april', 5:  'may', 6:  'june', 7:  'july', 8:  'august', 9:  'september', 10:  'october', 11:  'november', 12:  'december'})[x],
        month: function (x) {return this.Months(x)},
        monthRU: function (x, p) {return p.month ? Lure.Date(new Date(this.Parent.CurrentYear, p.month - 1, 1)).Format('MMMM') : ''},
        QuarterNum: (x, p) => ({1: 'one', 2: 'two', 3: 'three', 4: 'four'})[p.Quarter],
        QuarterRU: (x, p) => ({1: 'I Квартал', 2: 'II Квартал', 3: 'III Квартал', 4: 'IV Квартал'})[p.Quarter],
        none: function (x, p) {return this.OpenedMonths.indexOf(p.month) === -1 ? 'none' : '';},
        grey_month: function (x, p) {return this.SelectedMonth === p.month ? ' grey-month ' : ''},
        grey_back: function (x, p) {return p.Quarter === this.OpenedQuarter ? 'grey-back' : '';},
        locked_mon: (x, p) => (p.Locked & 8) === 0 ? 'not-locked' : 'locked',
        locked_vis: (x, p) => (p.Locked & 4) === 0 ? 'not-locked' : 'locked',
        locked_reg: (x, p) => (p.Locked & 2) === 0 ? 'not-locked' : 'locked',
        locked_bok: (x, p) => (p.Locked & 1) === 0 ? 'not-locked' : 'locked',
        year_sum_visitors: (x) => x.toLocaleString(),
        year_sum_registration: (x) => x.toLocaleString(),
        year_sum_books: (x) => x.toLocaleString(),
        visitors: (x) => x.toLocaleString(),
        registration: (x) => x.toLocaleString(),
        books: (x) => x.toLocaleString(),
    },
    Proto: {
        year_sum_visitors: 0,
        year_sum_registration: 0,
        year_sum_books: 0
    },
    Props: function() {
        // this.EditingCell = '';
        this.DoubleClickTimer = null;
        this.OpenedQuarter = Math.floor((new Date()).getMonth() / 3) + 1;
        this.SelectedMonth = (new Date()).getMonth() + 1;
        this.OpenedMonths = [this.OpenedQuarter * 3 - 2, this.OpenedQuarter * 3 - 1, this.OpenedQuarter * 3];
        this.PropsLogic = {full: 8, visitors: 4, registration: 2, books: 1};
    },
    Methods: function () {
        this.GetChartOptions = function (TargetElement) {
            return {
                Target: TargetElement,
                Type: 'pie',
                Legend: {
                    Visible: false
                },
                Series: [
                    {
                        Labels: {
                            Data: Lure.Culture.MonthNames.Select(m => m + ' ' + this.Parent.CurrentYear),
                            //Data: ["Январь 2018", "Февраль 2018", "Март 2018", "Апрель 2018", "Май 2018", "Июнь 2018", "Июль 2018", "Август 2018", "Сентябрь 2018", "Октябрь 2018", "Ноябрь 2018", "Декабрь 2018"],
                        },
                        Data: [5, 2, 3, 1, 4, 5, 7, 1, 2, 3, 3, 4],
                        Colors: ["#6FAD81", "#7AD096", "#82E29F", "#AD776E", "#D0887D", "#E29284", "#ADA66E", "#D0C98A", "#E2D984", "#7DB0D0", "#85C2E2", "#8ACBF4"],
                        Type: 'ring',
                        Width: 32,
                        AngleStart: -90,
                    },
                    {
                        Labels: {
                            Data: ["I Квартал 2018", "II Квартал 2018", "III Квартал 2018", "IV Квартал 2018"],
                        },
                        Data: [10, 10, 10, 10],
                        Colors: ["#61A878", "#A56C60", "#9E9960", "#608AAB"],
                        Type: 'ring',
                        Width: 22,
                        AngleStart: -90,
                    }
                ],
            }
        };

        this.Months = (x) => ({1:  'january', 2:  'february', 3:  'march', 4:  'april', 5:  'may', 6:  'june', 7:  'july', 8:  'august', 9:  'september', 10:  'october', 11:  'november', 12:  'december'})[x];
        this.RefreshCharts = function () {
            this.RefreshChartsParams('visitors');
            this.RefreshChartsParams('registration');
            this.RefreshChartsParams('books');
        };
        this.RefreshChartsParams = function(p) {
            let c;
            if (p === 'visitors')
                c = this.ChartVisits;
            if (p === 'registration')
                c = this.ChartRegister;
            if (p === 'books')
                c = this.ChartBooks;
            // p === 'visitors' ? c = this.ChartVisits : p === 'registration' ? c = this.ChartRegister : p === 'books' ? c = this.ChartBooks : c = null;
            if (!c) return;
            let c_data = this.Controller.Data;
            if (c_data[0]) {
                c.Options.Series[1].Data = [
                    c_data[0][p],
                    c_data[1][p],
                    c_data[2][p],
                    c_data[3][p]
                ]; // Кварталы
                c.Options.Series[0].Data = [
                    c_data[0].Months[0][p],
                    c_data[0].Months[1][p],
                    c_data[0].Months[2][p],
                    c_data[1].Months[0][p],
                    c_data[1].Months[1][p],
                    c_data[1].Months[2][p],
                    c_data[2].Months[0][p],
                    c_data[2].Months[1][p],
                    c_data[2].Months[2][p],
                    c_data[3].Months[0][p],
                    c_data[3].Months[1][p],
                    c_data[3].Months[2][p]
                ]; // Месяцы
                c.Refresh();
            }
        };
        this.RecountSums = function () {
            let proto = this.Proto.Data;
            [proto.year_sum_visitors, proto.year_sum_registration, proto.year_sum_books] = [0, 0, 0];
            if (this.Controller.Data)
                for (let q of this.Controller.Data) {
                    [q.visitors, q.registration, q.books] = [0, 0, 0];
                    if (q.Months) for (let month of q.Months) {
                        proto.year_sum_visitors += month.visitors;
                        proto.year_sum_registration += month.registration;
                        proto.year_sum_books += month.books;
                        q.visitors += month.visitors;
                        q.registration += month.registration;
                        q.books += month.books;
                    }
                }
            this.Controller.Refresh();
            this.Proto.Refresh();
        };
        this.OpenQuarter = function (elem) {
            let x = parseInt(elem.dataset['type'].split('.')[1]);
            this.OpenedQuarter = x;
            let oldSelection = this.Select('.grey-back');
            if (oldSelection)
                oldSelection.classList.remove('grey-back');
            elem.parentElement.parentElement.classList.add('grey-back');

            let months = [this.Months(x * 3 - 2), this.Months(x * 3 - 1), this.Months(x * 3)];
            this.OpenedMonths = [(x * 3 - 2), (x * 3 - 1), (x * 3)];
            for (let d of this.SelectAll('.month'))
                if (d.classList.contains(months[0]) || d.classList.contains(months[1]) || d.classList.contains(months[2]))
                    d.classList.remove('none');
                else d.classList.add('none');
        };
        this.SetParamsValue = function(elem, value, update = true){ /* quarter.month.param */
            elem = elem.split('.');
            if (elem[2] === 'Locked') {
                let paramName = elem[2];
                switch (elem[0]) {
                    case 'quarter':
                        if (elem[3] === 'on') this.Controller.Data[parseInt(elem[1]) - 1][paramName] |= value;
                        if (elem[3] === 'off') this.Controller.Data[parseInt(elem[1]) - 1][paramName] &= value;
                        break;
                    case 'month':
                        elem[1] = parseInt(elem[1]) - 1;
                        let monthNum = elem[1] % 3;
                        let quarterNum = Math.floor(elem[1] / 3);
                        if (elem[3] === 'on') this.Controller.Data[quarterNum].Months[monthNum][paramName] |= value;
                        if (elem[3] === 'off') this.Controller.Data[quarterNum].Months[monthNum][paramName] &= value;
                        break;
                }
                if (update) this.Controller.Refresh();
            }
            else
                switch (elem[0]) {
                    case 'quarter':
                        let paramName = elem[2];
                        let quarterNum = parseInt(elem[1]);

                        //////////////////////// ПОДГОТОВКА ////////////////////////
                        let contrl = this.Controller.Data;

                        let data = {0: { }, sum: 0};
                        for (let i = 1; i <= 4; i++) {
                            let item = { sum: 0, lockSum: 0, lock: (contrl[i - 1].Locked & this.PropsLogic[paramName]) !==0 };
                            for (let k = 0; k <= 2; k++)
                                item[k] = { v: contrl[i - 1].Months[k][paramName], lock: (contrl[i - 1].Months[k].Locked & this.PropsLogic[paramName]) !== 0 };
                            data[i] = item;
                        }
                        /* data = {
                            0: { },
                            1: {
                                0: { v: contrl[0].Months[0][paramName], lock: (contrl[0].Months[0].Locked & this.PropsLogic[paramName]) !== 0 }, 1: {...}, 2: {...}
                                sum: 0,
                                lockSum: 0,
                                lock: (contrl[0].Locked & this.PropsLogic[paramName]) !==0
                            } ... another 3 quarters
                        }; */

                        for (let d = 1; d <= 4; d++) {
                            data[d].sum = data[d][0].v + data[d][1].v + data[d][2].v;
                            if (data[d].lock)
                                data[d].lockSum = data[d].sum;
                            data.sum += data[d].sum;
                        }
                        //////////////////////// ПОДГОТОВКА \\\\\\\\\\\\\\\\\\\\\\\\

                        if (quarterNum === 0) {
                            data.sum = value;
                            value = 0;
                        }
                        else {
                            data[quarterNum].sum = value;
                            if (data[quarterNum].lock)
                                data[quarterNum].lockSum = value;
                        }
                        data.lockSum = 0;
                        for (let d = 1; d <= 4; d++)
                            data.lockSum += data[d].lockSum;
                        let restValue;
                        if (data[quarterNum].lock)
                            restValue = data.sum - data.lockSum; // оставшеесе количество, которое надо распределить
                        else restValue = data.sum - data.lockSum - value; // оставшеесе количество, которое надо распределить

                        let unlockCount = 0;
                        for (let d = 1; d <= 4; d++)
                            if (!data[d].lock && d !== quarterNum)
                                unlockCount++;

                        if (restValue < 0){
                            Lure.System.ShowError('Устанавливаемое значение больше, чем доступно в году');
                            return;
                        }
                        if (unlockCount === 0) {
                            Lure.System.ShowError('Остальные кварталы заблокированы');
                            return;
                        }
                        let remind = restValue % unlockCount; // остаток от деления

                        for (let d = 1; d <= 4; d++) {
                            if (!data[d].lock)
                                if (d !== quarterNum) {
                                    let qValue = remind > 0 ? (remind--, Math.floor(restValue / unlockCount) + 1) : Math.floor(restValue / unlockCount);
                                    if (qValue >= data[d].lockSum)
                                        data[d].sum = qValue;
                                    else
                                        data[d].sum = data[d].lockSum;
                                    unlockCount--;
                                    restValue -= data[d].sum;
                                    if (restValue < 0) {
                                        Lure.System.ShowError('Заблокировано слишком много');
                                        return;
                                    }
                                }
                            let unlockMonth = !data[d][0].lock + !data[d][1].lock + !data[d][2].lock;
                            let unlockValue = data[d].sum - (data[d][0].lock * data[d][0].v + data[d][1].lock * data[d][1].v + data[d][2].lock * data[d][2].v);
                            if (unlockValue < 0){
                                Lure.System.ShowNotice('В месяцах ' + d + '-го квартала отрицательные значения,<br>попробуйте разблокировать их');
                                return;
                            }
                            let remMonth = unlockValue % unlockMonth;
                            for (let i = 0; i < 3; i++)
                                if (!data[d][i].lock)
                                    data[d][i].v = remMonth > 0 ? (remMonth--, Math.floor(unlockValue / unlockMonth) + 1) : Math.floor(unlockValue / unlockMonth);
                        }

                        //////////////////////// Сохранение ////////////////////////
                        for (let d = 1; d <= 4; d++){
                            for (let i = 0; i < 3; i++) {
                                this.Controller.Data[d - 1].Months[i][paramName] = data[d][i].v;
                                this.Controller.Data[d - 1].Months[i].Changed = true;
                            }
                            this.Controller.Data[d - 1][paramName] = data[d].sum;
                        }
                        // console.log(paramName, data);
                        this.Proto.SetProperty('year_sum_' + paramName, data[1].sum + data[2].sum + data[3].sum + data[4].sum);
                        //////////////////////// Сохранение \\\\\\\\\\\\\\\\\\\\\\\\

                        if (update) { this.Controller.Refresh(); this.RefreshChartsParams(paramName); }
                        break;
                    case 'month': {
                            elem[1] = parseInt(elem[1]) - 1;
                            let quarterNum = Math.floor(elem[1] / 3);
                            let paramName = elem[2];
                            let unlockCount = 2;
                            let quarterVal = this.Controller.Data[quarterNum][paramName] - value; // сколько осталось распределить в квартале

                            for (let d of this.Controller.Data[quarterNum].Months)
                                if ((d.Locked & this.PropsLogic[paramName]) !== 0 && (d.month !== elem[1] + 1)){
                                        quarterVal -= d[paramName];
                                        unlockCount--;
                                    }
                            if (unlockCount <= 0) { Lure.System.Error('Остальные ячейки заблокированы'); return; }
                            if (quarterVal < 0) { Lure.System.Error('Устанавливаемое значение больше, чем значение квартала'); return; }
                            this.Controller.Data[quarterNum].Months[elem[1] % 3][paramName] = value;
                            this.Controller.Data[quarterNum].Months[elem[1] % 3].Changed = true;
                            let rem = quarterVal % unlockCount; // остаток от деления
                            let monthValue = Math.floor(quarterVal / unlockCount);
                            for (let d of this.Controller.Data[quarterNum].Months)
                                if (d.month !== elem[1] + 1 && (d.Locked & this.PropsLogic[paramName]) === 0) {
                                    d[paramName] = rem > 0 ? (rem--, monthValue + 1) : monthValue;
                                    d.Changed = true;
                                }

                            if (update) { this.Controller.Refresh(); this.RefreshChartsParams(paramName); }
                        }
                        break;

                    case 'year':
                        this.Proto.SetProperty(elem[1], value);
                        this.SetParamsValue( ['quarter', '0', elem[1].split('_')[elem[1].split('_').length - 1] ].join('.'),  value, update);
                        break;
                }
        };

        this.ToggleLocked = function (x, doubleClick = 'single') {
            let dataElem = x.parentElement.children[1].dataset['type'].split('.');
            let flag = x.classList.contains('locked');
            this.toggleLockedParams(dataElem, flag, doubleClick === 'double');
        };
        this.toggleLockedParams = function(dataElem, isLocked, doubleClick) {
            if (doubleClick) isLocked = !isLocked;
            isLocked ? (dataElem[3] = 'off') : (dataElem[3] = 'on');

            let lockData = 0;
            switch (dataElem[2]) {
                case 'visitors':
                    dataElem[3] === 'on' ? lockData = 4 : lockData = 11; // 0100 1011
                    break;
                case 'registration':
                    dataElem[3] === 'on' ? lockData = 2 : lockData = 13; // 0010 1101
                    break;
                case 'books':
                    dataElem[3] === 'on' ? lockData = 1 : lockData = 14; // 0001 1110
                    break;
                case 'full':
                    dataElem[3] === 'on' ? lockData = 15 : lockData = 0; // 1111 0000
                    break;
                default:
                    Lure.System.Error('Неверный ID параметра');
                    return;
            }
            dataElem[2] = 'Locked'; // quarter.3.visitors
            if (dataElem[0] === 'quarter' && doubleClick)
                for (let i = parseInt(dataElem[1]) * 3 - 2; i <= parseInt(dataElem[1]) * 3; i++)
                    this.SetParamsValue(['month', i, dataElem[2], dataElem[3]].join('.'), lockData, false);

            this.SetParamsValue(dataElem.join('.'), lockData);
        };

        this.SelectMonthNum = function (mnum) {
            let monthElem = this.Select('.month.' + this.Months(mnum) + ' .column-period');
            if (monthElem)
                this.MonthClick(monthElem);
        };

        this.MonthClick = function (e) {
            let a = this.Select('.grey-month');
            if (a) a.classList.remove('grey-month');
            e.classList.add('grey-month');
            let month = parseInt(e.dataset['type'].split('.')[1]);
            this.SelectedMonth = month;
            let val = this.Controller.Data[Math.floor((month - 1) / 3)].Months[(month - 1) % 3];
            let value = [val.visitors, val.registration, val.books];
            this.Parent.Calendar.MakeCalendar(month, value);
        };
        this.LockClick = function (e) {
            let data = e.currentTarget.parentElement.children[1].dataset['type'];
            if (!data) return;
            this.ToggleLocked(e.currentTarget, 'single');
            if (data.split('.')[0] !== 'quarter') return;
            if (this.DoubleClickTimer == null) {
                this.DoubleClickTimer = setTimeout(() => this.DoubleClickTimer = null, 300);
            } else {
                clearInterval(this.DoubleClickTimer);
                this.DoubleClickTimer = null;
                this.ToggleLocked(e.currentTarget, 'double');
            }
        };
    },
    AfterBuild: function () {
        this.ChartVisits = new Lure.Chart(this.GetChartOptions(this.Select('.left-chart-container')));
        this.ChartRegister = new Lure.Chart(this.GetChartOptions(this.Select('.center-chart-container')));
        this.ChartBooks = new Lure.Chart(this.GetChartOptions(this.Select('.right-chart-container')));

        this.AddEventListener('click', '.column-visitors, .column-registration, .column-books, .chart-container .sub-caption', (e) =>
            InputBox.Run(
                e.currentTarget,
                parseInt(e.currentTarget.innerHTML.replace(/[^0-9]/gu, '')),
                (v) => this.SetParamsValue(e.currentTarget.dataset['type'], parseInt(v)),
                {Caption: e.currentTarget.dataset['hint']}
            ));
        this.AddEventListener('click', '.quarter-month .column-period', (e) => this.OpenQuarter(e.currentTarget));
        this.AddEventListener('click', '.lock', (e) => this.LockClick(e));
        this.AddEventListener('click', '.month .column-period', (e) => this.MonthClick(e.currentTarget));
        this.SaveButton = this.Select('.save-button');
        this.SaveButton.onclick = () => this.Parent.SaveYearData(this.SaveButton);

        this.Select('.cancel-button').onclick = () => Lure.System.Notice('Canceled');
        this.Select('.distribute-evenly-button').onclick = () => {
            this.SetParamsValue('year.year_sum_visitors', this.Proto.Data.year_sum_visitors, false);
            this.SetParamsValue('year.year_sum_registration', this.Proto.Data.year_sum_registration, false);
            this.SetParamsValue('year.year_sum_books', this.Proto.Data.year_sum_books, false);
            // this.RecountSums();
            this.Controller.Refresh();
            this.RefreshCharts();
        };

        let ElemIsChildOf = (elem, checkClass, limitClass = 'body') => {
            if (!elem) return false;
            if (!elem.parentElement) return false;
            if (elem.parentElement.classList.contains(limitClass)) return false;
            if (elem.parentElement.classList.contains(checkClass))
                return true;
            else return ElemIsChildOf(elem.parentElement, checkClass, limitClass);
        };

        this.AddEventListener('click', '.right-chart-container path.chart-hover, .center-chart-container path.chart-hover, .left-chart-container path.chart-hover', e => {
            let elem = e.currentTarget;
            let period, num, type, startVal = 0, caption = '';

            num = parseInt(elem.dataset['item']) + 1;
            switch (elem.dataset['line']) {
                case '0':
                    period = 'month';
                    caption = ' - ' + Lure.Date(new Date(2018, num - 1, 1)).Format('MMMM');
                    break;
                case '1':
                    period = 'quarter';
                    caption = ' - ' + (num === 1 ? 'I' : num === 2 ? 'II' : num === 3 ? 'III' : 'IV') + ' квартал';
                    break;
            }

            if (ElemIsChildOf(elem, 'right-chart-container', 'chart-container')) {
                type = 'books';
                startVal = this.ChartBooks.Options.Series[parseInt(elem.dataset['line'])].Data[num - 1];
                caption = 'Книговыдача ' + caption;
            }
            if (ElemIsChildOf(elem, 'center-chart-container', 'chart-container')) {
                type = 'registration';
                startVal = this.ChartRegister.Options.Series[parseInt(elem.dataset['line'])].Data[num - 1];
                caption = 'Запись ' + caption;
            }
            if (ElemIsChildOf(elem, 'left-chart-container', 'chart-container')) {
                type = 'visitors';
                startVal = this.ChartVisits.Options.Series[parseInt(elem.dataset['line'])].Data[num - 1];
                caption = 'Посещения ' + caption;
            }
            if (!period || !num || !type) return;
            // console.log([period, num, type].join('.'));
            InputBox.Run(
                elem, startVal,
                v => this.SetParamsValue([period, num, type].join('.'), parseInt(v)),
                {Caption: caption}
            );

            // console.log(ElemIsChildOf(elem, 'right-chart-container', 'chart-container'), elem.dataset['line'], elem.dataset['item']);
        });

    }
});

},{"../../../_common/input-box/input-box":110}],32:[function(require,module,exports){
DataInput.DataPlanInput = new Lure.Content({
    Parent: DataInput,
    Name: 'DataPlanInput',
    Target: '.data-plan-input',
    //Type: 'data-plan-content',
    Type: 'data-input-content',
    Control: {
        Target: '#nav-data-input-plan'
    },
    Permission: {
        Roles: [Dictionary.Role.SetupPlan]
    },
    Content:
        `<div>
            <div class="diary-bread l-row">
                <div class="li">
                    Подразделение: <select class="l-select data-plan-select select lib-list"></select>
                </div>
            </div>
            <div class="dp-wrap-out">
                <div class="data-plan-wrapper">
                    <div class="data-plan-container"></div>
                </div>
            </div>
        </div>`,
    Load: '',
    Props: function() {
        this.CurrentYear = (new Date()).getFullYear();
        this.YearData = {};
        this.isShown = false;
        this.YearData[this.CurrentYear] = [
            {
                Quarter: 1,
                Months: [
                    {month: 1, visitors: 0, registration: 0, books: 0, Locked: 0},
                    {month: 2, visitors: 0, registration: 0, books: 0, Locked: 0},
                    {month: 3, visitors: 0, registration: 0, books: 0, Locked: 0}
                ],
                visitors: 1003,
                registration: 150,
                books: 200,
                Locked: 0
            },
            {
                Quarter: 2,
                Months: [
                    {month: 4, visitors: 0, registration: 0, books: 0, Locked: 0},
                    {month: 5, visitors: 0, registration: 0, books: 0, Locked: 0},
                    {month: 6, visitors: 0, registration: 0, books: 0, Locked: 0}
                ],
                visitors: 1003,
                registration: 150,
                books: 200,
                Locked: 0
            },
            {
                Quarter: 3,
                Months: [
                    {month: 7, visitors: 0, registration: 0, books: 0, Locked: 0},
                    {month: 8, visitors: 0, registration: 0, books: 0, Locked: 0},
                    {month: 9, visitors: 0, registration: 0, books: 0, Locked: 0}
                ],
                visitors: 1003,
                registration: 150,
                books: 200,
                Locked: 0
            },
            {
                Quarter: 4,
                Months: [
                    {month: 10, visitors: 0, registration: 0, books: 0, Locked: 0},
                    {month: 11, visitors: 0, registration: 0, books: 0, Locked: 0},
                    {month: 12, visitors: 0, registration: 0, books: 0, Locked: 0}
                ],
                visitors: 0,
                registration: 0,
                books: 0,
                Locked: 0
            }
        ];
        this.AllMonthsData = {};
        this.AllMonthsData[this.CurrentYear] = {};

        this.LibSelectContrl = new Lure.Controller.Templator({
            Target: '.data-plan-select.select.lib-list',
            Data: Lure.User.Cache.LibraryList,
            ListElement: `<option value="{{ID}}">{{Name}}</option>`
        });
        this.LibSelect = this.Select('.data-plan-select.select.lib-list');
    },
    Methods: function(){
        this.RefreshBigChart = function () {
            return this.PlanChart.ChartRefresh();
        };
        this.SaveMonthData = function (button) {
            let data = [];
            for (let k in this.AllMonthsData[this.CurrentYear])
                if (this.AllMonthsData[this.CurrentYear].hasOwnProperty(k))
                    for (let d of this.AllMonthsData[this.CurrentYear][k])
                        if (d.Changed === true) {
                            data.push({
                                D: api.dtToCs(new Date(this.CurrentYear, d.Month - 1, d.DayNumber)),
                                V: d.Visitors,
                                R: d.Registers,
                                B: d.BookGiving,
                                H: d.Holiday === 1
                            });
                            d.Changed = false;
                        }
            console.log(data);
            if (data.length > 0) {
                api.DataInput_Plan_Set(this.SelectedLibrary, data, {
                    Finally: () => {
                        // setTimeout(() => {
                        if (button) Lure.Button.Release(button);
                        Lure.System.ShowSuccess('Сохранено');
                        /*}, 1500)*/
                    }
                });
                return true;
            } else
                if (button) Lure.Button.Release(button);
            return false;
        };
        this.SaveYearData = function (button) {
            if (button) Lure.Button.Lock(button);
            for (let i = 1; i <= 12; i++) {
                let d = this.YearData[this.CurrentYear][Math.floor(( i - 1) / 3)].Months[(i - 1) % 3];

                if (d.Changed === true) {
                    console.log(d, i);
                    if (i === this.Calendar.Proto.Data.CurrentMonth)
                        this.Calendar.DistributeEvenly([d.visitors, d.registration, d.books], i);
                    else this.Calendar.DistributeEvenlyMethod([d.visitors, d.registration, d.books], this.AllMonthsData[this.CurrentYear][i], i);
                }
            }
            this.SaveMonthData(button);
        };
        this.DataPlanLoad = function () {
            this.Load.Show();
            return api.DataInput_Plan_Get(this.SelectedLibrary, this.CurrentYear, {
                Then: (r) => {
                    /// TODO Если r пусто, то дефолтное значение надо, которое из 0 состоит
                    let data = {};
                    let YearData = [];
                    for (let d of r) { // {B: 44, D: "/Date(1514754000000+0300)/", H: false, R: 43, V: 98} - Так приходит
                        let date = Lure.Date(d.D).Date;
                        let month = date.getMonth() + 1;
                        let quarter = Math.floor((month - 1) / 3);
                        if (!data[month]) data[month] = [];
                        let dayData = {
                            DayInWeek: date.getDay() === 0 ? 7 : date.getDay(), // ВС - 0, ПН - 1, СБ - 6
                            DayNumber: date.getDate(),
                            Month: month,
                            Visitors: d.V,
                            Registers: d.R,
                            BookGiving: d.B,
                            Holiday: d.H ? 1 : 0,
                            Locked: 0,
                            Changed: false
                        };
                        data[month][date.getDate() - 1] = dayData;
                        if (!YearData[quarter])
                            YearData[quarter] = {
                                Quarter: quarter + 1,
                                Months: [
                                    {month: quarter * 3 + 1, visitors: 0, registration: 0, books: 0, Locked: 0},
                                    {month: quarter * 3 + 2, visitors: 0, registration: 0, books: 0, Locked: 0},
                                    {month: quarter * 3 + 3, visitors: 0, registration: 0, books: 0, Locked: 0}
                                ],
                                visitors: 0,
                                registration: 0,
                                books: 0,
                                Locked: 0
                            };

                        YearData[quarter].visitors += dayData.Visitors;
                        YearData[quarter].registration += dayData.Registers;
                        YearData[quarter].books += dayData.BookGiving;
                        YearData[quarter].Months[(month - 1) % 3].visitors += dayData.Visitors;
                        YearData[quarter].Months[(month - 1) % 3].registration += dayData.Registers;
                        YearData[quarter].Months[(month - 1) % 3].books += dayData.BookGiving;
                    }
                    this.AllMonthsData[this.CurrentYear] = data;
                    this.YearData[this.CurrentYear] = YearData;
                    this.Charts.Controller.Refresh(this.YearData[this.CurrentYear]);
                    this.Charts.RecountSums();
                    // debugger
                    return this.RefreshBigChart();
                },
                Catch: console.error,
                Finally: () => {
                    this.Calendar.ChangeMonth(0);
                    this.Charts.RefreshCharts();
                    this.Load.Hide();
                },
            });
        };
        this.RefreshOnShow = function () {
            if (!this.isShown) {
                this.Refresh();
                this.isShown = true;
            }
        };
    },
    Refresh: function () {
        this.LibSelectContrl.Refresh()
            .then(() => {
                this.SelectedLibrary = parseInt(this.LibSelect.value);
                return this.DataPlanLoad();
            })
            .then(() => {
                if (!this.Calendar.CalCreated) {
                    this.Calendar.CalCreated = true;
                    this.Calendar.MakeCalendar((new Date()).getMonth() + 1);
                }
                this.Charts.RefreshCharts();
            });
    },
    Show: function () {
        this.Refresh();
        // this.Charts.RefreshCharts();
        // if (!Lure.Object.isEmpty(this.AllMonthsData[this.CurrentYear]))
        //     this.PlanChart.Chart.Redraw();
    },
    AfterBuild: function () {
        let self = this;
        this.LibSelect.onchange = function (e) {
            self.SelectedLibrary = parseInt(this.value);
            self.DataPlanLoad();
        };
    }
});

require('./charts/charts.js');
require('./calendar/calendar.js');
require('./plan-chart/plan-chart.js');

},{"./calendar/calendar.js":30,"./charts/charts.js":31,"./plan-chart/plan-chart.js":33}],33:[function(require,module,exports){
DataInput.DataPlanInput.PlanChart = new Lure.Content({
    Parent: DataInput.DataPlanInput,
    Target: '.data-plan-wrapper',
    Content: `<div class="plan-chart flex-100">
              </div>`,
    Props: function () {
        let labels = (()=>{
            let d = new Date(this.Parent.CurrentYear,0,1);
            let y = [];
            for (let i = 0 ; i < 365; i++)
            {
                    y.push(d);
                d = Lure.Date(d).AddDays(1).Date;
            }
            return y
        })();
        let data = () => (new Array(365)).Select(() => 0);
        this.Chart = new Lure.Chart({
            DrawAfterInit: false,
            Target: this.Content,
            Type: 'Line',
            Legend: {Position: 'right',},
            AxisX: {
                Data: labels,
                Format: (Val) => Lure.Date(Val).Format('MMMM'),
                Skip: (val) => val.getDate() !== 1
            },

            Series: [
                {
                    Name: 'Посещения',
                    Color: '#65599E',
                    Data: data(),
                    AxisX: {},
                    Marker: {Visible: false},
                    AxisY0: {Position: 'right'}
                }, {
                    Name: 'Книговыдача',
                    Color: '#9F4944',
                    AxisY3: {Max: 40},
                    Data: data(),
                }, {
                    Name: 'Запись',
                    Color: '#53AA62',
                    AxisY3: {},
                    Data: data(),
                },
            ],
            SeriesOptions: {
                Marker: {Visible: false}
            },
            Tooltip: {
                Format: (Tip) =>
                    `<div class="tip">
                        <div class="tip-bg"></div>
                        <div class="tip-value">
                            <div class="l-row">
                                <div class="tip-icon" style="background-color: ${Tip.Episode.Color}"></div>
                                <div class="tip-label">${Lure.Date(Tip.ValueX).Format('D MMMM YYYY', true)}</div>
                            </div>
                            <div class="l-row">${Tip.Episode.Name}: ${Tip.Value}</div>
                        </div>
                    </div>`
            }
        })
    },
    Methods: function () {
        /** @return {number} */
        this.DaysInMonth = function (month, year = this.Parent.CurrentYear) {
            if (month < 1 || month > 12) return 0;
            return new Date(year, month, 0).getDate();
        };
        /** @return {number} */
        this.DaysUntilMonth = function (month) {
            if (month < 1 || month > 12) return -1;
            if (this.MonthSizes) return this.MonthSizes[month];
            this.MonthSizes = [0, 0];
            for (let i = 2; i <= 12; i++) {
                this.MonthSizes.push(this.DaysInMonth(i - 1));
            }
            this.MonthSizes.reduce((x, y, t, m) => m[t] = x + y);
            return this.MonthSizes[month];
        };
        this.ChartRefresh = function () {
            // console.log(this.Parent.AllMonthsData);

            let data = {
                Visitors: (new Array(365)).Select(() => 0),
                Registers: (new Array(365)).Select(() => 0),
                BookGiving: (new Array(365)).Select(() => 0)
            };
            let CY = this.Parent.AllMonthsData[this.Parent.CurrentYear];

            for (let month in CY)
                if (CY.hasOwnProperty(month) && CY[month].length > 0)
                    for (let i = 0; i < this.DaysInMonth(month); i++) {
                        data.Visitors[i + this.DaysUntilMonth(month)] = (CY[month][i].Visitors || 0);
                        data.Registers[i + this.DaysUntilMonth(month)] = (CY[month][i].Registers || 0);
                        data.BookGiving[i + this.DaysUntilMonth(month)] = (CY[month][i].BookGiving || 0);
                    }
            this.Chart.Options.Series[0].Data = data.Visitors;
            this.Chart.Options.Series[1].Data = data.BookGiving;
            this.Chart.Options.Series[2].Data = data.Registers;
            // console.log(data);
            return this.Chart.Redraw();
        }
    }
});
},{}],34:[function(require,module,exports){
const D = require("../_common/dictionary");
// const DragAndDropItem = require('../_common/draganddropitem');
const DragAndDropItem = require('../_common/draganddropitem');


/**
 * @class Diary
 */
let Diary = new Lure.Content({
    Name: 'Diary',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '#nav-diary'
    },
    Permission: {
        Roles: [D.Role.DairyInput, D.Role.DairySummary]
    },

    Content: `<div class="diary content {{DayType}}">
                <div class="diary-bread l-row">
                    <div class="li diary-date l-row l-flexa-center">
                       <div>Дата вносимых данных: </div>
                       <select class="l-select select working-dates"></select>
                    </div>
                    <div class="li diary-library l-row l-flexa-center">
                        <div>Подразделение: </div>
                        <select class="l-select select lib-list"></select>
                    </div>
                </div>
              </div>`,
    Proto: {
        DateInput: (function(){let d= new Date(); return new Date(d.getFullYear(),d.getMonth(),d.getDate())})(),
        Library: {},
        DateSelected: null,
        DatePrev: null

    },
    Load:'',
    Controller:{
        Target: '.lib-list',
        ListElement: `<option value="{{ID}}">{{Name}}</option>`
    },
    PropTypes:{
        DateInput: Lure.PropTypes.Date,
    },
    PropFormat:{
        DayType: ()=>{
            return !Diary.Proto.Data.DateSelected || Lure.Date(Diary.Proto.Data.DateSelected).isToday ? '':' previous';
        },
        DateInput: (d)=>Lure.Date(d).Format('DD MMMM YYYYг.')
    },
    /**
     * @lends Diary
     */
    GetSet:{
        get CurrentLibraryID(){
            return this.Proto.Data.Library.ID;
        },
        get CurrentDate(){
            return this.Proto.Data.DateSelected;
        }
    },
    Props: function () {
        this.Bread = this.Select('.diary-bread');
        this.SelectLibrary = this.Select('.lib-list');
        this.ControllerWorkingDates = new Lure.Controller.Templator({
            Owner: this,
            Target: '.working-dates',
            Data: Lure.User.Cache.WorkingDates,
            ListElement: `<option value="{{$g.Lure.Date($this).Value}}">{{$g.Lure.Date($this).Format('DD MMMM YYYYг.')}}</option>`
        });

        //this.WidgetVisitAutoCounter = null;
        /** @namespace this.WidgetVisitAutoCounter */
        /** @namespace this.Visitation */
    },
    Methods: function () {
        this.CheckForBread = function () {
            if (this.Summary.isActive)
                this.Bread.style.display = 'none';
            else
                this.Bread.style.display = '';
        };
        this.OnDateSelect = function () {
            console.log('Diary OnDateSelect');
            this.Proto.Data.DateSelected = Lure.Date(this.ControllerWorkingDates.Content.value).Date;
            this.Proto.Data.DatePrev     = Lure.User.Cache.WorkingDates[Lure.User.Cache.WorkingDates.length-2];

            this.Refresh();
        };
        this.OnLibraryChange = function () {

            this.Proto.Data.Library = Lure.User.Cache.LibraryList.Where(x=>x.ID === parseInt(this.SelectLibrary.value)).FirstOrDefault();
            console.log('Diary OnLibraryChange', this.Proto.Data.Library.ID);
            this.Refresh();
        }
    },
    Refresh: function () {
        this.Proto.Refresh();
        this.ChildrenRefresh();
    },
    BeforeShow: function () {
        this.ShowSubContent();
        let Current = Diary.GetSubContentList().Where(x=>x.isActive).FirstOrDefault();
        if (Current)
            Current.ChildrenBack();
    },
    AfterBuild: function () {
        this.Controller.Refresh(Lure.User.Cache.LibraryList);
        this.Proto.Data.Library = Lure.User.Cache.LibraryList.Where(x=>x.ID === parseInt(this.SelectLibrary.value)).FirstOrDefault();

        this.Proto.Data.DateSelected = Lure.User.Cache.WorkingDates.Last();
        this.Proto.Data.DatePrev     = Lure.User.Cache.WorkingDates[Lure.User.Cache.WorkingDates.length-2];
        this.SelectLibrary.addEventListener('change', ()=>{
            this.OnLibraryChange();

        });
        this.ControllerWorkingDates.Refresh();
        this.ControllerWorkingDates.Content.addEventListener('change', ()=>{
            this.OnDateSelect();
        });
        /*this.Select('.diary-date .date-input').onclick = (e)=>{
            Lure.Select('.l-edit-btn-edit', e.currentTarget).click();
            //this.Select('.diary-date .date-input').onclick = void 0;
        }*/
        //this.ss = new DragAndDropItem({Target : document.querySelector('.draggable')});
        // let aaa = new DragAndDropItem({
        //     Target : document.querySelectorAll('.draggable'),
        // });
        this.ddd = new DragAndDropItem({
            Target       : document.querySelectorAll('.draggable'),
        });
    }
});
let Widget = {};
window.Diary = Diary;
window.Widget = Widget;


require('./visitation/visitation.js');

require('./bookware/bookware.js');
require('./summary/summary.js');
require('./movings/movings.js');

module.exports = Diary;
},{"../_common/dictionary":102,"../_common/draganddropitem":103,"./bookware/bookware.js":35,"./movings/movings.js":41,"./summary/summary.js":49,"./visitation/visitation.js":50}],35:[function(require,module,exports){
const HistorySubscription = require('../../_common/history-master/history-subscription');
const D = require('../../_common/dictionary');

new Lure.Content({
    Parent: Diary,
    Name: 'Bookware',
    Type: 'diary-content',
    Control:{
        Target: '#nav-diary-bookware',
    },
    Permission: {
        Roles: [D.Role.DairyInput]
    },
    Content: `<div class="bookware">
                <div class="widgets">
                    <div class="widget-row widget-row-1 l-row"></div>
                </div> 
              </div>`,
    Refresh: function () {
        Widget.GiveBook.Refresh();
        Widget.GiveBookProgress.Refresh();
        Widget.GiveDoc.Refresh();
        Widget.GiveRef.Refresh();
        Widget.GiveOther.Refresh();
    },

    Methods: function () {
        this.ChilrenBack = function () {
            let Subs = this.GetSubContentList();
            for (let i = 0; i < Subs.length; i++){
                Subs[i].Target.appendChild(Subs[i].Content);
            }
        };

    },
    BeforeShow: function () {
        Diary.CheckForBread();
        this.ChilrenBack();
        this.Refresh();
    },
    Show: function () {
        //Widget.GiveBookProgress.Refresh();
        this.Subscription.Subscribe();
    },
    Hide: function(){
        this.Subscription.Unsubscribe();
    },
    AfterBuild: function () {
        this.Subscription = new HistorySubscription({
            OnSubscribe: (HistList)=>{
                if (HistList.Where(h=>h.MessageType === 1).length > 0){
                    Widget.GiveBook.Refresh();
                    Widget.GiveBookProgress.Refresh();
                }
                if (HistList.Where(h=>h.MessageType === 2).length > 0){
                    Widget.GiveDoc.Refresh();
                }
                if (HistList.Where(h=>h.MessageType === 3).length > 0){
                    Widget.GiveRef.Refresh();
                }
                if (HistList.Where(h=>h.MessageType === 4).length > 0){
                    Widget.GiveOther.Refresh();
                }
            },
            Condition: (h)=>h.TypeID === D.SubscribeType.Bookware && h.LibraryID === Diary.CurrentLibraryID && h.LoginID !== Lure.User.ID
        });
    }
});


require('./widgets/give-book/give-book.js');
require('./widgets/give-book-progress/give-book-progress.js');
require('./widgets/give-doc/give-doc.js');

require('./widgets/give-consult/give-consult.js');
require('./widgets/give-other/give-other.js');



},{"../../_common/dictionary":102,"../../_common/history-master/history-subscription":109,"./widgets/give-book-progress/give-book-progress.js":36,"./widgets/give-book/give-book.js":37,"./widgets/give-consult/give-consult.js":38,"./widgets/give-doc/give-doc.js":39,"./widgets/give-other/give-other.js":40}],36:[function(require,module,exports){
Widget.GiveBookProgress = new Lure.Content({
    Parent: Diary.Bookware,
    Name: 'WidgetGiveBookProgress',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget give-book-progress-widget" style="--widget-width: {{Widget.Width}}; --widget-height: {{Widget.Height}}">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">КНИГОВЫДАЧА ЗА {{Month}}</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="give-book-progress-chart"></div>
                    <div class="give-book-progress-plan">
                        <div class="achieved l-col">
                            <div class="value">{{Count}}</div>
                            <div class="casual">выдано</div>
                        </div>
                        <div class="l-col">
                            <div class="value">{{CountPlan}}</div>
                            <div class="casual">цель</div>
                        </div>
                    </div>
                    
                </div>
              </div>`,
    Load: '',
    State:{
        Count: 1946,
        CountPlan: 12000,

        Widget:{
            Width:  2,
            Height: 2,
        }
    },
    PropFormat: {
        Month: ()=>Lure.Date().Format('MMMM').toUpperCase()
    },
    Props: function () {
        this.Chart = new Lure.Chart({
            Target: this.Select('.give-book-progress-chart'),
            Type: 'pie',
            Legend: {
                Visible: false,
            },
            Series: [
                {
                    Labels: {
                        Data: ["1",'2']
                    },
                    Data: [this.State.Count/this.State.CountPlan, 1-this.State.Count/this.State.CountPlan],
                    Colors: ["#7ACDDB","#5C9BAA"],
                    Type: 'ring',
                    Width: 31,
                    AngleStart: -90,
                }
            ],
            Tooltip:{
                Visible: false,
            },

        })
    },
    Methods: function () {
        this.Update = function (CountDelta) {
            this.State.Count = this.State.Count + CountDelta;
            this.Chart.Options.Series[0].Data[0] = this.Proto.Data.Count/this.Proto.Data.CountPlan || 0;
            this.Chart.Options.Series[0].Data[1] = 1-this.Chart.Options.Series[0].Data[0];
            this.Proto.Refresh();
            this.Chart.Refresh({Animation: false});
        };
    },
    Refresh: function () {
        this.Load.Show();
        api.Diary_Bookware_GivingBookProgressGet(Diary.CurrentLibraryID, Diary.CurrentDate, {
            Then: (x)=>{
                this.State.Count     = x[0];
                this.State.CountPlan = x[1];
                this.Update(0);
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });
        this.Chart.Redraw();
    },
});
},{}],37:[function(require,module,exports){
const D = require('../../../../_common/dictionary');
Widget.GiveBook = new Lure.Content({
    Parent: Diary.Bookware,
    Name: 'WidgetGiveBook',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget give-book-widget" style="--widget-width: {{Widget.Width}}; --widget-height: {{Widget.Height}}">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">КНИГИ И БРОШЮРЫ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="column l-col">
                        <div class="caption-today l-row l-flexa-center">
                            <div class="count-caption">
                                <div class="strong">{{Count}}</div>
                                <div class="casual">книг и брошюр выдано сегодня</div>
                            </div>
                        </div>
                        <div class="give-book-place">
                            <div class="caption">Место выдачи</div>
                            <div class="inputs l-row">
                                <div>
                                    <input class="l-radio" type="radio" name="give-book-place" data-prop="PlaceID" data-value="1" id="give-book-place-state" checked="checked">
                                    <label class="l-radio-label" for="give-book-place-state">Стационар <span class="current-val">{{StationaryCount}}</span></label>
                                </div>
                                <div>
                                    <input class="l-radio" type="radio" name="give-book-place" data-prop="PlaceID" data-value="2" id="give-book-place-out">
                                    <label class="l-radio-label" for="give-book-place-out">Внестационар <span class="current-val">{{Count - StationaryCount}}</span></label>
                                </div>
                            </div>
                        </div>
                        <div class="give-book-age">
                            <div class="caption">Возраст</div>
                            <div class="inputs l-row">
                                <div>
                                    <input class="l-radio" type="radio" name="give-book-age" data-prop="Age" data-value="1" id="give-book-age-14">
                                    <label class="l-radio-label" for="give-book-age-14">до 14 лет <span class="current-val">{{Age14Count}}</span></label>
                                </div>
                                <div>
                                    <input class="l-radio" type="radio" name="give-book-age" data-prop="Age" data-value="14" id="give-book-age-30">
                                    <label class="l-radio-label" for="give-book-age-30">от 14 до 30 лет <span class="current-val">{{AgeUnder30Count}}</span></label>
                                </div>
                                <div>
                                    <input class="l-radio" type="radio" name="give-book-age" data-prop="Age" data-value="31" id="give-book-age-30-plus">
                                    <label class="l-radio-label" for="give-book-age-30-plus">старше 30 лет <span class="current-val">{{AgeOver30Count}}</span></label>
                                </div>
                            </div>
                            
                        </div>
                        <div class="give-book-disability">
                            <div class="caption">Инвалидность</div>
                            <div class="inputs l-row">
                                <div>
                                    <input class="l-radio" type="radio" name="give-book-disability" data-prop="isDisabled" data-value="true" id="give-book-disability-yes" {{#if (o.isDisabled) ? 'checked':''}}>
                                    <label class="l-radio-label" for="give-book-disability-yes">есть <span class="current-val">{{DisabledCount}}</span></label>
                                </div>
                                <div>
                                    <input class="l-radio" type="radio" name="give-book-disability" data-prop="isDisabled" data-value="false" id="give-book-disability-no" {{#if (o.isDisabled) ? '':'checked'}}>
                                    <label class="l-radio-label" for="give-book-disability-no">нет <span class="current-val">{{Count - DisabledCount}}</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="column column2 l-col">
                        <div class="give-book-carry-type">
                            <div class="caption">Тип носителя</div>
                            <div class="inputs l-row l-flex-wrap">
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-carry-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Physical}" id="give-book-carry-type-phys" checked="checked">
                                    <label class="l-radio-label" for="give-book-carry-type-phys">физический <span class="current-val">{{TypePhysCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-carry-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Electron}" id="give-book-carry-type-electron">
                                    <label class="l-radio-label" for="give-book-carry-type-electron">электронный <span class="current-val">{{TypeElectronCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-carry-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Installed}" id="give-book-carry-type-install">
                                    <label class="l-radio-label" for="give-book-carry-type-install">инсталлированный <span class="current-val">{{TypeInstalledCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-carry-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Remote}" id="give-book-carry-type-remote">
                                    <label class="l-radio-label" for="give-book-carry-type-remote">удаленный лицензированный <span class="current-val">{{TypeRemoteCount}}</label>
                                </div>
                            </div>
                        </div>
                        <div class="give-book-type">
                            <div class="caption">Тематика</div>
                            <div class="inputs l-row l-flex-wrap">
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.OPL}" id="give-book-type-opl">
                                    <label class="l-radio-label" for="give-book-type-opl">ОПЛ <span class="current-val">{{ThemeOPLCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Nature}" id="give-book-type-nat">
                                    <label class="l-radio-label" for="give-book-type-nat">естествознание <span class="current-val">{{ThemeNatureCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Tech}" id="give-book-type-tech">
                                    <label class="l-radio-label" for="give-book-type-tech">техника <span class="current-val">{{ThemeTechCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Agriculture}" id="give-book-type-agriculture">
                                    <label class="l-radio-label" for="give-book-type-agriculture">сельское хозяйство <span class="current-val">{{ThemeAgricultureCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Art}" id="give-book-type-art">
                                    <label class="l-radio-label" for="give-book-type-art">искусство <span class="current-val">{{ThemeArtCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Sport}" id="give-book-type-sport">
                                    <label class="l-radio-label" for="give-book-type-sport">спорт <span class="current-val">{{ThemeSportCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.WTF_8183}" id="give-book-type-8183">
                                    <label class="l-radio-label" for="give-book-type-8183">81, 83 <span class="current-val">{{Theme8183Count}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Catalog}" id="give-book-type-catalog">
                                    <label class="l-radio-label" for="give-book-type-catalog">справочники <span class="current-val">{{ThemeCatalogCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Children}" id="give-book-type-child">
                                    <label class="l-radio-label" for="give-book-type-child">детская литература <span class="current-val">{{ThemeChildrenCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Fiction}" id="give-book-type-fiction" checked="checked">
                                    <label class="l-radio-label" for="give-book-type-fiction">художественная литература <span class="current-val">{{ThemeFictionCount}}</label>
                                </div>
                                <div class="radio-item">
                                    <input class="l-radio" type="radio" name="give-book-type" data-prop="BookTypeID" data-value="${D.LibraryBookType.Other}" id="give-book-type-other">
                                    <label class="l-radio-label" for="give-book-type-other">дополнительно <span class="current-val">{{ThemeOtherCount}}</label>
                                </div>
                                
                            </div>
                        </div>
                        
                        <div class="button-holder">
                            <button class="l-button button btn-commit">ВЫДАТЬ</button>
                        </div>
                    </div>
                </div>
              </div>`,
    Load: '',
    State:{
        Count: 42,
        PlaceID: 1,
        Age: -1,
        isDisabled: false,
        BookCarryTypeID: D.LibraryBookCarryType.Physical,
        BookTypeID: D.LibraryBookType.Fiction,

        StationaryCount:0,
        Age14Count: 0,
        AgeUnder30Count: 0,
        AgeOver30Count: 0,
        DisabledCount: 0,
        TypePhysCount: 0,
        TypeElectronCount: 0,
        TypeInstalledCount: 0,
        TypeRemoteCount: 0,

        ThemeOPLCount: 0,
        ThemeNatureCount: 0,
        ThemeTechCount: 0,
        ThemeAgricultureCount: 0,
        ThemeArtCount: 0,
        ThemeSportCount: 0,
        Theme8183Count: 0,
        ThemeCatalogCount: 0,
        ThemeChildrenCount: 0,
        ThemeFictionCount: 0,
        ThemeOtherCount: 0,



        Widget:{
            Width:  4,
            Height: 2,
        }
    },
    PropTypes:{
        PlaceID: Lure.PropTypes.UInt,
        Count: Lure.PropTypes.UInt,
        isDisabled: Lure.PropTypes.Bool
    },
    PropFormat:{
        age1:  (c, p)=>Global.GetDigit(p.Reg.Age, 1, 3),
        age2:  (c, p)=>Global.GetDigit(p.Reg.Age, 2, 3),
        age3:  (c, p)=>Global.GetDigit(p.Reg.Age, 3, 3),
    },
    Refresh: function () {
        this.Load.Show();
        api.Diary_Bookware_GivingBookGet(Diary.CurrentLibraryID, Diary.CurrentDate, {
            Then: (Data)=>{
                let St = this.State;
                St.Count = Data.Count;
                St.StationaryCount = Data.StationaryCount;
                St.Age14Count = Data.Age14Count;
                St.AgeUnder30Count = Data.AgeUnder30Count;
                St.AgeOver30Count = Data.AgeOver30Count;
                St.DisabledCount = Data.DisabledCount;
                St.TypePhysCount = Data.TypePhysCount;
                St.TypeElectronCount = Data.TypeElectronCount;
                St.TypeInstalledCount = Data.TypeInstalledCount;
                St.TypeRemoteCount = Data.TypeRemoteCount;

                St.ThemeOPLCount = Data.ThemeOPLCount;
                St.ThemeNatureCount = Data.ThemeNatureCount;
                St.ThemeTechCount = Data.ThemeTechCount;
                St.ThemeAgricultureCount = Data.ThemeAgricultureCount;
                St.ThemeArtCount = Data.ThemeArtCount;
                St.ThemeSportCount = Data.ThemeSportCount;
                St.Theme8183Count = Data.Theme8183Count;
                St.ThemeCatalogCount = Data.ThemeCatalogCount;
                St.ThemeChildrenCount = Data.ThemeChildrenCount;
                St.ThemeFictionCount = Data.ThemeFictionCount;
                St.ThemeOtherCount = Data.ThemeOtherCount;
                this.Proto.Refresh();
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        })
    },
    Props: function () {
        this.RadioPlaceStation = this.Select('#give-book-place-state');
        this.RadioDisabilityN = this.Select('#give-book-disability-no');
        this.RadioBookCarryTypePhysical = this.Select('#give-book-carry-type-phys');
        this.RadioBookType = this.Select('#give-book-type-fiction');
        this.ButtonCommit = this.Select('.btn-commit');

    },
    Methods: function () {
        this.Clear = function () {
            this.RadioPlaceStation.checked = true;
            this.Proto.Data.PlaceID = 1;

            this.RadioDisabilityN.checked = true;
            this.Proto.Data.isDisabled = false;

            this.RadioBookCarryTypePhysical.checked = true;
            this.Proto.Data.BookCarryTypeID = D.LibraryBookCarryType.Physical;



            let RadioAge = this.Select('[name="give-book-age"]:checked');
            if (RadioAge)
                RadioAge.checked = false;
            this.RadioBookType.checked = true;
            this.Proto.Data.Age = -1;
            this.Proto.Data.BookTypeID = D.LibraryBookType.Fiction;
        };
        this.Confirm = function () {
            let isValid = true;
            if (this.Proto.Data.Age < 0){
                isValid = false;
                Lure.System.ShowWarn('Выберите возраст получателя');
            }
            if (this.Proto.Data.BookTypeID < 0){
                isValid = false;
                Lure.System.ShowWarn('Выберите тематику');
            }

            if (!isValid)
                return;

            Lure.Button.Lock(this.ButtonCommit);

            api.Diary_Bookware_GivingBookAdd(
                Diary.CurrentLibraryID,
                Diary.CurrentDate,
                this.State.PlaceID,
                this.State.Age,
                this.State.BookCarryTypeID,
                this.State.BookTypeID,
                this.State.isDisabled, {
                Then: (x)=>{
                    if (x>0){
                        Lure.System.ShowSuccess('Книга или брошюра выдана');
                        this.Proto.SetProperty('Count', this.State.Count+1);
                        Widget.GiveBookProgress.Update(1);
                        this.Clear();
                        this.Refresh();
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonCommit);
                }
            });
        };
    },
    AfterBuild: function () {
        this.AddEventListener('change', '.l-radio', function (e) {
            this.Proto.SetProperty(e.currentTarget.dataset['prop'], e.currentTarget.dataset['value']);
        });
        this.ButtonCommit.onclick = ()=>{this.Confirm();};
    }
});










},{"../../../../_common/dictionary":102}],38:[function(require,module,exports){
const D = require('../../../../_common/dictionary');

Widget.GiveRef = new Lure.Content({
    Parent: Diary.Bookware,
    Name: 'WidgetGiveConsult',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget give-consult-widget" style="--widget-width: {{Widget.Width}}; --widget-height: {{Widget.Height}}">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">СПРАВКИ И КОНСУЛЬТАЦИИ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">{{Count}}</div>
                            <div class="casual">справок и консультаций выдано сегодня</div>
                        </div>
                    </div>
                    <div class="give-consult-age">
                        <div class="caption">Возраст</div>
                        <div class="inputs l-row">
                            <div>
                                <input class="l-radio" type="radio" name="give-consult-age" data-prop="Age" data-value="1" id="give-consult-age-14">
                                <label class="l-radio-label" for="give-consult-age-14">до 14 лет <span class="current-val">{{Age14Count}}</span></label>
                            </div>
                            <div>
                                <input class="l-radio" type="radio" name="give-consult-age" data-prop="Age" data-value="14" id="give-consult-age-30">
                                <label class="l-radio-label" for="give-consult-age-30">от 14 до 30 лет <span class="current-val">{{AgeUnder30Count}}</span></label>
                            </div>
                            <div>
                                <input class="l-radio" type="radio" name="give-consult-age" data-prop="Age" data-value="31" id="give-consult-age-30-plus">
                                <label class="l-radio-label" for="give-consult-age-30-plus">старше 30 лет <span class="current-val">{{AgeOver30Count}}</span></label>
                            </div>
                        </div>
                    </div>
                    <div class="give-consult-type">
                        <div class="caption">Тип носителя</div>
                        <div class="inputs l-row l-flex-wrap">
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-consult-type" data-prop="ConsultTypeID" data-value="${D.LibraryConsultType.Theme}" id="give-consult-type-theme">
                                <label class="l-radio-label" for="give-consult-type-theme">тематический <span class="current-val">{{TypeThemeCount}}</span></label>
                            </div>
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-consult-type" data-prop="ConsultTypeID" data-value="${D.LibraryConsultType.Factor}" id="give-consult-type-factor">
                                <label class="l-radio-label" for="give-consult-type-factor">фактографический <span class="current-val">{{TypeFactorCount}}</span></label>
                            </div>
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-consult-type" data-prop="ConsultTypeID" data-value="${D.LibraryConsultType.Library}" id="give-consult-type-lib">
                                <label class="l-radio-label" for="give-consult-type-lib">библиографический <span class="current-val">{{TypeLibraryCount}}</span></label>
                            </div>
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-consult-type" data-prop="ConsultTypeID" data-value="${D.LibraryConsultType.Consult}" id="give-consult-type-consult" checked="checked">
                                <label class="l-radio-label" for="give-consult-type-consult">консультация <span class="current-val">{{TypeConsultCount}}</span></label>
                            </div>
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-consult-type" data-prop="ConsultTypeID" data-value="${D.LibraryConsultType.Copy}" id="give-consult-type-copy">
                                <label class="l-radio-label" for="give-consult-type-copy">удаленные справки <span class="current-val">{{TypeCopyCount}}</span></label><!--копия-->
                            </div>
                        </div>
                    </div>
                    
                    <div class="button-holder">
                        <button class="l-button button btn-commit">ВЫДАТЬ</button>
                    </div>
                </div>
              </div>`,
    Load: '',
    State: {
        Count: 0,
        Age: -1,
        ConsultTypeID: D.LibraryConsultType.Consult,

        Age14Count: 0,
        AgeUnder30Count: 0,
        AgeOver30Count: 0,

        TypeThemeCount: 0,
        TypeFactorCount: 0,
        TypeLibraryCount: 0,
        TypeConsultCount: 0,
        TypeCopyCount: 0,

        Widget:{
            Width:  2,
            Height: 2,
        }
    },
    Refresh: function () {
        this.Load.Show();
        api.Diary_Bookware_GivingConsultGet(Diary.CurrentLibraryID, Diary.CurrentDate, {
            Then: (Data)=>{
                let St = this.State;
                St.Count            = Data.Count;
                St.Age14Count       = Data.Age14Count;
                St.AgeUnder30Count  = Data.AgeUnder30Count;
                St.AgeOver30Count   = Data.AgeOver30Count;
                St.DisabledCount    = Data.DisabledCount;
                St.TypeThemeCount   = Data.TypeThemeCount;
                St.TypeFactorCount  = Data.TypeFactorCount;
                St.TypeLibraryCount = Data.TypeLibraryCount;
                St.TypeConsultCount = Data.TypeConsultCount;
                St.TypeCopyCount    = Data.TypeCopyCount;
                this.Proto.Refresh();
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        })
    },
    Props: function () {
        this.RadioCopy = this.Select('#give-consult-type-copy');
        this.RadioConsultType = this.Select('#give-consult-type-consult');
        this.ButtonCommit = this.Select('.btn-commit');

    },
    Methods: function () {
        this.Clear = function () {
            let RadioAge = this.Select('[name="give-consult-age"]:checked');
            if (RadioAge)
                RadioAge.checked = false;
            this.RadioConsultType.checked = true;
            this.Proto.Data.Age = -1;
            this.Proto.Data.ConsultTypeID = D.LibraryConsultType.Consult;
        };
        this.Confirm = function () {
            let isValid = true;
            if (this.Proto.Data.Age < 0){
                isValid = false;
                Lure.System.ShowWarn('Выберите возраст получателя');
            }
            if (this.Proto.Data.ConsultTypeID < 0){
                isValid = false;
                Lure.System.ShowWarn('Выберите тип носителя');
            }
            if (!isValid)
                return;
            Lure.Button.Lock(this.ButtonCommit);
            api.Diary_Bookware_GivingConsultAdd(Diary.CurrentLibraryID, Diary.CurrentDate, this.State.Age, this.State.ConsultTypeID,  {
                    Then: (x)=>{
                        if (x>0){
                            Lure.System.ShowSuccess(this.RadioCopy.checked ? 'Копия справки выдана':'Справка или консультация выдана');
                            this.Proto.SetProperty('Count', this.State.Count+1);
                            this.Clear();
                            this.Refresh();
                        }
                    },
                    Finally: ()=>{
                        Lure.Button.Release(this.ButtonCommit);
                    }
                });
        };
    },
    AfterBuild: function () {
        this.AddEventListener('change', '.l-radio', function (e) {
            this.Proto.SetProperty(e.currentTarget.dataset['prop'], e.currentTarget.dataset['value']);
        });
        this.ButtonCommit.onclick = ()=>{this.Confirm();};
    }
});
},{"../../../../_common/dictionary":102}],39:[function(require,module,exports){
const D = require('../../../../_common/dictionary');
Widget.GiveDoc = new Lure.Content({
    Parent: Diary.Bookware,
    Name: 'WidgetGiveDoc',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget give-doc-widget" style="--widget-width: {{Widget.Width}}; --widget-height: {{Widget.Height}}">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">КОПИИ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">{{Count}}</div>
                            <div class="casual">копий выдано сегодня</div>
                        </div>
                    </div>
                    <div class="give-doc-age">
                        <div class="caption">Возраст</div>
                        <div class="inputs">
                            <div class="checkbox-holder">
                                <input class="l-radio" type="radio" name="give-doc-age" data-prop="Age" data-value="1" id="give-doc-age-14">
                                <label class="l-radio-label" for="give-doc-age-14">до 14 лет <span class="current-val">{{Age14Count}}</span></label>
                            </div>
                            <div class="checkbox-holder">
                                <input class="l-radio" type="radio" name="give-doc-age" data-prop="Age" data-value="14" id="give-doc-age-30">
                                <label class="l-radio-label" for="give-doc-age-30">от 14 до 30 лет <span class="current-val">{{AgeUnder30Count}}</span></label>
                            </div>
                            <div class="checkbox-holder">
                                <input class="l-radio" type="radio" name="give-doc-age" data-prop="Age" data-value="31" id="give-doc-age-30-plus">
                                <label class="l-radio-label" for="give-doc-age-30-plus">старше 30 лет <span class="current-val">{{AgeOver30Count}}</span></label>
                            </div>
                        </div>
                        
                    </div>
                    <div class="give-doc-type none">
                        <div class="caption">Тип носителя</div>
                        <div class="inputs l-row l-flex-wrap">
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-doc-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Physical}" id="give-doc-type-phys" checked="checked">
                                <label class="l-radio-label" for="give-doc-type-phys">физический <span class="current-val">{{TypePhysCount}}</span></label>
                            </div>
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-doc-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Electron}" id="give-doc-type-electron">
                                <label class="l-radio-label" for="give-doc-type-electron">электронный <span class="current-val">{{TypeElectronCount}}</span></label>
                            </div>
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-doc-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Installed}" id="give-doc-type-installed">
                                <label class="l-radio-label" for="give-doc-type-installed">инсталированный <span class="current-val">{{TypeInstalledCount}}</span></label>
                            </div>
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-doc-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Remote}" id="give-doc-type-remote">
                                <label class="l-radio-label" for="give-doc-type-remote">удаленный лицензионный <span class="current-val">{{TypeRemoteCount}}</span></label>
                            </div>
                            <div class="radio-item">
                                <input class="l-radio" type="radio" name="give-doc-type" data-prop="BookCarryTypeID" data-value="${D.LibraryBookCarryType.Copy}" id="give-doc-type-copy">
                                <label class="l-radio-label" for="give-doc-type-copy">копия <span class="current-val">{{TypeCopyCount}}</span></label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="button-holder">
                        <button class="l-button button btn-commit">ВЫДАТЬ</button>
                    </div>
                </div>
              </div>`,
    Load: '',
    State:{
        Count: 0,
        Age: -1,
        //BookCarryTypeID: D.LibraryBookCarryType.Physical,

        Age14Count: 0,
        AgeUnder30Count: 0,
        AgeOver30Count: 0,

        // TypePhysCount: 0,
        // TypeElectronCount: 0,
        // TypeInstalledCount: 0,
        // TypeRemoteCount: 0,
        // TypeCopyCount: 0,
        Widget:{
            Width:  2,
            Height: 2,
        }
    },
    Refresh: function () {
        this.Load.Show();
        api.Diary_Bookware_GivingDocGet(Diary.CurrentLibraryID, Diary.CurrentDate, {
            Then: (Data)=>{
                let St = this.State;
                St.Count = Data.Count;
                St.Age14Count = Data.Age14Count;
                St.AgeUnder30Count = Data.AgeUnder30Count;
                St.AgeOver30Count = Data.AgeOver30Count;
                // St.TypePhysCount = Data.TypePhysCount;
                // St.TypeElectronCount = Data.TypeElectronCount;
                // St.TypeInstalledCount = Data.TypeInstalledCount;
                // St.TypeRemoteCount = Data.TypeRemoteCount;
                // St.TypeCopyCount = Data.TypeCopyCount;
                this.Proto.Refresh();
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        })
    },
    Props: function () {
        this.RadioBookCarryTypePhysical = this.Select('#give-doc-type-phys');
        this.RadioCopy = this.Select('#give-doc-type-copy');
        this.ButtonCommit = this.Select('.btn-commit');
    },
    Methods: function () {
        this.Clear = function () {
            //this.RadioBookCarryTypePhysical.checked = true;
            //this.Proto.Data.BookCarryTypeID = D.LibraryBookCarryType.Physical;

            let RadioAge = this.Select('[name="give-doc-age"]:checked');
            if (RadioAge)
                RadioAge.checked = false;
            this.Proto.Data.Age = -1;
        };
        this.Confirm = function () {
            if (this.Proto.Data.Age < 0){
                return Lure.System.ShowWarn('Выберите возраст получателя');
            }
            Lure.Button.Lock(this.ButtonCommit);
            api.Diary_Bookware_GivingDocAdd(Diary.CurrentLibraryID, Diary.CurrentDate, this.State.Age, {
                    Then: (x)=>{
                        if (x>0){
                            Lure.System.ShowSuccess('Копия документа выдана');
                            this.Proto.SetProperty('Count', this.State.Count+1);
                            this.Clear();
                            this.Refresh();
                        }
                    },
                    Catch: ()=>{
                        Lure.System.Error('Операция не удалась');
                    },
                    Finally: ()=>{
                        Lure.Button.Release(this.ButtonCommit);
                    }
                });
        };
    },
    AfterBuild: function () {
        this.AddEventListener('change', '.l-radio', function (e) {
            this.Proto.SetProperty(e.currentTarget.dataset['prop'], e.currentTarget.dataset['value']);
        });
        this.ButtonCommit.onclick = ()=>{this.Confirm();};
    }
});
},{"../../../../_common/dictionary":102}],40:[function(require,module,exports){
Widget.GiveOther = new Lure.Content({
    Parent: Diary.Bookware,
    Name: 'WidgetGiveOther',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget give-other-widget" style="--widget-width: {{Widget.Width}}; --widget-height: {{Widget.Height}}">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">ПРОЧЕЕ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">{{CountSum}}</div>
                            <div class="casual">из фондов других библиотек выдано сегодня</div>
                        </div>
                    </div>
                    <div class="give-other-list"></div>
                </div>
              </div>`,
    Load: '',
    State:{
        CountSum: 14,

        Widget:{
            Width:  2,
            Height: 2,
        }
    },
    Controller:{
        Target: '.give-other-list',
        ListElement: `<div class="event-item progress-bar line-interlinear">
                                <div class="progress-caption l-row l-flex-between">
                                    <div class="casual">{{$g.Dictionary.BookwareOtherPlaceDict[o.ID]}}</div>
                                    <div class="value-inline-changer">
                                        <button class="l-pointer control-inline control-inline-minus" {{#data-line}}>-</button>
                                        <div class="value-last value-inline">{{Count}}</div>
                                        <button class="l-pointer control-inline control-inline-plus" {{#data-line}}>+</button>
                                    </div>
                                </div>
                            </div>`,
        EmptyMessage: `<div class="list-empty">нет объектов</div>`
    },
    Refresh: function () {
        this.Load.Show();
        api.Diary_Bookware_GivingOtherGet(Diary.CurrentLibraryID, Diary.CurrentDate, -1, {
            Then: (list)=>{
                this.Controller.Refresh(list);
                let Count = 0;
                for (let i = 0; i < list.length; i++)
                {
                    this.Controller.Data[i].Count = list[i].Count;
                    Count += list[i].Count;
                }
                this.Proto.SetProperty('CountSum', Count);
            },
            Finally: ()=>{
                this.Load.Hide();
            }

        });
    },
    Props: function () {

    },
    Methods: function () {
        this.CountIncrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Bookware_GivingOtherAdd(Diary.CurrentLibraryID, Diary.CurrentDate, DataItem.Data.ID, 1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count++;
                        this.Proto.Data.CountSum++;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });

        };
        this.CountDecrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Bookware_GivingOtherAdd(Diary.CurrentLibraryID, Diary.CurrentDate, DataItem.Data.ID, -1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count--;
                        this.Proto.Data.CountSum--;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });
        };
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.control-inline-plus', function (e, p) {
            this.CountIncrease(p.LineID, e.currentTarget);
        });
        this.AddEventListener('click', '.control-inline-minus', function (e, p) {
            this.CountDecrease(p.LineID, e.currentTarget);
        });
    }
});






















},{}],41:[function(require,module,exports){
const InputBox = require("../../_common/input-box/input-box");
const D = require("../../_common/dictionary");

new Lure.Content({
    Parent: Diary,
    Name: 'Movings',
    Visible: false,
    Target: '.body',
    Route: false,
    Control: {
        Target: '#nav-diary-book-out',
        OnClick: function () {
            this.Toggle();
        }
    },
    Permission: {
        Roles: [D.Role.DairyInput]
    },
    Content:`<div class="moving-stations-container">
    <div class="ms-container-2">
        <div class="moving-stations content">
            <div class="content-container">
                <div class="header">Работа передвижек</div>
                <div class="date">
                    <span class="less l-pointer"></span> 
                    <span>{{DateValue}}</span> 
                    <span class="more l-pointer"></span>
                </div>
                <div class="content-block l-invert">
                    <div class="content-row">
                        <div class="row-left-one">Количество передвижек</div>
                        <div class="row-right-one value-cell editable editable-special">{{MovingsCount}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Количество читателей</div>
                        <div class="row-right-one value-cell editable editable-special">{{MovingsReaders}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Количество мероприятий</div>
                        <div class="row-right-one value-cell editable editable-special">{{MovingsEventCount}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Количество обслуженных на мероприятиях</div>
                        <div class="row-right-one value-cell editable editable-special">{{MovingsEventServedCount}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Всего выдано книг</div>
                        <div class="row-right-one value-cell">{{BookGiving}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">ОПЛ</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookOPL}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Естествознание</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookNature}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Техника</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookTech}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Сельское хозяйство</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookAgriculture}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Искусство</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookArt}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Спорт</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookSport}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">81, 83</div>
                        <div class="row-right-one value-cell editable editable-special">{{Book8183}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Справочники</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookDict}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Детская литература</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookChild}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Художественная литература</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookFiction}}</div>
                    </div>
                    <div class="content-row">
                        <div class="row-left-one">Дополнительно</div>
                        <div class="row-right-one value-cell editable editable-special">{{BookOther}}</div>
                    </div>
                    
                    {{#each Empty}}
                    <div class="content-row">
                        <div class="row-left-one">&nbsp;</div>
                        <div class="row-right-one">&nbsp;</div>
                    </div>
                    {{#endeach}}
                </div>
             </div>
            <div class="button-container">
                <div class="button-holder">
                    <button class="l-button button button2 btn-cancel">ОТМЕНА</button>
                    <button class="l-button button btn-confirm">СОХРАНИТЬ</button>
                </div>
            </div>
        </div>
    </div>
</div>`,
    Proto: {
        Empty: new Array(7),
        /* ***  */
        LibraryID: 0,
        DateValue: Lure.Date().AddDays(-1).DayStart,
        MovingsCount: 0,
        MovingsReaders: 0,
        MovingsEventCount: 0,
        MovingsEventServedCount: 0,

        BookGiving: 0,
        BookOPL: 0,
        BookNature: 0,
        BookTech: 0,
        BookAgriculture: 0,
        BookArt: 0,
        BookSport: 0,
        Book8183: 0,
        BookDict:0,
        BookChild:0,
        BookFiction: 0,
        BookOther:0,
    },
    PropFormat: {
        DateValue: (d)=>Lure.Date(d).Format('DD MMMM YYYY', true),
    },
    Animation: {
        Show: 'le-show',
        Hide: 'le-hide'
    },
    Props: function(){
        this.DateLimit = Lure.Date().AddDays(-1).Date;

        this.ButtonConfirm = this.Select('.btn-confirm');
        this.ButtonCancel = this.Select('.btn-cancel');
    },
    Methods: function () {
        this.SaveInformation = function () {
            Lure.Button.Lock(this.ButtonConfirm);
            api.Diary_Movings_Add(Diary.CurrentLibraryID, this.State, {
                Then: (r)=>{
                    if (r === -2){
                        return Lure.System.Warn('За этот день данные уже внесены');
                    }
                    if (r < 0){
                        return Lure.System.Error('Ошибка сервера');
                    }
                    Lure.System.ShowSuccess('Сохранено!');
                },
                Catch: ()=>{
                    Lure.System.Error('Ошибка сервера');
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonConfirm);
                }
            });
        };
        this.Cancel = function () {
            for (let x in this.Proto.Data)
                if (this.Proto.Data.hasOwnProperty(x) && x !== 'Empty' && x !== 'DateValue')
                    this.Proto.Data[x] = 0;
            this.Proto.Refresh();
            this.Hide();
        };
        this.BookGivingCalc = function () {
            let s = 0;
            for (let b in this.Proto.Data){
                if (this.Proto.Data.hasOwnProperty(b) && b.indexOf('Book') > -1 && b !== 'BookGiving'){
                    s += this.Proto.Data[b];
                }
            }
            this.Proto.Data.BookGiving = s;
            this.Proto.Refresh();
        };

        this.MoveDay = function (delta) {
            if (delta < 0 && Lure.Date(this.State.DateValue).Day === 1){
                return;
            }
            if (delta > 0 && Lure.Date(this.State.DateValue).Day === Lure.Date(this.State.DateValue).CountDays){
                return;
            }
            this.State.DateValue = Lure.Date(this.State.DateValue).AddDays(delta).Date;
            this.Refresh();
        }
    },
    Refresh: function(){

        debugger
        this.DateLimit = Lure.Date().AddDays(-1).Date;
        console.log(this.DateLimit);
        api.Diary_Movings_Get(Diary.CurrentLibraryID, this.State.DateValue, {
            Then: (m)=>{
                this.Proto.Refresh(m);
                this.BookGivingCalc();
            }
        })
    },
    BeforeShow: function(){
        this.State.DateValue = Diary.CurrentDate;
        this.Refresh();
    },
    AfterBuild: function () {
        this.ButtonConfirm.addEventListener('click', ()=>this.SaveInformation());
        this.ButtonCancel.addEventListener('click', ()=>this.Cancel());
        this.AddEventListener('click', '.l-edit-btn-edit', (e)=>{
                let Property = e.currentTarget.parentElement.parentElement.parentElement.dataset['property'];
                InputBox.Run(
                    e.currentTarget,
                    this.Proto.GetProperty(Property),
                    (v) => {
                        this.Proto.SetProperty(Property, v);
                        this.BookGivingCalc();
                    },
                    {Caption: e.currentTarget.parentElement.children[0].innerText}
                )
            });

        this.Select('.less').addEventListener('click', ()=>this.MoveDay(-1));
        this.Select('.more').addEventListener('click', ()=>this.MoveDay(1));
    }
});
},{"../../_common/dictionary":102,"../../_common/input-box/input-box":110}],42:[function(require,module,exports){
const InputBox = require("../../../_common/input-box/input-box");

const ForbiddenToEditCols = ['P1V21','P1V22','P1V23','P1V24','P1V25','P1V26','P1V27','P1V28','P1V29','P1V30','P1V31','P1V32','P1V33','P1V34','P1V35','P1V36'];
Diary.Summary.LineEditor = new Lure.Content({
    Parent: Diary.Summary,
    Type: 'side-abs-content',
    //Visible: true,
    Route: false,
    Content: `<div class="line-editor l-col">
                  <div class="head">
                    <h2 class="h2">Редактирование данных за день</h2>
                    <div class="date-shifter l-row l-flex-center l-flexa-center">
                        <div class="date-shift-control left"></div> 
                        <div class="date-shift-value">{{DateSelected}}</div>
                        <div class="date-shift-control right"></div>
                    </div>
                  </div>
                  <div class="list"></div>
                  <div class="foot l-row l-flex-center">
                    <div class="errors abs">{{Errors}}</div>
                    <button class="btn-clear {{#if (this.Changes && this.Changes.length #more 0)? '':'none'}}" title="Очистить"></button>

                    <button class="l-button button button2 btn-cancel">ОТМЕНА</button>
                    <button class="l-button button btn-confirm">СОХРАНИТЬ</button>
                  </div>
              </div>`,
    Animation: {
        Show: 'animation-show',
        Hide: 'animation-hide',
    },
    State: {
        DateSelected: Lure.Date().Format('DD.MM.YYYY'),
        Errors: '',
        DataLine: null,
    },
    Controller: {
        Target: '.list',
        ListElement: `<div class="line-item l-row l-flex-between {{State}}"> 
                        <div class="name l-text-overflow" title="{{Name}}">{{Name}}</div>
                        <div class="value rel">
                            {{#if $this.Description}}
                            <div class="hint" data-hint="{{Description}}">f</div>
                            {{#endif}}
                            <div class="value-value {{#if (o.isEditable) ? 'numpadable':''}}">{{Value}}</div>
                        </div>
                      </div>`
    },
    Props: function () {
        this._Failed = []; //list of invalid props
        this._DataItem = null;
        this.Changes = [];

        this.ButtonConfirm = this.Select('.btn-confirm');
    },
    Methods: function () {
        this.Prepare = function (LineID) {
            this.State.Errors = [];
            this.Changes      = [];
            this.Proto.Data.LineID   = LineID;
            this.Proto.Data.DataLine = Lure.Object.Clone(Diary.Summary.CurrentPart.Controller.GetDataItemByLineID(LineID).Data);
            let DataLine = this.Proto.Data.DataLine;
            let List = [];
            for (let k in DataLine){
                if (DataLine.hasOwnProperty(k) && Diary.Summary._KeyRegex.test(k) ){
                    let D = DataLine[k].D;
                    D.GetValue = Diary.Summary.D[k].GetValue;
                    D.Check    = Diary.Summary.D[k].Check;
                    let ListElem = {
                        _Value: DataLine[k].Value,
                        Value: DataLine[k].Value,
                        State: '',
                        D: D,
                        Prop: k,
                        Name: k.replace('P', '').replace('V', '.') + " " + D.Name,
                        Description: D.Description,
                        //DataValue: DataLine[k].Value,
                        isEditable: D.GetValue === null && (ForbiddenToEditCols.indexOf(k) < 0),
                    };
                    List.push(ListElem)
                }
            }
            List = List.sort((a,b)=>{
                a = a.Name.match(/[\d]+.[\d]+/)[0].split('.');
                b = b.Name.match(/[\d]+.[\d]+/)[0].split('.');
                let PA = parseInt(a[0]);
                let PB = parseInt(b[0]);
                let VA = parseInt(a[1]);
                let VB = parseInt(b[1]);


                if (PA > PB)
                    return 1;
                if (PA < PB)
                    return -1;

                if (VA > VB)
                    return 1;
                if (VA < VB)
                    return -1;
                return 0;
            });
            this.Controller.Data = List;
            this.Controller.Refresh();
            this.Proto.SetProperty('DateSelected', Lure.Date(this.Proto.Data.DataLine.DateValue).Format('DD.MM.YYYY') );
        };
        this.Check = function () {
            let DataItems = this.Controller.DataItems;
            let Failed = [];
            this.State.Errors = '';
            for (let i = 0; i < DataItems.length; i++){
                //DataItems[i].DOM.classList.remove('invalid');
                let Line = DataItems[i].Data;
                let k = Line.Prop;
                Line.State = '';
                Line.Value = !Line.D.GetValue ? Line.Value : Line.D.GetValue(this.State.DataLine);
                this.State.DataLine[Line.Prop].Value = Line.Value;
                let isChanged = Line.Value !== Line._Value;

                if (isChanged){
                    Line.State = 'changed';
                    if (this.Changes.indexOf(k) < 0)
                        this.Changes.push(k);

                    this.Controller.Refresh(DataItems[i].LineID);
                }
                else if (!isChanged && this.Changes.indexOf(k) > -1){
                    Lure.Array.Remove(this.Changes, x=>x===k);
                }

                if (Line.D.Check){
                    if (!Line.D.Check(this.State.DataLine)){
                        Line.State = 'invalid';
                        Failed.push(Line.Prop.replace('P', '').replace('V', '.'));
                    }
                }
                // if (isChanged){
                //     this.Controller.Refresh(DataItems[i].LineID);
                // }

            }
            this.Controller.Refresh();
            this.State.Errors = Failed.length < 1 ? '': `Ошибки в полях: ${Failed.join(', ')}`;
            this.Proto.Refresh();
        };
        this.NumPadConfirm = function (Val, DataItem) {
            Val = parseInt(Val);
            DataItem.Data.Value = Val;
            this.State.DataLine[DataItem.Data.Prop].Value = Val;
            this.Check();
            //console.log(DataItem.LineID, this.Changes);
        };
        this.LineShift = function (delta) {
            this.State.Errors = [];
            this.Changes      = [];
            let DataItem = Lure.Object.Clone(Diary.Summary.CurrentPart.Controller.GetPrivateDataItemByLineID(this.State.LineID + delta));
            if ((this.State.LineID < 1 && delta < 0) || DataItem === null){
                console.log('limit');
                return;
            }
            this.State.LineID = this.State.LineID + delta;
            this.Prepare(this.State.LineID);
            this.Check();
        };
        this.Cancel = function () {
            this.Hide();
        };
        this.Clear = function () {
            this.Prepare(this.State.LineID);
        };
        this.Confirm = function () {
            if (this.Changes.length < 1){
                return Lure.System.ShowNotice('Нет изменений для сохранения');
            }
            let CurrentPart = Diary.Summary.CurrentPart;
            let DataReal = CurrentPart.Controller.GetDataItemByLineID(this.State.LineID).Data;

            let Changed = [];
            for (let i = 0; i < this.Changes.length; i++){
                let k = this.Changes[i];
                if (Diary.Summary.D[k].GetValue !== null){
                    continue;
                }
                Changed.push({
                    Name: k,
                    Value: this.State.DataLine[this.Changes[i]].Value
                });
            }
            console.info(this.Changes, Changed);
            let Changing = [{
                DateValue: Lure.Date(this.State.DataLine.DateValue).DateCs,
                Changed: Changed,
            }];
            Lure.Button.Lock(this.ButtonConfirm);
            api.Diary_Summary_Set(Diary.CurrentLibraryID, Changing, [], [], {
                Then: (x)=>{
                    if (x > 0){
                        for (let i = 0; i < this.Changes.length; i++){
                            let k = this.Changes[i];
                            DataReal[k].Value  = this.State.DataLine[k].Value;
                            DataReal[k]._Value = this.State.DataLine[k].Value;
                        }
                        CurrentPart.Controller.Refresh();
                        Lure.System.ShowSuccess('Изменения сохранены');
                        this.Changes = [];
                        this.Hide();
                    }
                    else{
                        return Lure.System.ShowError('Не удалось сохранить.');
                    }
                },
                Catch: ()=>{
                    //Lure.System.ShowNotice('Ошибка сервера');
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonConfirm);
                }
            });


        }
    },
    BeforeShow: function (LineID) {
        InputBox.Hide();
        LineID = parseInt(LineID);
        this.Prepare(LineID);
        //this.Check();
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.line-item .value', function (e, p) {
            let DataItem = this.Controller.GetDataItemByLineID(p.LineID);
            if (DataItem.Data.D.GetValue)
                return;
            InputBox.Run(e.currentTarget, DataItem.Data.Value, (v)=>{
                this.NumPadConfirm(v, DataItem);
            });
        });
        this.Select('.date-shift-control.left').onclick = ()=>{this.LineShift(-1)};
        this.Select('.date-shift-control.right').onclick = ()=>{this.LineShift(1)};
        this.ButtonConfirm.onclick = ()=>{
            if (this.State.Errors.length > 0)
                return Lure.System.ShowWarn('Устраните ошибки валидации.');
            this.Confirm();
        };
        this.Select('.btn-cancel').onclick = ()=>{
            this.Cancel();
        };
        this.Select('.btn-clear').onclick = ()=>{
            this.Clear();
        };
    }
});





/*

(()=>{
    let x = '';
    for (let i = 2; i < 37; i++){
        x += `p1.Value_${i} as P1_Value_${i},
`;
    }
    console.log(x);
})();

*/






},{"../../../_common/input-box/input-box":110}],43:[function(require,module,exports){
Diary.Summary.SummaryPart1 = new Lure.Content({
    Parent: Diary.Summary,
    Name: 'SummaryPart1',
    Type: 'diary-summary-content',
    Control:{
        Target: '#nav-diary-summary-1',
    },
    Visible: true,   
    Content: `<div class="summary-part">
                <div class="tabs">
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part1" id="summary-part1-1" data-tableid="1" checked="checked">
                        <label class="label tab-label" for="summary-part1-1">ЗАПИСЬ И ПОСЕЩЕНИЯ</label>
                    </div>
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part1" id="summary-part1-2" data-tableid="2">
                        <label class="label tab-label" for="summary-part1-2">МЕРОПРИЯТИЯ И КЛУБЫ</label>
                    </div>
                </div>
                <div class="table-holder">
                    <table class="table summary-table fixed-height">
                        <thead class="thead">
                            {{#each this.TableHead}}
                                <tr class="trow head-{{Line}}">
                                    {{#each Cells}}
                                        <th colspan="{{Colspan}}" rowspan="{{Rowspan}}" class="tcell" title="{{Name}}">{{Name}}</th>
                                    {{#endeach}}
                                </tr>
                            {{#endeach}}
                        
                        </thead>
                        <tbody class="tbody"></tbody>
                    </table>
                </div>
              </div>`,
    Load: '',
    State:{
        TableID: 1,
        TableHead: {
            1:[
                {
                    Line: 1,
                    Cells: [
                        {
                            Name: 'Дата',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Всего',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Вновь записавшихся',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Всего стационар',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Возраст',
                            Colspan: 3,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Удаленные пользователи',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Школьники',
                            Colspan: 5,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Отдельные группы',
                            Colspan: 4,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Всего посещений',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'В том числе',
                            Colspan: 3,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 2,
                    Cells: [
                        {
                            Name: 'до 14 лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '14-30 лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '30+ лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'д/ш',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '7-10 лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '11-14 лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Старшеклассники',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'РДЧ',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Пенсионеры',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Служащие',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Студенты',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Прочие',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Стационар',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Внестационар',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Интернет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 3,
                    Cells:[
                        {
                            Name: '1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '2',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '3',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '4',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '5',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '6',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '6.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '7',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '8',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '9',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '10',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '11',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '12',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '13',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '14',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '15',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '16',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '17',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '18',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '19',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '20',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                }
            ],
            2:[
                {
                    Line: 1,
                    Cells: [
                        {
                            Name: 'Дата',
                            TableID: -1,
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Всего посещений мероприятия стационар',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Посещения мероприятий',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Всего мероприятий стационар',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Количество мероприятий',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Всего посещений мероприятия внестационар',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Посещения мероприятий',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Всего мероприятий внестационар',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Посещения мероприятий',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Бесплатные клубы',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Платные клубы',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 2,
                    Cells: [
                        {
                            Name: 'Бесплатные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Платные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Бесплатные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Платные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Бесплатные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Платные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Бесплатные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Платные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Количество заседаний',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Число посещений',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Количество заседаний',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Число посещений',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 3,
                    Cells:[
                        {
                            Name: "1",
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '21',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '22',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '23',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '24',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '25',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '26',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '27',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '28',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '29',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '30',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '31',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '32',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '33',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '34',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '35',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '36',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                }

            ],
        },
    },
    GetSet:{
        get TableHead(){
            return this.Proto.Data.TableHead[this.Proto.Data.TableID]
        }
    },
    PropTypes:{
        TableID: Lure.PropTypes.Int,
    },
    Controller: {
        Target: '.tbody',
        ListElement: `<tr class="{{#if ( i === 0 || i #more this.Data.length-3 ) ? 'srow':'trow'}} {{#if (o.isChangedByOutside) ? 'changed-outside':''}}{{DayType}}">   
                          <td class="tcell sum-part-date l-pointer" title="{{DateVisual}}">{{DateVisual}}</td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} lock       {{P1V2.State}}"  data-prop="P1V2">
                            <div class="hint {{#if (o.P1V2.D.Description) ? '':'none'}}" data-hint="{{P1V2.D.Description}}">f</div>
                            <div class="value">{{P1V2.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V3.State}}"  data-prop="P1V3">
                            <div class="hint {{#if (o.P1V3.D.Description) ? '':'none'}}" data-hint="{{P1V3.D.Description}}">f</div>
                            <div class="value">{{P1V3.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} lock {{P1V4.State}}"  data-prop="P1V4">
                            <div class="hint {{#if (o.P1V4.D.Description) ? '':'none'}}" data-hint="{{P1V4.D.Description}}">f</div>
                            <div class="value">{{P1V4.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} lock       {{P1V5.State}}"  data-prop="P1V5">
                            <div class="hint {{#if (o.P1V5.D.Description) ? '':'none'}}" data-hint="{{P1V5.D.Description}}">f</div>
                            <div class="value">{{P1V5.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V6.State}}"  data-prop="P1V6">
                            <div class="hint {{#if (o.P1V6.D.Description) ? '':'none'}}" data-hint="{{P1V6.D.Description}}">f</div>
                            <div class="value">{{P1V6.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V61.State}}"  data-prop="P1V61">
                            <div class="hint {{#if (o.P1V61.D.Description) ? '':'none'}}" data-hint="{{P1V61.D.Description}}">f</div>
                            <div class="value">{{P1V61.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} {{#if (Lure.User.Roles.indexOf(D.Role.DairySummaryEditRemote) > -1)?'numpadable':''}} {{P1V7.State}}"  data-prop="P1V7">
                            <div class="hint {{#if (o.P1V7.D.Description) ? '':'none'}}" data-hint="{{P1V7.D.Description}}">f</div>
                            <div class="value">{{P1V7.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V8.State}}"  data-prop="P1V8">
                            <div class="hint {{#if (o.P1V8.D.Description) ? '':'none'}}" data-hint="{{P1V8.D.Description}}">f</div>
                            <div class="value">{{P1V8.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V9.State}}"  data-prop="P1V9">
                            <div class="hint {{#if (o.P1V9.D.Description) ? '':'none'}}" data-hint="{{P1V9.D.Description}}">f</div>
                            <div class="value">{{P1V9.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V10.State}}" data-prop="P1V10">
                            <div class="hint {{#if (o.P1V10.D.Description) ? '':'none'}}" data-hint="{{P1V10.D.Description}}">f</div>
                            <div class="value">{{P1V10.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V11.State}}" data-prop="P1V11">
                            <div class="hint {{#if (o.P1V11.D.Description) ? '':'none'}}" data-hint="{{P1V11.D.Description}}">f</div>
                            <div class="value">{{P1V11.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V12.State}}" data-prop="P1V12">
                            <div class="hint {{#if (o.P1V12.D.Description) ? '':'none'}}" data-hint="{{P1V12.D.Description}}">f</div>
                            <div class="value">{{P1V12.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V13.State}}" data-prop="P1V13">
                            <div class="hint {{#if (o.P1V13.D.Description) ? '':'none'}}" data-hint="{{P1V13.D.Description}}">f</div>
                            <div class="value">{{P1V13.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V14.State}}" data-prop="P1V14">
                            <div class="hint {{#if (o.P1V14.D.Description) ? '':'none'}}" data-hint="{{P1V14.D.Description}}">f</div>
                            <div class="value">{{P1V14.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V15.State}}" data-prop="P1V15">
                            <div class="hint {{#if (o.P1V15.D.Description) ? '':'none'}}" data-hint="{{P1V15.D.Description}}">f</div>
                            <div class="value">{{P1V15.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V16.State}}" data-prop="P1V16">
                            <div class="hint {{#if (o.P1V16.D.Description) ? '':'none'}}" data-hint="{{P1V16.D.Description}}">f</div>
                            <div class="value">{{P1V16.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} lock       {{P1V17.State}}" data-prop="P1V17">
                            <div class="hint {{#if (o.P1V17.D.Description) ? '':'none'}}" data-hint="{{P1V17.D.Description}}">f</div>
                            <div class="value">{{P1V17.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V18.State}}" data-prop="P1V18">
                            <div class="hint {{#if (o.P1V18.D.Description) ? '':'none'}}" data-hint="{{P1V18.D.Description}}">f</div>
                            <div class="value">{{P1V18.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V19.State}}" data-prop="P1V19">
                            <div class="hint {{#if (o.P1V19.D.Description) ? '':'none'}}" data-hint="{{P1V19.D.Description}}">f</div>
                            <div class="value">{{P1V19.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P1V20.State}}" data-prop="P1V20">
                            <div class="hint {{#if (o.P1V20.D.Description) ? '':'none'}}" data-hint="{{P1V20.D.Description}}">f</div>
                            <div class="value">{{P1V20.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V21.State}}" data-prop="P1V21">
                            <div class="hint {{#if (o.P1V21.D.Description) ? '':'none'}}" data-hint="{{P1V21.D.Description}}">f</div>
                            <div class="value">{{P1V21.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V22.State}}" data-prop="P1V22">
                            <div class="hint {{#if (o.P1V22.D.Description) ? '':'none'}}" data-hint="{{P1V22.D.Description}}">f</div>
                            <div class="value">{{P1V22.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V23.State}}" data-prop="P1V23">
                            <div class="hint {{#if (o.P1V23.D.Description) ? '':'none'}}" data-hint="{{P1V23.D.Description}}">f</div>
                            <div class="value">{{P1V23.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V24.State}}" data-prop="P1V24">
                            <div class="hint {{#if (o.P1V24.D.Description) ? '':'none'}}" data-hint="{{P1V24.D.Description}}">f</div>
                            <div class="value">{{P1V24.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V25.State}}" data-prop="P1V25">
                            <div class="hint {{#if (o.P1V25.D.Description) ? '':'none'}}" data-hint="{{P1V25.D.Description}}">f</div>
                            <div class="value">{{P1V25.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V26.State}}" data-prop="P1V26">
                            <div class="hint {{#if (o.P1V26.D.Description) ? '':'none'}}" data-hint="{{P1V26.D.Description}}">f</div>
                            <div class="value">{{P1V26.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V27.State}}" data-prop="P1V27">
                            <div class="hint {{#if (o.P1V27.D.Description) ? '':'none'}}" data-hint="{{P1V27.D.Description}}">f</div>
                            <div class="value">{{P1V27.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V28.State}}" data-prop="P1V28">
                            <div class="hint {{#if (o.P1V28.D.Description) ? '':'none'}}" data-hint="{{P1V28.D.Description}}">f</div>
                            <div class="value">{{P1V28.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V29.State}}" data-prop="P1V29">
                            <div class="hint {{#if (o.P1V29.D.Description) ? '':'none'}}" data-hint="{{P1V29.D.Description}}">f</div>
                            <div class="value">{{P1V29.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V30.State}}" data-prop="P1V30">
                            <div class="hint {{#if (o.P1V30.D.Description) ? '':'none'}}" data-hint="{{P1V30.D.Description}}">f</div>
                            <div class="value">{{P1V30.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V31.State}}" data-prop="P1V31">
                            <div class="hint {{#if (o.P1V31.D.Description) ? '':'none'}}" data-hint="{{P1V31.D.Description}}">f</div>
                            <div class="value">{{P1V31.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V32.State}}" data-prop="P1V32">
                            <div class="hint {{#if (o.P1V32.D.Description) ? '':'none'}}" data-hint="{{P1V32.D.Description}}">f</div>
                            <div class="value">{{P1V32.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V33.State}}" data-prop="P1V33">
                            <div class="hint {{#if (o.P1V33.D.Description) ? '':'none'}}" data-hint="{{P1V33.D.Description}}">f</div>
                            <div class="value">{{P1V33.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V34.State}}" data-prop="P1V34">
                            <div class="hint {{#if (o.P1V34.D.Description) ? '':'none'}}" data-hint="{{P1V34.D.Description}}">f</div>
                            <div class="value">{{P1V34.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V35.State}}" data-prop="P1V35">
                            <div class="hint {{#if (o.P1V35.D.Description) ? '':'none'}}" data-hint="{{P1V35.D.Description}}">f</div>
                            <div class="value">{{P1V35.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock       {{P1V36.State}}" data-prop="P1V36">
                            <div class="hint {{#if (o.P1V36.D.Description) ? '':'none'}}" data-hint="{{P1V36.D.Description}}">f</div>
                            <div class="value">{{P1V36.Value}}</div>
                          </td>
                      </tr>`,
        EmptyMessage: `<div class="list-empty">нет данных</div>`,
        AfterBuild: function () {
            /* if (this.Controller.Content.scrollHeight > this.Controller.Content.clientHeight){
                 this.ScrollCompensator.style.width = Lure.DOM.ScrollBarWidth+ 'px';
             }
             else{
                 this.ScrollCompensator.style.width = '0';
             }*/
        }
    },
    Props: function(){
        this.CurrentDate = null;
    },
    Show(){
        this.Parent.Subscription.Subscribe();
    },
    Refresh: function () {
        if (this.Controller.Data.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length < 1 || this.CurrentDate !== Diary.Summary.CurrentDate){
            Diary.Summary.GetData();
        }
    },
    BeforeShow: function () {
        Diary.CheckForBread();
        this.Refresh();
    },
});
},{}],44:[function(require,module,exports){
new Lure.Content({
    Parent: Diary.Summary,
    Name: 'SummaryPart2',
    Type: 'diary-summary-content',
    Control:{
        Target: '#nav-diary-summary-2',
    },
    Content: `<div class="summary-part">
                <div class="tabs">
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part2" id="summary-part2-1" data-tableid="1" checked="checked">
                        <label class="label tab-label" for="summary-part2-1">КНИГИ И БРОШЮРЫ</label>
                    </div>
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part2" id="summary-part2-2" data-tableid="2">
                        <label class="label tab-label" for="summary-part2-2">ДОКУМЕНТЫ И КОПИИ</label>
                    </div>
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part2" id="summary-part2-3" data-tableid="3">
                        <label class="label tab-label" for="summary-part2-3">СПРАВКИ И КОНСУЛЬТАЦИИ</label>
                    </div>
                </div>
                <table class="table summary-table fixed-height">
                    <thead class="thead">
                        {{#each this.TableHead}}
                            <tr class="trow head-{{Line}}">
                                {{#each Cells}}
                                    <th colspan="{{Colspan}}" rowspan="{{Rowspan}}" class="tcell" title="{{Name}}">{{Name}}</th>
                                {{#endeach}}
                            </tr>
                        {{#endeach}}
                    
                    </thead>
                    <tbody class="tbody"></tbody>
                </table>
              </div>`,
    Proto:{
        TableID: 1,
        TableHead: {
            1:[
                {
                    Line: 1,
                    Cells: [
                        {
                            Name: 'Дата',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Всего выдано',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'По типу носителя',
                            Colspan: 5,
                            Rowspan: 1,
                        },
                        {
                            Name: 'По содержанию',
                            Colspan: 11,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 2,
                    Cells: [
                        {
                            Name: 'На физ носителях',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Внестационар и на дому (6.1, 6.2)',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Из электронной библиотеки',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Инсталированные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Удаленные лицензионные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'ОПЛ',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Е/зн',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Техника',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'С/х',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Искусство',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Спорт',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '81.83',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Справочники',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Дет. лит-ра',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Худ. лит-ра',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Дополнит.',
                            Colspan: 1,
                            Rowspan: 1,
                        },


                    ]
                },
                {
                    Line: 3,
                    Cells:[
                        {
                            Name: "1",
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '2',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '3',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '4',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '5',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '6',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '7',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '8',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '9',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '10',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '11',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '12',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '13',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '14',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '15',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '16',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '17',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '18',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                }
            ],
            2:[
                {
                    Line: 1,
                    Cells: [
                        {
                            Name: 'Дата',
                            TableID: -1,
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Выдано документов детям до 14 лет',
                            Colspan: 6,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Выдано документов пользователям 14-30 лет',
                            Colspan: 6,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Выдано документов пользователям 30+ лет',
                            Colspan: 6,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Изготовлено и выдано копий',
                            Colspan: 4,
                            Rowspan: 1,
                        },

                    ]
                },
                {
                    Line: 2,
                    Cells: [
                        {
                            Name: 'Всего выдано',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'На физ носителях',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Внестационар и на дому (6.1, 6.2)',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Из электронной библиотеки',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Инсталированные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Удаленные лицензионные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Всего выдано',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'На физ носителях',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Внестационар и на дому (6.1, 6.2)',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Из электронной библиотеки',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Инсталированные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Удаленные лицензионные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Всего выдано',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'На физ носителях',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Внестационар и на дому (6.1, 6.2)',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Из электронной библиотеки',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Инсталированные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Удаленные лицензионные',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Всего',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Детям до 14 лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Пользователям 14-30 лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Пользователям 30+ лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                },
                {
                    Line: 3,
                    Cells:[
                        {
                            Name: "1",
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '19',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '20',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '21',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '22',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '23',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '24',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '25',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '26',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '27',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '28',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '29',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '30',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '25.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '26.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '27.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '28.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '29.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '30.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '31',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '32',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '33',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '33.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                }
            ],
            3:[
                {
                    Line: 1,
                    Cells: [
                        {
                            Name: 'Дата',
                            TableID: -1,
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Всего выдано из фондов других библиотек',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Выдано (просмотрено) док-ов из фондов других библиотек, единиц',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Всего выполнено справок и консультаций',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'По возрасту',
                            Colspan: 3,
                            Rowspan: 1,
                        },
                        {
                            Name: 'По типу',
                            Colspan: 5,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 2,
                    Cells: [
                        {
                            Name: 'По системе МБА и ММБА',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Виртуальные читальные залы',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'до 14 лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '14-30 лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '30+ лет',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Тематические',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Фактографич.',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Библиографич',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Консультации',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Удаленные справки',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 3,
                    Cells:[
                        {
                            Name: "1",
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '34',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '35',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '36',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '37',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '38',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '39',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '39.1',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '40',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '41',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '42',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '43',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '44',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                }
            ],
            4:[
                {
                    Line: 1,
                    Cells: [
                        {
                            Name: 'Дата',
                            TableID: -1,
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Бесплатные клубы',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Платные клубы',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 2,
                    Cells: [
                        {
                            Name: 'Количество заседаний',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Число посещений',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Количество заседаний',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Число посещений',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                    ]
                }
            ]
        },
        TableData: [],
    },
    GetSet:{
        get TableHead(){
            return this.Proto.Data.TableHead[this.Proto.Data.TableID]
        }
    },
    Controller: {
        Target: '.tbody',
        ListElement: `<tr class="{{#if ( i === 0 || i #more this.Data.length-3) ? 'srow':'trow'}} {{#if (o.isChangedByOutside) ? 'changed-outside':''}}{{DayType}}"> 
                          <td class="tcell sum-part-date l-pointer" title="{{DateVisual}}">{{DateVisual}}</td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} lock {{P2V2.State}}"  data-prop="P2V2">
  <div class="hint {{#if (o.P2V2.D.Description) ? '':'none'}}" data-hint="{{P2V2.D.Description}}">f</div>
  <div class="value">{{P2V2.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V3.State}}"  data-prop="P2V3">
  <div class="hint {{#if (o.P2V3.D.Description) ? '':'none'}}" data-hint="{{P2V3.D.Description}}">f</div>
  <div class="value">{{P2V3.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} lock {{P2V4.State}}"  data-prop="P2V4">
  <div class="hint {{#if (o.P2V4.D.Description) ? '':'none'}}" data-hint="{{P2V4.D.Description}}">f</div>
  <div class="value">{{P2V4.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V5.State}}"  data-prop="P2V5">
  <div class="hint {{#if (o.P2V5.D.Description) ? '':'none'}}" data-hint="{{P2V5.D.Description}}">f</div>
  <div class="value">{{P2V5.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V6.State}}"  data-prop="P2V6">
  <div class="hint {{#if (o.P2V6.D.Description) ? '':'none'}}" data-hint="{{P2V6.D.Description}}">f</div>
  <div class="value">{{P2V6.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V7.State}}"  data-prop="P2V7">
  <div class="hint {{#if (o.P2V7.D.Description) ? '':'none'}}" data-hint="{{P2V7.D.Description}}">f</div>
  <div class="value">{{P2V7.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V8.State}}"  data-prop="P2V8">
  <div class="hint {{#if (o.P2V8.D.Description) ? '':'none'}}" data-hint="{{P2V8.D.Description}}">f</div>
  <div class="value">{{P2V8.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V9.State}}"  data-prop="P2V9">
  <div class="hint {{#if (o.P2V9.D.Description) ? '':'none'}}" data-hint="{{P2V9.D.Description}}">f</div>
  <div class="value">{{P2V9.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V10.State}}"  data-prop="P2V10">
  <div class="hint {{#if (o.P2V10.D.Description) ? '':'none'}}" data-hint="{{P2V10.D.Description}}">f</div>
  <div class="value">{{P2V10.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V11.State}}"  data-prop="P2V11">
  <div class="hint {{#if (o.P2V11.D.Description) ? '':'none'}}" data-hint="{{P2V11.D.Description}}">f</div>
  <div class="value">{{P2V11.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V12.State}}"  data-prop="P2V12">
  <div class="hint {{#if (o.P2V12.D.Description) ? '':'none'}}" data-hint="{{P2V12.D.Description}}">f</div>
  <div class="value">{{P2V12.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V13.State}}"  data-prop="P2V13">
  <div class="hint {{#if (o.P2V13.D.Description) ? '':'none'}}" data-hint="{{P2V13.D.Description}}">f</div>
  <div class="value">{{P2V13.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V14.State}}"  data-prop="P2V14">
  <div class="hint {{#if (o.P2V14.D.Description) ? '':'none'}}" data-hint="{{P2V14.D.Description}}">f</div>
  <div class="value">{{P2V14.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V15.State}}"  data-prop="P2V15">
  <div class="hint {{#if (o.P2V15.D.Description) ? '':'none'}}" data-hint="{{P2V15.D.Description}}">f</div>
  <div class="value">{{P2V15.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V16.State}}"  data-prop="P2V16">
  <div class="hint {{#if (o.P2V16.D.Description) ? '':'none'}}" data-hint="{{P2V16.D.Description}}">f</div>
  <div class="value">{{P2V16.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V17.State}}"  data-prop="P2V17">
  <div class="hint {{#if (o.P2V17.D.Description) ? '':'none'}}" data-hint="{{P2V17.D.Description}}">f</div>
  <div class="value">{{P2V17.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P2V18.State}}"  data-prop="P2V18">
  <div class="hint {{#if (o.P2V18.D.Description) ? '':'none'}}" data-hint="{{P2V18.D.Description}}">f</div>
  <div class="value">{{P2V18.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock {{P2V19.State}}"  data-prop="P2V19">
  <div class="hint {{#if (o.P2V19.D.Description) ? '':'none'}}" data-hint="{{P2V19.D.Description}}">f</div>
  <div class="value">{{P2V19.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V20.State}}"  data-prop="P2V20">
  <div class="hint {{#if (o.P2V20.D.Description) ? '':'none'}}" data-hint="{{P2V20.D.Description}}">f</div>
  <div class="value">{{P2V20.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V21.State}}"  data-prop="P2V21">
  <div class="hint {{#if (o.P2V21.D.Description) ? '':'none'}}" data-hint="{{P2V21.D.Description}}">f</div>
  <div class="value">{{P2V21.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V22.State}}"  data-prop="P2V22">
  <div class="hint {{#if (o.P2V22.D.Description) ? '':'none'}}" data-hint="{{P2V22.D.Description}}">f</div>
  <div class="value">{{P2V22.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V23.State}}"  data-prop="P2V23">
  <div class="hint {{#if (o.P2V23.D.Description) ? '':'none'}}" data-hint="{{P2V23.D.Description}}">f</div>
  <div class="value">{{P2V23.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V24.State}}"  data-prop="P2V24">
  <div class="hint {{#if (o.P2V24.D.Description) ? '':'none'}}" data-hint="{{P2V24.D.Description}}">f</div>
  <div class="value">{{P2V24.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock {{P2V25.State}}"  data-prop="P2V25">
  <div class="hint {{#if (o.P2V25.D.Description) ? '':'none'}}" data-hint="{{P2V25.D.Description}}">f</div>
  <div class="value">{{P2V25.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V26.State}}"  data-prop="P2V26">
  <div class="hint {{#if (o.P2V26.D.Description) ? '':'none'}}" data-hint="{{P2V26.D.Description}}">f</div>
  <div class="value">{{P2V26.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V27.State}}"  data-prop="P2V27">
  <div class="hint {{#if (o.P2V27.D.Description) ? '':'none'}}" data-hint="{{P2V27.D.Description}}">f</div>
  <div class="value">{{P2V27.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V28.State}}"  data-prop="P2V28">
  <div class="hint {{#if (o.P2V28.D.Description) ? '':'none'}}" data-hint="{{P2V28.D.Description}}">f</div>
  <div class="value">{{P2V28.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V29.State}}"  data-prop="P2V29">
  <div class="hint {{#if (o.P2V29.D.Description) ? '':'none'}}" data-hint="{{P2V29.D.Description}}">f</div>
  <div class="value">{{P2V29.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V30.State}}"  data-prop="P2V30">
  <div class="hint {{#if (o.P2V30.D.Description) ? '':'none'}}" data-hint="{{P2V30.D.Description}}">f</div>
  <div class="value">{{P2V30.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock {{P2V251.State}}"  data-prop="P2V251">
  <div class="hint {{#if (o.P2V251.D.Description) ? '':'none'}}" data-hint="{{P2V251.D.Description}}">f</div>
  <div class="value">{{P2V251.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V261.State}}"  data-prop="P2V261">
  <div class="hint {{#if (o.P2V261.D.Description) ? '':'none'}}" data-hint="{{P2V261.D.Description}}">f</div>
  <div class="value">{{P2V261.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V271.State}}"  data-prop="P2V271">
  <div class="hint {{#if (o.P2V271.D.Description) ? '':'none'}}" data-hint="{{P2V271.D.Description}}">f</div>
  <div class="value">{{P2V271.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V281.State}}"  data-prop="P2V281">
  <div class="hint {{#if (o.P2V281.D.Description) ? '':'none'}}" data-hint="{{P2V281.D.Description}}">f</div>
  <div class="value">{{P2V281.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V291.State}}"  data-prop="P2V291">
  <div class="hint {{#if (o.P2V291.D.Description) ? '':'none'}}" data-hint="{{P2V291.D.Description}}">f</div>
  <div class="value">{{P2V291.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V301.State}}"  data-prop="P2V301">
  <div class="hint {{#if (o.P2V301.D.Description) ? '':'none'}}" data-hint="{{P2V301.D.Description}}">f</div>
  <div class="value">{{P2V301.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock {{P2V31.State}}"  data-prop="P2V31">
  <div class="hint {{#if (o.P2V31.D.Description) ? '':'none'}}" data-hint="{{P2V31.D.Description}}">f</div>
  <div class="value">{{P2V31.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V32.State}}"  data-prop="P2V32">
  <div class="hint {{#if (o.P2V32.D.Description) ? '':'none'}}" data-hint="{{P2V32.D.Description}}">f</div>
  <div class="value">{{P2V32.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V33.State}}"  data-prop="P2V33">
  <div class="hint {{#if (o.P2V33.D.Description) ? '':'none'}}" data-hint="{{P2V33.D.Description}}">f</div>
  <div class="value">{{P2V33.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P2V331.State}}"  data-prop="P2V331">
  <div class="hint {{#if (o.P2V331.D.Description) ? '':'none'}}" data-hint="{{P2V331.D.Description}}">f</div>
  <div class="value">{{P2V331.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V34.State}}"  data-prop="P2V34">
  <div class="hint {{#if (o.P2V34.D.Description) ? '':'none'}}" data-hint="{{P2V34.D.Description}}">f</div>
  <div class="value">{{P2V34.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V35.State}}"  data-prop="P2V35">
  <div class="hint {{#if (o.P2V35.D.Description) ? '':'none'}}" data-hint="{{P2V35.D.Description}}">f</div>
  <div class="value">{{P2V35.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V36.State}}"  data-prop="P2V36">
  <div class="hint {{#if (o.P2V36.D.Description) ? '':'none'}}" data-hint="{{P2V36.D.Description}}">f</div>
  <div class="value">{{P2V36.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} lock {{P2V37.State}}"  data-prop="P2V37">
  <div class="hint {{#if (o.P2V37.D.Description) ? '':'none'}}" data-hint="{{P2V37.D.Description}}">f</div>
  <div class="value">{{P2V37.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V38.State}}"  data-prop="P2V38">
  <div class="hint {{#if (o.P2V38.D.Description) ? '':'none'}}" data-hint="{{P2V38.D.Description}}">f</div>
  <div class="value">{{P2V38.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V39.State}}"  data-prop="P2V39">
  <div class="hint {{#if (o.P2V39.D.Description) ? '':'none'}}" data-hint="{{P2V39.D.Description}}">f</div>
  <div class="value">{{P2V39.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V391.State}}"  data-prop="P2V391">
  <div class="hint {{#if (o.P2V391.D.Description) ? '':'none'}}" data-hint="{{P2V391.D.Description}}">f</div>
  <div class="value">{{P2V391.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V40.State}}"  data-prop="P2V40">
  <div class="hint {{#if (o.P2V40.D.Description) ? '':'none'}}" data-hint="{{P2V40.D.Description}}">f</div>
  <div class="value">{{P2V40.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V41.State}}"  data-prop="P2V41">
  <div class="hint {{#if (o.P2V41.D.Description) ? '':'none'}}" data-hint="{{P2V41.D.Description}}">f</div>
  <div class="value">{{P2V41.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V42.State}}"  data-prop="P2V42">
  <div class="hint {{#if (o.P2V42.D.Description) ? '':'none'}}" data-hint="{{P2V42.D.Description}}">f</div>
  <div class="value">{{P2V42.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V43.State}}"  data-prop="P2V43">
  <div class="hint {{#if (o.P2V43.D.Description) ? '':'none'}}" data-hint="{{P2V43.D.Description}}">f</div>
  <div class="value">{{P2V43.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 3)?'':'none'}} numpadable {{P2V44.State}}"  data-prop="P2V44">
  <div class="hint {{#if (o.P2V44.D.Description) ? '':'none'}}" data-hint="{{P2V44.D.Description}}">f</div>
  <div class="value">{{P2V44.Value}}</div>
</td>

                      </tr>`,
        EmptyMessage: `<div class="list-empty">нет данных</div>`,
    },
    PropTypes:{
        TableID: Lure.PropTypes.Int
    },
    Props: function(){
        this.CurrentDate = null;
    },
    Show(){
        this.Parent.Subscription.Subscribe();
    },
    Refresh: function () {
        if (this.Controller.Data.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataEvent.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length < 1 || this.CurrentDate !== Diary.Summary.CurrentDate){
            Diary.Summary.GetData();
        }
    },
    Refresh2: function () {
        if (this.Controller.Data.length > 0){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length > 0){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length < 1){
            Diary.Summary.GetData()
                .then(()=>{
                    this.Controller.Refresh(Diary.Summary.DataPrepared);
                })
        }

    },
    BeforeShow: function () {
        Diary.CheckForBread();
        this.Refresh();
    },
});
},{}],45:[function(require,module,exports){
new Lure.Content({
    Parent: Diary.Summary,
    Name: 'SummaryPart3',
    Type: 'diary-summary-content',
    Control:{
        Target: '#nav-diary-summary-3',
    },
    Content: `<div class="summary-part">
                <div class="tabs">
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part3" id="summary-part3-1" data-tableid="1" checked="checked">
                        <label class="label tab-label" for="summary-part3-1">УЧЕТ ВЫДАЧИ ЭЛЕКТРОННЫХ РЕСУРСОВ</label>
                    </div>
                </div>
                <table class="table summary-table fixed-height">
                    <thead class="thead">
                        {{#each TableHead}}
                            <tr class="trow head-{{Line}}">
                                {{#each Cells}}
                                    <th colspan="{{Colspan}}" rowspan="{{Rowspan}}" class="tcell" title="{{Name}}">{{Name}}</th>
                                {{#endeach}}
                            </tr>
                        {{#endeach}}
                    
                    </thead>
                    <tbody class="tbody"></tbody>
                </table>
              </div>`,
    Proto:{
        TableID: 1,
        TableHead: [
            {
                Line: 1,
                Cells: [
                    {
                        Name: 'Дата',
                        Colspan: 1,
                        Rowspan: 2,
                    },
                    {
                        Name: 'Всего выдано',
                        Colspan: 1,
                        Rowspan: 2,
                    },
                    {
                        Name: 'По типу носителя',
                        Colspan: 4,
                        Rowspan: 1,
                    },
                ]
            },
            {
                Line: 2,
                Cells: [
                    {
                        Name: 'Инсталлированные документы',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Сетевые удаленные лицензионные',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Из электронной (цифровой) библиотеки',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'DVD / CD-ROM',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                ]
            },
            {
                Line: 3,
                Cells:[
                    {
                        Name: "1",
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '2',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '3',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '4',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '5',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '6',
                        Colspan: 1,
                        Rowspan: 1,
                    },

                ]
            }
        ],
    },
    Controller: {
        Target: '.tbody',
        ListElement: `<tr class="{{#if ( i === 0 || i #more this.Data.length-3) ? 'srow':'trow'}} {{#if (o.isChangedByOutside) ? 'changed-outside':''}}{{DayType}}"> 
                          <td class="tcell sum-part-date l-pointer" title="{{DateVisual}}">{{DateVisual}}</td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} lock {{P3V2.State}}"  data-prop="P3V2">
                            <div class="hint {{#if (o.P3V2.D.Description) ? '':'none'}}" data-hint="{{P3V2.D.Description}}">f</div>
                            <div class="value">{{P3V2.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P3V3.State}}"  data-prop="P3V3">
                            <div class="hint {{#if (o.P3V3.D.Description) ? '':'none'}}" data-hint="{{P3V3.D.Description}}">f</div>
                            <div class="value">{{P3V3.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P3V4.State}}"  data-prop="P3V4">
                            <div class="hint {{#if (o.P3V4.D.Description) ? '':'none'}}" data-hint="{{P3V4.D.Description}}">f</div>
                            <div class="value">{{P3V4.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P3V5.State}}"  data-prop="P3V5">
                            <div class="hint {{#if (o.P3V5.D.Description) ? '':'none'}}" data-hint="{{P3V5.D.Description}}">f</div>
                            <div class="value">{{P3V5.Value}}</div>
                          </td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P3V6.State}}"  data-prop="P3V6">
                            <div class="hint {{#if (o.P3V6.D.Description) ? '':'none'}}" data-hint="{{P3V6.D.Description}}">f</div>
                            <div class="value">{{P3V6.Value}}</div>
                          </td>
                      </tr>`,
        EmptyMessage: `<div class="list-empty">нет данных</div>`,
    },
    PropTypes:{
        TableID: Lure.PropTypes.Int
    },
    Show(){
        this.Parent.Subscription.Subscribe();
    },
    Refresh: function () {
        if (this.Controller.Data.length > 0){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length > 0){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length < 1){
            Diary.Summary.GetData()
                .then(()=>{
                    this.Controller.Refresh(Diary.Summary.DataPrepared);
                })
        }
    },
    BeforeShow: function () {
        Diary.CheckForBread();
        this.Refresh();
    },
});
},{}],46:[function(require,module,exports){
const D = require('../../_common/dictionary');

Diary.Summary.SummaryPart4 = new Lure.Content({
    Parent: Diary.Summary,
    Name: 'SummaryPart4',
    Type: 'diary-summary-content',
    Control:{
        Target: '#nav-diary-summary-4',
    },
    Content: `<div class="summary-part">
                <div class="tabs">
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part4" id="summary-part4-1" data-tableid="1" checked="checked">
                        <label class="label tab-label" for="summary-part4-1">КУЛЬТУРНО-МАССОВАЯ РАБОТА</label>
                    </div>
                </div>
                <table class="table summary-table">
                    <thead class="thead">
                        {{#each TableHead}}
                            <tr class="trow head-{{Line}}">
                                {{#each Cells}}
                                    <th colspan="{{Colspan}}" rowspan="{{Rowspan}}" class="tcell" title="{{Name}}">{{Name}}</th>
                                {{#endeach}}
                            </tr>
                        {{#endeach}}
                    </thead>
                    <tbody class="tbody"></tbody>
                </table>
              </div>`,
    Proto:{
        TableID: 1,
        TableHead: [
            {
                Line: 1,
                Cells: [
                    {
                        Name: 'Дата',
                        Colspan: 2,
                        Rowspan: 2,
                    },
                    {
                        Name: 'Название мероприятия',
                        Colspan: 3,
                        Rowspan: 2,
                    },
                    {
                        Name: 'Форма проведения',
                        Colspan: 2,
                        Rowspan: 2,
                    },
                    {
                        Name: 'Стационар',
                        Colspan: 5,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Внестационар',
                        Colspan: 5,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Бесплатные клубы',
                        Colspan: 3,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Платные клубы',
                        Colspan: 3,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Выездное (название)',
                        Colspan: 2,
                        Rowspan: 2,
                    },
                    {
                        Name: 'Ответственный',
                        Colspan: 2,
                        Rowspan: 2,
                    },
                ]
            },
            {
                Line: 2,
                Cells: [
                    {
                        Name: 'Бесплатно',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Платно',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Инвалиды',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Мигранты',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Проф. семинары, лекции, и т.п.',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Бесплатно',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Платно',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Инвалиды',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Мигранты',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Проф. семинары, лекции, и т.п.',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Посещения',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Инвалиды',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Мигранты',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Посещения',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Инвалиды',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Мигранты',
                        Colspan: 1,
                        Rowspan: 1,
                    },


                ]
            },
            {
                Line: 3,
                Cells:[
                    {
                        Name: "1",
                        Colspan: 2,
                        Rowspan: 1,
                    },
                    {
                        Name: '2',
                        Colspan: 3,
                        Rowspan: 1,
                    },
                    {
                        Name: '3',
                        Colspan: 2,
                        Rowspan: 1,
                    },
                    {
                        Name: '4',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '5',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '6',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '7',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '8',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '9',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '10',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '11',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '12',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '13',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '14',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '15',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '16',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '17',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '18',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '19',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '20',
                        Colspan: 2,
                        Rowspan: 1,
                    },
                    {
                        Name: '21',
                        Colspan: 2,
                        Rowspan: 1,
                    },

                ]
            }
        ],
        TableData: [],
    },

    Controller: {
        Target: '.tbody',
        ListElement: `<tr class="trow {{#if (o.isChangedByOutside) ? 'changed-outside':''}}"> 
                          <td colspan="2" class="tcell" title="{{DateStart}} - {{DateFinish}}">{{DateStart}}<br>{{DateFinish}}</td>
                          <td colspan="3" class="tcell lock" title="{{P4V2.Value}}" data-prop="P4V2">
                            <div class="hint {{#if (o.P4V2.D.Description) ? '':'none'}}" data-hint="{{P4V2.D.Description}}">?</div>
                            <div class="value">{{P4V2.Value}}</div>
                          </td>
                          <td colspan="2" class="tcell lock {{P4V3.State}}" data-prop="P4V3" title="{{P4V3.Value}}">
                            <div class="hint {{#if (o.P4V3.D.Description) ? '':'none'}}" data-hint="{{P4V3.D.Description}}">?</div>
                            <div class="value">{{P4V3.Value}}</div>
                          </td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==1 && (o.EventTypeID==1 ) )?'numpadable':'lock'}}  {{P4V4.State}}" data-prop="P4V4">{{P4V4.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==1 && (o.EventTypeID==2) )?'numpadable':'lock'}}  {{P4V5.State}}" data-prop="P4V5">{{P4V5.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==1 && (o.EventTypeID==1 || o.EventTypeID==2) )?'numpadable':'lock'}}  {{P4V6.State}}" data-prop="P4V6">{{P4V6.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==1 && (o.EventTypeID==1 || o.EventTypeID==2) )?'numpadable':'lock'}}  {{P4V7.State}}" data-prop="P4V7">{{P4V7.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==1 && (o.EventTypeID==1 || o.EventTypeID==2) )?'numpadable':'lock'}}  {{P4V8.State}}" data-prop="P4V8">{{P4V8.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==2 && (o.EventTypeID==1 || o.EventTypeID==2) )?'numpadable':'lock'}}  {{P4V9.State}}" data-prop="P4V9">{{P4V9.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==2 && (o.EventTypeID==1 || o.EventTypeID==2) )?'numpadable':'lock'}} {{P4V10.State}}" data-prop="P4V10">{{P4V10.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==2 && (o.EventTypeID==1 || o.EventTypeID==2) )?'numpadable':'lock'}} {{P4V11.State}}" data-prop="P4V11">{{P4V11.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==2 && (o.EventTypeID==1 || o.EventTypeID==2) )?'numpadable':'lock'}} {{P4V12.State}}" data-prop="P4V12">{{P4V12.Value}}</td>
                          <td class="tcell {{#if (o.EventPlaceTypeID==2 && (o.EventTypeID==1 || o.EventTypeID==2) )?'numpadable':'lock'}} {{P4V13.State}}" data-prop="P4V13">{{P4V13.Value}}</td>
                          <td class="tcell {{#if (o.EventTypeID==3)?'numpadable':'lock'}} {{P4V14.State}}" data-prop="P4V14">{{P4V14.Value}}</td>
                          <td class="tcell {{#if (o.EventTypeID==3)?'numpadable':'lock'}} {{P4V15.State}}" data-prop="P4V15">{{P4V15.Value}}</td>
                          <td class="tcell {{#if (o.EventTypeID==3)?'numpadable':'lock'}} {{P4V16.State}}" data-prop="P4V16">{{P4V16.Value}}</td>
                          <td class="tcell {{#if (o.EventTypeID==4)?'numpadable':'lock'}} {{P4V17.State}}" data-prop="P4V17">{{P4V17.Value}}</td>
                          <td class="tcell {{#if (o.EventTypeID==4)?'numpadable':'lock'}} {{P4V18.State}}" data-prop="P4V18">{{P4V18.Value}}</td>
                          <td class="tcell {{#if (o.EventTypeID==4)?'numpadable':'lock'}} {{P4V19.State}}" data-prop="P4V19">{{P4V19.Value}}</td>
                          <td colspan="2" class="tcell textboxable {{P4V20.State}}" data-prop="P4V20" title="{{P4V20.Value}}">{{P4V20.Value}}</td>
                          <td colspan="2" class="tcell {{P4V21.State}}" data-prop="P4V21" title="{{P4V21.Value}}">{{P4V21.Value}}</td>
                      </tr>`,
        EmptyMessage: `<td colspan="26" class="tcell list-empty">нет данных</td>`,
        // BeforeBuild: function(RefreshType){
        //     this.TBody.style.height = this.Content.clientHeight +'px';
        //     this.TBody.style.width = this.Content.clientWidth +'px';
        //     debugger;
        // },
        LineSave: function (DataItem, a, Val) {
            let td = Lure.Select(`.tcell[data-prop="${a.split('.')[0]}"]`, DataItem.DOM);
            if (td)
                td.setAttribute('title', Val);
            if (Lure.Object.GetProperty(DataItem.Data, a.replace('Value', '_Value')) !== Val){
                td.classList.add('changed');
                Lure.Object.SetProperty(DataItem.Data, a, Val);
                Diary.Summary.Check(DataItem.Data);
            }else{
                td.classList.remove('changed');
            }
            return Promise.resolve('');
        }
    },
    PropTypes:{
        TableID: Lure.PropTypes.Int
    },
    PropFormat: {
        DateStart: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
        DateFinish: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),

        'P4V3.Value': (r)=>D.EventTypeDict[r],
        'P4V21.Value': (UserID)=>{
            UserID = parseInt(UserID);
            let User = Lure.User.Cache.UserList.Where(x=>x.ID === UserID).FirstOrDefault();
            if (User === null)
                return 'Не задан *';
            return User.Name;//`${User.Name} [${User.Position}], Email: ${User.Email}, Тел. ${User.Phone}`
        }
    },
    Props: function(){
        this.CurrentDate = null;
    },
    Show(){
        this.Parent.Subscription.Subscribe();
    },
    Refresh: function () {
        if (this.Controller.Data.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataEvent);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataEvent.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataEvent);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataEvent.length < 1 || this.CurrentDate !== Diary.Summary.CurrentDate){
            Diary.Summary.GetData();
        }
    },
    BeforeShow: function () {
        Diary.CheckForBread();
        this.Refresh();
    },
});
},{"../../_common/dictionary":102}],47:[function(require,module,exports){
Diary.Summary.SummaryPart5 = new Lure.Content({
    Parent: Diary.Summary,
    Name: 'SummaryPart5',
    Type: 'diary-summary-content',
    Control:{
        Target: '#nav-diary-summary-5',
    },
    Content: `<div class="summary-part">
                <div class="tabs">
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part5" id="summary-part5-1" data-tableid="1" checked="checked">
                        <label class="label tab-label" for="summary-part5-1">ВЫСТАВКИ</label>
                    </div>
                </div>
                <table class="table summary-table">
                    <thead class="thead">
                        {{#each TableHead}}
                            <tr class="trow head-{{Line}}">
                                {{#each Cells}}
                                    <th colspan="{{Colspan}}" rowspan="{{Rowspan}}" class="tcell" title="{{Name}}">{{Name}}</th>
                                {{#endeach}}
                            </tr>
                        {{#endeach}}
                    </thead>
                    <tbody class="tbody"></tbody>
                </table>
              </div>`,
    Proto:{
        TableID: 1,
        TableHead: [
            {
                Line: 1,
                Cells: [
                    {
                        Name: 'Дата',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Название',
                        Colspan: 2,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Количество представленных документов',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Количество выданных документов',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Ответственный',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: 'Примечания',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                ]
            },
            {
                Line: 3,
                Cells:[
                    {
                        Name: "1",
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '2',
                        Colspan: 2,
                        Rowspan: 1,
                    },
                    {
                        Name: '3',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '4',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '5',
                        Colspan: 1,
                        Rowspan: 1,
                    },
                    {
                        Name: '6',
                        Colspan: 1,
                        Rowspan: 1,
                    },

                ]
            }
        ],
    },
    Controller: {
        Target: '.tbody',
        ListElement: `<tr class="trow {{#if (o.isChangedByOutside) ? 'changed-outside':''}}"> 
                          <td class="tcell" title="{{DateStart}} - {{DateFinish}}">{{DateStart}} - {{DateFinish}}</td>
                          <td colspan="2" class="tcell lock" data-prop="P5V2">{{P5V2.Value}}</td>
                          <td class="tcell numpadable  {{P5V3.State}}" data-prop="P5V3">{{P5V3.Value}}</td>
                          <td class="tcell numpadable  {{P5V4.State}}" data-prop="P5V4">{{P5V4.Value}}</td>
                          <td class="tcell {{P5V5.State}}" data-prop="P5V5">{{P5V5.Value}}</td> 
                          <td class="tcell textboxable {{P5V6.State}}" data-prop="P5V6">{{P5V6.Value}}</td>
                      </tr>`,
        EmptyMessage: `<td colspan="6" class="list-empty">нет данных</td>`,
        LineSave: function (DataItem, a, Val) {
            let td = Lure.Select(`.tcell[data-prop="${a.split('.')[0]}"]`, DataItem.DOM);
            if (td)
                td.setAttribute('title', Val);
            if (Lure.Object.GetProperty(DataItem.Data, a.replace('Value', '_Value')) !== Val){
                td.classList.add('changed');
                Lure.Object.SetProperty(DataItem.Data, a, Val);
                Diary.Summary.Check(DataItem.Data);
            }else{
                td.classList.remove('changed');
            }
            return Promise.resolve('');
        }
    },
    PropFormat: {
        DateStart: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
        DateFinish: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
        'P5V5.Value': (UserID)=>{
            UserID = parseInt(UserID);
            let User = Lure.User.Cache.UserList.Where(x=>x.ID === UserID).FirstOrDefault();
            if (User === null)
                return 'Не задан *';
            return User.Name;//`${User.Name} [${User.Position}], Email: ${User.Email}, Тел. ${User.Phone}`
        }
    },

    Props: function(){
        this.CurrentDate = null;
    },
    Show(){
        this.Parent.Subscription.Subscribe();
    },
    Refresh: function () {
        if (this.Controller.Data.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataExhibition);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataExhibition.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataExhibition);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataExhibition.length < 1 || this.CurrentDate !== Diary.Summary.CurrentDate){
            Diary.Summary.GetData();
        }
    },
    BeforeShow: function () {
        Diary.CheckForBread();
        this.Refresh();
    },
});
},{}],48:[function(require,module,exports){
new Lure.Content({
    Parent: Diary.Summary,
    Name: 'SummaryPart6',
    Type: 'diary-summary-content',
    Control:{
        Target: '#nav-diary-summary-6',
    },
    Content: `<div class="summary-part">
                <div class="tabs">
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part6" id="summary-part6-1" data-tableid="1" checked="checked">
                        <label class="label tab-label" for="summary-part6-1">ПОЛЬЗОВАТЕЛИ НА ДОМУ</label>
                    </div>
                    <div class="tab">
                        <input class="l-radio tab-radio" type="radio" name="summary-part6" id="summary-part6-2" data-tableid="2">
                        <label class="label tab-label" for="summary-part6-2">РАБОТА ПЕРЕДВИЖЕК</label>
                    </div>
                </div>
                <table class="table summary-table fixed-height">
                    <thead class="thead">
                        {{#each this.TableHead}}
                            <tr class="trow head-{{Line}}">
                                {{#each Cells}}
                                    <th colspan="{{Colspan}}" rowspan="{{Rowspan}}" class="tcell" title="{{Name}}">{{Name}}</th>
                                {{#endeach}}
                            </tr>
                        {{#endeach}}
                    
                    </thead>
                    <tbody class="tbody"></tbody>
                </table>
              </div>`,
    Proto:{
        TableID: 1,
        TableHead: {
            1:[
                {
                    Line: 1,
                    Cells: [
                        {
                            Name: 'Дата',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Зарегистрировано пользователей',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Из них инвалидов',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Выдано книг на дом',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Работа с передвижками',
                            Colspan: 3,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 2,
                    Cells: [
                        {
                            Name: 'Посещение пользователей',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Консультация пользователей',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Семинар передвижников',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 3,
                    Cells:[
                        {
                            Name: "1",
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '2',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '3',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '4',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '5',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '6',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '7',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                }
            ],
            2:[
                {
                    Line: 1,
                    Cells: [
                        {
                            Name: 'Дата',
                            TableID: -1,
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Количество передвижек',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Число читателей в них',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'Всего выдано книг',
                            Colspan: 1,
                            Rowspan: 2,
                        },
                        {
                            Name: 'По тематике',
                            Colspan: 11,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Массовые мероприятия',
                            Colspan: 2,
                            Rowspan: 1,
                        },
                    ]
                },
                {
                    Line: 2,
                    Cells: [
                        {
                            Name: 'ОПЛ',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Е/зн',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Техника',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'С/х',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Искусство',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Спорт',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '81.83',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Справочники',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Дет. лит-ра',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Худ. лит-ра',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Дополнит.',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Количество',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: 'Число обслуженных',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                },
                {
                    Line: 3,
                    Cells:[
                        {
                            Name: "1",
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '2',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '3',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '4',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '5',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '6',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '7',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '8',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '9',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '10',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '11',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '12',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '13',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '14',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '15',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '16',
                            Colspan: 1,
                            Rowspan: 1,
                        },
                        {
                            Name: '17',
                            Colspan: 1,
                            Rowspan: 1,
                        },

                    ]
                }
            ],

        },
        TableData: [],
    },
    GetSet:{
        get TableHead(){
            return this.Proto.Data.TableHead[this.Proto.Data.TableID]
        }
    },
    Controller: {
        Target: '.tbody',
        ListElement: `<tr class="{{#if ( i === 0 || i #more this.Data.length-3) ? 'srow':'trow'}} {{#if (o.isChangedByOutside) ? 'changed-outside':''}}{{DayType}}"> 
                          <td class="tcell sum-part-date l-pointer" title="{{DateVisual}}">{{DateVisual}}</td>
                          <td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P61V2.State}}"  data-prop="P61V2">
  <div class="hint {{#if (o.P61V2.D.Description) ? '':'none'}}" data-hint="{{P61V2.D.Description}}">f</div>
  <div class="value">{{P61V2.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P61V3.State}}"  data-prop="P61V3">
  <div class="hint {{#if (o.P61V3.D.Description) ? '':'none'}}" data-hint="{{P61V3.D.Description}}">f</div>
  <div class="value">{{P61V3.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P61V4.State}}"  data-prop="P61V4">
  <div class="hint {{#if (o.P61V4.D.Description) ? '':'none'}}" data-hint="{{P61V4.D.Description}}">f</div>
  <div class="value">{{P61V4.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P61V5.State}}"  data-prop="P61V5">
  <div class="hint {{#if (o.P61V5.D.Description) ? '':'none'}}" data-hint="{{P61V5.D.Description}}">f</div>
  <div class="value">{{P61V5.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P61V6.State}}"  data-prop="P61V6">
  <div class="hint {{#if (o.P61V6.D.Description) ? '':'none'}}" data-hint="{{P61V6.D.Description}}">f</div>
  <div class="value">{{P61V6.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 1)?'':'none'}} numpadable {{P61V7.State}}"  data-prop="P61V7">
  <div class="hint {{#if (o.P61V7.D.Description) ? '':'none'}}" data-hint="{{P61V7.D.Description}}">f</div>
  <div class="value">{{P61V7.Value}}</div>
</td>

 <td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V2.State}}"  data-prop="P62V2">
  <div class="hint {{#if (o.P62V2.D.Description) ? '':'none'}}" data-hint="{{P62V2.D.Description}}">f</div>
  <div class="value">{{P62V2.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V3.State}}"  data-prop="P62V3">
  <div class="hint {{#if (o.P62V3.D.Description) ? '':'none'}}" data-hint="{{P62V3.D.Description}}">f</div>
  <div class="value">{{P62V3.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} lock {{P62V4.State}}"  data-prop="P62V4">
  <div class="hint {{#if (o.P62V4.D.Description) ? '':'none'}}" data-hint="{{P62V4.D.Description}}">f</div>
  <div class="value">{{P62V4.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V5.State}}"  data-prop="P62V5">
  <div class="hint {{#if (o.P62V5.D.Description) ? '':'none'}}" data-hint="{{P62V5.D.Description}}">f</div>
  <div class="value">{{P62V5.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V6.State}}"  data-prop="P62V6">
  <div class="hint {{#if (o.P62V6.D.Description) ? '':'none'}}" data-hint="{{P62V6.D.Description}}">f</div>
  <div class="value">{{P62V6.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V7.State}}"  data-prop="P62V7">
  <div class="hint {{#if (o.P62V7.D.Description) ? '':'none'}}" data-hint="{{P62V7.D.Description}}">f</div>
  <div class="value">{{P62V7.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V8.State}}"  data-prop="P62V8">
  <div class="hint {{#if (o.P62V8.D.Description) ? '':'none'}}" data-hint="{{P62V8.D.Description}}">f</div>
  <div class="value">{{P62V8.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V9.State}}"  data-prop="P62V9">
  <div class="hint {{#if (o.P62V9.D.Description) ? '':'none'}}" data-hint="{{P62V9.D.Description}}">f</div>
  <div class="value">{{P62V9.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V10.State}}"  data-prop="P62V10">
  <div class="hint {{#if (o.P62V10.D.Description) ? '':'none'}}" data-hint="{{P62V10.D.Description}}">f</div>
  <div class="value">{{P62V10.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V11.State}}"  data-prop="P62V11">
  <div class="hint {{#if (o.P62V11.D.Description) ? '':'none'}}" data-hint="{{P62V11.D.Description}}">f</div>
  <div class="value">{{P62V11.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V12.State}}"  data-prop="P62V12">
  <div class="hint {{#if (o.P62V12.D.Description) ? '':'none'}}" data-hint="{{P62V12.D.Description}}">f</div>
  <div class="value">{{P62V12.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V13.State}}"  data-prop="P62V13">
  <div class="hint {{#if (o.P62V13.D.Description) ? '':'none'}}" data-hint="{{P62V13.D.Description}}">f</div>
  <div class="value">{{P62V13.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V14.State}}"  data-prop="P62V14">
  <div class="hint {{#if (o.P62V14.D.Description) ? '':'none'}}" data-hint="{{P62V14.D.Description}}">f</div>
  <div class="value">{{P62V14.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V15.State}}"  data-prop="P62V15">
  <div class="hint {{#if (o.P62V15.D.Description) ? '':'none'}}" data-hint="{{P62V15.D.Description}}">f</div>
  <div class="value">{{P62V15.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V16.State}}"  data-prop="P62V16">
  <div class="hint {{#if (o.P62V16.D.Description) ? '':'none'}}" data-hint="{{P62V16.D.Description}}">f</div>
  <div class="value">{{P62V16.Value}}</div>
</td>
<td class="tcell {{#if (this.Proto.Data.TableID === 2)?'':'none'}} numpadable {{P62V17.State}}"  data-prop="P62V17">
  <div class="hint {{#if (o.P62V17.D.Description) ? '':'none'}}" data-hint="{{P62V17.D.Description}}">f</div>
  <div class="value">{{P62V17.Value}}</div>
</td>
                      </tr>`,
        EmptyMessage: `<div class="list-empty">нет данных</div>`,
    },
    PropTypes:{
        TableID: Lure.PropTypes.Int
    },

    Props: function(){
        this.CurrentDate = null;
    },
    Show(){
        this.Parent.Subscription.Subscribe();
    },
    Refresh: function () {
        if (this.Controller.Data.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length > 0 && this.CurrentDate === Diary.Summary.CurrentDate){
            this.Controller.Refresh(Diary.Summary.DataPrepared);
        }
        else if (this.Controller.Data.length < 1 && Diary.Summary.DataPrepared.length < 1 || this.CurrentDate !== Diary.Summary.CurrentDate){
            Diary.Summary.GetData();
        }
    },
    BeforeShow: function () {
        Diary.CheckForBread();
        this.Refresh();
    },
});
},{}],49:[function(require,module,exports){
const Static = require("../../_common/static");
const D = require("../../_common/dictionary");
const HistorySubscription = require('../../_common/history-master/history-subscription');
//const NumPad = require("../../_common/numpad/numpad");
const InputBox = require("../../_common/input-box/input-box");

Diary.Summary = new Lure.Content({
    Parent: Diary,
    Name: 'Summary',
    Type: 'diary-content',
    Control:{
        Target: '#nav-diary-summary',
    },
    Permission: {
        Roles: [D.Role.DairySummary],
        Write: [D.Role.DairySummaryEdit]
    },
    Content: `<div class="summary">
                <div class="bread l-row">
                    <div class="li bread-date">
                       <div>Дата внесенных данных: &nbsp;</div>
                       <div class="flex-100">
                        <select class="date-list">
                            {{#each Months}}
                                <option value="{{Value}}">{{Text}}</option>
                            {{#endeach}}
                        </select>
                       </div>
                    </div>
                    <div class="li bread-library l-row l-flexa-center flex-100">
                      <div>Подразделение: &nbsp;&nbsp;</div>
                      <div class="flex-100 library-tree-control">__</div>
                    </div>
                    <div class="li button-holder l-row">
                        <button class="l-button button btn-refresh">Обновить</button>
                    </div>
                    <div class="li button-holder l-row">
                      <button class="l-button button button-get-xls">Экспорт</button>
                      <div class="edit-controls l-row {{#if (o.LibraryIDListSelected.length #more 1) ? 'none':''}}">
                        <button class="l-button button button-clear">Очистить</button>
                        <button class="l-button button button-save">Сохранить</button>
                      </div>
                   </div>
                </div>
              </div>`,
    Load: '',
    State: {
        Months: [],
        DateSelected: null,
        LibraryIDListSelected: [],
    },
    GetSet: {
        get CurrentPart(){
            return this.GetSubContentList()
                .Where(x=>x.isActive && x.Type !== 'side-abs-content')
                .FirstOrDefault();
        },
        get CurrentLibraries(){
            return this.Proto.Data.LibraryIDListSelected;
        },
        get CurrentLibraryID(){
            return this.Proto.Data.LibraryIDListSelected.FirstOrDefault();
        },
        get CurrentDate(){
            return this.Proto.Data.DateSelected;
        }
    },
    Props: function () {
        this.D = {
            P1V2: {
                Name: 'Всего',
                Dependencies: ['P1V4', 'P1V7'],
                Description: '1.2 = 1.4 + 1.7',
                Check: null,
                GetValue: (Data)=>{
                    return Data.P1V4.Value + Data.P1V7.Value;
                },
            },
            P1V3: {
                Name: 'Вновь записавшихся',
                Dependencies: ['P1V2'],
                Description: '1.3 <= 1.2',
                Check: (Data)=>{
                    return Data.P1V3.Value <= Data.P1V2.Value
                },
                GetValue: null
            },
            P1V4: {
                Name: 'Всего стационар',
                Dependencies: ['P1V7', 'P1V8', 'P1V9', 'P1V10', 'P1V11', 'P1V12', 'P1V13', 'P1V14', 'P1V15', 'P1V16'],
                //Description: '1.4 + 1.7 = сумма с 1.8 по 1.16',
                Description: '1.4 = 1.5 + 1.6 + 1.6.1',
                // Check: (Data)=>{
                //     return Data.P1V4.Value + Data.P1V7.Value === Data.P1V8.Value + Data.P1V9.Value + Data.P1V10.Value + Data.P1V11.Value + Data.P1V12.Value + Data.P1V13.Value + Data.P1V14.Value + Data.P1V15.Value + Data.P1V16.Value
                // },
                Check: null,
                GetValue: (Data)=>{
                    return Data.P1V5.Value + Data.P1V6.Value + Data.P1V61.Value //1.4 = 1.5+1.6+1.6.1
                }
            },
            P1V5: {
                Name: 'Возраст до 14 лет',
                Dependencies: ['P1V8', 'P1V9', 'P1V10'],
                Description: '1.5 =  сумма с 1.8 по 1.10',
                Check: null,
                GetValue: (Data)=>{
                    return Data.P1V8.Value + Data.P1V9.Value + Data.P1V10.Value// + Data.P1V11.Value
                }
            },
            P1V6: {
                Name: 'Возраст 14-30 лет',
                Dependencies: ['P1V5', 'P1V8', 'P1V9', 'P1V10', 'P1V11'],
                Description: '1.5 + 1.6 + 1.6.1<= 1.2',
                Check: (Data)=>{
                    return Data.P1V5.Value + Data.P1V6.Value + Data.P1V61.Value <= Data.P1V2.Value
                },
                GetValue: null
            },
            P1V61: {
                Name: 'Возраст 14-30 лет',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V7: {
                Name: 'Удаленные пользователи',
                Dependencies: ['P1V4', 'P1V8', 'P1V9', 'P1V10', 'P1V11', 'P1V12', 'P1V13', 'P1V14', 'P1V15', 'P1V16'],
                Description: '1.4 + 1.7 = сумма с 1.8 по 1.16',
                Check: (Data)=>{
                    return Data.P1V4.Value + Data.P1V7.Value === Data.P1V8.Value + Data.P1V9.Value + Data.P1V10.Value + Data.P1V11.Value + Data.P1V12.Value + Data.P1V13.Value + Data.P1V14.Value + Data.P1V15.Value + Data.P1V16.Value
                },
                GetValue: null
            },
            P1V8: {
                Name: 'д/ш',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V9: {
                Name: 'Школьники 7-10 лет',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V10: {
                Name: 'Школьники 11-14 лет',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V11: {
                Name: 'Старшеклассники',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V12: {
                Name: 'РДЧ',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V13: {
                Name: 'Пенсионеры',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V14: {
                Name: 'Служащие',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V15: {
                Name: 'Студенты',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V16: {
                Name: 'Прочие',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null
            },
            P1V17: {
                Name: 'Всего посещений',
                Dependencies: ['P1V18', 'P1V19'],
                Description: '',
                Check: null,
                GetValue: (Data)=> Data.P1V18.Value + Data.P1V19.Value,
            },
            P1V18: {
                Name: 'Стационар',
                Dependencies: ['P1V21', 'P1V34', 'P1V36'],
                Description: '1.18 >= 1.21 + 1.34 + 1.36',
                Check: (Data)=> Data.P1V18.Value >= Data.P1V21.Value+Data.P1V34.Value+Data.P1V36.Value,
                GetValue: null,
            },
            P1V19: {
                Name: 'Внестационар',
                Dependencies: ['P1V27'],
                Description: '1.19 >= 1.27',
                Check: (Data)=> Data.P1V19.Value >= Data.P1V27.Value,
                GetValue: null,
            },
            P1V20: {
                Name: 'Интернет',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V21: {
                Name: 'Массовые мероприятия стационар',
                Dependencies: ['P1V22'],
                Description: '',
                Check: null,
                GetValue: (Data)=> Data.P1V22.Value,
            },
            P1V22: {
                Name: 'Посещение мероприятий стац. бесплатные',
                Dependencies: ['P1V22'],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V23: {
                Name: 'Посещение мероприятий стац. платные',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V24: {
                Name: 'Всего мероприятий стационар',
                Dependencies: ['P1V25'],
                Description: '',
                Check: null,
                GetValue: (Data)=> Data.P1V25.Value,
            },
            P1V25: {
                Name: 'Кол-во мероприятий стац. бесплатные',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V26: {
                Name: 'Кол-во мероприятий стац. платные',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V27: {
                Name: 'Всего посещений мероприятий внестационар',
                Dependencies: ['P1V28'], //P62V17
                Description: '',
                Check: null,
                GetValue: (Data)=> Data.P1V28.Value //(Data)=> Data.P62V17.Value,
            },
            P1V28: {
                Name: 'Посещение мероприятий внестац. бесплатные',
                Dependencies: ['P62V17'],
                Description: '',
                Check: null,
                GetValue: null,//(Data)=> Data.P62V17.Value,
            },
            P1V29: {
                Name: 'Посещение мероприятий внестац. платные',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V30: {
                Name: 'Всего мероприятий внестационар',
                Dependencies: ['P1V31'], //P62V16
                Description: '',
                Check: null,
                GetValue: (Data)=> Data.P1V31.Value,
            },
            P1V31: {
                Name: 'Кол-во мероприятий внестац. бесплатные',
                Dependencies: [], //'P62V16'
                Description: '',
                Check: null,
                GetValue: null,//(Data)=> Data.P62V16.Value,
            },
            P1V32: {
                Name: 'Кол-во мероприятий внестац. платные',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V33: {
                Name: 'Кол-во заседаний клуба бесплатно',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V34: {
                Name: 'Число посещений клуба',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V35: {
                Name: 'Кол-во заседаний клуба платно',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P1V36: {
                Name: 'Число посещений клуба платно',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },

            P2V2: {
                Name: 'Всего выдано книг и брошюр',
                Dependencies: ['P2V3','P2V5', 'P2V6', 'P2V7'],
                Description: '2.2 = 2.3 + 2.5 + 2.6 + 2.7 = сумма c 2.8 по 2.18',
                Check: null,
                GetValue: (Data)=>Data.P2V3.Value + Data.P2V5.Value + Data.P2V6.Value + Data.P2V7.Value,
            },
            P2V3: {
                Name: 'Выдано на физических носителях',
                Dependencies: ['P2V5', 'P2V6', 'P2V7', 'P2V8', 'P2V9', 'P2V11', 'P2V12', 'P2V13', 'P2V14', 'P2V15', 'P2V16', 'P2V17', 'P2V18'],
                Description: '2.2 = 2.3 + 2.5 + 2.6 + 2.7 = сумма c 2.8 по 2.18',
                Check: (Data)=>{
                    return Data.P2V3.Value + Data.P2V5.Value + Data.P2V6.Value + Data.P2V7.Value ===
                       Data.P2V8.Value +Data.P2V9.Value+Data.P2V10.Value +Data.P2V11.Value +Data.P2V12.Value +Data.P2V13.Value +Data.P2V14.Value +Data.P2V15.Value +Data.P2V16.Value +Data.P2V17.Value +Data.P2V18.Value;
                },
                GetValue: null,
            },
            P2V4: {
                Name: 'Выдано внестационар и на дому',
                Dependencies: ['P61V4', 'P62V4'],
                Description: '2.4 = 6.1.4 + 6.2.4',
                Check: null,
                GetValue: (Data)=> Data.P61V4.Value + Data.P62V4.Value,
            },
            P2V5: {
                Name: 'Выдано из электронной библиотеки',
                Dependencies: ['P2V3', 'P2V6', 'P2V7', 'P2V8', 'P2V9', 'P2V11', 'P2V12', 'P2V13', 'P2V14', 'P2V15', 'P2V16', 'P2V17', 'P2V18'],
                Description: '2.2 = 2.3 + 2.5 + 2.6 + 2.7 = сумма c 2.8 по 2.18',
                Check: (Data)=>{
                    return Data.P2V3.Value + Data.P2V5.Value + Data.P2V6.Value + Data.P2V7.Value ===
                        Data.P2V8.Value +Data.P2V9.Value+Data.P2V10.Value +Data.P2V11.Value +Data.P2V12.Value +Data.P2V13.Value +Data.P2V14.Value +Data.P2V15.Value +Data.P2V16.Value +Data.P2V17.Value +Data.P2V18.Value;
                },
                GetValue: null,
            },
            P2V6: {
                Name: 'Выдано инсталлированных',
                Dependencies: ['P2V3', 'P2V5', 'P2V7', 'P2V8', 'P2V9', 'P2V11', 'P2V12', 'P2V13', 'P2V14', 'P2V15', 'P2V16', 'P2V17', 'P2V18'],
                Description: '2.2 = 2.3 + 2.5 + 2.6 + 2.7 = сумма c 2.8 по 2.18',
                Check: (Data)=>{
                    return Data.P2V3.Value + Data.P2V5.Value + Data.P2V6.Value + Data.P2V7.Value ===
                        Data.P2V8.Value +Data.P2V9.Value+Data.P2V10.Value +Data.P2V11.Value +Data.P2V12.Value +Data.P2V13.Value +Data.P2V14.Value +Data.P2V15.Value +Data.P2V16.Value +Data.P2V17.Value +Data.P2V18.Value;
                },
                GetValue: null,
            },
            P2V7: {
                Name: 'Выдано на физических носителях',
                Dependencies: ['P2V3', 'P2V6', 'P2V6', 'P2V8', 'P2V9', 'P2V11', 'P2V12', 'P2V13', 'P2V14', 'P2V15', 'P2V16', 'P2V17', 'P2V18'],
                Description: '2.2 = 2.3 + 2.5 + 2.6 + 2.7 = сумма c 2.8 по 2.18',
                Check: (Data)=>{
                    return Data.P2V3.Value + Data.P2V5.Value + Data.P2V6.Value + Data.P2V7.Value ===
                        Data.P2V8.Value +Data.P2V9.Value+Data.P2V10.Value +Data.P2V11.Value +Data.P2V12.Value +Data.P2V13.Value +Data.P2V14.Value +Data.P2V15.Value +Data.P2V16.Value +Data.P2V17.Value +Data.P2V18.Value;
                },
                GetValue: null,
            },
            P2V8: {
                Name: 'Выдано ОПЛ',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V9: {
                Name: 'Выдано естествознание',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V10: {
                Name: 'Выдано Техника',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V11: {
                Name: 'Выдано Сельское хозяйство',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V12: {
                Name: 'Выдано Искусство',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V13: {
                Name: 'Выдано Спорт',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V14: {
                Name: 'Выдано 81,83',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V15: {
                Name: 'Выдано Справочники',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V16: {
                Name: 'Выдано Детская литература',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V17: {
                Name: 'Выдано Художественная литература',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V18: {
                Name: 'Выдано Дополнительно',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V19: {
                Name: 'Выдано документов',
                Dependencies: ['P2V20', 'P2V22', 'P2V23', 'P2V24'],
                Description: '2.19 = 2.20 + 2.22 + 2.23 + 2.24',
                Check: null,
                GetValue: (Data)=>Data.P2V20.Value + Data.P2V22.Value + Data.P2V23.Value + Data.P2V24.Value,
            },
            P2V20: {
                Name: 'Выдано до 14, на физ. носителях',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V21: {
                Name: 'Выдано до 14, внестационар и на дому',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V22: {
                Name: 'Выдано до 14, из электронной библиотеки',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V23: {
                Name: 'Выдано до 14, инсталлированных',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V24: {
                Name: 'Выдано до 14, удаленных лицензионных',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V25: {
                Name: 'Всего выдано 14-30',
                Dependencies: ['P2V26', 'P2V28', 'P2V29', 'P2V30'],
                Description: '2.25 = 2.26 + 2.28 + 2.29 + 2.30',
                Check: null,
                GetValue: (Data)=> Data.P2V26.Value + Data.P2V28.Value + Data.P2V29.Value + Data.P2V30.Value,
            },
            P2V26: {
                Name: 'Выдано 14-30, на физ. носителях',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V27: {
                Name: 'Выдано 14-30, внестационар и на дому',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V28: {
                Name: 'Выдано 14-30, из электронной библиотеки',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V29: {
                Name: 'Выдано 14-30, инсталлированных',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V30: {
                Name: 'Выдано 14-30, удаленных лицензионных',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V251: {
                Name: 'Всего выдано 30+',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: (Data)=> Data.P2V261.Value + Data.P2V281.Value + Data.P2V291.Value + Data.P2V301.Value,
            },
            P2V261: {
                Name: 'Выдано 30+, на физ. носителях',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V271: {
                Name: 'Выдано 30+, внестационар и на дому',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V281: {
                Name: 'Выдано 30+, из электронной библиотеки',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V291: {
                Name: 'Выдано 30+, инсталлированных',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V301: {
                Name: 'Выдано 30+, удаленных лицензионных',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V31: {
                Name: 'Всего выдано копий',
                Dependencies: ['P2V32', 'P2V33'],
                Description: '2.31 >= 2.32 + 2.33',
                Check: null, //(Data)=> Data.P2V31.Value >= Data.P2V32.Value + Data.P2V33.Value,
                GetValue: (Data) => Data.P2V32.Value + Data.P2V33.Value + Data.P2V331.Value,
            },
            P2V32: {
                Name: 'Выдано копий детям до 14 лет',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V33: {
                Name: 'Выдано копий пользователям 14-30 лет',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V331: {
                Name: 'Выдано копий пользователям 30+ лет',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V34: {
                Name: 'Всего выдано документов',
                Dependencies: ['P2V35', 'P2V36'],
                Description: '2.34 >= 2.35 + 2.36',
                Check: (Data)=> Data.P2V34.Value >= Data.P2V35.Value + Data.P2V36.Value,
                GetValue: null,
            },
            P2V35: {
                Name: 'Получено по систме МБА и ММБА',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V36: {
                Name: 'Доступных в вирт. читальных залах',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V37: {
                Name: 'Всего выполнено справок и консультаций',
                Dependencies: ['P2V40', 'P2V41', 'P2V42', 'P2V43', 'P2V44'],
                Description: '2.37 = сумма c 2.40 по 2.44',
                Check: null,
                GetValue: (Data)=> Data.P2V40.Value + Data.P2V41.Value + Data.P2V42.Value + Data.P2V43.Value + Data.P2V44.Value,
            },
            P2V38: {
                Name: 'Справок/консультаций, до 14',
                Dependencies: ['P2V39', 'P2V37', 'P2V44'],
                Description: '2.38 + 2.39 <= 2.37 - 2.44',
                Check: (Data)=> Data.P2V38.Value + Data.P2V39.Value <=  Data.P2V37.Value - Data.P2V44.Value,
                GetValue: null,
            },
            P2V39: {
                Name: 'Справок/консультаций, 14-30',
                Dependencies: ['P2V38', 'P2V37', 'P2V44'],
                Description: '2.38 + 2.39 <= 2.37 - 2.44',
                Check: (Data)=> Data.P2V38.Value + Data.P2V39.Value <=  Data.P2V37.Value - Data.P2V44.Value,
                GetValue: null,
            },
            P2V391: {
                Name: 'Справок/консультаций, 30+',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V40: {
                Name: 'Справок/консультаций, тематические',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V41: {
                Name: 'Справок/консультаций, фактографические',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V42: {
                Name: 'Справок/консультаций, библиографические',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V43: {
                Name: 'Справок/консультаций, консультации',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P2V44: {
                Name: 'Справок/консультаций, удаленных',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },

            P3V2: {
                Name: 'Всего выдано электронных ресурсов',
                Dependencies: ['P3V3', 'P3V4', 'P3V5'],
                Description: '3.2 = сумма c 3.3 по 3.5',
                Check: null,
                GetValue: (Data)=> Data.P3V3.Value + Data.P3V4.Value + Data.P3V5.Value,
            },
            P3V3: {
                Name: 'Инсталированные документы',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P3V4: {
                Name: 'Сетевые удаленные документы',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P3V5: {
                Name: 'Из электронной библиотеки',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P3V6: {
                Name: 'DVD, CD-ROM',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },

            P4V2: {
                Name: 'Название мероприятия',
                Dependencies: [],
                Description: 'Изменяется при внесении мероприятия',
                Check: null,
                GetValue: null,
            },
            P4V3: {
                Name: 'Форма проведения',
                Dependencies: [],
                Description: 'Изменяется при внесении мероприятия',
                Check: null,
                GetValue: null,
            },
            P4V4: {
                Name: 'Бесплатно',
                Dependencies: ['P4V6', 'P4V7', 'P4V8'],
                Description: '4.4 >= 4.6 + 4.7 + 4.8',
                Check: (Data)=> Data.P4V4.Value >= Data.P4V6.Value + Data.P4V7.Value + Data.P4V8.Value,
                GetValue: null,
            },
            P4V5: {
                Name: 'Платно',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V6: {
                Name: 'Инвалиды',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V7: {
                Name: 'Мигранты',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V8: {
                Name: 'Проф семинары, лекции и т.д.',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V9: {
                Name: 'Бесплатно',
                Dependencies: ['P4V11','P4V12','P4V13'],
                Description: '4.9 >= 4.11 + 4.12 + 4.13',
                Check: (Data)=> Data.P4V9.Value >= Data.P4V11.Value + Data.P4V12.Value + Data.P4V13.Value,
                GetValue: null,
            },
            P4V10: {
                Name: 'Платно',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V11: {
                Name: 'Инвалиды',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V12: {
                Name: 'Мигранты',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V13: {
                Name: 'Проф семинары, лекции и т.д.',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V14: {
                Name: 'Посещения',
                Dependencies: ['P4V15','P4V16'],
                Description: '4.14 >= 4.15 + 4.16',
                Check: (Data)=> Data.P4V14.Value >= Data.P4V15.Value + Data.P4V16.Value,
                GetValue: null,
            },
            P4V15: {
                Name: 'Инвалиды',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V16: {
                Name: 'Мигранты',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V17: {
                Name: 'Посещения',
                Dependencies: ['P4V18','P4V19'],
                Description: '4.14 >= 4.15 + 4.16',
                Check: (Data)=> Data.P4V17.Value >= Data.P4V18.Value + Data.P4V19.Value,
                GetValue: null,
            },
            P4V18: {
                Name: 'Инвалиды',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V19: {
                Name: 'Мигранты',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V20: {
                Name: 'Выездное название',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P4V21: {
                Name: 'Ответственный',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },


            P5V2: {
                Name: 'Название выставки',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P5V3: {
                Name: 'Число предоставленных документоа',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P5V4: {
                Name: 'Число выданных документоа',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P5V5: {
                Name: 'Ответственный',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P5V6: {
                Name: 'Примечания',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },

            P61V2: {
                Name: 'Зарегестрированно пользователей',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P61V3: {
                Name: 'Инвалидов',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P61V4: {
                Name: 'Выдано книг на дом',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P61V5: {
                Name: 'Посещение пользователей',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P61V6: {
                Name: 'Консультация пользователей',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P61V7: {
                Name: 'Семинар передвижников',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },

            P62V2: {
                Name: 'Количество передвижек',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V3: {
                Name: 'Количество читателей',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V4: {
                Name: 'Всего выдано книг',
                Dependencies: ['P62V5', 'P62V6', 'P62V7', 'P62V8', 'P62V9', 'P62V10', 'P62V11', 'P62V12', 'P62V13', 'P62V14', 'P62V15'],
                Description: '6.2.4 = сумма с6.2.5 по 6.2.15',
                Check: null,
                GetValue: (d)=> d.P62V5.Value + d.P62V6.Value + d.P62V7.Value + d.P62V8.Value + d.P62V9.Value + d.P62V10.Value + d.P62V11.Value + d.P62V12.Value + d.P62V13.Value + d.P62V14.Value + d.P62V15.Value,
            },
            P62V5: {
                Name: 'Выдано ОПЛ',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V6: {
                Name: 'Выдано Естествознание',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V7: {
                Name: 'Выдано Техника',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V8: {
                Name: 'Выдано Сельское хозяйство',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V9: {
                Name: 'Выдано Искусство',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V10: {
                Name: 'Выдано Спорт',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V11: {
                Name: 'Выдано 81.83',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V12: {
                Name: 'Выдано Справочники',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V13: {
                Name: 'Выдано Детская литература',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V14: {
                Name: 'Выдано Художественная литература',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V15: {
                Name: 'Выдано Дополнительно',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V16: {
                Name: 'Количество мероприятий',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },
            P62V17: {
                Name: 'Число обслуженых',
                Dependencies: [],
                Description: '',
                Check: null,
                GetValue: null,
            },

        };
        this.DataPrepared = [];

        this.DataEvent      = [];
        this.DataExhibition = [];
        this.Errors = [];
        this.State.Months = (function () {
            let d = Lure.Date();
            let y = d.Year;
            let Months = [];
            while (d.Year === y){
                Months.unshift({
                    Date: d.Date,
                    Value: d.Value,
                    Text: d.Format('MMMM YYYY'),
                });
                d.AddMonths(-1);
            }
            return Months;
        })();

        this.SelectLibrary = this.Select('.lib-list');
        this.SelectDate = this.Select('.date-list');


        this.ButtonRefresh = this.Select('.btn-refresh');
        this.ButtonGetXLS = this.Select('.button-get-xls');
        this.ButtonSave = this.Select('.button-save');
        this.ButtonClear = this.Select('.button-clear');

        this._KeyRegex = new RegExp('P[\\d]+V[\\d]+');


        this.SubscribeTypes = [
            D.SubscribeType.SummaryChange,

            D.SubscribeType.VisitRegisterAdd,
            D.SubscribeType.VisitVisitAdd,
            D.SubscribeType.VisitEventAdd,
            D.SubscribeType.Bookware,
        ];
    },
    Methods: function(){
        this.GetData = function () {
            InputBox.Hide();
            Diary.Movings.Hide();
            this.Load.Show();
            let CurrentPart = this.CurrentPart;
            let dt = Lure.Date(this.CurrentDate);
            CurrentPart.CurrentDate = this.CurrentDate;
            if (CurrentPart.Name !== 'SummaryPart4' && CurrentPart.Name !== 'SummaryPart5'){
                return api.Diary_Summary_Part1236_Get(this.CurrentLibraries, dt.MonthStart, dt.MonthEnd, {
                    Then: (RawData)=>{
                        this.DataPrepared = this.PrepareData(RawData);
                        this.CurrentPart.Controller.Refresh(this.DataPrepared);
                    },
                    Catch: (e)=>{
                        console.error('Diary.Summary.GetData', e);
                        Lure.System.ShowError('Ошибка сервера');
                    },
                    Finally: ()=>{
                        this.Load.Hide();
                    }
                });
            }
            else if (CurrentPart.Name === 'SummaryPart4') {
                //console.log('rr SummaryPart4');
                return api.Diary_SummaryPart4_Get(Diary.Summary.CurrentLibraries, dt.MonthStart, dt.MonthEnd, {
                    Then: (x)=>{
                        this.DataEvent = this.PrepareDataEvent(x);
                        CurrentPart.Controller.Refresh(this.DataEvent);
                        this.Load.Hide();
                    }
                });

            }
            else if (CurrentPart.Name === 'SummaryPart5') {
                //console.log('rr SummaryPart5');
                return api.Diary_SummaryPart5_Get(Diary.Summary.CurrentLibraries, dt.MonthStart, dt.MonthEnd, {
                    Then: (x)=>{
                        this.DataExhibition = this.PrepareDataEvent(x);
                        CurrentPart.Controller.Refresh(this.DataExhibition);
                        this.Load.Hide();
                    }
                });
            }


        };
        this.PrepareDataEvent = function (Data) {
            let Prepared = [];
            for (let i = 0; i < Data.length; i++){
                let Line = Data[i];
                let Item = {
                    ID: Line.ID,
                    DateStart: Line.DateStart,
                    DateFinish: Line.DateFinish,
                    EventPlaceTypeID: Line.EventPlaceTypeID,
                    EventTypeID: Line.EventTypeID,
                    ListInvalid: [],
                    ListChanged: [],
                };
                for (let k in Line){
                    if (Line.hasOwnProperty(k) && this._KeyRegex.test(k)){
                        Item[k] = {
                            _Value: Line[k],
                            Value: Line[k],
                            D: this.D[k]
                        };

                    }
                }
                Prepared.push(Item);
            }
            return Prepared;

        };
        this.PrepareData = function (Data) {
            let Prepared = [];
            let SumLine = {
                ListInvalid: [],
                ListChanged: [],
            };
            let SumLineFull = {
                ListInvalid: [],
                ListChanged: [],
            };
            for (let k in Data[0]){
                if (Data[0].hasOwnProperty(k)){
                    SumLine[k] = {
                        _Value: 0,
                        Value: 0,
                        D: this.D[k]
                    };
                    SumLineFull[k] = {
                        _Value: 0,
                        Value: 0,
                        D: this.D[k]
                    };
                }
            }

            SumLine.DateValue  = Data[0].DateValue;
            SumLine.DateVisual = 'За месяц';
            SumLineFull.DateValue  = Data[0].DateValue;
            SumLineFull.DateVisual = 'Итого';
            for (let i = 0; i < Data.length; i++){
                let Line = Data[i];
                let Item = {};
                for (let k in Line){
                    if (Line.hasOwnProperty(k) && this._KeyRegex.test(k)){
                        if (i === 0){
                            SumLineFull[k].Value = Line[k];
                            SumLineFull[k]._Value = Line[k];
                        } else{
                            SumLineFull[k].Value += Line[k];
                            SumLineFull[k]._Value += Line[k];
                        }
                        if (i > 0)
                        {
                            SumLine[k].Value += Line[k];
                            SumLine[k]._Value += Line[k];
                        }
                        Item[k] = {
                            _Value: Line[k], //not changing value
                            Value: Line[k],
                            State: '',
                            D: this.D[k],
                        }
                    }
                }
                Item.DayType     = '';
                if (Line.IsDayOff)
                    Item.DayType += ' day-off';
                if (Lure.Date(Line.DateValue).isToday)
                    Item.DayType += ' day-today';
                Item.IsDayOff    = Line.IsDayOff;
                Item.DateValue   = Line.DateValue;
                Item.DateVisual  = Lure.Date(Line.DateValue).Format('DD.MM.YYYY');
                Item.ListInvalid = [];
                Item.ListChanged = [];
                Prepared.push(Item);
            }
            Prepared[0].DateVisual = 'На начало месяца';
            Prepared.push(SumLine);
            Prepared.push(SumLineFull);
            return Prepared;
        };

        this.Check = function (Item) {
            for (let k in Item){
                if (Item.hasOwnProperty(k) && this._KeyRegex.test(k)){
                    Item[k].State = '';
                    Item[k].Value = !Item[k].D.GetValue ? Item[k].Value : Item[k].D.GetValue(Item) ;
                    let isChanged = Item[k].Value !== Item[k]._Value;


                    if (Item[k].D.Check){
                        if (Item[k].D.Check(Item)){
                            if (isChanged)
                                Item[k].State = 'valid';
                            if (Item.ListInvalid.indexOf(k) > -1 ){
                                Lure.Array.Remove(Item.ListInvalid, x=>x===k);
                            }
                        }else{
                            Item[k].State = 'invalid';
                            if (Item.ListInvalid.indexOf(k) < 0){
                                Item.ListInvalid.push(k);
                            }
                        }
                        //Item[k].State = Item[k].D.Check(Item) ? 'valid':'invalid'
                    }
                    if (isChanged && !Item[k].State){
                        Item[k].State = 'changed';
                    }
                    if (isChanged && Item.ListChanged.indexOf(k) < 0){
                        Item.ListChanged.push(k)
                    }
                    if (!isChanged && Item.ListChanged.indexOf(k) > -1){
                        Lure.Array.Remove(Item.ListChanged, x=>x===k);
                    }
                }
            }
        };
        this.CheckSum = function () {

            let SumLine = this.DataPrepared[this.DataPrepared.length-2];
            let SumLineFull = this.DataPrepared.Last();

            for (let i = 0; i < this.DataPrepared.length-2; i++){
                let Line = this.DataPrepared[i];
                for (let k in Line){
                    if (Line.hasOwnProperty(k) && this._KeyRegex.test(k)){
                        if (i === 0){
                            SumLineFull[k].Value = Line[k].Value;
                        }
                        else {
                            SumLineFull[k].Value += Line[k].Value;
                        }

                        if(i === 1){
                            SumLine[k].Value = Line[k].Value;
                        }
                        else if (i > 1) {
                            SumLine[k].Value += Line[k].Value;
                        }

                    }
                }
            }
            //this.Check(SumLine); ВОТ ЗДЕСЬ БЫЛА УБРАНА ПРОВЕРКА ПРАВИЛЬНОСТИВ ПОСЛЕДНЕЙ СТРОКЕ
        };

        this.GetXLS = function () {
            if (this.CurrentLibraries.length > 1){
                return Lure.System.Notice('Экспорт данных нескольких библиотек еще недоступен.');
            }
            InputBox.Hide();
            this.Load.Show();
            let Dt = Lure.Date(Diary.Summary.CurrentDate);
            api.Diary_Summary_GetXLS(this.CurrentLibraries, Dt.Year, [Dt.Month+1], {
                Then: (Blob)=>{
                    Lure.SaveBlob(Blob, `Сводная таблица ${Dt.Format('MMMM YYYY')}.xlsx`);
                },
                Catch: ()=>{
                    Lure.System.Error('Невозможно получить отчет');
                },
                Finally: ()=>{
                    this.Load.Hide();
                },
            })
        };
        this.Clear = function (isReturnValue=true) {
            //common
            //i=1 for skip month's start's sum validation
            // -2 for skip sums
            for (let i = 1; i< this.DataPrepared.length-2; i++){
                let Line = this.DataPrepared[i];
                Line.ListChanged = [];
                Line.ListInvalid = [];
                for (let k in Line){
                    if (Line.hasOwnProperty(k) && this._KeyRegex.test(k)){
                        if (isReturnValue)
                            Line[k].Value = Line[k]._Value;
                        else
                            Line[k]._Value = Line[k].Value;
                    }
                }

                this.Check(Line);
            }
            //part4
            for (let i = 0; i< this.DataEvent.length; i++){
                let Line = this.DataEvent[i];
                Line.ListChanged = [];
                Line.ListInvalid = [];
                for (let k in Line){
                    if (Line.hasOwnProperty(k) && this._KeyRegex.test(k)){
                        if (isReturnValue)
                            Line[k].Value = Line[k]._Value;
                        else
                            Line[k]._Value = Line[k].Value;
                    }
                }
                this.Check(Line);
            }
            //part5
            for (let i = 0; i< this.DataExhibition.length; i++){
                let Line = this.DataExhibition[i];
                Line.ListChanged = [];
                Line.ListInvalid = [];

                for (let k in Line){
                    if (Line.hasOwnProperty(k) && this._KeyRegex.test(k)){
                        if (isReturnValue)
                            Line[k].Value = Line[k]._Value;
                        else
                            Line[k]._Value = Line[k].Value;
                    }
                }
                this.Check(Line);
            }
            this.CurrentPart.Controller.Refresh();
        };
        this.Save = function () {
            let Changed = [];
            let isOk = true;

            let ErrorList = [];

            //check part 1236
            //i=1 for skip month's start's sum validation
            // -2 for skip sums
            for (let i = 1; i< this.DataPrepared.length-2; i++){
                let Line = this.DataPrepared[i];
                if (Line.ListInvalid && Line.ListInvalid.length > 0){
                    isOk = false;
                    //let FieldName = (i < this.DataPrepared.length-2) ? Lure.Date(Line.DateValue).Format('DD MMMM YYYY') : 'Сумма за месяц';
                    //FieldName = (i === this.DataPrepared.length-1) ? FieldName : 'Итого';
                    let FieldName = Lure.Date(Line.DateValue).Format('DD MMMM YYYY');
                    let Fields = Line.ListInvalid
                        .Select(x=>x.replace('P', '').replace('V', '.'))
                        .join(', ');
                    ErrorList.push(`${FieldName}: ошибка в полях ${Fields}`);
                }
                if (Line.ListChanged.length > 0 && i < this.DataPrepared.length-1){
                    let packet = {
                        DateValue: Line.DateValue,
                        Changed: Line.ListChanged.Select(x=>{
                            return {Name: x, Value: Line[x].Value}
                        })
                    };
                    Changed.push(packet);
                }
            }
            //check part 4
            let ChangedEvent = [];
            for (let i = 0; i< this.DataEvent.length; i++){
                let Line = this.DataEvent[i];
                if (Line.ListInvalid && Line.ListInvalid.length > 0){
                    isOk = false;
                    let FieldName = Line.P4V2.Value;
                    let Fields = Line.ListInvalid
                        .Select(x=>x.replace('P', '').replace('V', '.'))
                        .join(', ');
                    let ErrText = `${FieldName}: ошибка в полях ${Fields}`;
                    Lure.System.ShowError(ErrText);
                }

                if (Line.ListChanged.length > 0){
                    let packet = {
                        ID: Line.ID, //here is LibraryEventID
                        Changed: Line.ListChanged.Select(x=>{
                            return {Key: x.replace('P4V', ''), Value: Line[x].Value}
                        })
                    };
                    ChangedEvent.push(packet);
                }
            }
            //check part 5
            let ChangedExhibition = [];
            for (let i = 0; i< this.DataExhibition.length; i++){
                let Line = this.DataExhibition[i];
                if (Line.ListInvalid && Line.ListInvalid.length > 0){
                    isOk = false;
                    let FieldName = Line.P4V2.Value;
                    let Fields = Line.ListInvalid
                        .Select(x=>x.replace('P', '').replace('V', '.'))
                        .join(', ');
                    let ErrText = `${FieldName}: ошибка в полях ${Fields}`;
                    Lure.System.ShowError(ErrText);
                }
                if (Line.ListChanged.length > 0){
                    let packet = {
                        ID: Line.ID,
                        Changed: Line.ListChanged.Select(x=>{
                            return {Key: x.replace('P5V', ''), Value: Line[x].Value}
                        })
                    };
                    ChangedExhibition.push(packet);
                }
            }

            for (let i = 0; i < ErrorList.length; i++){
                Lure.System.ShowError(ErrorList[i]);
            }
            if (ErrorList.length < 1 && (Changed.length+ChangedEvent.length+ChangedExhibition.length> 0)){
                Lure.Button.Lock(this.ButtonSave);
                api.Diary_Summary_Set(this.CurrentLibraryID, Changed, ChangedEvent, ChangedExhibition, {
                    Then: (res)=>{
                        if (res){
                            Lure.System.ShowSuccess('Изменения сохранены');
                            this.Clear(false);
                        }
                        else{
                            Lure.System.ShowError('Не сохранено');
                        }
                    },
                    Finally: ()=>{
                        Lure.Button.Release(this.ButtonSave);
                    }
                });
            }
            if (Changed.length < 1 && ChangedEvent.length < 1 && ChangedExhibition.length < 1)
                Lure.System.ShowNotice('Изменений нет');
            console.log('Summary.Save.Lines', Changed, ChangedEvent, ChangedExhibition);
        };

        this.ShowOutsideChanges = function () {
            console.log('ShowOutsideChanges');
            Diary.Summary.CurrentPart.Refresh();
            if (!this.ButtonRefresh.classList.contains('changed-outside'))
                this.ButtonRefresh.classList.add('changed-outside')
        };
        this.CallCellEditor = function (CellElement, LineID) {
            if (Diary.Summary.CurrentLibraries.length > 1)
                return;
            if (!Diary.Summary.HasPermissionWrite)
                return Lure.System.Notice('Нет прав редактирования таблицы');
            Lure.DocumentSelectionClear();
            if (Diary.Summary.LineEditor.isActive) {
                return Lure.System.ShowWarn('Таблица уже редактируется');
            }

            let CurrentPart = this.CurrentPart;
            //let LineID = p.LineID;//parseInt(e.currentTarget.parentElement.dataset['line']);
            let DataItem = CurrentPart.Controller.GetDataItemByLineID(LineID);

            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate() - 1);
            let DtTarget = DataItem.Data.DateValue;
            if (!DtTarget) //if event
                DtTarget = DataItem.Data.DateFinish;
            if (Lure.Date(DtTarget).Date > DateLimit)
                return Lure.System.Warn('Внесение первичных данных не завершено');
            if (Lure.Date(DtTarget).Date >= DateLimit && DateNow.getHours() < Static.DateHoursEditingLimit)
                return Lure.System.Warn('Внесение первичных данных не завершено');

            let SumLineID = -1;
            let SumFullLineID = -1;
            if (CurrentPart.Name !== "SummaryPart4" && CurrentPart.Name !== "SummaryPart5"){
                SumLineID = CurrentPart.Controller._Data[CurrentPart.Controller._Data.length-2].LineID;
                SumFullLineID = CurrentPart.Controller._Data.Last().LineID;
            }

            let Prop = CellElement.dataset['prop'];

            const ExtraOptions = {
                Caption: DataItem.Data[Prop].D.Name,
            };
            // if (Prop === 'P5V5' || Prop === 'P4V21'){ //Curator (UserID) select
            //     ExtraOptions.Data = Lure.User.Cache.UserList.Select(x=>{
            //         return {
            //             ID: x.ID,
            //             Name: `${x.Name} [${x.Position}], Email: ${x.Email}, Тел. ${x.Phone}`
            //         }
            //     });
            //     ExtraOptions.KeyValue = 'ID';
            //     ExtraOptions.KeyView = 'Name';
            //     //{
            //     //             //     TextArea: false,
            //     //             // }
            //
            // }
            if (Prop === 'P5V6'){
                ExtraOptions.Type = 'text';
            }
            if (Prop === 'P4V20' || Prop === 'P5V6'){
                ExtraOptions.Type = 'richtext';
                ExtraOptions.CustomWidth = 300;
            }
            InputBox.Run(CellElement, DataItem.Data[Prop].Value, (v) => {
                DataItem.Data[Prop].Value = v;
                this.Check(DataItem.Data);
                this.Check(DataItem.Data); //it isn't a mistake. It requires check fields after calc further fields (for instance, rechecks P1V19 after change P1V27 (caused by changing P1V28))
                this.Check(DataItem.Data); //this line caused by addition 3rd lvl of computed values (oh shi..)
                //this.CheckSum();///
                //console.warn(Prop, v);
                CurrentPart.Controller.Refresh(LineID);
                if (CurrentPart.Name !== "SummaryPart4" && CurrentPart.Name !== "SummaryPart5"){
                    CurrentPart.Controller.Refresh(SumLineID);
                    CurrentPart.Controller.Refresh(SumFullLineID);
                }

            }, ExtraOptions);
        }
    },


    Refresh(){
        this.ButtonRefresh.classList.remove('changed-outside');
        this.Proto.Refresh();
        this.SelectDate.value = Lure.Date(this.Proto.Data.DateSelected).Value;
        this.GetData();

    },
    BeforeShow: function () {
        Diary.CheckForBread();
        let Sub = this.CurrentPart;
        //Sub?.Show();
        if (Sub)
            Sub.Show();
        //console.log('Diary.Summary BeforeShow');
    },
    Show: function(){
        this.Subscription.Subscribe();
        this.Refresh();
    },
    Hide: function(){
        this.Subscription.Unsubscribe();
    },
    AfterBuild: function () {
        new LibraryTree(this, this.Select('.library-tree-control'), {
            // OnSelect: (Selected)=>{
            //     this.Refresh();
            // }
        });

        this.SelectDate.value = this.Proto.Data.Months.Last().Value;
        this.Proto.Data.DateSelected = this.Proto.Data.Months.Last().Value;
        this.Proto.Data.LibraryIDListSelected = [Lure.User.Cache.LibraryList.Last().ID];


        this.SelectDate.addEventListener('change', ()=>{
            this.Proto.Data.DateSelected = Lure.Date(this.SelectDate.value).Date;
            //console.log('_ChangeDate', this.Proto.Data.DateSelected);
            this.GetData();

        });

        this.AddEventListener('click', '.trow:not(.day-off) .sum-part-date', function (e, p) {
            //return;
            if (Diary.Summary.CurrentLibraries.length>1)
                return;
            let DataItem = this.CurrentPart.Controller.GetDataItemByLineID(p.LineID);
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate()-1);
            if (Lure.Date(DataItem.Data.DateValue).Date > DateLimit)
                return Lure.System.Warn('Первичные данные еще не внесены');
            if (Lure.Date(DataItem.Data.DateValue).Date >= DateLimit && DateNow.getHours() < Static.DateHoursEditingLimit)
                return Lure.System.Warn('Первичные данные еще не внесены');

            Diary.Summary.LineEditor.Show(p.LineID);
        });

        this.AddEventListener('click', '.trow:not(.day-off) .numpadable, .trow:not(.day-off) .textboxable, .trow:not(.day-off) .selectable', function (e, p) {
            this.CallCellEditor(e.currentTarget, p.LineID);
        });
        this.AddEventListener('click', '.trow .lock, .day-off .tcell', function (e, p) {
            if (e.ctrlKey && e.altKey)
                this.CallCellEditor(e.currentTarget, p.LineID);
        });

        this.AddEventListener('change', '.tab-radio', function (e) {
            InputBox.Hide();
            let Part = this.CurrentPart;
            Part.Proto.SetProperty('TableID', e.currentTarget.dataset['tableid']);
            Part.Controller.Refresh();
        });

        this.ButtonRefresh.addEventListener('click', ()=>this.Refresh());

        this.ButtonSave.addEventListener('click', this.Save);
        this.ButtonClear.addEventListener('click', this.Clear);
        this.ButtonGetXLS.addEventListener('click', this.GetXLS);

        this.Subscription = new HistorySubscription( {
            OnSubscribe: (HistList)=>{
                let CD = Lure.Date(this.CurrentDate);
                let isOurGuy = false;
                for (let h of HistList){
                    if ((h.TypeID !== D.SubscribeType.SummaryChange && h.TypeID !== D.SubscribeType.VisitEventAdd) || (h.TypeID === D.SubscribeType.SummaryChange && h.MessageType !== 4 && h.MessageType !== 5) ){
                        //part1236
                        let hDateValue = Lure.Date(h.DateValue);
                        if (CD.Year === hDateValue.Year && CD.Month === hDateValue.Month){
                            isOurGuy = true;
                            let DataLine = this.DataPrepared
                                .Where(x=>x.DateValue === h.DateValue && x.DateVisual !== 'За месяц' && x.DateVisual !== "На начало месяца")
                                .FirstOrDefault();
                            if (DataLine !== null){
                                DataLine.isChangedByOutside = true;
                            }
                        }
                    }
                    else{
                        //part45
                        let DataLine4 = Diary.Summary.SummaryPart4.Data.Where(x=>x.ID === h.ItemID).FirstOrDefault();
                        if (DataLine4 !== null && Diary.Summary.SummaryPart4.CurrentDate === this.CurrentDate){
                            isOurGuy = true;
                            DataLine4.isChangedByOutside = true;
                        }
                        let DataLine5 = Diary.Summary.SummaryPart5.Data.Where(x=>x.ID === h.ItemID).FirstOrDefault();
                        if (DataLine5 !== null && Diary.Summary.SummaryPart5.CurrentDate === this.CurrentDate){
                            isOurGuy = true;
                            DataLine5.isChangedByOutside = true;
                        }
                    }
                }

                if (isOurGuy){
                    this.ShowOutsideChanges();
                    //this.Refresh();
                }
            },
            Condition: (h)=>{
                return this.SubscribeTypes.indexOf(h.TypeID) > -1 && h.LibraryID === Diary.Summary.CurrentLibraryID && h.LoginID !== Lure.User.ID
            }
        });
    }
});

require('./part1.js');
require('./part2.js');
require('./part3.js');
require('./part4.js');
require('./part5.js');
require('./part6.js');

require('./line-editor/line-editor.js');
},{"../../_common/dictionary":102,"../../_common/history-master/history-subscription":109,"../../_common/input-box/input-box":110,"../../_common/static":114,"./line-editor/line-editor.js":42,"./part1.js":43,"./part2.js":44,"./part3.js":45,"./part4.js":46,"./part5.js":47,"./part6.js":48}],50:[function(require,module,exports){
const HistorySubscription = require('../../_common/history-master/history-subscription');
const D = require('../../_common/dictionary');


Diary.Visitation = new Lure.Content({
    Parent: Diary,
    Name: 'Visitation',
    Type: 'diary-content',
    //Visible: true,
    Control:{
        Target: '#nav-diary-visit',
    },
    Permission: {
        Roles: [D.Role.DairyInput]
    },
    Content: `<div class="visitation">

                <div class="tutor-runner" title="Помощь">?</div>
                <div class="widgets">
                    <div class="widget-row l-row"></div>
                    <!--<div class="widget-row widget-row-0 l-row"></div>-->
                    <!--<div class="widget-row widget-row-1 l-row"></div>-->
                    <!--<div class="widget-row widget-row-2 l-row"></div>-->
                    <!--<div class="widget-row widget-row-3 l-row"></div>-->
                   
                </div> 
              </div>`,
    Props: function(){
        this.SubscribeTypes = [
            D.SubscribeType.VisitRegisterAdd,
            D.SubscribeType.VisitVisitAdd,
            D.SubscribeType.VisitEventAdd
        ];


    },
    Methods: function () {

    },
    BeforeShow: function () {
        Diary.CheckForBread();
        //this.ChildrenBack();
        this.Refresh();

    },
    Show: function () {
        // Widget.VisitCount.Chart.Redraw();
        // Widget.EventSummary.Chart.Redraw();
        this.Subscription.Subscribe();
    },
    Hide: function(){
        this.Subscription.Unsubscribe();
    },
    Refresh: function () {

        Widget.Test.Refresh();

        Widget.VisitRegister.Refresh();
        Widget.VisitCount.Refresh();
        Widget.VisitAutoCount.Refresh();

        Widget.EventFree.Refresh();
        Widget.EventPaid.Refresh();
        Widget.EventSummary.Refresh();

        Widget.ClubFree.Refresh();
        Widget.ClubPaid.Refresh();
        Widget.Exhibition.Refresh();
    },
    AfterBuild: function () {
        this.Select('.tutor-runner').addEventListener('click', ()=>{
            Lure.RunTutor(this.Content);
        });

        this.Subscription = new HistorySubscription({
            OnSubscribe: (HistList)=>{
                if (HistList.Where(h=>h.TypeID === D.SubscribeType.VisitRegisterAdd).length > 0){
                    Widget.VisitRegister.Refresh();
                }
                if (HistList.Where(h=>h.TypeID === D.SubscribeType.VisitVisitAdd).length > 0){
                    Widget.VisitCount.Refresh();
                }
                let HistVisitEvent = HistList.Where(h=>h.TypeID === D.SubscribeType.VisitEventAdd);
                if (HistVisitEvent.length > 0){
                    if (HistVisitEvent.Where(h=>h.MessageType === D.LibraryEventType.EventFree).length > 0){
                        Widget.EventFree.Refresh();
                    }
                    if (HistVisitEvent.Where(h=>h.MessageType === D.LibraryEventType.EventPaid).length > 0){
                        Widget.EventPaid.Refresh();
                    }
                    if (HistVisitEvent.Where(h=>h.MessageType === D.LibraryEventType.ClubFree).length > 0){
                        Widget.ClubFree.Refresh();
                    }
                    if (HistVisitEvent.Where(h=>h.MessageType === D.LibraryEventType.ClubPaid).length > 0){
                        Widget.ClubPaid.Refresh();
                    }
                    if (HistVisitEvent.Where(h=>h.MessageType === D.LibraryEventType.Exhibition).length > 0){
                        Widget.Exhibition.Refresh();
                    }

                }
            },
            Condition: (h)=>{
                return this.SubscribeTypes.indexOf(h.TypeID) > -1 && h.LibraryID === Diary.CurrentLibraryID && h.LoginID !== Lure.User.ID
            }
        });


    }

});

require('./widgets/test/test.js');

require('./widgets/register/register.js');
require('./widgets/count/count.js');
require('./widgets/autocounter/autocounter.js');

require('./widgets/event-free/event-free.js');
require('./widgets/event-paid/event-paid.js');
require('./widgets/event-summary/event-summary.js');

require('./widgets/club-free/club-free.js');
require('./widgets/club-paid/club-paid.js');
require('./widgets/exhibition/exhibition.js');



},{"../../_common/dictionary":102,"../../_common/history-master/history-subscription":109,"./widgets/autocounter/autocounter.js":51,"./widgets/club-free/club-free.js":52,"./widgets/club-paid/club-paid.js":53,"./widgets/count/count.js":54,"./widgets/event-free/event-free.js":55,"./widgets/event-paid/event-paid.js":56,"./widgets/event-summary/event-summary.js":57,"./widgets/exhibition/exhibition.js":58,"./widgets/register/register.js":59,"./widgets/test/test.js":60}],51:[function(require,module,exports){
const REFRESH_INTERVAL = 70000;

Widget.VisitAutoCount = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetVisitAutoCounter',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget visit-autocounter-widget" data-tutor="Виджет данных с автоматического счетчика посещений">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">ДАННЫЕ АВТОМАТИЧЕСКОГО СЧЕТЧИКА</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content l-col">
                    <div class="hint-warner">
                        Обращаем Ваше внимание на то, что данные с автоматического счетчика посещений могут значительно отличаться от реальных показателей!
                    </div>
                    <div class="counters l-row l-flex-between">
                        <div class="counter counter-in">
                            <div class="digit">{{cin1}}</div>
                            <div class="digit">{{cin2}}</div>
                            <div class="digit">{{cin3}}</div>
                            <div class="digit">{{cin4}}</div>
                        </div>
                        <div class="counter counter-out">
                            <div class="digit">{{cout1}}</div>
                            <div class="digit">{{cout2}}</div>
                            <div class="digit">{{cout3}}</div>
                            <div class="digit">{{cout4}}</div>
                        </div>
                    </div>
                    <div class="counter-captions l-row l-flex-between">
                        <div class="counter-caption">ВХОД</div>
                        <div class="counter-caption">ВЫХОД</div>
                    </div>
                    <div class="l-row l-flex-center none">
                        <button class="button btn-refresh"></button>
                    </div>
                    
                    <div class="connection-status l-row l-flex-end l-flexa-baseline">
                        <div class="caption">cоединение со счетчиком</div>
                        <div class="connection-icon {{#if (o.Status) ? 'connected':'disconnected'}}"></div>
                    </div>
                </div>
              </div>`,
    Load: '',
    Proto:{
        CountIn: 0,
        CountOut: 0,
        Status: 1
    },
    PropFormat:{
        cin1:  (c, p)=>Global.GetDigit(p.CountIn, 1),
        cin2:  (c, p)=>Global.GetDigit(p.CountIn, 2),
        cin3:  (c, p)=>Global.GetDigit(p.CountIn, 3),
        cin4:  (c, p)=>Global.GetDigit(p.CountIn, 4),
        cout1: (c, p)=>Global.GetDigit(p.CountOut, 1),
        cout2: (c, p)=>Global.GetDigit(p.CountOut, 2),
        cout3: (c, p)=>Global.GetDigit(p.CountOut, 3),
        cout4: (c, p)=>Global.GetDigit(p.CountOut, 4),
    },
    Props: function(){
        this.RefreshInterval = REFRESH_INTERVAL;
        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function(){
        this.GetCounts = function () {


            let IntDtStart = Lure.Date(Diary.Proto.Data.DateSelected).DayStart.valueOf();
            let IntDtEnd = Lure.Date(Diary.Proto.Data.DateSelected).DayEnd.valueOf();
            //api.Library_GetVisitation_old(Diary.Proto.Data.DateSelected, Diary.SelectLibrary.value, {
            api.Library_GetVisitation(Diary.SelectLibrary.value, [IntDtStart, IntDtEnd], {
                Then: (v)=>{
                    //this.Proto.SetProperty('')
                    this.Proto.SetProperty('CountIn', v[0]);
                    this.Proto.SetProperty('CountOut', v[1]);
                },
                Catch: (e)=>{
                    Lure.System.Error('Ошибка получения данных автоматического счетчика со стороннего сервера', e);
                },
                Finally: ()=>{
                    this.Load.Hide();
                }
            })
        };
        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })


        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');

        }
    },
    Refresh: function () {
        this.CheckForFavor();
        //return;
        this.Load.Show();
        this.GetCounts();
    },
    AfterBuild: function () {
        // this.ReInterval = setInterval(()=>{
        //     this.GetCounts();
        // }, this.RefreshInterval)
        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite)
    }

});

},{}],52:[function(require,module,exports){
Widget.ClubFree = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetClubFree',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget club-free-widget">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">БЕСПЛАТНЫЕ КЛУБЫ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">{{CountSum}}</div>
                            <div class="casual">читателей посетили сегодня</div>
                        </div>
                    </div>
                    <div class="event-list"></div>
                    <div class="button-plus-wrapper">
                        <div class="button-plus-cutter right"><button class="button-plus btn-switcher" disabled="disabled"></button></div>
                    </div>
                </div>
              </div>`,
    Load: '',
    Proto: {
        LibraryEventTypeID: Dictionary.LibraryEventType.ClubFree,
        CountSum: 0,
        SeriesIndex: 2,
    },
    PropFormat: {
        Date: ()=>{
            if (!Diary.Proto.Data.DateSelected)
                return '';
            let D = Lure.Date(Diary.Proto.Data.DateSelected);
            return D.isToday ? 'сегодня':D.Format('DD MMMM YYYY', true)},
        Percent: (c, p)=>{
            let percent = p.Count/p.CountPlan*100;
            if (percent <= 100)
                return percent;
            return 100;
        },
    },
    Controller:{
        Target: '.event-list',
        ListElement: `<div class="event-item progress-bar line-interlinear" style="--progress-percent: {{Percent}}%;">
                                <div class="progress-caption l-row l-flex-between">
                                    <div class="casual">{{Name}}</div>
                                    <div class="value-inline-changer">
                                        <button class="l-pointer control-inline control-inline-minus" {{#data-line}}>-</button>
                                        <div class="value-last value-inline">{{Count}}/{{CountPlan}}</div>
                                        <button class="l-pointer control-inline control-inline-plus" {{#data-line}}>+</button>
                                    </div>
                                </div>
                            </div>`,
        EmptyMessage: `<div class="list-empty">мероприятий нет</div>`
    },
    Props: function(){
        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function () {
        this.CountIncrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, 1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count++;
                        this.Proto.Data.CountSum++;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });

        };
        this.CountDecrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, -1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count--;
                        this.Proto.Data.CountSum--;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });
        };
        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        }
    },
    Refresh: function () {
        this.CheckForFavor();
        this.Load.Show();
        api.Diary_Visitation_EventGet(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, this.Proto.Data.LibraryEventTypeID, -1, {
            Then: (list)=>{
                this.Controller.Refresh(list);
                let Count = 0;
                for (let i = 0; i < list.length; i++)
                    Count += list[i].Count;
                this.Proto.SetProperty('CountSum', Count);
                Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.control-inline-plus', function (e, p) {
            this.CountIncrease(p.LineID, e.currentTarget);
        });
        this.AddEventListener('click', '.control-inline-minus', function (e, p) {
            this.CountDecrease(p.LineID, e.currentTarget);
        });

        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);
    }
});
},{}],53:[function(require,module,exports){
Widget.ClubPaid = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetClubPaid',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget club-paid-widget">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">ПЛАТНЫЕ КЛУБЫ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">{{CountSum}}</div>
                            <div class="casual">читателей посетили {{Date}}</div>
                        </div>
                    </div>
                    <div class="event-list"></div>
                    <div class="button-plus-wrapper">
                        <div class="button-plus-cutter right"><button class="button-plus btn-switcher" disabled="disabled"></button></div>
                    </div>
                </div>
              </div>`,
    Load: '',
    Proto: {
        LibraryEventTypeID: Dictionary.LibraryEventType.ClubPaid,
        CountSum: 0,
        SeriesIndex: 3,
    },
    PropFormat: {
        Date: ()=>{
            if (!Diary.Proto.Data.DateSelected)
                return '';
            let D = Lure.Date(Diary.Proto.Data.DateSelected);
            return D.isToday ? 'сегодня':D.Format('DD MMMM YYYY', true)},
        Percent: (c, p)=>{
            let percent = p.Count/p.CountPlan*100;
            if (percent <= 100)
                return percent;
            return 100;
        },
    },
    Controller:{
        Target: '.event-list',
        ListElement: `<div class="event-item progress-bar line-interlinear" style="--progress-percent: {{Percent}}%;">
                                <div class="progress-caption l-row l-flex-between">
                                    <div class="casual">{{Name}}</div>
                                    <div class="value-inline-changer">
                                        <button class="l-pointer control-inline control-inline-minus" {{#data-line}}>-</button>
                                        <div class="value-last value-inline">{{Count}}/{{CountPlan}}</div>
                                        <button class="l-pointer control-inline control-inline-plus" {{#data-line}}>+</button>
                                    </div>
                                </div>
                            </div>`,
        EmptyMessage: `<div class="list-empty">мероприятий нет</div>`
    },
    Props: function(){
        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function () {
        this.CountIncrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, 1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count++;
                        this.Proto.Data.CountSum++;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });

        };
        this.CountDecrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, -1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count--;
                        this.Proto.Data.CountSum--;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });
        };
        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        }
    },
    Refresh: function () {
        this.CheckForFavor();
        this.Load.Show();
        api.Diary_Visitation_EventGet(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, this.Proto.Data.LibraryEventTypeID, -1, {
            Then: (list)=>{
                this.Controller.Refresh(list);
                let Count = 0;
                for (let i = 0; i < list.length; i++)
                    Count += list[i].Count;
                this.Proto.SetProperty('CountSum', Count);
                Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.control-inline-plus', function (e, p) {
            this.CountIncrease(p.LineID, e.currentTarget);
        });
        this.AddEventListener('click', '.control-inline-minus', function (e, p) {
            this.CountDecrease(p.LineID, e.currentTarget);
        });
        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);
    }
});
},{}],54:[function(require,module,exports){
const HistoryMaster = require("../../../../_common/history-master/history-master");
const Static = require("../../../../_common/static");

/**
 *
 * @class WidgetVisitCount
 */
const WidgetVisitCount = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetVisitCount',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget visit-count-widget {{DayType}}" data-tutor="Виджет учета посещений">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">УЧЕТ ПОСЕТИТЕЛЕЙ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content l-col">
                    <div class="visit-chart"></div>
                    <div class="visit-plan" data-tutor="Кликните «плюс» для учета посещения, «минус» - для отмены учета посещения">
                        <div class="value">{{Count}}/{{CountPlan}}</div>
                        <div class="controls">
                            <button class="control l-pointer control-minus"></button>
                            <button class="control l-pointer control-plus"></button>
                        </div>
                    </div>
                    
                    <div class="last-visit" data-tutor="Учет посещений за прошлый день. Данные можно изменять до 14.00. Кликните «плюс» для учета посещения, «минус» - для отмены учета посещения">
                        <div class="casual">Посетителей {{DatePrev}}</div>
                        <div class="value-inline-changer">
                            <button class="l-pointer control-inline control-inline-minus">-</button>
                            <div class="value-last value-inline">{{CountPrev}}</div>
                            <button class="l-pointer control-inline control-inline-plus">+</button>
                        </div>
                    </div>
                </div>
              </div>`,
    Load:'',
    State: {
        Count: 0,
        CountPrev: 0,
        CountPlan: 0,
        DatePrev: Lure.Date().AddDays(-1).Date,

        //isFavorite: false,
    },
    PropFormat:{
        DayType: ()=>{
            return !Diary.Proto.Data.DateSelected || Lure.Date(Diary.Proto.Data.DateSelected).isToday ? '':' previous';
        },
        DatePrev: (d)=>Lure.Date(d).Format('DD MMMM YYYY', true),
        c1: (c, p)=>Global.GetDigit(p.Count, 1),
        c2: (c, p)=>Global.GetDigit(p.Count, 2),
        c3: (c, p)=>Global.GetDigit(p.Count, 3),
        c4: (c, p)=>Global.GetDigit(p.Count, 4),
    },
    Refresh: function () {
        this.Load.Show();
        api.Diary_Visitation_CountGet(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, {
            Then: (x)=>{
                this.Proto.Data.Count = x.Count;
                this.Proto.Data.CountPrev = x.CountPrev;
                this.Proto.Data.CountPlan = x.CountPlan;
                this.Proto.Data.DatePrev = Lure.Date(x.DatePrev).Date;

                //let RingCount = this.Proto.Data.Count < this.Proto.Data.CountPlan ? this.Proto.Data.Count: this.Proto.Data.CountPlan;
                this.Chart.Options.Series[0].Data[0] = this.Proto.Data.Count / this.Proto.Data.CountPlan || 0;
                this.Chart.Options.Series[0].Data[1] = 1-this.Chart.Options.Series[0].Data[0];

                if (this.Chart.Options.Series[0].Data[0] > 1){
                    this.Chart.Options.Series[0].Data[0] = 1;
                    this.Chart.Options.Series[0].Data[1] = 0
                }

                this.Proto.Refresh();
                this.Chart.Refresh();
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });
        this.CheckForFavor();
    },
    Props: function () {
        this.Chart = new Lure.Chart({
            Target: this.Select('.visit-chart'),
            Type: 'pie',
            Legend: {
                Visible: false
            },
            Series: [
                {
                    Labels: {
                        Data: ["ВХОД",'ВЫХОД']
                    },
                    Data: [0, 0],
                    Colors: ["#7ACDDB","#5C9BAA"],
                    Type: 'ring',
                    Width: 31,
                    AngleStart: -90,
                }
            ],
            Tooltip:{
                Visible: false,
            },
        });

        this.ButtonIncrease = this.Select('.control-plus');
        this.ButtonDecrease = this.Select('.control-minus');
        this.ButtonIncreasePrev = this.Select('.control-inline-plus');
        this.ButtonDecreasePrev = this.Select('.control-inline-minus');

        this.WidgetContent = this.Select('.widget-content');
        this.AttentionAnimationDuration = Lure.GetDurationAnimation('animation-blink', this.WidgetContent);

        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function () {
        this.CountIncrease = function () {
            Lure.Button.Lock(this.ButtonIncrease);
            api.Diary_Visitation_CountAdd(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, 1, {
                Then: (r)=>{
                    if (r < 1)
                    {
                        return;
                    }
                    this.Proto.SetProperty('Count', this.Proto.Data.Count+1);
                    this.Chart.Options.Series[0].Data[0] = this.Proto.Data.Count/this.Proto.Data.CountPlan || 0;
                    this.Chart.Options.Series[0].Data[1] = 1-this.Chart.Options.Series[0].Data[0];
                    if (this.Chart.Options.Series[0].Data[0] > 1){
                        this.Chart.Options.Series[0].Data[0] = 1;
                        this.Chart.Options.Series[0].Data[1] = 0
                    }
                    Widget.VisitCount.Chart.Refresh({Animation: false});
                },
                Catch: ()=>{
                    //HistoryMaster.DecreaseLastID();
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonIncrease);
                }
            });
        };
        this.CountDecrease = function () {
            if (this.Proto.Data.Count <= Widget.VisitRegister.Proto.Data.Count || this.Proto.Data.Count < 1){
                return;
            }
            Lure.Button.Lock(this.ButtonDecrease);
            //HistoryMaster.IncreaseLastID();
            api.Diary_Visitation_CountAdd(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, -1, {
                Then: (x)=>{
                    if (x < 0){
                        return;// HistoryMaster.DecreaseLastID();
                    }
                    this.Proto.SetProperty('Count', this.Proto.Data.Count-1);
                    this.Chart.Options.Series[0].Data[0] = this.Proto.Data.Count/this.Proto.Data.CountPlan || 0;
                    this.Chart.Options.Series[0].Data[1] = 1-this.Chart.Options.Series[0].Data[0];
                    if (this.Chart.Options.Series[0].Data[0] > 1){
                        this.Chart.Options.Series[0].Data[0] = 1;
                        this.Chart.Options.Series[0].Data[1] = 0
                    }
                    Widget.VisitCount.Chart.Refresh({Animation: false});
                },
                Catch: ()=>{
                    //HistoryMaster.DecreaseLastID();
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonDecrease);
                }
            });

        };
        this.CountLastIncrease = function () {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit > DateNow){
                Lure.Button.Lock(this.ButtonIncreasePrev);
                //HistoryMaster.IncreaseLastID();
                api.Diary_Visitation_CountAdd(this.Proto.Data.DatePrev, Diary.Proto.Data.Library.ID, 1, {
                    Then: (x)=>{
                        if (x < 0){
                            return;// HistoryMaster.DecreaseLastID();
                        }
                        this.Proto.SetProperty('CountPrev', this.Proto.Data.CountPrev+1);
                    },
                    Catch: ()=>{
                        //HistoryMaster.DecreaseLastID();
                    },
                    Finally: ()=>{
                        Lure.Button.Release(this.ButtonIncreasePrev);
                    }
                });
            }
            else{
                Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }

        };
        this.CountLastDecrease = function () {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);

            if (DateLimit > DateNow){
                Lure.Button.Lock(this.ButtonDecreasePrev);
                //HistoryMaster.IncreaseLastID();
                api.Diary_Visitation_CountAdd(this.Proto.Data.DatePrev, Diary.Proto.Data.Library.ID, -1, {
                    Then: (x)=>{
                        if (x < 0){
                            return;// HistoryMaster.DecreaseLastID();
                        }
                        this.Proto.SetProperty('CountPrev', this.Proto.Data.CountPrev-1);
                    },
                    Catch: ()=>{
                        //HistoryMaster.DecreaseLastID();
                    },
                    Finally: ()=>{
                        Lure.Button.Release(this.ButtonDecreasePrev);
                    }
                });
            }
            else{
                Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }

        };

        this.CallAttention = function () {
            Lure.AsyncToggle(this, null, this.WidgetContent, ()=>{},()=>{}, 'animation-blink', 'animation-blink', this.AttentionAnimationDuration, null);
        };

        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        };
    },
    AfterBuild: function () {
        this.ButtonIncrease.onclick     = this.CountIncrease;
        this.ButtonDecrease.onclick     = this.CountDecrease;
        this.ButtonIncreasePrev.onclick = this.CountLastIncrease;
        this.ButtonDecreasePrev.onclick = this.CountLastDecrease;


        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);
    }
});

Widget.VisitCount = WidgetVisitCount;

























},{"../../../../_common/history-master/history-master":108,"../../../../_common/static":114}],55:[function(require,module,exports){
Widget.EventFree = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetEventFree',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget event-free-widget" data-tutor="">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">БЕСПЛАТНЫЕ МЕРОПРИЯТИЯ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">{{CountSum}}</div>
                            <div class="casual">читателей посетили {{Date}}</div>
                        </div>
                    </div>
                    <div class="event-list"></div>
                    <div class="button-plus-wrapper">
                        <div class="button-plus-cutter right"><button class="button-plus btn-switcher" disabled="disabled"></button></div>
                    </div>
                </div>
              </div>`,
    Load: '',
    Proto: {
        LibraryEventTypeID: Dictionary.LibraryEventType.EventFree,
        CountSum: 0,
        SeriesIndex: 0,
    },
    PropFormat: {
        Date: ()=>{
            if (!Diary.Proto.Data.DateSelected)
                return '';
            let D = Lure.Date(Diary.Proto.Data.DateSelected);
            return D.isToday ? 'сегодня':D.Format('DD MMMM YYYY', true)},
        Percent: (c, p)=>{
            let percent = p.Count/p.CountPlan*100;
            if (percent <= 100)
                return percent;
            return 100;
        },
    },
    Controller:{
        Target: '.event-list',
        ListElement: `<div class="event-item progress-bar line-interlinear" style="--progress-percent: {{Percent}}%;">
                                <div class="progress-caption l-row l-flex-between">
                                    <div class="casual">{{Name}}</div>
                                    <div class="value-inline-changer">
                                        <button class="l-pointer control-inline control-inline-minus" {{#data-line}}>-</button>
                                        <div class="value-last value-inline">{{Count}}/{{CountPlan}}</div>
                                        <button class="l-pointer control-inline control-inline-plus" {{#data-line}}>+</button>
                                    </div>
                                </div>
                            </div>`,
        EmptyMessage: `<div class="list-empty">мероприятий нет</div>`
    },
    Props: function(){
        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function () {
        this.CountIncrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, 1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count++;
                        this.Proto.Data.CountSum++;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });

        };
        this.CountDecrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, -1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count--;
                        this.Proto.Data.CountSum--;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });
        };
        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        }
    },
    Refresh: function () {
        this.CheckForFavor();
        this.Load.Show();
        api.Diary_Visitation_EventGet(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, this.Proto.Data.LibraryEventTypeID, -1, {
            Then: (list)=>{
                this.Controller.Refresh(list);
                let Count = 0;
                for (let i = 0; i < list.length; i++)
                    Count += list[i].Count;
                this.Proto.SetProperty('CountSum', Count);
                Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.control-inline-plus', function (e, p) {
            this.CountIncrease(p.LineID, e.currentTarget);
        });
        this.AddEventListener('click', '.control-inline-minus', function (e, p) {
            this.CountDecrease(p.LineID, e.currentTarget);
        });
        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);
    }
});
},{}],56:[function(require,module,exports){
Widget.EventPaid = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetEventPaid',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget event-paid-widget">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">ПЛАТНЫЕ МЕРОПРИЯТИЯ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">{{CountSum}}</div>
                            <div class="casual">читателей посетили {{Date}}</div>
                        </div>
                    </div>
                    <div class="event-list"></div>
                    <div class="button-plus-wrapper">
                        <div class="button-plus-cutter right"><button class="button-plus btn-switcher" disabled="disabled"></button></div>
                    </div>
                </div>
              </div>`,
    Load: '',
    Proto: {
        LibraryEventTypeID: Dictionary.LibraryEventType.EventPaid,
        CountSum: 0,
        SeriesIndex: 1,
    },
    PropFormat: {
        Date: ()=>{
            if (!Diary.Proto.Data.DateSelected)
                return '';
            let D = Lure.Date(Diary.Proto.Data.DateSelected);
            return D.isToday ? 'сегодня':D.Format('DD MMMM YYYY', true)},
        Percent: (c, p)=>{
            let percent = p.Count/p.CountPlan*100;
            if (percent <= 100)
                return percent;
            return 100;
        },
    },
    Controller:{
        Target: '.event-list',
        ListElement: `<div class="event-item progress-bar line-interlinear" style="--progress-percent: {{Percent}}%;">
                                <div class="progress-caption l-row l-flex-between">
                                    <div class="casual">{{Name}}</div>
                                    <div class="value-inline-changer">
                                        <button class="l-pointer control-inline control-inline-minus" {{#data-line}}>-</button>
                                        <div class="value-last value-inline">{{Count}}/{{CountPlan}}</div>
                                        <button class="l-pointer control-inline control-inline-plus" {{#data-line}}>+</button>
                                    </div>
                                </div>
                            </div>`,
        EmptyMessage: `<div class="list-empty">мероприятий нет</div>`
    },
    Props: function(){
        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function () {
        this.CountIncrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, 1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count++;
                        this.Proto.Data.CountSum++;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });

        };
        this.CountDecrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, -1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count--;
                        this.Proto.Data.CountSum--;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });
        };

        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        }
    },
    Refresh: function () {
        this.CheckForFavor();
        this.Load.Show();
        api.Diary_Visitation_EventGet(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, this.Proto.Data.LibraryEventTypeID, -1, {
            Then: (list)=>{
                this.Controller.Refresh(list);
                let Count = 0;
                for (let i = 0; i < list.length; i++)
                    Count += list[i].Count;
                this.Proto.SetProperty('CountSum', Count);
                Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.control-inline-plus', function (e, p) {
            this.CountIncrease(p.LineID, e.currentTarget);
        });
        this.AddEventListener('click', '.control-inline-minus', function (e, p) {
            this.CountDecrease(p.LineID, e.currentTarget);
        });
        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);
    }
});
},{}],57:[function(require,module,exports){
Widget.EventSummary = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetEventSummary',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget event-summary-widget">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">СВОД</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content"> 
                    <div class="summary-chart"></div>
                    <div class="summary-plan">
                        <div class="value">{{CountSummary}}</div>
                        <div class="casual">всего</div>
                    </div>
                </div>
              </div>`,
    Proto: {
        CountSummary: 0,
        SeriesNames: ["мероприятия (б)",'мероприятия (п)', 'клубы (б)', 'клубы (п)', 'выставки'],
        SeriesData: [0,0,0,0,0],
    },
    PropFormat: {
        Percent: (p, o)=>o.Count/o.CountPlan*100,
        CountSummary: function () {
            if (!this.Chart)
                return 0;
            let s = 0;
            for (let i=0;i<this.Chart.Options.Series[0].Data.length;i++)
                s += this.Chart.Options.Series[0].Data[i] ?  this.Chart.Options.Series[0].Data[i]:0;
            return s;
        }
    },
    Props: function () {
        this.Chart = new Lure.Chart({
            Target: this.Select('.summary-chart'),
            Type: 'pie',
            Legend: {
                Position: 'right'
            },
            Series: [
                {
                    Labels: {
                        Data: this.Proto.Data.SeriesNames,
                    },
                    Data: this.Proto.Data.SeriesData,
                    Colors: ['#416E74', "#7ACDDB","#5C9BAA","#708284","#51A1A8"],
                    Type: 'ring',
                    Width: 31,
                    AngleStart: -90,
                }
            ],
            Tooltip:{
                Visible: false,
            },
        });
        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function () {
        this.SeriesUpdate = function (i, Value) {
            this.Chart.Options.Series[0].Data[i] = Value;
            this.Proto.Refresh();
            this.Chart.Refresh({Animation: false});
        };
        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        }
    },
    Refresh: function () {
        this.CheckForFavor();
        this.Chart.Redraw();
    },
    AfterBuild: function () {
        this.AddEventListener('change', '.l-legend-checkbox', function () {
           this.Proto.Refresh();
        });
        this.AddEventListener('click', '.control-inline-plus', function (e, p) {
            let DataItem = this.Controller.GetDataItemByLineID(p.LineID);
            DataItem.Data.Count++;
            this.Controller.Refresh(p.LineID);
        });
        this.AddEventListener('click', '.control-inline-minus', function (e, p) {
            let DataItem = this.Controller.GetDataItemByLineID(p.LineID);
            DataItem.Data.Count--;
            this.Controller.Refresh(p.LineID);
        });
        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);
    }
});
},{}],58:[function(require,module,exports){
Widget.Exhibition = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetExhibition',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget exhibition-widget">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">ВЫСТАВКИ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">{{CountSum}}</div>
                            <div class="casual">читателей посетили {{Date}}</div>
                        </div>
                    </div>
                    <div class="event-list"></div>
                    <div class="button-plus-wrapper">
                        <div class="button-plus-cutter right"><button class="button-plus btn-switcher" disabled="disabled"></button></div>
                    </div>
                </div>
              </div>`,
    Load: '',
    Proto: {
        LibraryEventTypeID: Dictionary.LibraryEventType.Exhibition,
        Count: 0,
        CountSum: 0,
        SeriesIndex: 4,
    },
    PropFormat: {
        Date: ()=>{
            if (!Diary.Proto.Data.DateSelected)
                return '';
            let D = Lure.Date(Diary.Proto.Data.DateSelected);
            return D.isToday ? 'сегодня':D.Format('DD MMMM YYYY', true)},
        Percent: (c, p)=>{
            let percent = p.Count/p.CountPlan*100;
            if (percent <= 100)
                return percent;
            return 100;
        },
    },
    Controller:{
        Target: '.event-list',
        ListElement: `<div class="event-item progress-bar line-interlinear" style="--progress-percent: {{Percent}}%;">
                                <div class="progress-caption l-row l-flex-between">
                                    <div class="casual">{{Name}}</div>
                                    <div class="value-inline-changer">
                                        <button class="l-pointer control-inline control-inline-minus" {{#data-line}}>-</button>
                                        <div class="value-last value-inline">{{Count}}/{{CountPlan}}</div>
                                        <button class="l-pointer control-inline control-inline-plus" {{#data-line}}>+</button>
                                    </div>
                                </div>
                            </div>`,
        EmptyMessage: `<div class="list-empty">мероприятий нет</div>`
    },
    Props: function(){
        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function () {
        this.CountIncrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, 1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count++;
                        this.Proto.Data.CountSum++;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });

        };
        this.CountDecrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, -1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count--;
                        this.Proto.Data.CountSum--;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });
        };
        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        };
    },
    Refresh: function () {
        this.CheckForFavor();
        this.Load.Show();
        api.Diary_Visitation_EventGet(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, this.Proto.Data.LibraryEventTypeID, -1, {
            Then: (list)=>{
                this.Controller.Refresh(list);
                let Count = 0;
                for (let i = 0; i < list.length; i++)
                    Count += list[i].Count;
                this.Proto.SetProperty('CountSum', Count);
                Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });

    },
    AfterBuild: function () {
        this.AddEventListener('click', '.control-inline-plus', function (e, p) {
            this.CountIncrease(p.LineID, e.currentTarget);
        });
        this.AddEventListener('click', '.control-inline-minus', function (e, p) {
            this.CountDecrease(p.LineID, e.currentTarget);
        });
        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);
    }
});
},{}],59:[function(require,module,exports){
const HistoryMaster = require("../../../../_common/history-master/history-master");
const InputBox = require("../../../../_common/input-box/input-box");

Widget.VisitRegister = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'WidgetRegister',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget register-widget {{DayType}}" data-tutor="Виджет записи нового посетителя">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">ЗАПИСЬ В БИБЛИОТЕКУ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="stat">
                        <div class="caption-today l-row l-flexa-center">
                            <div class="count-caption">
                                <div class="strong">{{Count}}</div>
                                <div class="casual">новых читателей записано {{Date}}</div>
                            </div>
                        </div>
                        <div class="visit-other">
                            <div class="line line-interlinear l-row l-flexa-center l-flex-between">
                                <div>Записано читателей {{DatePrev}}</div>
                                <div>{{CountPrev}}</div>
                            </div>
                            <div class="line line-interlinear l-row l-flexa-center l-flex-between">
                                <div>В среднем записей в день</div>
                                <div>{{CountAverage}}</div>
                            </div>
                            <div class="line line-interlinear l-row l-flexa-center l-flex-between">
                                <div>Записано в этом месяце</div>
                                <div>{{CountMonth}}</div>
                            </div>
                        </div>
                        <div class="visit-plan l-col l-flex-center">
                            <div class="line l-row l-flexa-baseline">
                                <div class="casual">Исполнение установленных нормативных показателей:</div>
                            </div>
                            <div class="progress-bar" style="--progress-percent: {{CountPercent}}%;">
                                <div class="progress-caption">
                                    <div class="strong">{{Count}}/{{CountPlan}}</div>
                                </div>
                            </div>
                        </div>
                        <div class="button-plus-wrapper">
                            <div class="button-plus-cutter left" data-tutor="Нажмите здесь, для отмены последнего записанного посетителя. Отменить запись можно только один раз после записи нового посетителя.">
                                <button class="button-minus btn-rewind"></button>
                            </div>
                            <div class="button-plus-cutter right" data-tutor="Нажмите «плюс» для открытия формы записи нового посетителя">
                                <button class="button-plus btn-switcher"></button>
                            </div>
                        </div>
                    </div>
                    <!-- WIZARD -->
                    <div class="wizard none">
                        <div class="gender wizard-group0 l-row">
                            <div class="radio-element">
                                <input class="l-radio radio-gender" type="radio" name="gender" id="gender-male">
                                <label class="l-radio-label" for="gender-male">мужчина <span class="current-val">{{MaleCount}}</span></label> 
                            </div>
                            <div class="radio-element">
                                <input class="l-radio radio-gender" type="radio" name="gender" id="gender-female">
                                <label class="l-radio-label" for="gender-female">женщина <span class="current-val">{{FemaleCount}}</span></label> 
                            </div>
                        </div>
                        <div class="age wizard-group l-row">
                            <div class="caption">Возраст</div>
                            <div class="value l-row l-pointer">
                                <div class="age-digit">{{age1}}</div>
                                <div class="age-digit">{{age2}}</div>
                                <div class="age-digit">{{age3}}</div>
                            </div>
                        </div>
                        <div class="social wizard-group">
                            <div class="caption">Социальная группа</div>
                            <div class="social-columns l-col l-flex-wrap">
                                <div>
                                    <input class="l-radio radio-social" type="radio" name="reg-social" data-type="5" id="reg-retired">
                                    <label class="l-radio-label" for="reg-retired">пенсионеры <span class="current-val">{{RetiredCount}}</span></label> 
                                </div>
                                <div>
                                    <input class="l-radio radio-social" type="radio" name="reg-social" data-type="4" id="reg-warrior">
                                    <label class="l-radio-label" for="reg-warrior">служащие <span class="current-val">{{ServantCount}}</span></label> 
                                </div>
                                <div>
                                    <input class="l-radio radio-social" type="radio" name="reg-social" data-type="3" id="reg-student">
                                    <label class="l-radio-label" for="reg-student">студенты <span class="current-val">{{StudentCount}}</span></label> 
                                </div>
                                <div>
                                    <input class="l-radio radio-social" type="radio" name="reg-social" data-type="1" id="reg-pupil">
                                    <label class="l-radio-label" for="reg-pupil">школьники <span class="current-val">{{SchoolCount}}</span></label> 
                                </div>
                                <div>
                                    <input class="l-radio radio-social" type="radio" name="reg-social" data-type="7" id="reg-pre-pupil">
                                    <label class="l-radio-label" for="reg-pre-pupil">дошкольники <span class="current-val">{{PreschoolCount}}</span></label> 
                                </div>
                                <div>
                                    <input class="l-radio radio-social" type="radio" name="reg-social" data-type="2" id="reg-rdc">
                                    <label class="l-radio-label" for="reg-rdc">РДЧ <span class="current-val">{{SchoolRDCCount}}</span></label> 
                                </div><div>
                                    <input class="l-radio radio-social" type="radio" name="reg-social" data-type="6" id="reg-other">
                                    <label class="l-radio-label" for="reg-other">прочее  <span class="current-val">{{OtherCount}}</span></label> 
                                </div>
                                
                            </div>
                        </div>
                        <div class="disability wizard-group">
                            <div class="caption">Инвалидность</div>
                            <div class="l-row">
                                <div class="radio-element">
                                    <input class="l-radio radio-disabled" type="radio" name="reg-disability" id="reg-disability-y">
                                    <label class="l-radio-label" for="reg-disability-y">есть <span class="current-val">{{DisabledCount}}</span></label>
                                </div>
                                <div class="radio-element">
                                    <input class="l-radio radio-disabled" type="radio" name="reg-disability" id="reg-disability-n" checked="checked">
                                    <label class="l-radio-label" for="reg-disability-n">нет <span class="current-val">{{Count - DisabledCount}}</span></label>
                                </div>
                            </div>
                        </div>
                        <div class="actual-new-visitor wizard-group">
                            <input class="l-checkbox checkbox" type="checkbox" id="reg-actual-new">
                            <label class="l-checkbox-label" for="reg-actual-new">Новый посетитель</label>
                        </div>
                        <div class="button-holder">
                            <button class="l-button button button2 btn-cancel">ОТМЕНА</button>
                            <button class="l-button button btn-confirm">ЗАПИСАТЬ</button>
                        </div>
                    </div>
                </div>
              </div>`,
    State:{
        Count: 0,
        CountPrev: 0,
        CountAverage: 0,
        CountMonth: 0,
        CountPlan: 1,

        MaleCount: 0,
        FemaleCount: 0,
        SchoolCount: 0,
        SchoolRDCCount: 0,
        StudentCount: 0,
        ServantCount: 0,
        RetiredCount: 0,
        OtherCount: 0,
        PreschoolCount: 0,

        DatePrev: 0,
        Widget: {},
        Reg: {
            Age: 0,
            Gender: -1,
            Social: -1,
            isDisabled: 0,
            isActualNew: false,
        }
    },
    Load: '',
    PropFormat:{
        DayType: ()=>{
            return !Diary.Proto.Data.DateSelected || Lure.Date(Diary.Proto.Data.DateSelected).isToday ? '':' previous';
        },
        Date: ()=>{
            if (!Diary.Proto.Data.DateSelected)
                return '';
            let D = Lure.Date(Diary.Proto.Data.DateSelected);
            return D.isToday ? 'сегодня':D.Format('DD MMMM YYYY', true)},
        DatePrev: (d)=>Lure.Date(d).AddDays(1).isToday ? 'вчера':Lure.Date(d).Format('DD MMMM YYYY', true),

        CountPercent: (c, p)=>{
            let percent = p.Count/p.CountPlan*100;
            if (percent <=100)
                return percent;
            return 100;
        },
        age1:  (c, p)=>Global.GetDigit(p.Reg.Age, 1, 3),
        age2:  (c, p)=>Global.GetDigit(p.Reg.Age, 2, 3),
        age3:  (c, p)=>Global.GetDigit(p.Reg.Age, 3, 3),
    },
    Refresh: function () {
        this.CheckForFavor();
        this.Load.Show();

        api.Diary_Visitation_RegisterGet(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, {
            Then: (Data)=>{
                this.Proto.Data.Count        = Data.Count;
                this.Proto.Data.CountPrev    = Data.CountPrev;
                this.Proto.Data.CountAverage = Data.CountAverage.toFixed(2);
                this.Proto.Data.CountPlan    = Data.CountPlan;
                this.Proto.Data.CountMonth   = Data.CountMonth;
                this.Proto.Data.DatePrev     = Lure.Date(Data.DatePrev).Date;
                this.Proto.Data.DateStampAdded   = Data.DateStampAdded;
                this.Proto.Data.DateStampRemoved = Data.DateStampRemoved;

                this.Proto.Data.MaleCount      = Data.MaleCount;
                this.Proto.Data.FemaleCount    = Data.FemaleCount;
                this.Proto.Data.SchoolCount    = Data.SchoolCount;
                this.Proto.Data.SchoolRDCCount = Data.SchoolRDCCount;
                this.Proto.Data.StudentCount   = Data.StudentCount;
                this.Proto.Data.ServantCount   = Data.ServantCount;
                this.Proto.Data.RetiredCount   = Data.RetiredCount;
                this.Proto.Data.OtherCount     = Data.OtherCount;
                this.Proto.Data.PreschoolCount = Data.PreschoolCount;
                this.Proto.Data.DisabledCount  = Data.DisabledCount;

                this.ButtonRewind.disabled = Data.DateStampRemoved >= Data.DateStampAdded;
                this.Proto.Refresh();
            },
            Catch: ()=>{

            },
            Finally: ()=>{

                this.Load.Hide();
            }
        });

        //this.Proto.Data.CountPercent = Math.round(Data.Count/Data.CountPlan*100);
    },
    Props: function () {
        this.StatContent   = this.Select('.stat');
        this.WizardContent = this.Select('.wizard');

        this.ButtonWizardConfirm = this.Select('.btn-confirm');
        this.ButtonRewind = this.Select('.btn-rewind');

        this.RadioMale = this.Select('#gender-male');
        this.RadioFemale = this.Select('#gender-female');
        this.RadioPersonDisabledY = this.Select('#reg-disability-y');
        this.RadioPersonDisabledN = this.Select('#reg-disability-n');

        this.CheckboxActualNew = this.Select('#reg-actual-new');

        this._FavoriteIcon = this.Select('.widget-control-favorite');
    },
    Methods: function () {
        this.Switch = function () {
            this.StatContent  .classList.toggle('none');
            this.WizardContent.classList.toggle('none');
        };
        this.Clear = function () {
            this.RadioMale.checked = false;
            this.RadioFemale.checked = false;
            this.Proto.Data.Reg.Age = 0;
            this.Proto.Data.Reg.Gender = -1;
            this.Proto.Data.Reg.Social = -1;
            this.Proto.Data.Reg.isDisabled = false;
            this.Proto.Data.Reg.isActualNew = false;
            this.Proto.Refresh();
            let PersonType = this.Select('input[name="reg-social"]:checked');
            if (PersonType)
                PersonType.checked = false;
            this.RadioPersonDisabledN.checked = true;
            this.CheckboxActualNew.checked = false;
        };
        this.WizardClose = function () {
            this.Switch();
            this.Clear();
        };
        this.WizardConfirm = function () {
            let isValid = true;
            let Reg = this.State.Reg;
            if (Reg.Age < 1){
                isValid = false;
                Lure.System.ShowWarn('Введите возраст посетителя');
            }
            if (Reg.Social < 0){
                isValid = false;
                Lure.System.ShowWarn('Выберите социальную группу посетителя');
            }
            if (Reg.Gender < 0){
                isValid = false;
                Lure.System.ShowWarn('Выберите пол посетителя');
            }
            if (!isValid)
                return;
            Lure.Button.Lock(this.ButtonWizardConfirm);
            api.Diary_Visitation_RegisterAdd(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, Reg.Age, Reg.Social, Reg.Gender, Reg.isActualNew, {
                Then: ()=>{
                    let St = this.State;
                    Lure.System.ShowSuccess('Посетитель зарегистрирован');
                    St.DateStampAdded   = 1;
                    St.DateStampRemoved = 0;
                    this.WizardClose();
                },
                Catch: ()=>{
                    Lure.System.ShowWarn('Посетитель не зарегистрирован');
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonWizardConfirm);
                    this.Refresh();
                }
            });
        };
        this.Rewind = function () {
            if (this.Proto.Data.DateStampAdded < this.Proto.Data.DateStampRemoved){
                console.log('cant remove ast reg');
                return;
            }


            Lure.Confirm('Отмена посетителя', 'Вы собираетесь отменить регистрацию последнего посетителя. Продолжить?', {
                OnAgree: ()=>{
                    this.ButtonRewind.disabled = true;
                    api.Diary_Visitation_RegisterRewind(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, {
                        Then: (res)=>{

                            if (!res)
                                return;
                            this.Proto.Data.DateStampRemoved = 1;
                            this.Proto.Data.DateStampAdded   = 0;
                            if (this.Proto.Data.Count < 0) {
                                this.Proto.Data.Count =0
                            } else {
                                this.Proto.Data.Count--;
                            }
                            //this.Proto.Data.Count < 0 ? this.Proto.Data.Count =0 : this.Proto.Data.Count--;
                            this.Proto.Refresh();
                        },
                        Finally: ()=>{
                            this.ButtonRewind.disabled = true;
                        }
                    });
                },
                OnCancel: ()=>{}
            })

        };
        this.NumPadSetAge = function (value) {
            this.Proto.Data.Reg.Age = value;
            this.Proto.Refresh();
        };

        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        };
    },
    AfterBuild: function () {
        this.Select('.btn-switcher').onclick = ()=>{this.Switch()};
        this.Select('.btn-cancel').onclick = ()=>{this.WizardClose()};
        this.ButtonWizardConfirm.onclick = ()=>{this.WizardConfirm()};
        this.ButtonRewind.onclick = ()=>{this.Rewind()};

        this.Select('.age .value').onclick = (e)=>{
            InputBox.Run(e.currentTarget, this.Proto.Data.Reg.Age, this.NumPadSetAge, {Caption: 'Возраст посетителя'});
        };

        this.AddEventListener('change', '.radio-gender', (e)=>{
            this.State.Reg.Gender = e.currentTarget.id === 'gender-male' ? 1 : 0;
        });
        this.AddEventListener('change', '.radio-social', (e)=>{
            this.State.Reg.Social = e.currentTarget.dataset['type'];
        });
        this.AddEventListener('change', '.radio-disabled', (e)=>{
            this.State.Reg.isDisabled = e.currentTarget.id === 'reg-disability-y' ? 1 : 0;
        });

        this.CheckboxActualNew.addEventListener('change', ()=>{
            this.State.Reg.isActualNew = this.CheckboxActualNew.checked;
        });

        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);
    }
});

},{"../../../../_common/history-master/history-master":108,"../../../../_common/input-box/input-box":110}],60:[function(require,module,exports){
Widget.Test = new Lure.Content({
    Parent: Diary.Visitation,
    Name: 'Test',
    Target: '.widget-row',
    Content: `<div draggable="true" class="widget draggable diary-widget event-paid-widget">
                <div class="widget-head l-row">
                  <div class="widget-title l-row">
                    <div class="widget-icon icon-visitor-new"></div>  
                    <div class="widget-caption">Какие-то МЕРОПРИЯТИЯ</div> 
                  </div> 
                  <div class="widget-controls l-row l-flexa-center">
                    <div class="widget-control widget-control-move" title="Переместить"></div>
                    <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                  </div>  
                </div>
                <div class="widget-content">
                    <div class="caption-today l-row l-flexa-center">
                        <div class="count-caption">
                            <div class="strong">УЛЫБНИСЬ </div>
                            <div class="casual"> сегодня {{Count}}!!</div>
                        </div>
                    </div>
                    <div class="event-list"></div>
                    <div class="button-plus-wrapper">
                        <div class="button-plus-cutter right"><button class="button-plus btn-switcher" disabled="disabled"></button></div>
                    </div>
                </div>
              </div>`,
    Load: '',
    State: {
        Count: Lure.Date(new Date).Format('DD MMMM YYYYг.'),
    },
    Proto: {
        LibraryEventTypeID: Dictionary.LibraryEventType.EventPaid,
        CountSum: 0,
        SeriesIndex: 1,
    },
    PropFormat: {
        Date: ()=>{
            if (!Diary.Proto.Data.DateSelected)
                return '';
            let D = Lure.Date(Diary.Proto.Data.DateSelected);
            return D.isToday ? 'сегодня':D.Format('DD MMMM YYYY', true)},
        Percent: (c, p)=>{
            let percent = p.Count/p.CountPlan*100;
            if (percent <= 100)
                return percent;
            return 100;
        },
    },
    Controller:{
        Target: '.event-list',
        ListElement: `<div class="event-item progress-bar line-interlinear" style="--progress-percent: {{Percent}}%;">
                                <div class="progress-caption l-row l-flex-between">
                                    <div class="casual">{{Name}}</div>
                                    <div class="value-inline-changer">
                                        <button class="l-pointer control-inline control-inline-minus" {{#data-line}}>-</button>
                                        <div class="value-last value-inline">{{Count}}/{{CountPlan}}</div>
                                        <button class="l-pointer control-inline control-inline-plus" {{#data-line}}>+</button>
                                    </div>
                                </div>
                            </div>`,
        EmptyMessage: `<div class="list-empty"></div>`
    },
    Props: function(){
        this._FavoriteIcon = this.Select('.widget-control-favorite');

    },
    Methods: function () {
        this.CountIncrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);


            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, 1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count++;
                        this.Proto.Data.CountSum++;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();

                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });

        };
        this.CountDecrease = function (LineID, Control) {
            let DateNow = new Date();
            let DateLimit = new Date(DateNow.getFullYear(), DateNow.getMonth(), DateNow.getDate(), Static.DateHoursEditingLimit);
            if (DateLimit < DateNow && !Lure.Date(Diary.Proto.Data.DateSelected).isToday){
                return Lure.System.ShowWarn('Время изменения предыдущих данных истекло');
            }
            Lure.Button.Lock(Control);
            let DataItem = this.Controller.GetDataItemByLineID(LineID);
            api.Diary_Visitation_EventVisitAdd(Diary.Proto.Data.DateSelected, DataItem.Data.ID, -1, {
                Then: (res)=>{
                    if (res>0){
                        DataItem.Data.Count--;
                        this.Proto.Data.CountSum--;
                        this.Controller.Refresh(LineID);
                        this.Proto.Refresh();
                        Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
                    }
                },
                Finally: ()=>{
                    Lure.Button.Release(Control);
                }
            });
        };

        this.SwitchFavorite = function () {
            let p;
            if (this.isFavorite){
                p = Featured.RemoveWidget(this.FullName);
            }
            else{
                p = Featured.AddWidget(this.FullName);
            }
            p.then(()=>{
                this.CheckForFavor();
            })
        };
        this.CheckForFavor = function () {
            this.isFavorite = Lure.User.WebSettings.Featured.Widgets.indexOf(this.FullName) > -1;
            if (this.isFavorite)
                this._FavoriteIcon.classList.add('active');
            else
                this._FavoriteIcon.classList.remove('active');
        }
    },
    Refresh: function () {
        this.CheckForFavor();
        this.Load.Show();
        api.Diary_Visitation_EventGet(Diary.Proto.Data.DateSelected, Diary.Proto.Data.Library.ID, this.Proto.Data.LibraryEventTypeID, -1, {
            Then: (list)=>{
                this.Controller.Refresh(list);
                let Count = 0;
                for (let i = 0; i < list.length; i++)
                    Count += list[i].Count;
                this.Proto.SetProperty('CountSum', Count);
                Widget.EventSummary.SeriesUpdate(this.Proto.Data.SeriesIndex, this.Proto.Data.CountSum);
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.control-inline-plus', function (e, p) {
            this.CountIncrease(p.LineID, e.currentTarget);
        });
        this.AddEventListener('click', '.control-inline-minus', function (e, p) {
            this.CountDecrease(p.LineID, e.currentTarget);
        });
        this._FavoriteIcon.addEventListener('click', this.SwitchFavorite);

    }
});

},{}],61:[function(require,module,exports){
const HistorySubscription = require('../_common/history-master/history-subscription');
const D = require("../_common/dictionary");

/**
 * @class Featured
 */
let Featured = new Lure.Content({
    //Disabled: true,
    Name: 'Featured',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '#nav-featured'
    },
    Content: `<div class="featured content">
                 <h1>Feed</h1>
                 <div class="widgets"></div>
             </div>`,
    State:{
        Kuk: 12,
    },
    Props: function () {
        this._ContentWidget = this.Select('.widgets');
        this._CurrentLContentList = [];

        this._ResizeTarget = null;

        this.InputFile = this.Select('.fileman');
    },
    Methods: function(){

        this._StealContents = function () {
            this._CurrentLContentList = [];
            for (let WidgetFullName of Lure.User.WebSettings.Featured.Widgets){
                console.log(`ww->`, WidgetFullName);
                const WidgetLContent = Lure.Object.GetProperty(window, WidgetFullName);
                if (WidgetLContent !== null){
                    //steal content
                    this._CurrentLContentList.push(WidgetLContent);
                    this._ContentWidget.appendChild(WidgetLContent.Content);
                }
            }
        };
        this._RefreshCurrents = function () {
            for (let c of this._CurrentLContentList)
                c.Refresh();
        };

        this.AddWidget = function (LContentFullName) {
            Lure.User.WebSettings.Featured.Widgets.push(LContentFullName);
            return api.User_WebSettingsUpdate(JSON.stringify(Lure.User.WebSettings), null);
        };
        this.RemoveWidget = function (LContentFullName) {
            Lure.Array.Remove(Lure.User.WebSettings.Featured.Widgets, x=>x === LContentFullName);
            return api.User_WebSettingsUpdate(JSON.stringify(Lure.User.WebSettings), null);
        };

        this._CheckSettings = function () {
            if (Lure.User.WebSettings.Featured === void 0) {
                Lure.User.WebSettings.Featured = {
                    Widgets: [],
                    Settings: {},
                }
            }
        }
    },
    BeforeShow: function(){
        this._StealContents();
    },
    Show: function(){
        this._RefreshCurrents();
    },
    AfterBuild: function(){
        this._CheckSettings();

        document.addEventListener('mouseup', (e)=>{
            this._ResizeTarget = null;
        });
        this.Content.addEventListener('mousemove', (e)=>{
            if (this._ResizeTarget){
                this._ResizeTarget._OnResize(e);
            }
        });


    },


});


window.Featured = Featured;
module.exports = Featured;
},{"../_common/dictionary":102,"../_common/history-master/history-subscription":109}],62:[function(require,module,exports){
let HelpDesk = new Lure.Content({
    Name: 'HelpDesk',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '#nav-help-desk'
    },
    Content:
        `<div class="help-desk content">
            <div class="help-desk-my-requests"></div>
            <div class="help-desk-new-request"></div>
        </div>`,
    Show: function () {

        if (Lure.User.Roles.indexOf(9) !== -1 || Lure.User.Roles.indexOf(23) !== -1)
                this.MyReqs.Show();
        else this.NewReq.Show();
    }
});
window.HelpDesk = HelpDesk;
require('./my-reqs/my-reqs.js');
require('./new-req/new-req.js');

module.exports = HelpDesk;

},{"./my-reqs/my-reqs.js":63,"./new-req/new-req.js":66}],63:[function(require,module,exports){
// let ListSelector = require('../../_common/list-selector/list-selector');
const HistorySubscription = require('../../_common/history-master/history-subscription');
const D = require('../../_common/dictionary');
const InputBox = require("../../_common/input-box/input-box");

Static.HelpRequestStatussChange = Static.HelpRequestStatuss.filter(x => x.ID < 3);
Static.HelpRequestPrioritysChange = Static.HelpRequestPrioritys.filter(x => x.ID < 4);

let control = `<div class="control">
                    <div class="filter" title="Фильтр">
                        <span class="toggle-filter"></span>
                        <div class="field-filter"></div>
                    </div>
                    <div class="sorting" title="Сортировка"></div>
               </div>`;
HelpDesk.MyReqs = new Lure.Content({
    Target: '.help-desk-my-requests',
    Type: 'help-desk-content',
    Control:{
        Target: '#nav-help-desk-my-req'
    },
    Permission: {
        Write: [D.Role.HelpdeskModerator]
    },
    Content:
        `<div class="my-requests">
            <div class="diary-bread l-row">
                <div class="li date-range">
                    <div class="calendar-icon">&#128198;</div>
                    <div class="dates"></div>
                </div>
                <div class="li l-row l-flexa-center flex-100">
                    <div>Подразделение: &nbsp;&nbsp;</div>
                    <div class="flex-100 library-tree-control strong">__</div>
                </div>
            </div>
            <div class="target-moderator"></div>
            <div class="my-req-header">
                <div class="req-tab all-my-reqs">ВСЕ</div>
                <div class="req-tab active-my-reqs selected">АКТИВНЫЕ</div>
                <div class="req-tab closed-my-reqs">ИСПОЛНЕННЫЕ</div>
                <div class="req-tab need-solution-my-reqs none">ТРЕБУЕТСЯ РЕШЕНИЕ (<span>{{NeedSolutionCount}}</span>)</div>
                <div class="req-search flex1 none"><input class="search-input" placeholder="Поиск..."></div>
            </div>
            <div class="flex1 req-space">
                <div class="my-reqs-list">
                    <table>
                        <thead>
                            <tr>
                        <!--MODER--><th class="not-for-user my-reqs-checks">
                                        <div class="wrap">
                                            <div><input type="checkbox" class="mass-actions"></div>
                                            <div style="position:relative;" class="{{NoneMassActions}}">
                                                <button class="mass-actions l-button">M</button>
                                                <div class="action-list none">
                                                    <div class="action-type" data-acttype="close-sel">Закрыть выбранные</div>
                                                    <div class="action-type" data-acttype="change-tech">Изменить исполнителя</div>
                                                    <div class="action-type" data-acttype="change-status">Изменить статус</div>
                                                    <div class="action-type" data-acttype="change-priority">Изменить приоритет</div>
                                                </div>
                                            </div>
                                        </div>
                                   </th>
                        <!--ALL --><th class="req-head my-reqs-num"><div class="head-wrap"><div>№</div><div class="control"><div class="sorting"></div></div></div></th>
                        <!--ALL --><th class="req-head my-reqs-create-date"><div class="head-wrap"><div>Дата регистрации</div>${control}</div></th>
                        <!--ALL --><th class="req-head my-reqs-complete-date"><div class="head-wrap"><div>Срок исполнения</div>${control}</div></th>
            <!--TECH--><!--MODER--><th class="not-for-user req-head my-reqs-closed-date"><div class="head-wrap"><div>Дата закрытия</div>${control}</div></th>
                        <!--ALL --><th class="req-head my-reqs-req-type"><div class="head-wrap"><div>Тип заявки</div>${control}</div></th>
                        <!--ALL --><th class="req-head my-reqs-theme"><div class="head-wrap"><div>Тема</div>${control}</div></th>    
            <!--TECH--><!--MODER--><th class="not-for-user req-head my-reqs-applic"><div class="head-wrap"><div>Заявитель</div>${control}</div></th>
                        <!--USER--><th class="not-for-tech req-head my-reqs-tech"><div class="head-wrap"><div>Исполнитель</div>${control}</div></th>
                        <!--TECH--><th class="not-for-user req-head my-reqs-library"><div class="head-wrap"><div>Подразделение</div>${control}</div></th>
                        <!--TECH--><th class="not-for-user req-head my-reqs-priority"><div class="head-wrap"><div>Приоритет</div>${control}</div></th>
                        <!--ALL --><th class="req-head my-reqs-status"><div class="head-wrap"><div>Статус</div>${control}</div></th>
                            </tr>
                        </thead>
                        <tbody class="my-reqs-list-body active-tab-show"></tbody>
                    </table>
                </div>
            </div>
        </div>`,
    Load: '',
    Sort: {
        ID: '.my-reqs-num .sorting',
        DateCreated: '.my-reqs-create-date .sorting',
        Name: '.my-reqs-theme .sorting',
        StatusID: '.my-reqs-status .sorting',
        TechnicianID: '.my-reqs-tech .sorting',
        LibraryID: '.my-reqs-library .sorting',
        PriorityID: '.my-reqs-priority .sorting',
        ExecutionDate: '.my-reqs-complete-date .sorting',
        LoginID: '.my-reqs-applic .sorting',
        HelpRequestTypeID: '.my-reqs-req-type .sorting',
        DateClosed: '.my-reqs-closed-date .sorting'
    },
    Controller: {
        Target: '.my-reqs-list .my-reqs-list-body',
        Data: [],
        ListElement:
            `<tr class="event-row {{StatusIDTab}}" data-reqid="{{ID}}">
                <td class="not-for-user mass-check"><input type="checkbox" class="mass-actions"></td>
                <td class="td-reqs-num">{{ID}}</td>
                <td class="td-create-date">{{DateCreated}}</td>
                <td class="td-complete-date">{{ExecutionDate}}</td>
                <td class="not-for-user td-closed-date">{{DateClosed}}</td>
                <td>{{HelpRequestTypeID}}</td>
                <td>{{Name}}</td>
                <td class="not-for-user">{{User.Name}}</td>
                <td class="not-for-tech editable" data-object="Lure.User.Cache.Technicians" data-present="Name" data-value="ID">{{TechnicianID}}</td>
                <td class="not-for-user">{{LibraryID}}</td>
                <td class="not-for-user editable" data-object="Static.HelpRequestPrioritysChange" data-present="Name" data-value="ID">{{PriorityID}}</td>
                <td class="my-reqs-status editable" data-object="Static.HelpRequestStatussChange" data-present="Name" data-value="ID">{{StatusID}}</td>
            </tr>`,
        EmptyMessage:
             `<td colspan="15">Заявки отсутствуют</td>`,
        AfterBuild: function () {
            this.UpdateFilter();
            this.RecoverSelection();
            this.Proto.SetProperty('NeedSolutionCount', this.Controller.Data.filter(x => [3, 4].indexOf(x.StatusID) !== -1).length);
        },
        LineSave: function (dataItem, paramName, value) {
            /*this.Controller.Data[dataItem.LineID][paramName] = parseInt(value);*/
            if (paramName === 'TechnicianID')
                return api.HelpDesk_RequestEdit_Technician(dataItem.Data.ID, value, {Then: () => Lure.System.Success('Исполнитель изменен')});
            if (paramName === 'PriorityID')
                return api.HelpDesk_RequestEdit_Priority(dataItem.Data.ID, value, {Then: () => Lure.System.Success('Приоритет изменен')});
            if (paramName === 'StatusID')
                return api.HelpDesk_RequestEdit_Status(dataItem.Data.ID, value, {Then: () => Lure.System.Success('Статус изменен')});
        }
    },
    Proto: {
        NeedSolutionCount: 0,
        NoneMassActions: 'none'
    },
    PropTypes: {
        TechnicianID: Lure.PropTypes.Int,
        PriorityID: Lure.PropTypes.Int,
        StatusID: Lure.PropTypes.Int
    },
    PropFormat: {
        LibraryID: (id) => (Lure.User.Cache.LibraryListDict[id] || {Name: ''}).Name,
        StatusID: x => ({
            0: `<div class="status-dot new"></div>`,
            1: '<div class="status-dot active"></div>',
            2: '<div class="status-dot closed"></div>',
            3: '<div class="status-dot rejected"></div>',
            4: '<div class="status-dot returned"></div>',
        }[x] || '') + (D.HelpRequestStatusDict[x] || '???'),
        DateCreated: x => Lure.Date(x).Format('DD MMMM YYYY в HH:mm', true),
        ExecutionDate: x => Lure.Date(x).Format('DD.MM.YYYY HH:mm'),
        TechnicianID: x => (Lure.User.Cache.TechnicianDict[x] || {Name: 'Не назначен'}).Name,
        StatusIDTab: (x, p) => {
            switch (p.StatusID) {
                case 0: // active
                    return 'new-req';
                case 1: // active
                    return 'active-req';
                case 2: // closed
                    return 'closed-req';
                case 3:
                    return 'rejected-req';
                case 4:
                    return 'returned-req';
            }
        },
        PriorityID: x => ({
            1: '<div class="status-dot low"></div>',
            2: '<div class="status-dot mid"></div>',
            3: '<div class="status-dot high"></div>',
            4: '<div class="status-dot exec-date"></div>',
        }[x] || '') + D.HelpRequestPriorityDict[x],
        HelpRequestTypeID: x => {
            if (D.HelpRequestTypeAHDList.indexOf(x) !== -1)
                return 'АХД';
            if (D.HelpRequestTypeITList.indexOf(x) !== -1)
                return 'ИТ';
            return 'Другое';
        },
        DateClosed: x => x ? Lure.Date(x).Format('DD.MM.YYYY') : ''
    },
    Props: function () {
        this.SelectedTab = 'active';
        this.Filtered = false;
        this.FilterConds = {};
        this.ActList = this.Select('.action-list');

        this.Users = {};
        for (let u of Lure.User.Cache.UserList)
            this.Users[u.ID] = u;
    },
    GetSet: {
        get CurrentLibraries() {
            return this.Proto.Data.LibraryIDListSelected;
        },
        get lastReqID() {
            return this.Controller.Data.Last().ID
        }
    },
    Show: function () {
        // this.Refresh();
        this.RefreshData();
        this.Subscription.Subscribe();
        if (this.SpecialModerSidebar)
            this.SpecialModerSidebar.RefreshCharts();

        this.ActList.classList.add('none');
    },
    Hide: function(){
        this.Subscription.Unsubscribe();
    },
    Refresh: function () {
        // 0 - новая (еще не принята в работу)
        // 1 - в работе
        // 2 - закрытые
        // 3 - отклоненные
        // 4 - возвращенные
        this.Sidebar.ResetData();
        this.RefreshData();
    },
    Methods: function () {
        this.ChangeStatus = function (reqID, status) {
            let index = this.Controller.Data.findIndex(x => x.ID === reqID);
            if (index === -1) return;
            this.Controller.Data[index].StatusID = status;
            this.Controller.Refresh(index);
            this.Sidebar.Proto.SetProperty('StatusID', status);
        };
        this.RefreshData = function (reqID = false) {
            this.Load.Show();
            let dates = this.DatePicker.Date;
            api.HelpDesk_RequestGet(-1, dates[0], dates[1], this.CurrentLibraries/*[440]*/, {
                Then: async (tickets) => {
                    //let a = Promise.resolve(true);
                    for (let ticket of tickets) {
                        if (ticket.LoginID === Lure.User.ID)
                            ticket.User = {Email: Lure.User.Email, Name: Lure.User.Name, Phone: Lure.User.Phone, Position: Lure.User.Position};
                        else
                            ticket.User = await this.GetUserInfo(ticket.ID, ticket.LoginID);

                        if (!ticket.ExecutionDate)
                            switch (ticket.PriorityID) {
                                case D.HelpRequestPriority.Low:
                                    ticket.ExecutionDate = Lure.Date(ticket.DateCreated).AddHours(8).Date; // 8 часов
                                    break;
                                case D.HelpRequestPriority.Mid:
                                    ticket.ExecutionDate = Lure.Date(ticket.DateCreated).AddDays(1).Date; // 1 день
                                    break;
                                case D.HelpRequestPriority.High:
                                    ticket.ExecutionDate = Lure.Date(ticket.DateCreated).AddDays(3).Date; // 3 дня
                                    break;
                                case D.HelpRequestPriority.ExactDate:
                                    ticket.ExecutionDate = new Date; // На всякий случай
                                    break;
                            }
                        else
                            ticket.ExecutionDate = Lure.Date(ticket.ExecutionDate).Date;
                        ticket.DateCreated = Lure.Date(ticket.DateCreated).Date;
                        if (ticket.DateClosed) ticket.DateClosed = Lure.Date(ticket.DateClosed).Date;
                    }
                    this.Controller.Refresh(tickets);
                },
                Catch: console.error,
                Finally: () => this.Load.Hide()
            });
            this.Refreshed = true;
        };
        this.SelectTab = function (type) {
            let cl = this.Controller.Content.classList;
            cl.remove('active-tab-show');
            cl.remove('all-tab-show');
            cl.remove('closed-tab-show');
            cl.remove('need-solution-tab-show');
            switch (type) {
                case 'active':
                    cl.add('active-tab-show');
                    break;
                case 'all':
                    cl.add('all-tab-show');
                    break;
                case 'closed':
                    cl.add('closed-tab-show');
                    break;
                case 'need-solution':
                    cl.add('need-solution-tab-show');
                    return;
            }
            this.SelectedTab = type;
        };
        this.RecoverSelection = function () {
            if (this.OpenedReq === -1) return;
            let elem = this.Controller.GetDataItemByDelegate(x => x.ID === this.OpenedReq);
            if (elem) elem.DOM.classList.add('selected');
        };
        this.ResetSelection = function () {
            let old = this.Select('.event-row.selected');
            if (old) old.classList.remove('selected');
            this.isRowSelected = false;
            this.OpenedReq = -1;
        };
        this.OpenReqSidebar = function(rowID, elem) {
            /*if (this.isRowSelected) {
                Lure.System.Notice('Вы уже редактируете заявку.<br>Закройте её, чтобы редактировать другую');
                return;
            }*/
            this.ResetSelection();
            elem.classList.add('selected');
            this.OpenReqSidebarByID(rowID);
        };
        this.OpenReqSidebarByID = function (rowID) {
            let req = this.Controller.Data[rowID];
            if (!req) return;
            this.OpenedReq = req.ID;
            this.Sidebar.ShowRequest(req, rowID);
        };
        this.NewRequests = function (list) {
            for (let id of list)
                api.HelpDesk_RequestGet(id, {
                    Then: r => this.Controller.Add(r[0]),
                    Error: console.error,
                    Finally: () => {}
                });
            console.log(list);
        };
        this.GetUserInfo = function (reqID, userID) {
            if (!this.Users[userID])
                return api.HelpDesk_UserInfoGet(reqID, userID).then(u => {
                    this.Users[userID] = u;
                    return u;
                });
            else return Promise.resolve(this.Users[userID]);
        };
        this.UpdateFilter = function (r, type) {
            if ((r || r === '') && type) {
                if (this.FilterConds[type] === r) return;
                this.FilterConds[type] = r;
            }
            let list = this.Controller.DataItems;
            let filter_date = (arr, x) => {
                if (!x) return arr.indexOf('');
                return arr.indexOf(x.getFullYear() + '-' + x.getMonth() + '-' + x.getDate());
            };
            let filter_text = (r, t) => {
                t = t.toLocaleLowerCase().trim();
                if (t === '') return false;
                let ind = r.Name.concat(r.Description, Lure.Date(r.DateCreated).Format('DD MMMM YYYY в HH:mm', true), (Lure.User.Cache.LibraryList.filter((x) => x.ID === r.LibraryID)[0] || {Name: ''}).Name, (Lure.User.Cache.TechnicianDict[r.TechnicianID] || {Name: 'Не назначен'}).Name).toLocaleLowerCase().indexOf(t);
                return ind === -1;
            };
            // console.log(this.FilterConds)
            for (let i = 0; i < list.length; i++)
                (
                    this.FilterConds.hasOwnProperty('search-query') && filter_text(list[i].Data, this.FilterConds['search-query']) ||
                    this.FilterConds['my-reqs-theme']         && this.FilterConds['my-reqs-theme'].indexOf(list[i].Data.HelpRequestTypeID + '') === -1 ||
                    this.FilterConds['my-reqs-tech']          && this.FilterConds['my-reqs-tech'].indexOf(list[i].Data.TechnicianID + '') === -1 ||
                    this.FilterConds['my-reqs-priority']      && this.FilterConds['my-reqs-priority'].indexOf(list[i].Data.PriorityID + '') === -1 ||
                    this.FilterConds['my-reqs-library']       && this.FilterConds['my-reqs-library'].indexOf(list[i].Data.LibraryID + '') === -1 ||
                    this.FilterConds['my-reqs-applic']        && this.FilterConds['my-reqs-applic'].indexOf(list[i].Data.LoginID + '') === -1 ||
                    this.FilterConds['my-reqs-complete-date'] && filter_date(this.FilterConds['my-reqs-complete-date'], list[i].Data.ExecutionDate) === -1 ||
                    this.FilterConds['my-reqs-create-date']   && filter_date(this.FilterConds['my-reqs-create-date'], list[i].Data.DateCreated) === -1 ||
                    this.FilterConds['my-reqs-status']        && this.FilterConds['my-reqs-status'].indexOf(list[i].Data.StatusID + '') === -1 ||
                    this.FilterConds['my-reqs-closed-date']   && filter_date(this.FilterConds['my-reqs-closed-date'], list[i].Data.DateClosed) === -1 ||
                    this.FilterConds['my-reqs-req-type']      && (
                        this.FilterConds['my-reqs-req-type'].indexOf('1') === -1 && D.HelpRequestTypeITList.indexOf(list[i].Data.HelpRequestTypeID) !== -1 ||
                        this.FilterConds['my-reqs-req-type'].indexOf('2') === -1 && D.HelpRequestTypeAHDList.indexOf(list[i].Data.HelpRequestTypeID) !== -1
                    )
                ) ? list[i].DOM.classList.add('filtered') : list[i].DOM.classList.remove('filtered');
        };
        this.ChangeRowData = function (row, param, data) {
            this.Controller.Data[row][param] = data;
            this.Controller.Refresh(row);
        };
        let allCheck = this.Select('input.mass-actions');
        this.ChangeMassCheck = function (line, checked) {
            this.Controller.Data[line].MassSelect = checked;
            if (!checked) allCheck.checked = false;
            let list = this.Controller.Data.filter(x => x.MassSelect);
            if (list.length > 0 )
                this.Proto.SetProperty('NoneMassActions', '');
            else this.Proto.SetProperty('NoneMassActions', 'none');
        };
        this.DoMassAction = function (type, elem) {
            let list = [];
            for (let i = 0; i < this.Controller.Data.length; i++)
                if (this.Controller.Data[i].MassSelect)
                    list.push({ID: this.Controller.Data[i].ID, Line: i});
            // let list = this.Controller.Data.filter(x => x.MassSelect).map(x => x.ID);
            if (type === 'close-sel')
                InputBox.Run(elem, '',
                    async comment => {
                        for (let x of list)
                            await api.HelpDesk_RequestFinish(x.ID, comment, {
                                Then: r => {
                                    if (r === -1)
                                        Lure.System.ShowError('Что-то пошло не так');
                                    else {
                                        this.ChangeStatus(x.ID, 2);
                                        this.Controller.Data[x.Line].MassSelect = false;
                                        Lure.Select('input', this.Controller.GetDataItemByLineID(x.Line).DOM).checked = false;
                                    }
                                }
                            });
                        if (this.Controller.Data.filter(x => x.MassSelect).length === 0)
                            this.Proto.SetProperty('NoneMassActions', 'none');
                        this.Select('.action-list').classList.add('none');
                    }, {Caption: 'Закрыть выбранные', TextArea: true});
            let method, field, data;
            if (type === 'change-tech') {
                method = api.HelpDesk_RequestEdit_Technician;
                field = 'TechnicianID';
                data = Lure.User.Cache.Technicians.map(x => ({Name: x.Name, ID: x.ID}))
            }
            if (type === 'change-status') {
                method = api.HelpDesk_RequestEdit_Status;
                field = 'StatusID';
                data = Static.HelpRequestStatuss.filter(x => x.ID < 3);
            }
            if (type === 'change-priority') {
                method = api.HelpDesk_RequestEdit_Priority;
                field = 'PriorityID';
                data = Static.HelpRequestPrioritys.filter(x => x.ID < 4);
            }

            if (type === 'change-priority' || type === 'change-tech' || type === 'change-status')
                InputBox.Run(elem, 0 + type === 'change-priority',
                    async res => {
                        for (let x of list)
                            await method(x.ID, res, {
                                Then: r => {
                                    res = parseInt(res);
                                    if (r === -1)
                                        Lure.System.ShowError('Что-то пошло не так');
                                    else {
                                        this.Controller.Data[x.Line][field] = res;
                                        this.Controller.Data[x.Line].MassSelect = false;
                                        this.Controller.Refresh(x.Line);
                                        Lure.Select('input', this.Controller.GetDataItemByLineID(x.Line).DOM).checked = false;
                                    }
                                }
                            });
                        if (this.Controller.Data.filter(x => x.MassSelect).length === 0)
                            this.Proto.SetProperty('NoneMassActions', 'none');
                        this.Select('.action-list').classList.add('none');
                    }, {
                        Caption: 'Изменить приоритет',
                        KeyValue: 'ID',
                        KeyView: 'Name',
                        Data: data,
                        TextArea: false
                    });
        };
        this.SelectDeselectAll = function (checked) {
            let c = this.Controller.DataItems;
            for (let e of c) {
                if (checked)
                    switch (this.SelectedTab) {
                        case 'active':
                            if (e.Data.StatusID !== 0 && e.Data.StatusID !== 1 && e.Data.StatusID !== 4) continue;
                            break;
                        case 'closed':
                            if (e.Data.StatusID !== 2) continue;
                            break;
                        case 'need-solution':
                            if (e.Data.StatusID !== 3 && e.Data.StatusID !== 4) continue;
                            break;
                    }
                if (checked)
                    e.DOM.classList.add('mass-select');
                else e.DOM.classList.remove('mass-select');
                Lure.Select('input', e.DOM).checked = checked;
                e.Data.MassSelect = checked;
            }
            let list = c.filter(x => x.Data.MassSelect);
            if (list.length > 0 )
                this.Proto.SetProperty('NoneMassActions', '');
            else this.Proto.SetProperty('NoneMassActions', 'none');
        };
    },
    AfterBuild: function () {
        new LibraryTree(this, this.Select('.library-tree-control'), {MultiSelect: true, SelectedList: Lure.User.Cache.LibraryList.Select(x=>x.ID)});
        this.Proto.Data.LibraryIDListSelected = Lure.User.Cache.LibraryList.Select(x=>x.ID);
        this.AddEventListener('click', '.my-req-header .req-tab', (e) => {
            let elem = this.Select('.my-req-header .selected');
            if (e.currentTarget !== elem) {
                if (elem) elem.classList.remove('selected');
                let cl = e.currentTarget.classList;
                cl.add('selected');
                if (cl.contains('active-my-reqs')) this.SelectTab('active');
                else if (cl.contains('all-my-reqs')) this.SelectTab('all');
                else if (cl.contains('closed-my-reqs')) this.SelectTab('closed');
                else if (cl.contains('need-solution-my-reqs')) this.SelectTab('need-solution');
            }
        });
        // this.AddEventListener('click', '.event-row', e => this.OpenReqSidebar(e.currentTarget.dataset['line'], e.currentTarget));

        this.AddEventListener('click', '.event-row td:not(.mass-check)', e => this.OpenReqSidebar(e.currentTarget.parentElement.dataset['line'], e.currentTarget.parentElement));
        this.AddEventListener('change', '.event-row .mass-check .mass-actions', e => {
            e.currentTarget.parentElement.parentElement.classList.toggle('mass-select');
            this.ChangeMassCheck(e.currentTarget.parentElement.parentElement.dataset['line'], e.currentTarget.checked);
        });

        this.Select('button.mass-actions').onclick = e => {this.ActList.classList.toggle('none'); e.stopPropagation()};
        this.AddEventListener('click', '.action-list .action-type', e => this.DoMassAction(e.currentTarget.dataset['acttype'], e.currentTarget));

        this.Select('.my-reqs-checks input.mass-actions').onchange = e => this.SelectDeselectAll(e.currentTarget.checked);
        this.AddEventListener('click', '*:not(.my-reqs-checks)', e => !this.ActList.classList.contains('none') ? this.ActList.classList.add('none') : '');

        this.DatePicker = new Lure.PeriodPicker({
            Target: this.Select('.diary-bread .li.date-range .dates'),
            DateRange: [Lure.Date().WeekStart, Lure.Date().WeekEnd],
            OnConfirm: () => this.RefreshData()
        });

        this.Subscription = new HistorySubscription({
            OnSubscribe: HistList => this.NewRequests(HistList.map(x => x.ItemID)),
            Condition: h => h.TypeID === D.SubscribeType.SupportAdd && h.LoginID !== Lure.User.ID && h.ItemID > this.lastReqID
        });

        this.Filters = [];
        let data = [
            {
                cl: 'my-reqs-theme',
                list: [{k: 0, v: 'Организация рабочего места'},
                    {k: 1, v: 'Обслуживание компьютеров'},
                    {k: 2, v: 'Обслуживание оргтехники'},
                    {k: 3, v: 'Обслуживание программного обеспечения'},
                    {k: 4, v: 'Наблюдение, счетчики, сигнализация'},
                    {k: 5, v: 'Техническое сопровождение мероприятий'},
                    {k: 6, v: 'Ремонт'},
                    {k: 7, v: 'Замена / Установка'},
                    {k: 8, v: 'Другое (ИТ)'},
                    {k: 9, v: 'Другое (АХД)'}]
            }, {
                cl: 'my-reqs-tech',
                list: [{
                    k: -1,
                    v: 'Не назначен'
                }].concat(Object.entries(Lure.User.Cache.TechnicianDict).map(x => ({k: x[1].ID, v: x[1].Name})))
            }, {
                cl: 'my-reqs-library',
                list: (o = {}) => this.Controller.Data.map(x => ({
                    k: x.LibraryID,
                    v: Lure.User.Cache.LibraryListDict[x.LibraryID].Name
                })).filter(x => o[x.k] ? false : (o[x.k] = true))
            }, {
                cl: 'my-reqs-complete-date',
                list: (o = {}) => this.Controller.Data.map(x => {
                    return {
                        k: (d => d.getFullYear() + '-' + d.getMonth() + '-' + d.getDate())(Lure.Date(x.ExecutionDate).DayStart),
                        v: Lure.Date(x.ExecutionDate).Format('DD.MM.YYYY')
                    }
                }).filter(x => o[x.k] ? false : (o[x.k] = true))
            }, {
                cl: 'my-reqs-closed-date',
                list: (o = {}) => this.Controller.Data.map(x => {
                    if (x.DateClosed)
                        return {
                            k: (d => d.getFullYear() + '-' + d.getMonth() + '-' + d.getDate())(Lure.Date(x.DateClosed).DayStart),
                            v: Lure.Date(x.DateClosed).Format('DD.MM.YYYY')
                        };
                    else return {k: '', v: ''}
                }).filter(x => o[x.k] ? false : (o[x.k] = true))
            }, {
                cl: 'my-reqs-create-date',
                list: (o = {}) => this.Controller.Data.map(x => ({
                    k: (d => d.getFullYear() + '-' + d.getMonth() + '-' + d.getDate())(Lure.Date(x.DateCreated).DayStart),
                    v: Lure.Date(x.DateCreated).Format('DD MMMM YYYY', true)
                })).filter(x => o[x.k] ? false : (o[x.k] = true))
            }, {
                cl: 'my-reqs-priority', list: [{k: 1, v: 'Низкий'},
                    {k: 2, v: 'Средний'},
                    {k: 3, v: 'Высокий'},
                    {k: 4, v: 'Точная дата'},
                ], right: 'top-right'
            }, {
                cl: 'my-reqs-status', list: [{k: 0, v: 'Новая'},
                    {k: 1, v: 'В работе'},
                    {k: 2, v: 'Закрыта'},
                    {k: 3, v: 'Отклонена'},
                    {k: 4, v: 'Возвращена'},
                ], right: 'top-right'
            }, {
                cl: 'my-reqs-applic',
                list: (o = {}) => this.Controller.Data.map(x => ({
                    k: x.LoginID,
                    v: x.User.Name
                })).filter(x => o[x.k] ? false : (o[x.k] = true))
            }, {
                cl: 'my-reqs-req-type',
                list: [{k: 1, v: 'ИТ'}, {k: 2, v: 'АХД'}]
            }
        ];
        for (let e of data)
            this.Filters.push(ReqFilter({
                    target: `.${e.cl} .field-filter`,
                    Data: e.list, Key: 'k', Value: 'v',
                    Control: this.Select(`.${e.cl} .toggle-filter`),
                    onOK: r => this.UpdateFilter(r, e.cl),
                    right: e.right
                })
            );
        let inp = this.Select('.req-search .search-input');
        if (inp && !inp.classList.contains('none'))
            inp.onkeyup = e => {
                if (e.which === 27)
                    inp.value = '';
                // console.log(inp.value, 'search-query');
                this.UpdateFilter(inp.value, 'search-query');
            };
    }
});
let ReqFilter = require('../../_common/filter-selector/filter-selector.js');
require("./sidebar/sidebar.js");

},{"../../_common/dictionary":102,"../../_common/filter-selector/filter-selector.js":104,"../../_common/history-master/history-subscription":109,"../../_common/input-box/input-box":110,"./sidebar/sidebar.js":65}],64:[function(require,module,exports){
let ReqFilter = require('../../../_common/filter-selector/filter-selector.js');
const D = require("../../../_common/dictionary");
const LIBRARY_LIMIT = 5;
module.exports = () => ({
    Target: '.target-moderator',
    Type: 'help-desk-sidebar',
    Parent: HelpDesk.MyReqs,
    Visible: true,
    Content:
`<div class="sidebar-moderator">
    <div class="column-left flex2">
        <div class="column-header">
            <div>УЧАСТНИКИ КОМАНДЫ</div>
            <div class="multi-select selectable">
                <div data-tabtype="all" class="multi-sel-row selected">Все</div>
                <div data-tabtype="it"  class="multi-sel-row">ИТ</div>
                <div data-tabtype="ahd" class="multi-sel-row">АХД</div>
            </div>
            <div class="multi-select">
                <div class="multi-sel-row multi-lib">
                    <div class="click-contr">Подразделения: все ({{$g.Lure.User.Cache.LibraryList.length}})</div>
                    <div class="lib-selector"></div>
                </div>
            </div>
        </div>
        <div class="column-content tech-list flex1">
        </div>
    </div>
    <div class="column-middle flex1">
        <div class="column-header">СЕГОДНЯ</div>
        <div class="pie-today-stat-wrap">
            <div class="pie-today-stat">
                <div class="pie today-stat-chart"></div>
                <div class="chart-subscript">
                    <div class="sub-icon param-icon"><span>{{Stat.Complete}}</span>/<span>{{Stat.Complete + Stat.Active + Stat.Rejected + Stat.Returned}}</span></div>
                    <div class="sub-caption">выполнено<br>заявок</div>
                </div>
            </div>
            <div class="parameters">
                <div class="row" data-type="st-0"><div class="color-mark closed">&nbsp;</div><div class="parameter-name">выполнено</div><div class="parameter-value">{{Stat.Complete}}</div></div>
                <div class="row" data-type="st-1"><div class="color-mark active">&nbsp;</div><div class="parameter-name">в работе</div><div class="parameter-value">{{Stat.Active}}</div></div>
                <!--<div class="row" data-type="st-2"><div class="color-mark mid">&nbsp;</div><div class="parameter-name">просрочено</div><div class="parameter-value">{{Stat.Complete}}</div></div>
                <div class="row" data-type="st-3"><div class="color-mark high">&nbsp;</div><div class="parameter-name">отложено</div><div class="parameter-value">{{Stat.Complete}}</div></div>-->
                <div class="row" data-type="st-4"><div class="color-mark rejected">&nbsp;</div><div class="parameter-name">отклонено</div><div class="parameter-value">{{Stat.Rejected}}</div></div>
                <div class="row" data-type="st-5"><div class="color-mark returned">&nbsp;</div><div class="parameter-name">возвращено</div><div class="parameter-value">{{Stat.Returned}}</div></div>
            </div>
        </div>
    </div>
    <div class="column-right flex3">
        <div class="column-header">
            <div>СТАТИСТИКА</div>
            <div class="multi-select none">
                <div class="multi-sel-row multi-lib">
                    <div class="click-contr">Подразделения: 0</div>
                    <div class="lib-selector"></div>
                </div>
            </div>
            <div class="multi-select selectable">
                <div class="multi-sel-row selected" data-type="today">Сегодня</div>
                <div class="multi-sel-row" data-type="yesterday">Вчера</div>
                <div class="multi-sel-row" data-type="week">Неделя</div>
                <div class="multi-sel-row" data-type="month">Месяц</div>
                <div class="multi-sel-row" data-type="quarter">Квартал</div>
                <div class="multi-sel-row" data-type="year">Год</div>
            </div>
            <div class="multi-select selectable">
                <div class="multi-sel-row date-select-range" data-type="range">&#128198;27.12.2018 - 28.01.2019</div>
            </div>
        </div>
        <div class="stat-chart flex1 vis-none"></div>
        <div class="stats-bottom">
            <div class="stat-ring-wrap">
                <div class="stat-ring active">{{TechStatActive}}</div>
                <div class="stat-ring-name">В работе</div>
            </div>
            <div class="stat-ring-wrap">
                <div class="stat-ring closed">{{TechStatClosed}}</div>
                <div class="stat-ring-name">Закрыто</div>
            </div>
            <div class="stat-ring-wrap">
                <div class="stat-ring rejected">{{TechStatRejected}}</div>
                <div class="stat-ring-name">Отклонено</div>
            </div>
            <div class="stat-ring-wrap">
                <div class="stat-ring returned">{{TechStatReturned}}</div>
                <div class="stat-ring-name">Возвращено</div>
            </div>            
        </div>
    </div>
</div>`,
    Controller: {
        Target: '.tech-list',
        Data: (()=>{
            let ErrorCount, ErrorCountMax = 0;
            let res = Lure.User.Cache.Technicians.map(x => {
                ErrorCount = 0;
                let OKCount = 0;
                let a = Lure.Clone(x);
                a.LibsView = '';
                for (let i = 0; i < a.LibraryIDList.length; i++) {
                    let lib = Lure.User.Cache.LibraryListDict[a.LibraryIDList[i]];
                    if (!lib) {
                        ErrorCount++;
                    } else {
                        OKCount++;
                        a.LibsView += lib.NameVisual || lib.Name;
                        if (i > LIBRARY_LIMIT) break;
                        a.LibsView += '; ';
                    }
                }

                if (ErrorCount >= a.LibraryIDList.length || (a.LibsView === '')) {
                    let num = a.LibraryIDList.length;
                    a.LibsView = num + ' ' + (num % 10 === 1 && num % 100 !== 11 ? 'библиотека' : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 11 || num % 100 > 19)) ? 'библиотеки' : 'библиотек');
                } else if (a.LibraryIDList.length > LIBRARY_LIMIT)
                    a.LibsView += ' и ' + (a.LibraryIDList.length - OKCount) + ' других';

                a.IsIT = a.HelpRequestTypeIDList.filter(n => D.HelpRequestTypeITList.indexOf(n) > -1).length > 5;
                a.IsAHD = a.HelpRequestTypeIDList.filter(n => D.HelpRequestTypeAHDList.indexOf(n) > -1).length > 2;
                if (ErrorCount > ErrorCountMax) ErrorCountMax = ErrorCount;
                return a;
            });
            if (ErrorCountMax > 0) Lure.System.Warn(`ВНИМАНИЕ! МОДЕРАТОР БЕЗ БИБЛИОТЕК!<br>Неизвестно библиотек: ${ErrorCountMax}`);
            return res;
        })(),
        ListElement: `<div class="tech-inst {{AHDShow}} {{ITShow}} {{OnlyAll}}" data-techid="{{ID}}">
                    <div class="left-side flex2">
                        <div class="user-photo">
                            <img src="https://i.ebayimg.com/images/g/6F4AAOSwr6pZ8wJj/s-l300.jpg">
                        </div>
                        <div class="tech-info">
                            <div class="info-name">{{Name}}</div>
                            <div class="info-position"><span>{{ITAHD}}</span><span>{{Position}}</span></div>
                        </div>
                    </div>
                    <div class="right-side flex4">
                        <div>{{LibsView}}</div>
                        <div class="tech-action-list {{NoneWhenNotAdmin}}">
                            <div class="tech-action" data-actiontype="edit-libs"><div class="control">Изменить библиотеки</div><div class="target"></div></div>
                            <div>|</div>
                            <div class="tech-action" data-actiontype="edit-types"><div class="control">типы заявок</div><div class="target"></div></div>
                        </div>
                    </div>
                </div>`
    },
    Proto: {
        // TechStatNew: 0,
        TechStatActive: 0,
        TechStatClosed: 0,
        TechStatRejected: 0,
        TechStatReturned: 0,
        Stat: {
            Complete: 0,
            Active: 0,
            Rejected: 0,
            Returned: 0
        }
    },
    PropFormat: {
        LibraryIDList: x => x.join(', '),
        ITAHD: (x, p) => (p.IsIT ? 'ИТ' : '') + ((p.IsIT || p.IsAHD) ? ' ' : '') + (p.IsAHD ? 'АХД' : '') + ((p.IsIT || p.IsAHD) ? ' | ' : ''),
        OnlyAll: (x, p) => (!p.IsIT && !p.IsAHD) ? 'only-all' : '',
        AHDShow: (x, p) => p.IsAHD ? 'ahd-show' : '',
        ITShow: (x, p) => p.IsIT ? 'it-show' : '',
        NoneWhenNotAdmin: () => Lure.User.Roles.indexOf(D.Role['AdminTechManagement']) === -1 ? 'none' : ''
    },
    Show: function () {
        this.ChartDailyStat.Refresh();
    },
    Props: function () {
        this.isModer = true;
        this.SelectedRangeType = 'today';

        let GetChartOptions = function (target, series) {
            let res = {
                Target: target,
                Type: 'pie',
                Labels: {Visible: false},
                Legend: {Visible: false},
                Series: [ ],
                Grid: {Visible: false,},
                Tooltip: {
                    Format: (Tip) => {
                        let sum = Tip.Episode.Data.reduce((a, b) => a + b);
                        let perc = Math.floor(sum === 0 ? 0 : (Tip.Value / sum) * 10000) / 100;
                        return `<div class="tip">
                                      <div class="tip-bg"></div>
                                      <div class="tip-value">
                                            <div class="l-row l-flexa-center">
                                                <div class="tip-icon" style="background-color: ${Tip.Color}"></div>
                                                <div class="tip-label">${Tip.Name}: ${Tip.Value} (${perc}%)</div>
                                            </div>
                                      </div>
                                </div>`;
                    }
                },
                AxisY: {Visible: false}
            };
            for (let d of series) {
                let e = {
                    Labels: {Data: d.Labels},
                    Data: d.Data,
                    Colors: d.Colors,
                    Type: d.Type ? d.Type : 'ring',
                    AngleStart: -90
                };
                if (d.Width) e.Width = d.Width;
                if (d.Margin) e.Margin = d.Margin;
                res.Series.push(e);
            }
            return res;
        };
        this.ChartDailyStat = new Lure.Chart(GetChartOptions(
            this.Select('.pie.today-stat-chart'),
            [{
                Labels: ['Выполнено', 'В работе', /*'Просрочено', 'Отложено',*/ 'Отклонено', 'Возвращено'],
                Data: [1, 2, /*3, 4,*/ 5, 6],
                Colors: ['#51A1A7', '#416E75', /*'#79CCDA', '#20A4A4',*/ '#4B7798', '#40667F'],
                Width: 32
            }, {
                Labels: ["Выполнено", "Осталось"],
                Data: [10, 25],
                Colors: ["#5DA85D", "#4A8453"],
                Width: 22,
                Margin: 3
            }]
        ));

    },
    Methods: function () {
        this.ResetData = function () {};
        this.ShowRequest = function () {};

        let targ = this.Select(`.column-left .multi-lib .click-contr`);
        let targSingle = this.Select(`.column-right .multi-lib .click-contr`);
        this.TechClick = function (e) {
            let old = this.Select('.tech-inst.selected');
            if (old) old.classList.remove('selected');
            e.classList.add('selected');
            targSingle.innerText = 'Подразделения: все';
            this.StatChart.Target.classList.remove('vis-none');
            this.SelectedTech = parseInt(e.dataset['techid']);
            this.RefreshTechData();
        };

        this.RefreshTechData = function () {
            if (!this.SelectedTech && this.SelectedTech !== 0) return;
            this.StatChart.Load.Show();
            let dates = this.GetDateRange();
            api.HelpDesk_TechnicianStatusesGet(this.SelectedTech, dates[0], dates[1], {
                Then: r => {
                    // this.Proto.Data.TechStatNew = r[0];
                    this.Proto.SetProperty('TechStatActive', r[1]);
                    this.Proto.SetProperty('TechStatClosed', r[2]);
                    this.Proto.SetProperty('TechStatRejected', r[3]);
                    this.Proto.SetProperty('TechStatReturned', r[4]);
                    // this.Proto.Refresh();
                    this.StatChart.Options.Series[0].Data = r;
                    if (this.StatChart.AlreadyRedraw)
                        this.StatChart.Refresh();
                    else {this.StatChart.Redraw(); this.StatChart.AlreadyRedraw = true;}
                },
                Finally: () => this.StatChart.Load.Hide()
            });
        };

        this.FilterTechLibs = function (libs) {
            targ.innerText = 'Подразделения: ' + (libs.length === Lure.User.Cache.LibraryList.length ? 'все (' + libs.length + ')' : libs.length);
            for (let tech of this.Controller.DataItems)
                if (tech.Data.LibraryIDList.filter(n => libs.indexOf(n + '') !== -1).length > 0 && libs.length !== 0)
                    tech.DOM.classList.remove('filtered');
                else tech.DOM.classList.add('filtered');

            console.log(libs);
        };
        this.FilterTechLibsSingle = function (libs) {
            targSingle.innerText = 'Подразделения: ' + libs.length;
        };
        this.RefreshCharts = function () {
            this.ChartDailyStat.Refresh();
            api.HelpDesk_TechnicianStatusesGet(-1, Lure.Date().DayStart, Lure.Date().DayEnd, {
                Then: r => {
                    this.ChartDailyStat.Options.Series[0].Data = [r[1], r[2], r[3], r[4]];
                    this.ChartDailyStat.Options.Series[1].Data = [r[2], r[3] + r[4] + r[1]];
                    this.Proto.SetProperty('Stat', {Complete: r[1], Active: r[2], Rejected: r[3], Returned: r[4]});
                    this.ChartDailyStat.Refresh();
                }
            })
        };
        this.GetDateRange = function () {
            let date_start = Lure.Date();
            let date_end = Lure.Date();
            switch (this.SelectedRangeType) {
                case 'today':
                    date_start = date_start.DayStart;
                    date_end = date_end.DayEnd;
                    break;
                case 'yesterday':
                    date_start.AddDays(-1);
                    date_end.AddDays(-1);
                    date_start = date_start.DayStart;
                    date_end = date_end.DayEnd;
                    break;
                case 'week':
                    date_start = date_start.WeekStart;
                    date_end = date_end.WeekEnd;
                    break;
                case 'month':
                    date_start = date_start.MonthStart;
                    date_end = date_end.MonthEnd;
                    break;
                case 'quarter':
                    let month;
                    let cm = date_start.Date.getMonth();
                    if (cm <= 2)
                        month = 0;
                    else if (cm >= 3 && cm <= 5)
                        month = 3;
                    else if (cm >= 6 && cm <= 9)
                        month = 6;
                    else month = 9;
                    date_start = Lure.Date(new Date(date_start.Date.getFullYear(), month)).MonthStart;
                    date_end = Lure.Date(new Date(date_end.Date.getFullYear(), month + 2)).MonthEnd;
                    break;
                case 'year':
                    date_start = new Date(date_start.Date.getFullYear(), 0, 1, 0, 0, 0);
                    date_end = new Date(date_end.Date.getFullYear(), 11, 31, 23, 59, 59);
                    break;
                case 'range':
                    return this.DatePicker.Date;
            }
            return [date_start, date_end];
        };
        this.ChangeRange = function (type) {
            this.SelectedRangeType = type;
            if (type !== 'range')
                this.RefreshTechData();
        };
        this.ChangeITAHDTab = function(type) {
            // console.log(type)
            let cl = this.Controller.Target.classList;

            switch (type) {
                case 'all':
                    cl.remove('tab-ahd');
                    cl.remove('tab-it');
                    break;
                case 'it':
                    cl.remove('tab-ahd');
                    cl.add('tab-it');
                    break;
                case 'ahd':
                    cl.remove('tab-it');
                    cl.add('tab-ahd');
                    break;
            }
        };

        let arrEquals = (arr1, arr2) => {
            if (!arr1 || !arr2) return false;
            if (arr1.length !== arr2.length) return false;
            arr1.sort();
            arr2.sort();
            for (let i = 0; i < arr1.length; i++)
                /*if (this[i] instanceof Array && arr2[i] instanceof Array) {
                    if (!arr1[i].equals(arr2[i]))
                        return false;
                } else */
                if (arr1[i] !== arr2[i])
                    return false;
            return true;
        };
        let TypeTechEditors = {}, LibTechEditors = {};
        this.TechAction = function (elem, type, techID) {
            // console.log(type, techID);
            switch (type) {
                case 'edit-types':
                    if (!TypeTechEditors[techID]) {
                        TypeTechEditors[techID] = ReqFilter({
                            target: Lure.Select('.target', elem),
                            Data: () => Object.entries(D.HelpRequestTypeDict).map(x => ({ID: x[0], Name: x[1], Check: Lure.User.Cache.TechnicianDict[techID].HelpRequestTypeIDList.indexOf(parseInt(x[0])) !== -1})),
                            Key: 'ID', Value: 'Name',
                            Control: Lure.Select('.control', elem),
                            // AllSelector: false,
                            checked: 'key',
                            UpdateListLive: true,
                            right: 'top-right',
                            onOK: r => {
                                r = r.map(e => parseInt(e));
                                if (arrEquals(r, Lure.User.Cache.TechnicianDict[techID].HelpRequestTypeIDList)) return;
                                api.Admin_TechnicianEdit_HelpRequestTypes(1, techID, r).then(x => Lure.System.Success('Типы заявок этого техника изменены'));
                                console.log(r, Lure.User.Cache.TechnicianDict[techID].HelpRequestTypeIDList);
                            }
                        });
                        TypeTechEditors[techID].Show();
                    } else
                        TypeTechEditors[techID].ResetSelection();
                    break;
                case 'edit-libs':
                    if (!LibTechEditors[techID]) {
                        LibTechEditors[techID] = ReqFilter({
                            target: Lure.Select('.target', elem),
                            Data: () => Lure.User.Cache.LibraryList.map(x => ({ID: x.ID, Name: x.NameVisual || x.Name, Check: Lure.User.Cache.TechnicianDict[techID].LibraryIDList.indexOf(x.ID) !== -1})),
                            Key: 'ID', Value: 'Name',
                            Control: Lure.Select('.control', elem),
                            // AllSelector: false,
                            checked: 'key',
                            UpdateListLive: true,
                            right: 'top-right',
                            onOK: r => {
                                r = r.map(e => parseInt(e));
                                if (arrEquals(r, Lure.User.Cache.TechnicianDict[techID].LibraryIDList)) return;
                                api.Admin_TechnicianEdit_Libraries(1, techID, r).then(x => Lure.System.Success('Библиотеки этого техника изменены'));
                                console.log(r)
                            }
                        });
                        LibTechEditors[techID].Show();
                    } else
                        LibTechEditors[techID].ResetSelection();
                    break;
            }
        }
    },
    AfterBuild: function () {
        let rsp = this.Parent.Select('.req-space');
        rsp.classList.add('flex-col');
        rsp.classList.add('moder-space');
        this.Parent.Select('.target-moderator').style.height = '50vh';
        this.Parent.Select('.need-solution-my-reqs').classList.remove('none');
        this.Parent.Select('.req-search').classList.remove('none');

        let action = false;
        this.AddEventListener('click', '.tech-inst .tech-action .control', e => {
            action = true;
            let elem = e.currentTarget.parentElement;
            this.TechAction(elem, elem.dataset["actiontype"], elem.parentElement.parentElement.parentElement.dataset["techid"]);
        });
        this.AddEventListener('click', '.tech-inst .tech-action .target', e => action = true);
        this.AddEventListener('click', '.tech-inst', e => action ? action = false : this.TechClick(e.currentTarget));

        this.AddEventListener('click', '.column-left .multi-select.selectable .multi-sel-row', e => {
            let old = this.Select('.column-left .multi-select .multi-sel-row.selected');
            if (e.currentTarget !== old) {
                if (old) old.classList.remove('selected');
                let cl = e.currentTarget.classList;
                cl.add('selected');
                this.ChangeITAHDTab(e.currentTarget.dataset['tabtype']);
            }
        });
        this.AddEventListener('click', '.column-right .multi-select.selectable .multi-sel-row', e => {
            let old = this.Select('.column-right .multi-select .multi-sel-row.selected');
            if (e.currentTarget !== old) {
                if (old) old.classList.remove('selected');
                let cl = e.currentTarget.classList;
                cl.add('selected');
                this.ChangeRange(e.currentTarget.dataset['type']);
            }
        });
        this.DatePicker = new Lure.PeriodPicker({
            Target: this.Select('.date-select-range'),
            OnConfirm: () => this.RefreshTechData()
        });
        this.DatePicker.Reset();


        this.StatChart = new Lure.Chart({
            Target: this.Select('.stat-chart'),
            Type: 'Bar',
            Legend: {Visible: false},
            Grid: {Visible: false},
            AxisX: {
                Visible: true,
                Data: Static.HelpRequestStatuss.map(x => x.Name)
            },
            Series: [{
                Name: 'Посещаемость',
                Color: '#5E98A7',
                Data: [1, 2, 3, 4, 5]
            }],
            Tooltip: {
                Format: Tip => /*{console.log(Tip)}*/
                   `<div class="tip">
                        <div class="tip-bg"></div>
                        <div class="tip-value">
                            <div class="l-row">
                                <div class="tip-icon" style="background-color: ${Tip.Episode.Color}"></div>
                                <div class="l-row">${Tip.ValueX}: ${Tip.ValueY}</div>
                            </div>
                        </div>
                    </div>`
            }
        });
        this.StatChart.Load = new Lure.Load({Target: this.Select('.stat-chart')});

        ReqFilter({
            target: `.column-left .lib-selector`,
            Data: Lure.User.Cache.LibraryList.map(x => ({ID: x.ID, Name: x.NameVisual || x.Name})), Key: 'ID', Value: 'Name',
            Control: this.Select(`.column-left .multi-lib .click-contr`),
            onOK: r => this.FilterTechLibs(r)
        });

        this.AddEventListener('click', '.pie-today-stat-wrap .row', (e) => {
            if (e.currentTarget.dataset['type']) {
                let data = e.currentTarget.dataset['type'].split('-');
                data[1] = parseInt(data[1]);
                e.currentTarget.classList.toggle('series-hide');
                if (data[0] === 'st')
                    this.ChartDailyStat.SerieSwitch(0, data[1]);
            }
        });

        /*ReqFilter({
            target: `.column-right .lib-selector`,
            Data: () => {
                let t = this.Controller.Data.find(x => x.ID === this.SelectedTech);
                if (t)
                    return t.LibraryIDList.map(x => ({ID: x, NameVisual: Lure.User.Cache.LibraryListDict[x].NameVisual || 'хз'}));
                else return [];
            },
            Key: 'ID', Value: 'NameVisual',
            UpdateListLive: true,
            Control: this.Select(`.column-right .multi-lib`),
            onOK: r => this.FilterTechLibsSingle(r)
        });*/
    }
});

},{"../../../_common/dictionary":102,"../../../_common/filter-selector/filter-selector.js":104}],65:[function(require,module,exports){
const HistorySubscription = require('../../../_common/history-master/history-subscription');
const InputBox = require("../../../_common/input-box/input-box");

// D.RoleDict[8]  - пользователь
// D.RoleDict[9]  - техник
// D.RoleDict[23] - модератор

module.exports = new Lure.Content({
    Target: '.req-space',
    Type: 'help-desk-sidebar',
    Permission: {
        Roles: [Dictionary.Role.Helpdesk]
    },
    Content: `<div></div>`,
    AfterBuild: function () {
        let URole = 0;
        if (Lure.User.Roles.indexOf(8) !== -1) URole = 8;
        if (Lure.User.Roles.indexOf(9) !== -1) URole = 9;
        if (Lure.User.Roles.indexOf(23) !== -1) URole = 23;
        // console.log(URole);
        let Content = '';
        let Animation = {};
        let target = '.req-space';
        let afterFun = function () {};
        // URole = 23; // Потом убрать

        switch (URole) {
            case 23:
                // это будет для модератора
                HelpDesk.MyReqs.SpecialModerSidebar = new Lure.Content(ModerView());
                target = '.target-moderator';
                Animation = {Show: 'vertical-animation-show-no-anim', Hide: 'vertical-animation-hide-no-anim'};
                // return;
            case 9:
                // это будет для техника
                Content = `<div class="sidebar-container">
    <div class="req-sidebar tech-view l-col">
        <div class="req-sidebar-list field-list flex4">
            <div class="data-card flex2">
                <div class="card-header">КРАТКАЯ ИНФОРМАЦИЯ</div>
                <div class="full-card-data">{{Name}}</div>
            </div>
            <div class="data-card flex3">
                <div class="card-header">ПОДРОБНОЕ ОПИСАНИЕ</div>
                <div class="full-card-data"><div>{{Description}}</div><div class="status-history"><div class="his-head">История статусов</div><div class="his-data"></div></div></div>
            </div>
            <div class="data-card flex4">
                <div class="card-header">ФАЙЛЫ</div>
                <div class="full-card-data file-card">
                    {{#each FilesList}}
                        <div class="uploading-file">
                            <div class="file-icon"></div>
                            <div class="file-params">
                                <div class="name-type"><span class="filename" title="{{NameFull}}">{{NameSub}}</span>.<span class="filetype">{{FileType}}</span></div>
                                <div class="rename-remove"><span class="download" data-fileid="{{ID}}">Скачать</span></div>
                            </div>
                        </div>
                    {{#endeach}}
                </div>
            </div>
        </div>
        <div class="chat-files-block flex2">
            <div class="cf-tab chat-tab active">ЧАТ С ПОЛЬЗОВАТЕЛЕМ</div>
            <div class="req-chat">
                <div class="messages-box"></div>
                <div class="input-area">
                    <input class="mess-input" placeholder="Введите сообщение...">
                    <input class="none mess-files-attach" type="file" multiple name="message-files" id="mess-files-attach">
                    <label class="files-attach-label" title="Прикрепить файлы" for="mess-files-attach">&#128206;</label>
                    <button class="send-mess l-button"  title="Отправить">>></button>
                </div>
            </div>
        </div>
        <div class="req-sidebar-control flex1">
            <div class="user-info flex3">
                <div class="card-header">ИНФОРМАЦИЯ О ПОЛЬЗОВАТЕЛЕ</div>
                <div class="user-name strong">{{User.Name}}</div>
                <div class="user-position">{{User.Position}}</div>
                <div class="user-additional">Телефон: <span>{{User.Phone}}</span></div>
                <div class="user-additional">Email: <span>{{User.Email}}</span></div>
                <div class="user-additional">&nbsp;</div>
                <div class="user-additional">Подразделение: <span>{{LibraryID}}</span></div>
                <div class="user-additional">Адрес: <span>{{LibraryAddress}}</span></div>
            </div>
            <div class="ticket-execution flex4 flex-col">
                <div class="card-header">ИСПОЛНЕНИЕ</div>
                <div class="params">
                    <div class="user-additional">Приоритет: <span>{{PriorityID}}</span></div>
                    <div class="user-additional">Дата поступления: <span>{{DateCreated}}</span></div>
                    <div class="user-additional">Срок исполнения: <span>{{ExecutionDate}}</span></div>
                </div>
                <div class="buttons flex1">
                    <div>{{StatusIDButton}}</div>
                    <div>{{DisabledOnAccept}}</div>
                    <div><button class="l-button change-exec-time">ИЗМЕНИТЬ СРОК ИСПОЛНЕНИЯ</button><div class="none date-to-move"></div></div>
                    <div><button class="l-button close-ticket">ЗАКРЫТЬ (ВЫПОЛНЕНО)</button></div>
                    {{SpreadButton}}
                </div>
                <div class="buttons">
                    <div><button class="button button2 btn-cancel">ЗАКРЫТЬ</button></div>
                </div>
            </div>
        </div>
    </div>
</div>`;
                if (URole !== 23)
                    Animation = {Show: 'vertical-animation-show', Hide: 'vertical-animation-hide'};
                afterFun = function () {
                    let p = this.Proto;
                    let self = this;
                    this.AddEventListener('click', '.l-button.accept-to-work',
                        e => api.HelpDesk_RequestApply(this.currReqID)
                            .then(() => {
                                this.Parent.ChangeStatus(this.currReqID, 1);
                                Lure.System.Success('Заявка принята в работу');
                            }));
                    let onChangeStatus = (elem, s) => {
                        let caption = 'Изм. статус';
                        if (s === 2) caption += ': Закрыть';
                        if (s === 3) caption += ': Отклонить';
                        InputBox.Run(elem, '',
                            comment => {
                                Lure.Button.Lock(elem);
                                if (s === 2)
                                    api.HelpDesk_RequestFinish(this.currReqID, comment, {
                                        Then: r => {
                                            if (r === -1)
                                                Lure.System.ShowError('Что-то пошло не так');
                                            else this.Parent.ChangeStatus(this.currReqID, s);

                                            Lure.Button.Release(elem);
                                            if (this.Parent.SpecialModerSidebar)
                                                this.Parent.SpecialModerSidebar.Show();
                                            else this.Hide();
                                            Lure.System.Success('Заявка закрыта');
                                        }
                                    });
                                if (s === 3)
                                    api.HelpDesk_RequestReject(this.currReqID, comment, {
                                        Then: r => {
                                            if (r === -2) Lure.System.ShowError('Заявка уже принята в работу, ее нельзя отклонить');
                                            else if (r === -1) Lure.System.ShowError('Что-то пошло не так');
                                            else this.Parent.ChangeStatus(this.currReqID, s);
                                            Lure.System.Success('Заявка отклонена');
                                        }
                                    });
                            }, {
                                Caption: caption,
                                TextArea: true
                            });
                    };
                    this.AddEventListener('click', '.l-button.reject', () => onChangeStatus(this.Select('.l-button.reject'), 3));
                    let b2 = this.Select('.l-button.close-ticket');
                    b2.onclick = () => onChangeStatus(b2, 2);

                    this.Select('.l-button.change-exec-time').onclick = () => {this.ExecTimePicker.Date = Lure.Date(p.Data.ExecutionDate || new Date); this.ExecTimePicker.Show()};
                    this.ExecTimePicker = new Lure.PeriodPicker({
                        Target: this.Select('.date-to-move'),
                        NoRange: true,
                        DateTarget: Lure.Date(),
                        AutoConfirm: true,
                        OnConfirm: function () {
                            this.Date.setHours(14);
                            api.HelpDesk_RequestEdit_ExecutionDate(p.Data.ReqID, this.Date).then(r => {
                                self.Parent.ChangeRowData(self.RowID, 'ExecutionDate', Lure.Date(this.Date));
                                p.SetProperty('ExecutionDate', Lure.Date(this.Date).DateCs);
                                Lure.System.Success('Срок исполнения изменен');
                            });
                        }
                    });

                    let rsp = this.Parent.Select('.req-space');
                    rsp.classList.add('flex-col');
                    if (URole !== 23)
                        rsp.classList.add('tech-space');

                    this.AddEventListener('click', '.status-history', e => {
                        // e.currentTarget.innerHTML = 'Коммент';
                        api.HelpDesk_RequestStatusChangesGet(p.Data.ReqID, {
                            Then: r => this.HisData.innerHTML = r.length > 0 ? r.map(x => `<div>${Lure.Date(x.DateCreated).Format('DD.MM.YYYY')} -> ${D.HelpRequestStatusDict[x.StatusID]}: ${x.Comment}</div>`).join('') : '<div>Нет изменений</div>'
                        });
                    });
                    this.AddEventListener('click', '.spread-ticket', e => this.SpreadTicketToTechs());
                };
                break;
            case 8:
                // это будет для обычного пользователя
                Content = `<div style="display: flex">
        <div class="req-sidebar l-col">
            <div class="head">
                <h2 class="h2">Инцидент №{{ReqID}}</h2>
            </div>
            <div class="req-sidebar-list field-list flex1">
                <div class="data-card">
                    <div class="card-header">КРАТКАЯ ИНФОРМАЦИЯ</div>
                    <div class="card-data-row">
                        <div class="data-name">Тема</div>
                        <div class="data-value">{{Name}}</div>
                    </div>
                    <div class="card-data-row">
                        <div class="data-name">Дата</div>
                        <div class="data-value">{{DateCreated}}</div>
                    </div>
                    <div class="card-data-row">
                        <div class="data-name">Приоритет</div>
                        <div class="data-value">{{PriorityID}}</div>
                    </div>
                </div>
                <div class="data-card">
                    <div class="card-header">ПОДРОБНОЕ ОПИСАНИЕ</div>
                    <div class="full-card-data">{{Description}}</div>
                </div>
                <div class="data-card">
                    <div class="card-header">ИСПОЛНЕНИЕ</div>
                    <div class="card-data-row">
                        <div class="data-name">Статус</div>
                        <div class="data-value">{{StatusID}}</div>
                    </div>
                    <div class="card-data-row">
                        <div class="data-name">Срок исполнения</div>
                        <div class="data-value">{{ExecutionDate}}</div>
                    </div>
                    <div class="card-data-row">
                        <div class="data-name">Исполнитель</div>
                        <div class="data-value">{{TechnicianID}}</div>
                    </div>
                </div>
            </div>
            
            <div class="chat-files-block">
                <div class="tabs">
                    <div class="cf-tab chat-tab active">ЧАТ С ИСПОЛНИТЕЛЕМ</div>
                    <div class="cf-tab files-tab">ФАЙЛЫ</div>
                </div>
                <div class="req-chat">
                    <div class="messages-box"></div>
                    <div class="input-area">
                        <input class="mess-input" placeholder="Введите сообщение...">
                        <input class="none mess-files-attach" type="file" multiple name="message-files" id="mess-files-attach">
                        <label class="files-attach-label" title="Прикрепить файлы" for="mess-files-attach">&#128206;</label>
                        <button class="send-mess l-button"  title="Отправить">>></button>
                    </div>
                </div>
                <div class="req-files none">
                    {{#each FilesList}}
                        <div class="uploading-file">
                            <div class="file-icon"></div>
                            <div class="file-params">
                                <div class="name-type"><span class="filename" title="{{NameFull}}">{{NameSub}}</span>.<span class="filetype">{{FileType}}</span></div>
                                <div class="rename-remove"><span class="download" data-fileid="{{ID}}">Скачать</span></div>
                            </div>
                        </div>
                    {{#endeach}}
                </div>
            </div>
            <div class="foot">
                <button class="button button2 btn-cancel">ЗАКРЫТЬ</button>
                <button class="button btn-not-complete {{StatusIDClass}}">ЗАЯВКА НЕ ВЫПОЛНЕНА</button>
            </div>
        </div>
    </div>`;
                Animation = {Show: 'animation-show', Hide: 'animation-hide'};
                afterFun = function () {
                    let rsp = this.Parent.Select('.req-space');
                    rsp.classList.add('user-space');

                    let NotComplete = (elem) => {
                        InputBox.Run(elem, '',
                            x => {
                                console.log(x);
                                api.HelpDesk_RequestReturn(this.currReqID, x)
                                    .then(r => {
                                        if (r === -2) {Lure.System.ShowError('Заявка еще не закрыта'); return;}
                                        if (r === -1) {Lure.System.ShowError('Что-то пошло не так'); return;}
                                        this.Parent.ChangeStatus(this.currReqID, 4);
                                        Lure.System.Success('Заявка возвращена');
                                    });
                            }, {Caption: 'Причина возвращения', TextArea: true});
                    };
                    let b = this.Select('.btn-not-complete');
                    b.onclick = e => NotComplete(b);
                };
                break;
        }
        if (Content.length === 0) return;
        HelpDesk.MyReqs.Sidebar = new Lure.Content({
            Target: target,
            Type: 'help-desk-sidebar',
            Parent: HelpDesk.MyReqs,
            Content: Content,
            Animation: Animation,
            PropFormat: {
                DateCreated: x => Lure.Date(x).Format('DD.MM.YYYY'),
                ExecutionDate: (x, p) => {
                    let res;
                    if (!x)
                        switch (p.PriorityID) {
                            case D.HelpRequestPriority.Low:
                                res = Lure.Date(p.DateCreated).AddHours(8); // 8 часов
                                break;
                            case D.HelpRequestPriority.Mid:
                                res = Lure.Date(p.DateCreated).AddDays(1); // 1 день
                                break;
                            case D.HelpRequestPriority.High:
                                res = Lure.Date(p.DateCreated).AddDays(3); // 3 дня
                                break;
                            default /*D.HelpRequestPriorityDict.ExactDate*/:
                                return 'Не установлена';
                        }
                    else res = Lure.Date(x);
                    return res.Format('DD.MM.YYYY HH:mm');
                },
                PriorityID: x => D.HelpRequestPriorityDict[x],
                StatusID: x => ({'0': 'Новая', '1': 'В работе', '2': 'Закрыта', '3': 'Отклонена', '4': 'Возвращена'}[x] || '???'),
                TechnicianID: x => (Lure.User.Cache.TechnicianDict[x] || {Name: 'Не назначен'}).Name,
                LibraryID: id => (Lure.User.Cache.LibraryListDict[id] || {Name: ''}).Name,
                LibraryAddress: (id, p) => (Lure.User.Cache.LibraryListDict[p.LibraryID] || {Address: ''}).Address,
                StatusIDClass: (x, p) => p.StatusID === 2 ? '' : 'none',
                StatusIDButton: (x, p) => {
                    if (p.StatusID === 0)
                        return '<button class="l-button accept-to-work" style="border: 1px solid #2e83b8">ПРИНЯТЬ В РАБОТУ</button>';
                    else
                        return '<button class="l-button accepted" disabled>ПРИНЯТО В РАБОТУ</button>';
                },
                DisabledOnAccept: (x, p) => {
                    if (p.StatusID === 0)
                        return '<button class="l-button reject" style="border: 1px solid #B84741">ОТКЛОНИТЬ</button>';
                    else
                        return '<button class="l-button reject-no" disabled>ОТКЛОНИТЬ</button>';
                },
                SpreadButton: (x, p) => URole === 23 ? '<div><button class="l-button spread-ticket">БОЛЬШЕ ТЕХНИКОВ</button><div class="more-technics-select"></div></div>' : ''
            },
            Proto: {
                ReqID: 0,
                User: {}
            },
            GetSet: {
                get currReqID() {
                    return this.Proto.Data.ReqID
                }
            },
            Hide: function () {
                this.Subscription.Unsubscribe();
                this.Parent.ResetSelection();
            },
            Show: function (params) {
                // "param=123456" - из командной строки после последней / [main.html#HelpDesk/MyReqs/Sidebar/param=123]
                // console.log(params);
                this.Subscription.Subscribe();
                /* if (!params && params !== '') return;
                if (params === '')
                    this.Parent.Refresh();
                else {
                    let p = params.split('=');
                    let n;
                    if (p[0] === 'ticket' && (n = parseInt(p[1])))
                        this.Parent.RefreshData(n);
                    else this.Parent.RefreshData();
                }*/
            },
            Props: function () {
                this.MessageController = new Lure.Controller.Templator({
                    Target: '.req-chat .messages-box',
                    Data: [],
                    ListElement: `
                <div class="message-inst">
                    <div class="user-photo">
                        <img src="https://i.ebayimg.com/images/g/6F4AAOSwr6pZ8wJj/s-l300.jpg">
                    </div>
                    <div class="message-data">
                        <div class="name-time">
                            <span class="user-name">{{LoginID}}</span>
                            <span class="time"">{{Date}}</span>
                        </div>
                        <div class="text">{{Message}}</div>
                    </div>
                </div>`,
                    EmptyMessage: `<div>Сообщений еще нет...</div>`,
                    AfterBuild: function () {
                        this.Content.scrollTo(0, this.Content.scrollHeight);
                    }
                });
                this.HisData = this.Select('.status-history .his-data');
            },
            Methods: function () {
                let rf;
                this.ShowRequest = function (req, rowID) {
                    if (rf) rf.Hide();
                    this.RowID = rowID;
                    this.Proto.SetProperty('ReqID', req.ID);
                    // this.MessageController.Refresh([]);
                    if (req.Files)
                        req.FilesList = req.Files.map(f => {
                            let name = f.Name.split('.');
                            let filetype = name.pop().toLowerCase();
                            name = name.join('.');
                            return {
                                NameFull: f.Name,
                                Name: name,
                                FileType: filetype,
                                NameSub: name.length > (URole === 9 ? 15 : 30) ? name.substr(0, (URole === 9 ? 15 : 30)) + '...' : name,
                                ID: f.ID
                            };
                        });
                    Object.assign(this.Proto.Data, req);
                    this.Proto.Refresh();
                    this.RefreshMessages();
                    // this.StartCheckingMessages();
                    this.Parent.isRowSelected = true;
                    if (URole !== 8)
                        this.HisData.innerText = '';
                    if (!req.User && URole !== 8)
                        this.Parent.GetUserInfo(this.Proto.Data.ReqID, req.LoginID).then(u => this.Proto.SetProperty('User', u));
                    this.Show();
                };
                this.ResetData = function () {
                    this.Hide();
                };
                this.SendMessage = function (text, files = []) {
                    text = text.trim();
                    if (text === '') return;
                    return api.HelpDesk_RequestMessageAdd(this.Proto.Data.ReqID, text, files)
                        .then(r => this.RefreshMessages(this.LastMesID));
                };
                this.RefreshMessages = function (lastID = -1) {
                    api.HelpDesk_RequestMessageGet(this.Proto.Data.ReqID, lastID)
                        .then(async mess => {
                            if (mess.length === 0) {
                                if (lastID === -1)
                                    this.MessageController.Refresh([]);
                                return;
                            }
                            this.LastMesID = mess[mess.length - 1].ID;
                            for (let m of mess) {
                                m.Date = Lure.Date(m.DateCreated).Format('DD.MM.YYYY в HH:mm');
                                if (m.LoginID === Lure.User.ID)
                                    m.LoginID = Lure.User.Name;
                                else m.LoginID = (await this.Parent.GetUserInfo(this.Proto.Data.ReqID, m.LoginID)).Name;
                                if (m.MessageFiles !== '') try {
                                    let FilesArr = JSON.parse(m.Message).Files;
                                    let FileIDs = m.MessageFiles.split(',');
                                    let res = '';
                                    for (let i = 0; i < FilesArr.length; i++)
                                        res += `<div class="download" data-fileid="${FileIDs[i]}">Файл ${FilesArr[i]} (скачать)</div>`;
                                    m.Message = res;
                                } catch (e) {}
                            }
                            if (lastID === -1)
                                this.MessageController.Refresh(mess);
                            else {
                                for (let m of mess)
                                    this.MessageController.Add(m);
                                this.MessageController.Content.scrollTo(0, this.MessageController.Content.scrollHeight);
                            }
                        });
                };
                this.loadFile = function (reqID, fileID) {
                    api.HelpDesk_RequestFileGet(reqID, fileID, {
                        Then: r => Lure.SaveBlob(new Blob([new Uint8Array(r.FileBytes)]), r.Name),
                        Error: console.error,
                        Finally: () => {}
                    })
                };
                this.NewMessages = function (arr) {
                    for (let m of arr) {
                        if (m.MessageText1 === '' && m.MessageText2 === '') continue;
                        this.MessageController.Add(m);
                        this.MessageController.Refresh(this.MessageController.Data.length - 1);
                    }
                    this.MessageController.Content.scrollTo(0, this.MessageController.Content.scrollHeight);
                };
                this.SpreadTicketToTechs = function() {
                    if (!rf) {
                        rf = ReqFilter({
                            target: '.more-technics-select',
                            Data: Object.entries(Lure.User.Cache.TechnicianDict).map(x => x[1]),
                            Key: 'ID',
                            Value: 'Name',
                            Control: this.Select('.spread-ticket'),
                            AllSelector: false,
                            checked: '',
                            onOK: async techs => {
                                if (techs.length < 1) return;
                                let p = this.Proto.Data;
                                let res = [];
                                for (let tech of techs)
                                    res.push(await api.HelpDesk_RequestAdd(p.LibraryID, p.HelpRequestTypeID, p.Name, p.Description, p.PriorityID, p.ExecutionDate));
                                console.log(res);
                                for (let i = 0; i < res.length; i++)
                                    if (res[i] !== -1)
                                        await api.HelpDesk_RequestEdit_Technician(res[i]/*ID*/, techs[i]);
                                this.Parent.RefreshData();
                                Lure.System.Success('Заявка продублирована');
                            }
                        });
                        rf.Show();
                    } else
                        rf.ResetSelection();
                };
            },
            AfterBuild: function () {
                this.Select('.btn-cancel').onclick = e => {
                    if (this.Parent.SpecialModerSidebar)
                        this.Parent.SpecialModerSidebar.Show();
                    else
                        this.Hide();
                    /*if (!this.NeedRefresh)
                        this.Hide();
                    else {
                        this.NeedRefresh = false;
                        this.Parent.Refresh();
                    }*/
                };
                let SM = this.SendMessage;
                let inp = this.Select('.mess-input');
                inp.onkeyup = function (e) {
                    if (e.which === 13) {
                        SM(this.value);
                        this.value = '';
                    }
                };
                this.Select('button.send-mess').onclick = e => {
                    SM(inp.value);
                    inp.value = '';
                    inp.focus();
                };
                let chatTab = this.Select('.chat-files-block .req-chat');
                let filesTab = this.Select('.chat-files-block .req-files');
                this.SelectedCFTab = this.Select('.chat-files-block .cf-tab.active');
                this.AddEventListener('click', '.chat-files-block .cf-tab', e => {
                    let cl = e.currentTarget.classList;
                    if (this.SelectedCFTab === e.currentTarget) return;
                    this.SelectedCFTab.classList.remove('active');
                    this.SelectedCFTab = e.currentTarget;
                    cl.add('active');
                    chatTab.classList.toggle('none');
                    filesTab.classList.toggle('none');
                });
                this.AddEventListener('click', '.download', e => this.loadFile(this.Proto.Data.ReqID, e.currentTarget.dataset['fileid']));
                this.Subscription = new HistorySubscription({
                    OnSubscribe: async HistList => {
                        for (let i = 0; i < HistList.length; i++) {
                            let name = (await this.Parent.GetUserInfo(this.Proto.Data.ReqID, HistList[i].LoginID)).Name;
                            HistList[i] = {
                                Date: Lure.Date(HistList[i].DateCreated).Format('DD.MM.YYYY в HH:mm'),
                                LoginID: name, //// птоалдподаопвалдпва
                                Message: HistList[i].MessageText1,
                                MessageFiles: HistList[i].MessageText2
                            };
                        }
                        this.NewMessages(HistList)
                    },
                    Condition: h => h.TypeID === D.SubscribeType.SupportMessageAdd && h.LoginID !== Lure.User.ID && h.ItemID === this.currReqID
                });
                let mFiles = this.Select('#mess-files-attach');
                mFiles.onchange = e => {
                    console.log(mFiles.files);
                    let files = Array.prototype.map.call(mFiles.files, x => ({Name: x.name, File: x}));
                    HelpDesk.NewReq.ReqSender.RequestSendFiles(this.currReqID, files)
                    // this.Parent.Parent.NewReq.ReqSender
                        .then(r => {
                            console.log(r);
                            return this.SendMessage(JSON.stringify({Files: files.map(x => x.Name)}), r);
                        })
                        .then(r => mFiles.value = '');
                };
                afterFun.call(this);
            }
        });
    }
});

let ModerView = require('./moder-sidebar.js');
let ReqFilter = require('../../../_common/filter-selector/filter-selector.js');

},{"../../../_common/filter-selector/filter-selector.js":104,"../../../_common/history-master/history-subscription":109,"../../../_common/input-box/input-box":110,"./moder-sidebar.js":64}],66:[function(require,module,exports){
HelpDesk.NewReq = new Lure.Content({
    Target: '.help-desk-new-request',
    Visible: true,
    Type: 'help-desk-content',
    Control:{
        Target: '#nav-help-desk-new-req'
    },
    Content:
        `<div class="new-requests l-rel">
            <div class="diary-bread l-row">
                <div class="li">
                    Подразделение: 
                    <select class="l-select select help-d lib-list"></select>
                </div>
            </div>
            <div class="widgets">
                <div  class="widgets l-t-content">
                   <div  class="widget diary-widget register-widget  l-t-line" data-line="0">
                      <div  class="widget-head l-row">
                         <div  class="widget-title l-row">
                            <div  class="widget-caption">ОРГАНИЗАЦИЯ РАБОЧЕГО МЕСТА</div>
                         </div>
                      </div>
                      <div  data-problemtype="0" class="widget-content">
                         <div  class="widget-text">
                            <div  class="problem-icon workplace-service"></div>
                            <div  class="problems">
                               <div  class="problem-list-head">Типовые проблемы:</div>
                               <ul >
                                  <li class="new-req-li">Восстановление паролей</li>
                                  <li class="new-req-li">Установка/перемещение компьютеров</li>
                                  <li class="new-req-li">Учетные записи для принятых работников</li>
                                  <li class="new-req-li">Удаление учетных записей уволенных работников</li>
                                  <li class="new-req-li">Приостановка действия учетной записи работника</li>
                               </ul>
                            </div>
                         </div>
                         <div  class="button-plus-wrapper">
                            <div  class="button-plus-cutter right">
                               <div  class="button-plus btn-switcher new-req"></div>
                            </div>
                         </div>
                      </div>
                   </div>
                   <div  class="widget diary-widget register-widget  l-t-line" data-line="1">
                      <div  class="widget-head l-row">
                         <div  class="widget-title l-row">
                            <div  class="widget-caption">ОБСЛУЖИВАНИЕ КОМПЬЮТЕРОВ</div>
                         </div>
                      </div>
                      <div  data-problemtype="1" class="widget-content">
                         <div  class="widget-text">
                            <div  class="problem-icon pc-service"></div>
                            <div  class="problems">
                               <div  class="problem-list-head">Типовые проблемы:</div>
                               <ul >
                                  <li class="new-req-li">Не включается компьютер</li>
                                  <li class="new-req-li">Нет изображения на мониторе</li>
                                  <li class="new-req-li">Замена клавиатуры/мыши</li>
                                  <li class="new-req-li">Очистка компьютера от пыли</li>
                                  <li class="new-req-li">Не работает звук</li>
                               </ul>
                            </div>
                         </div>
                         <div  class="button-plus-wrapper">
                            <div  class="button-plus-cutter right">
                               <div  class="button-plus btn-switcher new-req"></div>
                            </div>
                         </div>
                      </div>
                   </div>
                   <div  class="widget diary-widget register-widget  l-t-line" data-line="2">
                      <div  class="widget-head l-row">
                         <div  class="widget-title l-row">
                            <div  class="widget-caption">ОБСЛУЖИВАНИЕ ОРГТЕХНИКИ</div>
                         </div>
                      </div>
                      <div  data-problemtype="2" class="widget-content">
                         <div  class="widget-text">
                            <div  class="problem-icon printer-service"></div>
                            <div  class="problems">
                               <div  class="problem-list-head">Типовые проблемы:</div>
                               <ul >
                                  <li class="new-req-li">Не работает принтер</li>
                                  <li class="new-req-li">Не работает сканер</li>
                                  <li class="new-req-li">Настройка печати/сканирования</li>
                                  <li class="new-req-li">Замена картриджа</li>
                                  <li class="new-req-li">Очистка от пыли устройства печати</li>
                               </ul>
                            </div>
                         </div>
                         <div  class="button-plus-wrapper">
                            <div  class="button-plus-cutter right">
                               <div  class="button-plus btn-switcher new-req"></div>
                            </div>
                         </div>
                      </div>
                   </div>
                   <div  class="widget diary-widget register-widget  l-t-line" data-line="3">
                      <div  class="widget-head l-row">
                         <div  class="widget-title l-row">
                            <div  class="widget-caption">ОБСЛУЖИВАНИЕ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ</div>
                         </div>
                      </div>
                      <div  data-problemtype="3" class="widget-content">
                         <div  class="widget-text">
                            <div  class="problem-icon soft-service"></div>
                            <div  class="problems">
                               <div  class="problem-list-head">Типовые проблемы:</div>
                               <ul >
                                  <li class="new-req-li">Установка ПО</li>
                                  <li class="new-req-li">Удаление «лишнего» ПО</li>
                                  <li class="new-req-li">Настройка антивирусной защиты</li>
                                  <li class="new-req-li">Не хватает места на жестком диске</li>
                                  <li class="new-req-li">Настройка сетевой папки</li>
                               </ul>
                            </div>
                         </div>
                         <div  class="button-plus-wrapper">
                            <div  class="button-plus-cutter right">
                               <div  class="button-plus btn-switcher new-req"></div>
                            </div>
                         </div>
                      </div>
                   </div>
                   <div  class="widget diary-widget register-widget  l-t-line" data-line="4">
                      <div  class="widget-head l-row">
                         <div  class="widget-title l-row">
                            <div  class="widget-caption">НАБЛЮДЕНИЕ, СЧЕТЧИКИ, СИГНАЛИЗАЦИЯ</div>
                         </div>
                      </div>
                      <div  data-problemtype="4" class="widget-content">
                         <div  class="widget-text">
                            <div  class="problem-icon counters-service"></div>
                            <div  class="problems">
                               <div  class="problem-list-head">Типовые проблемы:</div>
                               <ul >
                                  <li class="new-req-li">Не работает видеонаблюдение</li>
                                  <li class="new-req-li">Не работает «тревожная кнопка»</li>
                                  <li class="new-req-li">Не работает сигнализация</li>
                                  <li class="new-req-li">Не работает система подсчета посетителей</li>
                                  <li class="new-req-li">Подсчет посетителей ведется некорректно</li>
                               </ul>
                            </div>
                         </div>
                         <div  class="button-plus-wrapper">
                            <div  class="button-plus-cutter right">
                               <div  class="button-plus btn-switcher new-req"></div>
                            </div>
                         </div>
                      </div>
                   </div>
                   <div  class="widget diary-widget register-widget  l-t-line" data-line="5">
                      <div  class="widget-head l-row">
                         <div  class="widget-title l-row">
                            <div  class="widget-caption">ТЕХНИЧЕСКОЕ СОПРОВОЖДЕНИЕ МЕРОПРИЯТИЙ</div>
                         </div>
                      </div>
                      <div  data-problemtype="5" class="widget-content">
                         <div  class="widget-text">
                            <div  class="problem-icon event-service"></div>
                            <div  class="problems">
                               <div  class="problem-list-head">Типовые проблемы:</div>
                               <ul >
                                  <li class="new-req-li">Подготовка/настройка оборудования</li>
                                  <li class="new-req-li">Сопровождение мероприятия</li>
                                  <li class="new-req-li">Подготовка выездного комплекта оборудования</li>
                               </ul>
                            </div>
                         </div>
                         <div  class="button-plus-wrapper">
                            <div  class="button-plus-cutter right">
                               <div  class="button-plus btn-switcher new-req"></div>
                            </div>
                         </div>
                      </div>
                   </div>
                   <div  class="widget diary-widget register-widget  l-t-line" data-line="6">
                      <div  class="widget-head l-row">
                         <div  class="widget-title l-row">
                            <div  class="widget-caption">РЕМОНТ</div>
                         </div>
                      </div>
                      <div  data-problemtype="6" class="widget-content">
                         <div  class="widget-text">
                            <div  class="problem-icon repair-service"></div>
                            <div  class="problems">
                               <div  class="problem-list-head">Типовые проблемы:</div>
                               <ul >
                                  <li class="new-req-li">Течет смеситель/кран/сантехника</li>
                                  <li class="new-req-li">Течет подводка/труба/батарея</li>
                                  <li class="new-req-li">Засор в раковине/канализации</li>
                                  <li class="new-req-li">Не работает розетка</li>
                                  <li class="new-req-li">Не работает телефон</li>
                                  <li class="new-req-li">Ремонт дверей</li>
                                  <li class="new-req-li">Не работает вывеска</li>
                               </ul>
                            </div>
                         </div>
                         <div  class="button-plus-wrapper">
                            <div  class="button-plus-cutter right">
                               <div  class="button-plus btn-switcher new-req"></div>
                            </div>
                         </div>
                      </div>
                   </div>
                   <div  class="widget diary-widget register-widget  l-t-line" data-line="7">
                      <div  class="widget-head l-row">
                         <div  class="widget-title l-row">
                            <div  class="widget-caption">ЗАМЕНА / УСТАНОВКА</div>
                         </div>
                      </div>
                      <div  data-problemtype="7" class="widget-content">
                         <div  class="widget-text">
                            <div  class="problem-icon replace-setup-service"></div>
                            <div  class="problems">
                               <div  class="problem-list-head">Типовые проблемы:</div>
                               <ul >
                                  <li class="new-req-li">Замена ламп</li>
                                  <li class="new-req-li">Замена светильника</li>
                                  <li class="new-req-li">Установка унитаза</li>
                                  <li class="new-req-li">Установка смесителя/крана</li>
                                  <li class="new-req-li">Установка розетки</li>
                                  <li class="new-req-li">Замена автоматического выключателя</li>
                               </ul>
                            </div>
                         </div>
                         <div  class="button-plus-wrapper">
                            <div  class="button-plus-cutter right">
                               <div  class="button-plus btn-switcher new-req"></div>
                            </div>
                         </div>
                      </div>
                   </div>
                   <div style="display: flex;">
                       <div  class="widget diary-widget register-widget narrow l-t-line" data-line="8">
                          <div  class="widget-head l-row">
                             <div  class="widget-title l-row">
                                <div  class="widget-caption">ДРУГОЕ</div>
                             </div>
                          </div>
                          <div  data-problemtype="8" class="widget-content">
                             <div  class="widget-text">
                                <div  class="problem-icon "></div>
                                <div  class="problems">
                                   <div  class="other-depart">
                                      <div  class="depart-name">ИТ</div>
                                      <div  class="depart">отдел</div>
                                   </div>
                                </div>
                             </div>
                             <div  class="button-plus-wrapper">
                                <div  class="button-plus-cutter right">
                                   <div  class="button-plus btn-switcher new-req"></div>
                                </div>
                             </div>
                          </div>
                       </div>
                       <div  class="widget diary-widget register-widget narrow l-t-line" data-line="9">
                          <div  class="widget-head l-row">
                             <div  class="widget-title l-row">
                                <div  class="widget-caption">ДРУГОЕ</div>
                             </div>
                          </div>
                          <div  data-problemtype="9" class="widget-content">
                             <div  class="widget-text">
                                <div  class="problem-icon "></div>
                                <div  class="problems">
                                   <div  class="other-depart">
                                      <div  class="depart-name">АХД</div>
                                      <div  class="depart">отдел</div>
                                   </div>
                                </div>
                             </div>
                             <div  class="button-plus-wrapper">
                                <div  class="button-plus-cutter right">
                                   <div  class="button-plus btn-switcher new-req"></div>
                                </div>
                             </div>
                          </div>
                       </div>
                   </div>
                </div>
                <div class="pseudo-div"></div>
            </div>
            <div class="new-req-dialog-wrap"></div>
        </div>`,
    Controller: {
        Target: '.new-requests .widgets .pseudo-div',
        Data: [
            {
                Name: 'ОРГАНИЗАЦИЯ РАБОЧЕГО МЕСТА',
                Problem_type: 0,
                Icon: 'workplace-service',
                Problems: ['Восстановление паролей', 'Установка/перемещение компьютеров', 'Учетные записи для принятых работников', 'Удаление учетных записей уволенных работников', 'Приостановка действия учетной записи работника']
            }, {
                Name: 'ОБСЛУЖИВАНИЕ КОМПЬЮТЕРОВ',
                Problem_type: 1,
                Icon: 'pc-service',
                Problems: ['Не включается компьютер', 'Нет изображения на мониторе', 'Замена клавиатуры/мыши', 'Очистка компьютера от пыли', 'Не работает звук']
            }, {
                Name: 'ОБСЛУЖИВАНИЕ ОРГТЕХНИКИ',
                Problem_type: 2,
                Icon: 'printer-service',
                Problems: ['Не работает принтер', 'Не работает сканер', 'Настройка печати/сканирования', 'Замена картриджа', 'Очистка от пыли устройства печати']
            }, {
                Name: 'ОБСЛУЖИВАНИЕ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ',
                Problem_type: 3,
                Icon: 'soft-service',
                Problems: ['Установка ПО', 'Удаление «лишнего» ПО', 'Настройка антивирусной защиты', 'Не хватает места на жестком диске', 'Настройка сетевой папки']
            }, {
                Name: 'НАБЛЮДЕНИЕ, СЧЕТЧИКИ, СИГНАЛИЗАЦИЯ',
                Problem_type: 4,
                Icon: 'counters-service',
                Problems: ['Не работает видеонаблюдение', 'Не работает «тревожная кнопка»', 'Не работает сигнализация', 'Не работает система подсчета посетителей', 'Подсчет посетителей ведется некорректно']
            }, {
                Name: 'ТЕХНИЧЕСКОЕ СОПРОВОЖДЕНИЕ МЕРОПРИЯТИЙ',
                Problem_type: 5,
                Icon: 'event-service',
                Problems: ['Подготовка/настройка оборудования', 'Сопровождение мероприятия', 'Подготовка выездного комплекта оборудования']
            }, {
                Name: 'РЕМОНТ',
                Problem_type: 6,
                Icon: 'repair-service',
                Problems: ['Течет смеситель/кран/сантехника', 'Течет подводка/труба/батарея', 'Засор в раковине/канализации', 'Не работает розетка', 'Не работает телефон', 'Ремонт дверей', 'Не работает вывеска']
            }, {
                Name: 'ЗАМЕНА / УСТАНОВКА',
                Problem_type: 7,
                Icon: 'replace-setup-service',
                Problems: ['Замена ламп', 'Замена светильника', 'Установка унитаза', 'Установка смесителя/крана', 'Установка розетки', 'Замена автоматического выключателя']
            },/*{
                Name: 'ИНОПЛАНЕТНОЕ ВТОРЖЕНИЕ',
                Problem_type: 6,
                Problems: ['Летающие тарелки']
            }, {
                Name: 'АПОКАЛИПСИС',
                Problem_type: 7,
                Problems: ['Извержение вулкана', 'Метеоритный дождь', 'Всемирный потоп']
            },*/ {
                Name: 'ДРУГОЕ',
                Problem_type: 8,
                Icon: '',
                Type: 'narrow',
                Text: 'ИТ'
            }, {
                Name: 'ДРУГОЕ',
                Problem_type: 9,
                Icon: '',
                Type: 'narrow',
                Text: 'АХД'
            },
        ],
        ListElement: `<span></span>`
    },
    Props: function() {
        this.WidgetContainer = this.Select('.widgets');
        this.LibContrl = new Lure.Controller.Templator({
            Target: '.help-d.lib-list',
            Data: [],
            ListElement: `<option value="{{ID}}">{{Name}}</option>`
        });
        this.LibSelect = this.Select('.help-d.lib-list');
    },
    Methods: function () {
        this.newRequest = function(type, pr_id = '-1',  text = '') {
            type = parseInt(type);
            pr_id = parseInt(pr_id);
            //if (!type && type !== 0) return;
            if (this.ReqSender.newRequest(type, pr_id, text, this.Controller.Data[type].Name))
                this.ReqSender.Show();
        };
        this.BlurWidgets = function (mode = true) {
            if (mode)
                this.WidgetContainer.classList.add('form-opened');
            else this.WidgetContainer.classList.remove('form-opened');
        };
        this.OrderInColl = function (elem) {
            let i = 0;
            for (let x of elem.parentElement.children) {
                if (x === elem)
                    return i;
                i++;
            }
        };
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.problems .new-req-li, .widget-content .new-req', function (e) {
            if (e.currentTarget.classList.contains('new-req-li'))
                this.newRequest(e.currentTarget.parentElement.parentElement.parentElement.parentElement.dataset['problemtype'], this.OrderInColl(e.currentTarget), e.currentTarget.innerText);
            if (e.currentTarget.classList.contains('new-req'))
                this.newRequest(e.currentTarget.parentElement.parentElement.parentElement.dataset['problemtype']);
        });
        this.LibContrl.Refresh(Lure.User.Cache.LibraryList);
    }
});

require('./request-sender/request-sender.js');

},{"./request-sender/request-sender.js":67}],67:[function(require,module,exports){
HelpDesk.NewReq.ReqSender = new Lure.Content({
    Name: 'RequestSender',
    // Parent: HelpDesk.NewReq,
    Visible: false,
    Route: false,
    Content: `<div class="request-overlay">
                <div class="form-container">
                    <div class="req-form-container shadow04 "> 
                        <div class="container-header strong">НОВАЯ ЗАЯВКА</div>
                        <div class="container-body">
                            <div class="form-row">
                                <div class="row-name">Тема</div>
                                <input class="problem-theme" type="text">
                            </div>
                            <div class="form-row">
                                <div class="row-name">Приоритет</div>
                                <select class="priority-select">
                                    <option value="1">Низкий</option>
                                    <option value="2" selected>Средний</option>
                                    <option value="3">Высокий</option>
                                    <option value="4">Точная дата</option>
                                </select>
                            </div>
                            <div class="form-row event-date-row none">
                                <div class="row-name">Дата исполнения</div>
                                <div class="event-date"></div>
                            </div>
                            <div class="form-row">
                                <div class="row-name">Подробное описание</div>
                                <textarea class="problem-description"></textarea>
                            </div>
                            <div class="form-row">
                                <div class="row-name">Файлы</div>
                                <div class="form-files"></div>
                                <input class="file-input none" name="problem-files" id="problem-files" type="file" multiple>
                                <label for="problem-files" class="add-new-file l-button">ЗАГРУЗИТЬ</label>
                            </div>
                        </div>
                        <div class="bottom-buttons">
                            <button class="cancel-button l-button">ОТМЕНА</button>
                            <button class="send-button l-button">ОТПРАВИТЬ</button>
                        </div>
                    </div>
                </div>
            </div>`,
    Target: '.new-req-dialog-wrap',
    Props: function () {
        this.ProblemTheme = this.Select('input.problem-theme');
        this.ProblemDescription = this.Select('textarea.problem-description');
        this.FormFiles = this.Select('.file-input');
        this.ThemeType = -1;
        this.allowedFileTypes = ['doc', 'docx', 'xls', 'xlsx', 'jpg', 'jpeg', 'png', 'txt', 'zip', 'rar'];
        this.maxFileSize = 9999999; // 10 Mb
        this.SendButton = this.Select('.send-button');
        this.EvDateRow = this.Select('.event-date-row');
        this.PrioritySelect = this.Select('.priority-select');

        this.FilesController = new Lure.Controller.Templator({
            Target: '.form-files',
            Data: [
                // { NameFull: 'Screen1', NameSub: 'Scr...', Type: 'png', File: {}, Order: 0 }
            ],
            ListElement:
                `<div class="uploading-file">
                    <div class="file-icon">
                        {{#if (['png', 'jpg', 'jpeg'].indexOf($this.Type) !== -1)}}
                        <img id="img_preview_{{Order}}" src="#" alt="{{NameSub}}" width="80"/>
                        {{#endif}}
                    </div>
                    <div class="file-params" data-order="{{Order}}">
                        <div class="name-type"><span class="filename" title="{{NameFull}}.{{Type}}">{{NameSub}}</span>.<span class="filetype">{{Type}}</span></div>
                        <div class="rename-remove"><span class="remove">удалить</span> I <span class="rename">переименовать</span></div>
                    </div>
                </div>`,
            EmptyMessage:
                `<div>Вы еще не загрузили ни одного файла</div>`,
            AfterBuild: function () {
                for (let i of this.Data) {
                    if (['png', 'jpg', 'jpeg'].indexOf(i.Type.toLowerCase()) === -1) continue;
                    let reader = new FileReader();
                    reader.onload = e => {let x = Lure.Select('#img_preview_' + i.Order, this.Content);return x ? x.src = e.target.result : {}};
                    reader.readAsDataURL(i.File);
                }
            }
        });
    },
    Show: function () {
        this.FilesController.Refresh([]);
        this.Parent.BlurWidgets();
    },
    Hide: function(){
        this.Parent.BlurWidgets(false);
        this.ProblemDescription.value = '';
        this.ProblemTheme.value = '';
    },
    Methods: function () {
        this.newRequest = function(type, pr_id, text, probName) {
            this.ThemeType = type;
            this.ProbSubType = pr_id;
            if (!this.ThemeType && this.ThemeType !== 0) return false;
            if (!this.ProbSubType && this.ProbSubType !== 0) return false;
            this.ProblemTheme.value = probName/* + (text === '' ? '' : ' (' + text + ')')*/;
            if (text !== '')
                this.ProblemDescription.value = text;
            return true;
        };

        this.RequestSendFiles = function (HelpRequestID, FileList) {
            let FilesReq = [];
            let files;
            if (FileList)
                files = FileList;
            else files = this.FilesController.Data.map(x => ({Name: x.NameFull + '.' + x.Type, File: x.File}));
            for (let f of files)
                FilesReq.push( api.HelpDesk_RequestFileAdd(f.File, {filename: this.Transliterate(f.Name), HelpRequestID: HelpRequestID}, {}) );
            return Promise.all(FilesReq);
        };
        this.RequestSend = async function () {
            Lure.Button.Lock(this.SendButton);
            let execDate = Lure.Date();
            let prior = parseInt(this.PrioritySelect.value);
            if (prior === 4)
                execDate = this.ExecTimePicker.Date;
            else {
                if (prior === 1) execDate.AddDays(3);
                if (prior === 2) execDate.AddDays(1);
                if (prior === 3) execDate.AddHours(8);
            }
            try {
                let HelpRequestID = await api.HelpDesk_RequestAdd(
                    parseInt(this.Parent.LibSelect.value),
                    this.ThemeType,
                    this.ProblemTheme.value,
                    this.ProblemDescription.value,
                    prior,
                    execDate, {});
                if (HelpRequestID === -1){
                    return Lure.System.Error('Произошла ошибка при отправке!');
                }
                await this.RequestSendFiles(HelpRequestID);
                Lure.System.Success('ОТПРАВЛЕНО');
            }
            catch (e) {
                Lure.System.Error('Ошибка сервера', e);
            }
            Lure.Button.Release(this.SendButton);
            this.Hide();
            this.ProblemDescription.value = '';
            this.ProblemTheme.value = '';
            HelpDesk.MyReqs.Show();
        };
        this.Transliterate = function (string) {
            let trans = {"щ":"shh","ш":"sh","ч":"ch","ц":"cz","ю":"yu","я":"ya","ё":"yo","ж":"zh","ъ":"``","ы":"y","э":"e","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","з":"z","и":"i","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"x","ь":"`"," ":"_"};
            let res = '';
            for (let b of string)
                res += trans[b.toLowerCase()] || b;
            return res;
        };
        this.NewFile = function () {
            let data = this.FilesController.Data;
            let k = 0;
            for (let d of data)
                d.Order = k++;
            let notAllowed = '';
            let bigSize = '';
            for (let d of this.FormFiles.files) {
                let name = d.name.split('.');
                let filetype = name.pop().toLowerCase();
                if (this.allowedFileTypes.indexOf(filetype) === -1) {
                    notAllowed += ', ' + name + '.' + filetype;
                    continue;
                } else if (d.size > this.maxFileSize) {
                    bigSize += ', ' + name + '.' + filetype;
                    continue;
                }
                name = name.join('.');
                data.push({
                    Type: filetype,
                    NameFull: name,
                    NameSub: name.length > 30 ? name.substr(0, 30) + '...' : name,
                    File: d,
                    Order: k++
                });
            }
            if (notAllowed) Lure.System.ShowError('Следующие файлы не разрешены для загрузки: <br>' + notAllowed.substr(2));
            if (bigSize) Lure.System.ShowError('Размер следующих файлов превышает максимально допустимый: <br>' + bigSize.substr(2));
            this.FilesController.Refresh(data);
            this.FormFiles.value = '';
        };
        this.RemoveFile = function (n) {
            let data = this.FilesController.Data;
            data.splice(n, 1);
            let k = 0;
            for (let d of data)
                d.Order = k++;
            this.FilesController.Refresh(data);
        };
        this.RenameFile = function (elem, n) {
            InputBox.Run(elem, data[n].NameFull,
                newName => {
                    if (!newName || newName === '') return;
                    let data = this.FilesController.Data;
                    data[n].NameFull = newName;
                    data[n].NameSub = newName.length > 30 ? newName.substr(0, 30) + '...' : newName;
                    this.FilesController.Refresh(data);
                }, {Caption: 'Переименовать файл'});
        }
    },
    AfterBuild: function () {
        this.Select('.cancel-button').addEventListener('click', () => this.Hide());
        this.Select('.send-button').addEventListener('click', () => this.RequestSend());

        this.AddEventListener('click', '.rename-remove .remove, .rename-remove .rename', function (e) {
            if (e.currentTarget.classList.contains('remove'))
                this.RemoveFile(e.currentTarget.parentElement.parentElement.dataset['order']);
            if (e.currentTarget.classList.contains('rename'))
                this.RenameFile(e.currentTarget, e.currentTarget.parentElement.parentElement.dataset['order']);
        });
        this.FormFiles.addEventListener('change', () => this.NewFile());
        this.PrioritySelect.onchange = e => {
            if (this.PrioritySelect.value + '' === '4')
                this.ExecTimePicker.Target.parentElement.classList.remove('none');
            else this.ExecTimePicker.Target.parentElement.classList.add('none');
        };

        this.ExecTimePicker = new Lure.PeriodPicker({
            Target: this.Select('.event-date'),
            NoRange: true,
            DateTarget: Lure.Date(),
            AutoConfirm: true,
            ButtonFullscreen: false,
            OnConfirm: function () {
                // FD(this.Date, true);
            }
        });

    }
    /*, Dialog: {
        Blur: '.new-requests .widgets', //HelpDesk.NewReq.Content is undefined right now
        Close: false
    }*/

});

},{}],68:[function(require,module,exports){
const D = require('../_common/dictionary');

/**
 * @class Meter
 */
let Meter = new Lure.Content({
    Name: 'Meter',
    Target: '.body',
    Type: 'content',
    Control: {
        Target: '#nav-meter'
    },
    Permission: {
        Roles: [D.Role.Meter]
    },
    Content: `<div class="meter content">
                <div class="diary-bread l-row">
                    <div class="li date-range">
                        <div class="calendar-icon">&#128198;</div>
                        <div class="dates">{{Date}}</div>
                    </div>
                    <div class="li l-row l-flexa-center flex-100">
                        <div>Подразделение: &nbsp;&nbsp;</div>
                        <div class="flex-100 library-tree-control strong">__</div>
                    </div>
                </div>
                
                <div class="subs meter-wrap l-row l-flex-100">
                    
                </div>
              </div>`,
    Proto: {
        LibraryNameVisual: 'Библиотека №13 имени Н.Г. Чернышевского',
        Date: Lure.Date().Format('DD MMMM YYYY', true),
        LibraryIDListSelected: []
    },
    /** @lends Meter */
    GetSet: {
        get CurrentLibraryID() {
            return this.Proto.Data.LibraryIDListSelected[0];
        },
        get CurrentSubContent(){
            return this.GetSubContentList()
                .Where(x=>x.isActive)
                .FirstOrDefault();
        },
    },
    BeforeShow: function () {
        this.ShowSubContent();
    },
    Refresh: function () {
        // this.GetSubContentList()
        //     .Where(x=>x.isActive)
        //     .FirstOrDefault()
        //     .Refresh();
        //this.MeterIncoming.Refresh();

    },
    Props: function () {
        this.Tabs = this.SelectAll('.req-tab');
    },
    Methods: function () {
        // this.SetTabFilter = function (e) {
        //     if (e.currentTarget.classList.contains('selected'))
        //         return;
        //     for (let t of this.Tabs){
        //         t.classList.remove('selected');
        //     }
        //     e.currentTarget.classList.add('selected');
        //     let MeterTypes = e.currentTarget.dataset['type'].split(',').Select(x=>parseInt(x));
        //     this.CurrentSubContent.Controller.Filter((x)=>MeterTypes.indexOf(x.TypeID)>-1 || MeterTypes.indexOf(-1)>-1);
        // }
    },
    AfterBuild: function () {
        //let SelectedDefault = [22];
        let SelectedDefault = [Lure.User.Cache.LibraryList.Select(x=>x.ID).FirstOrDefault()];
        new LibraryTree(this, this.Select('.library-tree-control'), {
            SelectedList: SelectedDefault,
            OnSelect: (Selected)=>{
                this.State.LibraryIDListSelected = Selected;
                this.Refresh();
            }
        });
        this.State.LibraryIDListSelected = SelectedDefault;



        //this.AddEventListener('click', '.meter-header .req-tab', (e)=>this.SetTabFilter(e));
    }
});
window.Meter = Meter;
module.exports = Meter;

require('./MeterIncoming/MeterIncoming');
require('./MeterEditor/MeterEditor');
require('./MeterCommonInfo/MeterCommonInfo');

},{"../_common/dictionary":102,"./MeterCommonInfo/MeterCommonInfo":69,"./MeterEditor/MeterEditor":70,"./MeterIncoming/MeterIncoming":72}],69:[function(require,module,exports){
const D = require('../../_common/dictionary');
Meter.MeterCommonInfo = new Lure.Content({
    Parent: Meter,
    Name: 'MeterCommonInfo',
    Route: false,
    Target: '.subs',
    Content: `<div class="meter-common-info meter-sidebar">
                <div class="side-top">
                    <div class="head">
                        {{LibraryName}}
                    </div>
                    <div class="data-card">
                        <div class="card-header">КРАТКАЯ ИНФОРМАЦИЯ</div>
                        <div class="card-data-row">
                            <div class="data-name">Индекс</div>
                            <div class="data-value">{{Index}}</div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">Адрес</div>
                            <div class="data-value">{{Address}}</div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">Площадь</div>
                            <div class="data-value">{{Square}} м<span class="sup-small">2</span></div>
                        </div>
                    </div>
                    <div class="data-card">
                        <div class="card-header">ЭЛЕКТРИЧЕСТВО</div>
                        <div class="card-data-row">
                            <div class="data-name">Договор</div>
                            <div class="data-value">{{Contract}}</div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">Номер абонента</div>
                            <div class="data-value">{{ContractUserNumber}}</div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">Тариф</div>
                            <div class="data-value">{{TariffElectricity}} руб/КВт⋅Ч</div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">Счетчиков</div>
                            <div class="data-value">{{MeterElectricityCount}}</div>
                        </div>
                    </div>
                    <div class="data-card">
                        <div class="card-header">ВОДОСНАБЖЕНИЕ</div>
                        <div class="card-data-row">
                            <div class="data-name">Договор</div>
                            <div class="data-value">{{Contract}}</div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">Тариф</div>
                            <div class="data-value">{{TariffWaterCold}} руб/м<span class="sup-small">3</span></div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">Счетчиков</div>
                            <div class="data-value">ХВС: {{MeterWaterColdCount}}, ГВС: {{MeterWaterHotCount}}</div>
                        </div>
                    </div>
                </div>
                <div class="side-bottom">
                    <div class="data-card">
                        <div class="card-header">ЗАВЕДУЮЩИЙ БИБЛИОТЕКОЙ</div>
                        <div class="card-data-row">
                            <div>{{CommonInfo.managerSurname}} {{CommonInfo.ManagerName}} {{CommonInfo.ManagerMiddleName}}</div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">Телефон</div>
                            <div class="data-value">+7 {{CommonInfo.ManagerPhone}}</div>
                        </div>
                        <div class="card-data-row">
                            <div class="data-name">e-mail</div>
                            <div class="data-value">{{CommonInfo.ManagerEmail}}</div>
                        </div>
                    </div>
                </div>
            </div>`,
    Load: '',
    State: {
        Date: Lure.Date().Format('DD MMMM YYYY', true),
        LibraryName: 'Библиотека №13 имени Н.Г. Чернышевского',
        Index: '115184',
        Address: 'ул. Большая Татарская, д.32',
        Square: 390,

        CommonInfo: {
            ManagerName: '',
            ManagerMiddleName: '',
            managerSurname: '',
            ManagerPhone: '',
            ManagerEmail: '',
        },

        ContractUserNumber: '987-654-321',
        Contract: '№123456 01.01.1970',
        TariffWaterCold: 0,
        TariffWaterHot: 0,
        TariffElectricity: 0,
        MeterWaterColdCount: 0,
        MeterWaterHotCount: 0,
        MeterElectricityCount: 0,

    },
    Show: function () {

    },
    Refresh: function () {
        this.Load.Show();
        api.Passport_Get(Meter.CurrentLibraryID, {
            Then: (x) => {
                x = JSON.parse(x);
                if (Lure.Object.isEmpty(x)){
                    return;
                }

                const St = this.State;
                St.CommonInfo = x.CommonInfo;
                St.LibraryName = x.CommonInfo.LibraryName;
                St.Square = x.Position.BuildingSquare;
                this.Proto.Refresh();
            },
            Finally: ()=>{
                this.Load.Hide();
            }
        });

    },
    Props: function () {



    },
    Methods: function () {

    },
    AfterBuild: function () {


    }
});

module.exports = Meter.MeterCommonInfo;


},{"../../_common/dictionary":102}],70:[function(require,module,exports){
const HistorySubscription = require('../../_common/history-master/history-subscription');
const D = require('../../_common/dictionary');

/**
 * @class MeterEditor
 */
const MeterEditor = new Lure.Content({
    Parent: Meter,
    Name: 'MeterEditor',
    Type: 'meter-content',
    Control: {
        Target: '#nav-meter-management'
    },
    Permission: {
        Roles: [D.Role.MeterCreate, D.Role.MeterEdit]
    },
    Target: '.subs',
    Content: `<div class="meter-editor meter-content l-col">
                <h1 class="h1">Тарифы</h1>
                <div class="tariff-list l-row"></div>
                <h1 class="h1">Приборы учета</h1>
                <div class="meter-list l-flex-100"></div>
              </div>`,
    Load: '',
    State: {
        Date: Lure.Date().Format('DD MMMM YYYY', true),
        LibraryNameVisual: '',
        TariffList: [],
    },
    PropTypes: {
        DateCreated: Lure.PropTypes.Date
    },
    PropFormat: {
        TypeID:  (t)=>D.MeterTypeDict[t],
        DateCreated: (d)=>Lure.Date(d).Format('MMMM YYYY'),
        DateVerification: (d)=>Lure.Date().Format('DD.MM.YYYY'),
        DateExpired: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
        DateStart: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
    },
    Controller: {
        Target: '.meter-list',
        ListElement: `<div class="meter-item">
                        <div class="line">
                            <div class="caption">Тип счетчика: </div>
                            <div class="value">{{TypeID}}</div>
                        </div>
                        <div class="line">
                            <div class="caption">Номер: </div>
                            <div class="value ">{{Number}}</div>
                        </div>
                        <div class="line">
                            <div class="caption">Тип: </div>
                            <div class="value ">{{Model}}</div>
                        </div>
                        <div class="line">
                            <div class="caption">Текущее значение: </div>
                            <div class="value">{{Value}}</div>
                        </div>
                        <div class="line">
                            <div class="caption">Ввод в эксплуатацию: </div>
                            <div class="value ">{{DateCreated}}</div>
                        </div>
                      </div>`
    },
    /** @private */
    BeforeShow: function () {
        this.Refresh();
    },
    Refresh: function () {
        this.Load.Show();

        Lure.Call(
            Promise.all([
                this.GetMeters(),
                this.GetTariff(),
            ]), {
                Finally: ()=>{
                    this.Load.Hide();
                }
            });
    },
    /** @private */
    Props: function () {
        //debugger
        this.ControllerTariff = new Lure.Controller.Templator({
            Target: '.tariff-list',
            Data: this.State.TariffList,
            ListElement: `<div class="tariff-item l-flex-100">
                            <div class="head">{{TypeID}}</div>
                            <div class="line">
                                <div class="caption">Значение: </div>
                                <div class="value">{{Value}}</div>
                            </div>
                            <div class="line">
                                <div class="caption">Действует с: </div>
                                <div class="value">{{DateStart}}</div>
                            </div>
                            <div class="line">
                                <div class="caption">Действует до: </div>
                                <div class="value">{{DateExpired}}</div>
                            </div>
                            <div class="button-holder l-row l-flex-end">
                                <button class="button l-button btn-tariff-add">Добавить тариф</button>
                            </div>
                        </div>`,
            PropTypes: {
                Value: Lure.PropTypes.UInt,
                DateStart: Lure.PropTypes.Date,
                DateExpired: Lure.PropTypes.Date,
            },
            PropFormat: {
                TypeID:  (t)=>D.MeterTypeDict[t],
                Value: (v, o)=>{
                    if (v === null)
                         return '<span class="span-setup btn-set-tariff l-hint" data-hint="Задать текущий тариф">не задано</span>';
                    if (o.TypeID === D.MeterType.WaterHot || o.TypeID === D.MeterType.WaterCold){
                        return `<span>${v} руб/м<span data-lsmarti="2813" class="sup-small">3</span></span>`
                    }
                    else if (o.TypeID === D.MeterType.Electricity){
                        return `<span>${v} руб/кВт⋅ч</span>`
                    }
                    return `${v} руб/кг`
                },
                DateExpired: (d)=>{
                    if (d !== null)
                        return Lure.Date(d).Format('D MMMMM YYYY');
                    return '<span class="span-setup btn-set-next-tariff l-hint" data-hint="Задать следующий тариф">следующий тариф не задан</span>';
                },
                DateStart: (d)=>{
                    if (d !== null)
                        return Lure.Date(d).Format('D MMMMM YYYY');
                    return 'тариф не задан';
                },
            },
            Owner: this
        });


        this.TariffAddType = {
            Current: 0,
            Next: 1,
            NewOne: 2,
        }
    },
    /** @private */
    Methods: function () {
        this.GetMeters = function () {
            return api.Meter_MeterListGet(22, -1, {
                Then: (meters)=>{
                    this.Controller.Refresh(meters);
                    Meter.MeterCommonInfo.Refresh();
                    Meter.MeterCommonInfo.Proto.SetProperty('MeterWaterColdCount', meters.Where(m=>m.TypeID === D.MeterType.WaterCold).length);
                    Meter.MeterCommonInfo.Proto.SetProperty('MeterWaterHotCount', meters.Where(m=>m.TypeID === D.MeterType.WaterHot).length);
                    Meter.MeterCommonInfo.Proto.SetProperty('MeterElectricityCount', meters.Where(m=>m.TypeID === D.MeterType.Electricity).length);
                },
            });
        };
        this.GetTariff = function () {
            return api.Meter_TariffGet({
                Then: (tariff)=>{
                    this.ControllerTariff.Refresh(tariff);
                },

            });
        };
        this.AddTariff = function (LineID, TariffAddType) {
            let Data = this.ControllerTariff.GetDataItemByLineID(LineID).Data;
            let DateMin = null;
            let Value = 0;
            if (TariffAddType !== this.TariffAddType.Current){
                DateMin = Lure.Date().AddDays(1).DayStart;
            }
            this.TariffSetter.Run({
                TypeID: Data.TypeID,
                TariffAddType: TariffAddType,
                TariffID: -1,

                Value: Value,
                DateValue: DateMin !== null ? DateMin: new Date(),

                DateMin: DateMin,
                LineID: LineID,
                Data: Data,
            });
        }

    },
    /** @private */
    AfterBuild: function () {
        this.AddEventListener('click', '.btn-set-tariff', (e, p)=>this.AddTariff(p.LineID, this.TariffAddType.Current));
        this.AddEventListener('click', '.btn-set-next-tariff, .btn-tariff-add', (e, p)=>this.AddTariff(p.LineID, this.TariffAddType.Next));
    }
});
Meter.MeterEditor = MeterEditor;
require('./TariffSetter/TariffSetter');

module.exports = Meter.MeterEditor;

},{"../../_common/dictionary":102,"../../_common/history-master/history-subscription":109,"./TariffSetter/TariffSetter":71}],71:[function(require,module,exports){
const D = require('../../../_common/dictionary');

/**
 * @class TariffSetter
 */
const TariffSetter = new Lure.Content({
    Parent: Meter.MeterEditor,
    Name: 'TariffSetter',
    Route: false,
    Dialog: {

    },
    Content: `<div class="meter-tariff-setter">
                <div class="head">Установка тарифа {{TypeID}}</div> 
                <div class="close l-close"></div>
                <div class="inner-content">
                    <div class="line l-row">
                        <div class="caption">Значение</div>
                        <div class="value l-row l-flexa-center">
                            <div class="div"><input class="textbox l-textbox tbx-value" type="number"  min="0" value="{{Value}}"></div>
                            <div class="extension">&nbsp;{{Extension}}</div>
                        </div>
                    </div>
                    <div class="line l-row">
                        <div class="caption">Действует с</div>
                        <div class="value"><div class="date-picker">{{DateValue}}</div></div>
                    </div>
                    <div class="button-holder l-row l-flex-center">
                        <button class="button l-button btn-commit">Записать тариф</button>
                    </div>
                </div>
              </div>`,
    State: {
        TypeID: -1,
        Value: 0,
        DateValue: 0,
        DateMin: null,
    },
    PropTypes: {
        DateValue: Lure.PropTypes.Date
    },
    PropFormat: {
        TypeID:  (t)=>D.MeterTypeDict[t],
        DateValue: (d)=>Lure.Date(d).Format('DD MMMMM YYYY'),
        Extension: (v, o)=>{
            if (o.TypeID === D.MeterType.WaterHot || o.TypeID === D.MeterType.WaterCold){
                return `<span>руб/м<span data-lsmarti="2813" class="sup-small">3</span></span>`
            }
            else if (o.TypeID === D.MeterType.Electricity){
                return `<span>руб/кВт⋅ч</span>`
            }
            return `${v} руб/кг`
        },
    },
    Props: function () {

        this.TextboxValue = this.Select('.tbx-value');
        this.ButtonCommit = this.Select('.btn-commit');
        this.DatePicker = new Lure.PeriodPicker({
            Target: this.Select('.date-picker'),
            NoRange: true,
            Format: 'DD MMMMM YYYY',
            OnConfirm: (date)=>{
                this.State.DateValue = date;
            }
        });
    },

    Methods: function () {
        this.Run = function (Params) {
            this.DatePicker.Min = Params.DateMin;
            this.DatePicker.Date = Params.DateValue;
            this.Proto.Refresh(Params);
            this.Show();
        };
        /** @public */
        /** @this TariffSetter */
        this.SetValue = function () {
            let Value = parseInt(this.TextboxValue.value);
            if (Value <= 0 || isNaN(Value)){
                return Lure.System.Warn('Введите значение');
            }
            Lure.Button.Lock(this.ButtonCommit);
            const St = this.State;
            api.Meter_TariffAdd(St.TypeID, St.TariffID, St.DateValue, St.Value, {
                Then: (TariffID)=>{
                    if (TariffID > 0 && St.Data.TariffID === TariffID){
                        St.Data.Value = St.Value;
                        St.Data.DateStart = St.DateValue;
                    }
                    if (TariffID > 0 && St.Data.TariffNextID === TariffID){
                        St.Data.ValueNext = St.Value;
                        St.Data.DateExpired = St.DateValue;
                    }
                    this.Parent.ControllerTariff.Refresh(St.LineID);
                    Meter.MeterEditor.GetTariff();
                    this.Hide();
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonCommit);
                }
            });
            /** @private */
            /** @this TariffSetter */
            this.SetValuePrivateTest = function () {

            }
        }
    },
    AfterBuild: function () {
        this.ButtonCommit.addEventListener('click', ()=>this.SetValue());
        this.TextboxValue.addEventListener('keyup', ()=>this.State.Value=parseFloat(this.TextboxValue.value));

    }
});

Meter.TariffSetter = TariffSetter;
module.exports = Meter.TariffSetter;



},{"../../../_common/dictionary":102}],72:[function(require,module,exports){
const HistorySubscription = require('../../_common/history-master/history-subscription');
const D = require('../../_common/dictionary');

Meter.MeterIncoming = new Lure.Content({
    Parent: Meter,
    Name: 'MeterIncoming',
    Type: 'meter-content',
    Control: {
        Target: '#nav-meter-incoming'
    },
    Permission: {
        Roles: [D.Role.Meter]
    },
    Target: '.subs',
    Content: `<div class="meter-editor meter-content l-col l-flex-100">
                <div class="meter-header">
                  <div class="req-tab m-all active"   data-type="-1">ВСЕ</div>
                  <div class="req-tab m-water-cold"   data-type="0">ХВС</div>
                  <div class="req-tab m-water-hot"    data-type="1">ГВС</div>
                  <div class="req-tab m-light"        data-type="2">ЭЛЕКТРИЧЕСТВО</div>
                </div>
                <div class="meter-widget-list l-flex-100"></div>
              </div>`,
    Load: '',
    PropFormat: {
        TypeID:  (t)=>D.MeterTypeDict[t],
        DateCreated: (d)=>Lure.Date(d).Format('MMMM YYYY'),

        DateVerification: (d)=> d? Lure.Date().Format('DD.MM.YYYY') : 'нет данных',
        DateExpired: (d)=> d? Lure.Date(d).Format('DD.MM.YYYY'): 'нет данных',
        Tariff: (t, o)=>{
            if (o.TypeID < 2){
                return t + ` Руб/м<span class="sup-small">3</span>`
            }
            return t + ` Руб/кВт⋅ч`
        },
        FileDateCreated: (d)=>d?Lure.Date(d).Format('DD.MM.YYYY'): 'неизвестная дата',
    },
    Controller: {
        Target: '.meter-widget-list',
        ListElement: `<div class="meter-widget widget">
                        <div class="widget-head">№{{Number}} ({{TypeID}})</div>
                        <div class="widget-inner-content">
                            <div class="hat l-row">
                                <div class="meter-icon meter-icon-{{$this.TypeID}}"></div>
                                <div class="meter-description l-flex-100">
                                    <div class="line l-row l-flexa-center l-flex-between">
                                        <div class="caption">Ввод в эксплуатацию:</div>
                                        <div class="value">{{DateCreated}}</div>
                                    </div>
                                    <div class="line l-row l-flexa-center l-flex-between">
                                        <div class="caption">Тип:</div>
                                        <div class="value">{{Model}}</div>
                                    </div>
                                    <div class="line l-row l-flexa-center l-flex-between">
                                        <div class="caption">Последняя поверка:</div>
                                        <div class="value">{{DateVerification}}</div>
                                    </div>
                                    <div class="line l-row l-flexa-center l-flex-between">
                                        <div class="caption">Следующая поверка:</div>
                                        <div class="value">{{DateExpired}}</div>
                                    </div>
                                </div>
                            </div>
                            <div class="file-slider">
                                <div class="control-scroll scroll-left"><</div>
                                <div class="files-list-wrap">
                                    {{#each Files}}
                                       <div class="uploading-file">
                                            <div class="file-icon"></div>
                                            <div class="file-params">
                                                <div class="name-type"><span class="filename" title="{{FileName}}">{{FileName}}</span></div>
                                                <div class="rename-remove">{{FileDateCreated}}</div>
                                                <div class="rename-remove">
                                                    <span class="remove btn-file-replace" data-id="{{FileID}}">обновить</span>
                                                    <span class="rename btn-file-download" data-id="{{FileID}}" data-name="{{FileName}}">скачать</span>
                                                 </div>
                                            </div>
                                        </div>
                                    {{#endeach}}
                                </div>
                                <div class="control-scroll scroll-right">></div>
                            </div>
                            <div class="tariff-holder l-row l-flex-end">
                                <div class="tariff">{{Tariff}}</div>
                            </div>
                            <div class="chart-values"></div>
                            <div class="meter-values">
                                {{#each Values}}
                                <div class="meter-col" data-date="{{DateValue}}">
                                    <div class="cell meter-caption">{{$g.Lure.CultureInfo.ru.MonthNamesShort[j]}}</div>
                                    <div class="cell meter-value" {{#data-line}} data-j="{{j}}" title="{{Value}}">{{Value}}</div>
                                </div>
                                {{#endeach}}
                            </div>
                        </div>
                      </div>`,
        EmptyMessage: `<div class="list-empty">нет счетчиков для отображения</div>`,
        AfterBuild: function () {
            let Wgs = this.Controller.DataItems;
            for (let w of Wgs){
                w.Chart = new Lure.Chart({
                    Type: 'bar',
                    Target: Lure.Select('.chart-values', w.DOM),
                    AxisX: {
                        Visible: false,
                        //Data: Lure.CultureInfo.ru.MonthNamesShort.Select(x=>x.toUpperCase())
                        Data: Lure.CultureInfo.ru.MonthNames.Select(x=>x + ' ' + Lure.Date().Year)
                    },
                    Legend:{
                        Visible: false,
                    },

                    AxisY:{
                        Min: 0,
                        //Step: 50,
                    },
                    Series: [{
                        Name: 'Values',
                        Data: w.Data.Values.Select(x=>x.Value),
                        Color: '#5C9BAA',
                        width: 40
                    }],
                    Grid: {
                        Visible: false,
                    },
                    SeriesOptions: {
                        //BarGradient: false
                    },
                    // Tooltip: {
                    //     Visible: false,
                    // }
                });
                w.Chart.Redraw(); //caused by bug in chart while no AxisX
            }
        }
    },
    BeforeShow: function () {
        if (this.Controller.Data.length < 1)
            this.Refresh();
    },
    Refresh: function () {
        this.GetMeters();
    },
    Props: function () {
        this.Tabs = this.SelectAll('.req-tab');
    },
    Methods: function () {
        this.GetMeters = function () {
            this.Load.Show();
            api.Meter_Get(Meter.CurrentLibraryID, -1, {
                Then: (meters)=>{
                    this.Controller.Refresh(meters);
                    Meter.MeterCommonInfo.Refresh();
                    Meter.MeterCommonInfo.Proto.SetProperty('MeterWaterColdCount', meters.Where(m=>m.TypeID === D.MeterType.WaterCold).length);
                    Meter.MeterCommonInfo.Proto.SetProperty('MeterWaterHotCount', meters.Where(m=>m.TypeID === D.MeterType.WaterHot).length);
                    Meter.MeterCommonInfo.Proto.SetProperty('MeterElectricityCount', meters.Where(m=>m.TypeID === D.MeterType.Electricity).length);

                },
                Finally: ()=>{
                    this.Load.Hide();
                }
            });
        };

        this.GetFile = function (FileID, FileName) {
            api.Meter_GetFile(Meter.CurrentLibraryID, FileID, {
                Then: (blob)=>{
                    Lure.Blob.SaveAs(blob, FileName);
                },
                Catch: (e)=>{
                    Lure.System.Error('Не удалось получить файл', e)
                }
            })
        };
        this.ReplaceFile = function (FileID) {
            Lure.System.Notice('Замена файлов временно недоступна', FileID);
        };
        this.SetTabFilter = function (e) {
            if (e.currentTarget.classList.contains('active'))
                return;
            for (let t of this.Tabs){
                t.classList.remove('active');
            }
            e.currentTarget.classList.add('active');
            let TypeID = parseInt(e.currentTarget.dataset['type']);
            this.Controller.Filter((x)=> x.TypeID === TypeID || TypeID === -1);
        }
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.meter-header .req-tab', (e)=>this.SetTabFilter(e));

        this.AddEventListener('click', '.meter-value', (e, p)=>{
            let DataLine = this.Controller.GetDataItemByLineID(p.LineID);
            let j = e.currentTarget.dataset['j'];
            e.currentTarget.classList.add('active');
            this.MeterValueInput.Run(DataLine, j, e.currentTarget);
        });

        this.AddEventListener('click', '.control-scroll.scroll-left', (e)=>{
            let ScrollContent = Lure.Select('.files-list-wrap', e.currentTarget.parentElement);
            ScrollContent.scrollLeft += -150;
        });
        this.AddEventListener('click', '.control-scroll.scroll-right', (e) => {
            let ScrollContent = Lure.Select('.files-list-wrap', e.currentTarget.parentElement);
            ScrollContent.scrollLeft += 150;
        });


        this.AddEventListener('click', '.btn-file-download', (e)=>{
            this.GetFile(e.currentTarget.dataset['id'], e.currentTarget.dataset['name']);
        });
        this.AddEventListener('click', '.btn-file-replace', (e)=>{
            this.ReplaceFile(e.currentTarget.dataset['id']);
        });
        // this.AddEventListener('wheel', '.files-list-wrap', (e) => {
        //     //e.preventDefault();
        //     this.FilesScroll(e.currentTarget, (-.5 + (e.deltaY > 0)) * 100);
        //     return false;
        // });
    }
});

module.exports = Meter.MeterIncoming;
require('./MeterValueInput/MeterValueInput');


},{"../../_common/dictionary":102,"../../_common/history-master/history-subscription":109,"./MeterValueInput/MeterValueInput":73}],73:[function(require,module,exports){
const D = require('../../../_common/dictionary');

Meter.MeterIncoming.MeterValueInput = new Lure.Content({
    Parent: Meter.MeterIncoming,
    Name: 'MeterValueInput',
    Route: false,
    Permission: {
        Roles: [D.Role.Meter]
    },
    Dialog: {

    },
    Content: `<div class="meter-value-input meter-content l-col dialog">
                <div class="head">Показания счетчика на {{DateValue}}</div> 
                <div class="close l-close"></div>
                <div class="inner-content">
                    <div class="line l-row">
                        <div class="caption">Показания</div>
                        <div class="value"><input class="textbox l-textbox tbx-value" type="number"  min="0" value="{{Value}}"></div>
                    </div>
                    <div class="line l-row">
                        <div class="caption">Прикрепить файл</div>
                        <div class="value"><input class="input-file" type="file"></div>
                    </div>
                    <div class="button-holder l-row l-flex-center">
                        <button class="button l-button btn-commit">Отправить</button>
                    </div>
                </div>
              </div>`,
    Load: '',
    State: {
        Value: 0,
        DateValue: 0,
        File: null
    },
    PropFormat:{
        DateValue: (d)=>Lure.Date(d).Format('MMMM YYYY'),
    },

    Props: function () {
        this.TextboxValue = this.Select('.tbx-value');
        this.ButtonCommit = this.Select('.btn-commit');
        this.FilePicker = this.Select('.input-file');
    },
    Methods: function () {
        this.Run = function (DataItem, j, target) {
            this._DataItem = DataItem;
            this._j = j;
            this._Target = target;
            this.Proto.Refresh(DataItem.Data.Values[j]);
            this.Show();
        };
        this.SetValue = async function () {
            let Value = parseInt(this.TextboxValue.value);
            if (Value <= 0 || isNaN(Value)){
                return Lure.System.Warn('Введите показание счетчика');
            }
            Lure.Button.Lock(this.ButtonCommit);
            let ResID = await api.Meter_AddValue(this._DataItem.Data.LibraryID, this._DataItem.Data.ID, this.State.DateValue, Value, {});
            let FileID = -1;
            if (ResID > 0 && this.FilePicker.files.length > 0){
                FileID = await api.Meter_AddFile(this.FilePicker.files[0], {LibraryMeterID: this._DataItem.Data.ID});
            }
            this._DataItem.Data.Values[this._j].Value = Value;
            this._DataItem.Chart.Options.Series[0].Data[this._j] = Value;
            this._DataItem.Chart.Refresh({Animation:false});
            Meter.MeterIncoming.Controller.Refresh(this._DataItem.LineID);
            this.Hide();
            Lure.Button.Release(this.ButtonCommit);

        }
    },
    BeforeHide: function(){
        this._Target.classList.remove('active');
    },
    AfterBuild: function () {
        this.ButtonCommit.addEventListener('click', ()=>this.SetValue());
    },

});

module.exports = Meter.MeterValueInput;


},{"../../../_common/dictionary":102}],74:[function(require,module,exports){
let EmptyLibraryInfo = require('./defaultData/defaultJSON.js');
let RussianPassportFields = require('./defaultData/russianFields.js');

let Passport = new Lure.Content({
    Name: 'Passport',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '#nav-passport'
    },
    Permission: {
        Roles: [Dictionary.Role.Passport],
        Write: [Dictionary.Role.PassportEdit]
    },
    Content:
        `<div class="passport content">
            <div class="diary-bread l-row passport-header">
                <div class="li">
                    Подразделение: 
                    <select class="l-select select passport-lib lib-list"></select>
                </div>
                <div class="li"><button class="save-button l-button none">Сохранить</button></div>
            </div>
            <div class="passport-data">
                <div></div>
                <h1 style="color: red;">Данные по состоянию на 2015 год</h1>
                <h1>Паспорт учреждения</h1>
                <div class="library-name strong editable">{{LibraryName}}</div>
                <div class="passport-data-tables"></div>
            </div>
        </div>`,
    Proto: {
        LibraryName: ''
    },
    Controller: {
        Target: '.passport-data-tables',
        Data: [ ],
        ListElement: `
                <div class="library-info-table">
                    <table class="table-passport">
                        <thead>
                            <tr><th colspan="2" class="table-passport-header strong">{{Name}}</th></tr>
                        </thead>
                        <tbody>
                        {{#each Value}}
                            <tr class="param-row">
                                <td class="views-field param-name strong">{{Name}}</td>
                                <td class="views-field param-value editable">{{Value}}</td>
                            </tr>
                        {{#endeach}}
                        </tbody>
                    </table>
                </div>`
    },/* editable-special - свой обработчик события на клик*/
    PropFormat: {
        Name: function(x) {return RussianPassportFields[x] ? RussianPassportFields[x] : x}
    },
    Props: function () {
        this.SaveButton = this.Select('.save-button');
        this.LibSelect = this.Select('.passport-lib.lib-list');
        this.LibraryID = this.LibSelect.value;
        this.ControllerLibList = new Lure.Controller.Templator({
            Owner: this,
            Target: '.passport-lib.lib-list',
            Data: Lure.User.Cache.LibraryList,
            ListElement: `<option value="{{ID}}">{{Name}}</option>`
        });
    },
    Methods: function () {

        this.PassportObjectToArray = function (passp_JSON) {

            if (Lure.Object.isEmpty(passp_JSON))
                passp_JSON = EmptyLibraryInfo;
            let data = [];
            for (let key in passp_JSON) {
                if (!passp_JSON.hasOwnProperty(key)) continue;
                let item = [];
                if (key === 'Position' && !passp_JSON.Position.CityDistrict) {
                    if (passp_JSON.ReadingHall.CityDistrict) {
                        passp_JSON.Position.CityDistrict = passp_JSON.ReadingHall.CityDistrict;
                        delete passp_JSON.ReadingHall.CityDistrict;
                    } else passp_JSON.Position.CityDistrict = '';
                }
                for (let key2 in passp_JSON[key]) {
                    if (key2 === 'LibraryName')
                        this.Proto.SetProperty('LibraryName', passp_JSON.CommonInfo.LibraryName);
                    if (passp_JSON[key].hasOwnProperty(key2))
                        item.push({Name: key2, Value: passp_JSON[key][key2]});
                }

                data.push({Name: key, Value: item});









            }
            // debugger;
            if (this.Proto.Data.LibraryName === '')
                this.Proto.SetProperty('LibraryName', this.ControllerLibList.Content.selectedOptions[0].innerText);
            return data;
        };
        this.PassportArrayToObject = function (data) {
            let JSON = {};
            for (let item of data) {
                JSON[item.Name] = {};
                for (let item2 of item.Value)
                    JSON[item.Name][item2.Name] = item2.Value;
            }
            return JSON;
        };

        this.OnLibraryChange = function () {
            let ID = parseInt(this.LibSelect.value);
            this.LibraryID = ID;
            this.SaveButton.classList.add('none');
            api.Passport_Get(ID, {})
                .then(JSON.parse)
                .then(result => this.Controller.Refresh(this.PassportObjectToArray(result)))
                .catch(error => {
                    console.log(' ');
                    console.error('ERROR', error);
                    console.log(' ');
                    Lure.System.ShowError("Произошла ошибка при получении данных!");
                });
        };
        this.OnClickSaveButton =  function () {
            api.Passport_Set(
                this.LibraryID,

                JSON.stringify(this.PassportArrayToObject(this.Controller.Data)), {
                    Then: () => Lure.System.ShowSuccess('Сохранено'),
                    Catch: () => Lure.System.ShowError('Ошибка сохранения'),
                    Finally: () => this.SaveButton.classList.add('none')
                });
        };
    },
    BeforeShow: function () {
        // this.LibSelect.value = this.LibraryID;
        this.OnLibraryChange();
    },
    AfterBuild: function () {
        this.Controller.Content.addEventListener('change', () => this.SaveButton.classList.remove('none'));
        this.ControllerLibList.Refresh();
        this.ControllerLibList.Content.addEventListener('change', () => this.OnLibraryChange());
        this.SaveButton.addEventListener('click', () => this.OnClickSaveButton());
    }
});
window.Passport = Passport;
module.exports = Passport;
},{"./defaultData/defaultJSON.js":75,"./defaultData/russianFields.js":76}],75:[function(require,module,exports){
module.exports = {
    CommonInfo: {
        LibraryName: "",
        Description: "",
        Adress: "",
        LibPhone: "",
        Email: "",
        managerSurname: "",
        ManagerMiddleName: "",
        ManagerName: "",
        ManagerPhone: "",
        ManagerEmail: "",
        FundSize: "",
    }, Position: {
        BuildingSquare: "",
        BuildingYear: "",
        BuildingDistrict: "",
    }, Staff: {
        StaffSize: "",
    }, GosRegister: {
        StateRegisterCertificate: "",
    }, Specialisation: {
        Specialization: "",
    }, ReadingHall: {
        CityDistrict: "",
        HallAvailable: "",
        ReadingHallAvilable: "",
        ReadingHallSquare: "",
        ReadingHallStoreSquare: "",
        ReadingHallFundCount: "",
    }, IsAbonement: {
        Abonement: "",
        AbonementSquare: "",
        AbonementFundSquare: "",
        AbonementFundCount: "",
    }, Fund: {
        FundDepartment: "",
        FundDepartmentSquare: "",
        FundSquare: "",
        FundCount: "",
        FundClosed: "",
        FundClosedSquare: "",
        FundClosedStoreSquare: "",
        FundClosedDocsCount: "",
    }, Computers: {
        ComputersCount: "",
        ComputersDigitalResAccess: "",
        ComputersInternetAccess: "",
    }, IsSpecialFund: {
        SpecialFund: "",
    }, Outdoor: {
        OutdoorMaintenance: "",
        HomeServiceLowMobility: "",
        LowMobilityCount: "",
    }, Disabled: {
        EasyTerritoryEnter: "",
        DisabledParking: "",
        DisabledOutStairs: "",
        OutdoorStairsHandrails: "",
        OutdoorRamp: "",
        OutdoorRampHandrails: "",
        EntranceDoor: "",
        IndoorStairs: "",
        IndoorStairsHandrails: "",
        DoorsWidth: "",
        IndoorObstacles: "",
        Lift: "",
        Escalator: "",
        LiftingPlatform: "",
        DisabledEvacuations: "",
        DisabledZone: "",
        DisabledPlumbing: "",
        TactileInformationFacilities: "",
        AcousticInformationFacilities: "",
        VisualInformationFacilities: "",
        AddLightsForDisabled: "",
        ServiceAccessibilityForDisabled: "",
        BrailleLiterature: "",
    }, Opening: {
        OpeningMonday: "",
        OpeningTuesday: "",
        OpeningWednesday: "",
        OpeningThursday: "",
        OpeningFriday: "",
        OpeningSaturday: "",
        OpeningSunday: "",
        SanitaryDay: "",
    }, ForVisitors: {
        CompsForVisitors: "",
        WiFiVisitors: "",
        Food: "",
        Parking: "",
    },  BuildingInfo: {
        BuildingType: "",
        BuildingConstructive: "",
        BuildingFloors: "",
        BuildingRoof: "",
        BuildingRoofMaterial: "",
        BuildingIsMonument: "",
        BuildingUsefullSquare: "",
        BuildingCategory: "",
        BuildingRenovationYear: "",
        BuildingNotUsefullSquare: "",
        BuildingRoomsCountBTI: "",
        BuildingRoomsUstavCount: "",
        BuildingFloorsUsing: "",
        BuildingStatus: "",
        BuildingBasement: "",
        BuildingSeparateInput: "",
        BuildingElectricity: "",
    }, Airing: {
        BuildingAiring: "",
        BuildingAiringCondition: "",
        BuildingConditioner: "",
        BuildingComunalServicesContracts: "",
        BuildingEngineerContracts: "",
    }, HeatWaterPreparation: {
        SystemsWashing: "",
        SystemsRepair: "",
        SystemsAdjustment: "",
        SystemHydraulicTest: "",
        SystemReadyAct: "",
        SystemOtherWork: "",
    }, WinterWorks: {
        WinterClearingWaterRoof: "",
        WinterClearingRoof: "",
        WinterLoftWarming: "",
        WinterHeatingRoofGutters: "",
        WinterLoftHearingWindows: "",
        WinterWindowsWarming: "",
        WinterBalconyDoorsWarming: "",
        WinterEntryDoors: "",
        WinterIsolationElectricWires: "",
        WinterFixHeatCurtains: "",
        WinterOther: "",
    }, AdjTerritory: {
        AdjacentTerritoryAvailability: ""
    }

};
},{}],76:[function(require,module,exports){
module.exports = {
    ID: "ID",
    LibraryName: "Название",
    Description: "Описание",
    Adress: "Адрес",
    LibPhone: "Телефон библиотеки",
    Email: "Веб-сайт",
    managerSurname: "Фамилия заведующей",
    ManagerMiddleName: "Отчество",
    ManagerName: "Имя",
    ManagerPhone: "Телефон руководителя",
    ManagerEmail: "Почта руководителя",
    FundSize: "Размер фонда",
    BuildingSquare: "Площадь",
    BuildingYear: "Год постройки",
    BuildingDistrict: "Район",
    StaffSize: "Штат сотрудников",
    StateRegisterCertificate: "Свидетельство о государственно регистрации права",
    Specialization: "Специализация",
    CityDistrict: "Округ",
    HallAvailable: "Наличие зала",
    ReadingHallAvilable: "Имеется ли читальный зал",
    ReadingHallSquare: "Общая площадь читального зала",
    ReadingHallStoreSquare: "Площадь для хранения фонда в читальном зале",
    ReadingHallFundCount: "Кол-во фонда в читальном зале",
    Abonement: "Имеется ли абонемент",
    AbonementSquare: "Общая площадь абонемента",
    AbonementFundSquare: "Площадь для хранения фонда в абонементе",
    AbonementFundCount: "Кол-во фонда в абонементе",
    FundDepartment: "Наличие отдела, где располагается фонд",
    FundDepartmentName: "Название отдела",
    FundDepartmentSquare: "Общая площадь",
    FundSquare: "Площадь для хранения фонда",
    FundCount: "Кол-во фонд",
    FundClosed: "Имеется ли фонд с закрытым доступом для посетителей",
    FundClosedSquare: "Площадь помещения с закрытым доступом для посетителей",
    FundClosedStoreSquare: "Площадь для хранения фонда с закрытым доступом для посетителей",
    FundClosedDocsCount: "Общее количество документов в фонде с закрытым доступом",
    FundClosedWhat: "Что хранится в фонде закрытого доступа",
    FundClosedRoomType: "Вид помещения",
    FundClosedWhoAccess: "Кто имеет доступ",
    ComputersCount: "Всего в помещении",
    ComputersDigitalResAccess: "Из них компьютеризированных с возможностью доступа к электронным ресурсам",
    ComputersInternetAccess: "Из общего числа с возможностью выхода в интернет",
    SpecialFund: "Имеется ли специальный фонд",
    OutdoorMaintenance: "Внестационарное обслуживание",
    HomeServiceLowMobility: "Осуществляется ли обслуживание маломобильных граждан на дому",
    LowMobilityCount: "Кол-во обслуживаемых маломобильных граждан на дому",
    EasyTerritoryEnter: "Беспрепятственный вход на территорию",
    DisabledParking: "Парковочные места для инвалидов",
    DisabledOutStairs: "Наружная лестница",
    OutdoorStairsHandrails: "Поручни для наружной лестницы",
    OutdoorRamp: "Наружный пандус",
    OutdoorRampHandrails: "Поручни для наружного пандуса",
    EntranceDoor: "Входная дверь в здание",
    IndoorStairs: "Внутренние лестницы",
    IndoorStairsHandrails: "Поручни для внутренних лестниц",
    DoorsWidth: "Ширина дверных проемов",
    IndoorObstacles: "Препятствия внутри помещний",
    Lift: "Лифт",
    Escalator: "Эскалатор",
    LiftingPlatform: "Подъемная платформа",
    DisabledEvacuations: "Пути эвакуации для инвалидов",
    DisabledZone: "Специальная непроходная зона для размещения инвалидов",
    DisabledPlumbing: "Доступность сантехнического оборудования для инвалидов",
    TactileInformationFacilities: "Тактильные средства информации",
    AcousticInformationFacilities: "Акустические средства информации",
    VisualInformationFacilities: "Визуальные средства информации",
    AddLightsForDisabled: "Дополнительные источники света для инвалидов",
    ServiceAccessibilityForDisabled: "Доступность предоставляемых услуг для инвалидов",
    BrailleLiterature: "Наличие литературы со шрифтом Брайля",
    OpeningMonday: "Понедельник",
    OpeningTuesday: "Вторник",
    OpeningWednesday: "Среда",
    OpeningThursday: "Четверг",
    OpeningFriday: "Пятница",
    OpeningSaturday: "Суббота",
    OpeningSunday: "Воскресенье",
    SanitaryDay: "Санитарный день",
    CompsForVisitors: "Компьютеры для посетителей",
    WiFiVisitors: "WiFi для посетителей",
    Food: "Организация питания",
    Parking: "Наличие парковки",
    BuildingType: "Тип",
    BuildingConstructive: "Конструктив здания",
    BuildingFloors: "Количество этажей здания",
    BuildingRoof: "Тип кровли здания",
    BuildingRoofMaterial: "Материал кровли",
    BuildingIsMonument: "Является ли памятников архитектуры/Объектом культурного наследия",
    BuildingUsefullSquare: "Полезная площадь",
    BuildingCategory: "Категория помещения",
    BuildingRenovationYear: "Период проведения последнего капитального ремонта",
    BuildingNotUsefullSquare: "Площадь, используемая не по назначению ",
    BuildingRoomsCountBTI: "Общее количество помещений по плану БТИ",
    BuildingRoomsUstavCount: "Количество помещений, приспособленных для ведения уставной деятельности",
    BuildingFloorsUsing: "Количество занимаемых этажей",
    BuildingStatus: "Состояние помещения",
    BuildingBasement: "Подвал",
    BuildingSeparateInput: "Наличие отдельного входа",
    BuildingElectricity: "Кол-во единовременно отпущенной электрической мощности",
    BuildingAiring: "Наличие системы вентиляции",
    BuildingAiringCondition: "Состояние системы вентиляции",
    BuildingConditioner: "Наличие системы централизованного кондиционирования",
    BuildingComunalServicesContracts: "Контракты на коммунальные услуги",
    BuildingEngineerContracts: "Контракты на обслуживание инженерных систем",
    SystemsWashing: "Промывка",
    SystemsRepair: "Ремонт и замена трубопроводов и оборудования",
    SystemsAdjustment: "Наладочно-регулировочные работы",
    SystemHydraulicTest: "Проведение гидравлических испытаний",
    SystemReadyAct: "Получение Акта готовности",
    SystemOtherWork: "Другие работы",
    WinterClearingWaterRoof: "Очистка системы водостока кровли",
    WinterClearingRoof: "Очистка кровли",
    WinterLoftWarming: "Утепление чердаков и подвалов",
    WinterHeatingRoofGutters: "Обслуживание системы электрообогрева желобов водостока крыши",
    WinterLoftHearingWindows: "Обслуживание и утепление слуховых окон чердака",
    WinterWindowsWarming: "Утепление окон",
    WinterBalconyDoorsWarming: "Утепление балконных дверей",
    WinterEntryDoors: "Утепление входных дверей, настройка доводчиков",
    WinterIsolationElectricWires: "Проверка сопротивления изоляции электропроводки и электрооборудования",
    WinterFixHeatCurtains: "Обслуживание тепловых завес и калориферов",
    WinterOther: "Другие работы",
    AdjacentTerritoryAvailability: "Наличие прилегающей территории",

    CommonInfo: "Общая информация",
    Position: "Местоположение",
    Staff: "Персонал",
    GosRegister: "Государственная регистрация",
    Specialisation: "Специализация",
    ReadingHall: "Читательский зал",
    IsAbonement: "Абонемент",
    Fund: "Фонд",
    Computers: "Коспьютеризация",
    IsSpecialFund: "Специальный фонд",
    Outdoor: "Внестационар",
    Disabled: "Для посетителей с ограниченными возможностями",
    Opening: "Время работы",
    ForVisitors: "Услуги для посетителей",
    BuildingInfo: "Информация о здании",
    Airing: "Вентиляция и контракты",
    HeatWaterPreparation: "Обслуживание инженерных систем",
    WinterWorks: "Работы по подготовке к зиме",
    AdjTerritory: "Прилегающая территория"
};
},{}],77:[function(require,module,exports){
const Dictionary = require("../_common/dictionary");
/**
 * @class Testnav
 */

let Testnav = new Lure.Content({
    Name: 'Testnav',
    Target: '.body',
    Type: 'content',

    Control:{
        Target: '#nav-test'
    },
    Permission: {
       Roles: [Dictionary.Role.TesterPanel]
    },

    Methods: function(){
        // debugger
    },
    Content: `<div class="testnav content">
                <h1>Страница находится в разработке</h1>
              </div>`,
    Proto: {
        LibraryName: ''
    },
});

window.Testnav = Testnav;
require('./test-main/test-main.js');
require('./test-main2/test-main2.js');
module.exports = Testnav;

},{"../_common/dictionary":102,"./test-main/test-main.js":81,"./test-main2/test-main2.js":79}],78:[function(require,module,exports){
Testnav.TestMain2.Level3v2 = new Lure.Content({
    Parent: Testnav.TestMain2,
    Name: 'Level3v2',
    Type: 'diary-summary-content',
    Control:{
        Target: '#nav-test-main2-1',
    },
    // Visible: true,
    Content: `<div class="summary-part">
                  <p style="padding-top: 20px">Второй стол - Параграф 1W</p>
                  <p>Второй стол - Параграф 2W</p>
                  <p>Второй стол - Параграф 3W</p>
                  <p>Второй стол - Параграф 4W</p>
                  <p>Второй стол - Параграф 5W</p>
              </div>`,

    // Show(){
    //     this.Parent.Subscription.Subscribe();
    // },
    Refresh: function () {
    },
    AfterBuild: function () {
        let yearMounth = {
            0: 'Январь',
            1: 'Февраль',
            2: 'Март',
            3: 'Апрель',
            4: 'Май',
            5: 'Июнь',
            6: 'Июль',
            7: 'Август',
            8: 'Сентябрь',
            9: 'Октябрь',
            10: 'Ноябрь',
            11: 'Декабрь',
        };
        console.log(`${new Date().getMonth() + 1} число это - ${yearMounth[new Date().getMonth() ]}`);
    }
});
},{}],79:[function(require,module,exports){
Testnav.TestMain2 = new Lure.Content({
    //Disabled: true,
    Name: 'TestMain2',
    Target: '',
    Type: 'Testnav-content',
    //Visible: true,
    Control:{
        Target: '#nav-test-main2'
    },
    Permission: {
        Roles: [Dictionary.Role.TesterPanel]
    },
    Content: `<div>
                <h2>Второй стол</h2>
              </div>`,

    Show: function () {
        this.Refresh();
    },

});
require("./level-three/level-three");

},{"./level-three/level-three":78}],80:[function(require,module,exports){
Testnav.TestMain.Level3v1 = new Lure.Content({
    //Disabled: true,
    Name: 'Level3v1',
    Target: '',
    Type: 'dash-content',
    // Visible: true,
    Control:{
        Target: '#nav-test-main-level3-1'
    },
    Permission: {
        Roles: [Dictionary.Role.TesterPanel]
    },
    Content: `<div>
                <p>Рабочий стол - Level 3-1</p>
              </div>`,

    Show: function () {
        this.Refresh();
    },

});
},{}],81:[function(require,module,exports){
Testnav.TestMain = new Lure.Content({
    Parent: Testnav,
    //Disabled: true,
    Name: 'TestMain',
    Type: 'Testnav-content',
    //Visible: true,
    Control:{
        Target: '#nav-test-main'
    },
    Permission: {
        Roles: [Dictionary.Role.TesterPanel],
        Rules: {
            jojo: {
                Roles: [Dictionary.Role.Admin],
                Write: [],
            }
        }
    },
    Content: `<div>
                <h2>Рабочий стол p</h2>
                <h2 data-permision="jojo">Рабочий стол c атрибутами на чтение</h2>
              </div>`,

    Show: function () {
        this.Refresh();
    },

});
require("./level3/level3");
// window.Dash.DashMain = DashMain;
// module.exports = Dash;
Lure.Settings
},{"./level3/level3":80}],82:[function(require,module,exports){
WDash.SixNK.SixNKMain = new Lure.Content({
    Name: 'SixNKMain',
    Target: '',
    Type: 'SixNK-content',
    Parent: WDash.SixNK,
    Visible: true,
    Control: {
        Target: '.six-nk .req-tab.main'
    },
    Content:
`<div class="data-part">
    <div class="strong center border">ФЕДЕРАЛЬНОЕ СТАТИСТИЧЕСКОЕ НАБЛЮДЕНИЕ</div>
    <div class="center border">КОНФИДЕНЦИАЛЬНОСТЬ ГАРАНТИРУЕТСЯ ПОЛУЧАТЕЛЕМ ИНФОРМАЦИИ</div>																																																																																																																								
    <div class="grey-back center border">Нарушение порядка представления статистической информации, а равно представление недостоверной статистической информации<br>
    влечет ответственность, установленную статьей 13.19 Кодекса Российской Федерации об административных правонарушениях<br>
    от 30.12.2001 № 195-ФЗ, а также статьей 3 Закона Российской Федерации от 13.05.92 № 2761-1 "Об ответственности за нарушение<br>
    порядка представления государственной статистической отчетности"</div>
    <div class="center border">ВОЗМОЖНО ПРЕДОСТАВЛЕНИЕ В ЭЛЕКТРОННОМ ВИДЕ</div>
    <div class="center grey-back border">СВЕДЕНИЯ ОБ ОБЩЕДОСТУПНОЙ (ПУБЛИЧНОЙ) БИБЛИОТЕКЕ<br>за ${(new Date).getFullYear()} год</div>
    <div class="flex">
        <div class="flex4">
            <table>
                <thead>
                    <tr>
                        <th colspan="2">Предоставляют:</th>
                        <th>Сроки предоставления</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="2">юридические лица - общедоступные библиотеки, подведомственные: органу местного самоуправления, осуществляющему управление в сфере культуры; органу исполнительной власти субъекта Российской Федерации, осуществляющему управление в сфере культуры; Министерству культуры Российской Федерации:</td>
                        <td class="center">15 января</td>
                    </tr> 
                    <tr>
                        <td colspan="2">- соответствующему органу управления в сфере культуры (по принадлежности); юридические лица - общедоступные библиотеки, кроме подведомственных: органу местного самоуправления, осуществляющему управление в сфере культуры; органу исполнительной власти субъекта Российской Федерации, осуществляющему управление в сфере культуры; Министерству культуры Российской Федерации:</td>
                        <td class="center">15 января</td>
                    </tr>
                    <tr>
                        <td colspan="2">-территориальному органу Росстата в субъекте Российской Федерации по установленному им адресу; орган местного самоуправления, осуществляющий управление в сфере культуры, сводные отчеты по подведомственным учреждениям:</td>
                        <td class="center">20 февраля</td>
                    </tr>
                    <tr>
                        <td colspan="2">-органу исполнительной власти субъекта Российской Федерации, осуществляющему управление в сфере культуры; органы исполнительной власти субъекта Российской Федерации, осуществляющие управление в сфере культуры, сводные отчеты по субъекту Российской Федерации: -Министерству культуры Российской Федерации;</td>
                        <td class="center">10 марта</td>
                    </tr> 
                    <tr>
                        <td colspan="2">Росстат, сводные отчеты по основным показателям деятельности общедоступных  библиотек, не относящихся к сфере ведения Министерства культуры Российской Федерации: -Министерству культуры Российской Федерации</td>
                        <td class="center">30 апреля</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="flex1 mar-7-all">
            <div class="center strong grey-back border">Форма № 6-НК</div>
            <div class="center">Приказ Росстата:<br>Об утверждении формы<br>от 08.10.2015 № 464<br>О внесении изменений (при наличии)</div>
            <div class="center">от _________ № ____</div>
            <div class="center">от _________ № ____</div>
            <div class="center border grey-back" style="padding: 7px;">{{DateRange}}</div>
        </div>
    </div>
    <div class="flex-row wid-100"><div>Наименование отчитывающейся организации</div><div class="underline flex1"></div></div>
    <div class="flex-row wid-100"><div>Почтовый адрес</div><div class="underline flex1"></div></div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">Код формы по ОКУД</th>
                    <th colspan="3">Код</th>
                </tr>
                <tr>
                    <th>отчитывающейся организации по ОКПО</th>
                    <th></th>
                    <th></th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">0609521</td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div>
        <div class="flex-row"><div class="flex1">Наименование учредителя</div><div class="underline flex1">Департамент культуры города Москвы</div></div>
        <div class="flex-row"><div class="flex1">Наименование централизованной системы, в которую входит библиотека</div><div class="underline flex1">Государственно бюджетное учреждение культуры города Москвы "Централизованная библиотечная система Центрального административного округа"</div></div>
        <div class="flex-row"><div class="flex1">Наименование и тип библиотеки (библиотеки-филиала)</div><div class="underline flex1"></div></div>
        <div class="flex-row"><div class="flex1">Направление основной деятельности головной организации</div><div class="underline flex1">ОКВЭД 92.51</div></div>
    </div>
</div>`,
    Proto: {
        DateRange: ({1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[Math.floor(((new Date).getMonth()) / 3) + 1]
    }/*,
    PropFormat: {
        DateRange: function (x) {
            return this.Parent.Proto.Data.DatesResult;
        }
    }*/
});

},{}],83:[function(require,module,exports){
WDash.SixNK.SixNKPart1 = new Lure.Content({
    Name: 'SixNKPart1',
    Target: '',
    Type: 'SixNK-content',
    Parent: WDash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p1'
    },
    Content:
`<div class="data-part">
    <div class="center border strong">1. Материально-техническая база</div>
    <div>
        <div class="right">Коды по ОКЕИ: единица - 642; квадратный метр - 055</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">№ строки</th>
                    <th colspan="2">Объекты культурного наследия</th>
                    <th colspan="3">Здания (помещения) доступны для лиц с нарушениями</th>
                    <th colspan="3">Площадь помещений,<br> кв. м</th>
                    <th colspan="3">Площадь помещений по форме <br> пользования (из гр. 7), кв. м</th>
                    <th colspan="2">Техническое состояние помещений (из гр. 10), кв. м</th>
                </tr>
                <tr>
                    <th>федерального значения (да - 1, нет - 0)</th>
                    <th>регионального значения (да - 1,     нет - 0)</th>
                    <th>зрения (да - 1, нет - 0)</th>
                    <th>слуха   (да - 1, нет - 0)</th>
                    <th>опорнодвигательного аппарата (да -1, нет - 0)</th>
                    <th>всего</th>
                    <th>для хранения фондов (из гр. 7)</th>
                    <th>для обслуживания пользователей (из гр. 7)</th>												
                    <th>в оперативном управлении</th>	
                    <th>по договору аренды</th>							
                    <th>прочие</th>
                    <th>требует капитального ремонта</th>
                    <th>аварийное</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">01</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">№ строки</th>
                    <th rowspan="2">Число пунктов вне стационарного обслуживания пользователей библиотеки,<br>единиц</th>
                    <th colspan="3">Число посадочных мест для пользователей, единиц</th>
                    <th colspan="4">Наличие автоматизированных технологий (да - 1, нет - 0)</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из них (из гр.16) компьютеризованных, с возможностью доступа </th>
                    <th>из них (из гр.16) <br>с возможностью выхода в Интернет</th>
                    <th>обработки поступлений <br>и ведения электронного каталога (каталогизация и научная обработка)</th>
                    <th>организации и учета выдачи фондов (книговыдача)</th>
                    <th>организации и учета доступа посетителей (обслуживание)</th>
                    <th>учета документов библиотечного фонда (учет фондов)</th>
                </tr>
                <tr>
                    <th>1</th><th>15</th><th>16</th><th>17</th><th>18</th><th>19</th><th>20</th><th>21</th><th>22</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">01</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
    
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">№ строки</th>
                    <th rowspan="2">Число единиц специализированного оборудования для инвалидов</th>
                    <th colspan="3">число единиц копировально-множительной техники</th>
                    <th colspan="2">число транспортных средств, единиц</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из них для пользователей библиотеки</th>
                    <th>из них для оцифровки фонда</th>
                    <th>всего</th>
                    <th>из них число специализированных транспортных средств</th>
                </tr>
                <tr>
                    <th>1</th><th>23</th><th>24</th><th>25</th><th>26</th><th>27</th><th>28</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">01</td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>`
});
},{}],84:[function(require,module,exports){
WDash.SixNK.SixNKPart2 = new Lure.Content({
    Name: 'SixNKPart2',
    Target: '',
    Type: 'SixNK-content',
    Parent: WDash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p2'
    },
    Content:
`<div class="data-part">
    <div class="strong border">2. Формирование и использование библиотечного фонда на физических (материальных) носителях</div>
    <div>
        <div class="right">Код по ОКЕИ: единица - 642</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">Наименование показателей</th>
                    <th rowspan="2">№ строки</th>
                    <th rowspan="2">Всего (сумма гр. 4 - 7) единиц</th>
                    <th colspan="4">В том числе (из гр. 3), единиц</th>
                    <th rowspan="2">Документы в специальных форматах для слепых и слабовидящих, единиц (из гр. 3)</th>
                    <th colspan="2">Из общего объема фонда (из гр. 3), единиц</th>
                </tr>
                <tr>
                    <th>печатные  издания и неопубликован-ные документы</th>
                    <th>электронные документы на съемных носителях</th>
                    <th>документы на микроформах</th>
                    <th>документы на других видах носителей</th>
                    <th>на языках народов России</th>
                    <th>на иностранных языках</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th></th><th></th>
                </tr>
            </thead>
            <tbody>

                <tr>
                    <td>Поступило документов за отчетный год, единиц</td><td  class="center">02</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Выбыло документов за отчетный год, единиц</td><td class="center">03</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Состоит документов на конец отчетного года, единиц</td><td class="center">04</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Переведено в электронную форму за отчетный год, единиц</td><td class="center">05</td><td></td><td></td><td class="center">X</td><td></td><td></td><td class="center">X</td><td></td><td class="center">X</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>`
});
},{}],85:[function(require,module,exports){
WDash.SixNK.SixNKPart3 = new Lure.Content({
    Name: 'SixNKPart3',
    Target: '',
    Type: 'SixNK-content',
    Parent: WDash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p3'
    },
    Content:
`<div class="data-part">
    <div class="strong border">3. Электронные (сетевые) ресурсы</div>
    <div>
        <div class="right">Код по ОКЕИ: единица - 642</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="2">Наименование показателей</th>
                    <th rowspan="2">№ строки</th>
                    <th colspan="2">Объем электронного каталога</th>
                    <th colspan="2">Объем электронной (цифровой) библиотеки</th>
                    <th colspan="2">Инсталлированные документы</th>
                    <th colspan="2">Сетевые удаленные лицензионные документы</th>
                </tr>
                <tr>
                    <th>общее число записей, единиц</th>
                    <th>из них (из гр. 3) число записей, доступных в Интернете, единиц</th>
                    <th>общее число сетевых локальных документов, единиц</th>
                    <th>из них (из гр. 5) число документов в открытом доступе, единиц</th>
                    <th>число баз данных, единиц</th>
                    <th>в них полтнотекстовых документов, единиц</th>
                    <th>число баз данных, единиц</th>
                    <th>в них полтнотекстовых документов, единиц</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Создано, приобретено за отчетный год, единиц</td><td class="center">06</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Выбыло за отчетный год, единиц</td><td class="center">07</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
                <tr>
                    <td>Объем на конец отчетного года, единиц</td><td class="center">08</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="wid-100">
        <div class="flex-row"><div>Наличие доступа в Интернет (да - 1, нет - 0) (09)</div><div class="underline flex1 center">1</div></div>
        <div class="flex-row"><div>Наличие возможности доступа в Интернет для посетителей (да - 1, нет - 0) (10)</div><div class="underline flex1 center">1</div></div>
        <div class="flex-row"><div>Наличие собственного Интернет-сайта или Интернет-страницы библиотеки (да - 1, нет - 0) (11)</div><div class="underline flex1 center">0</div></div>
        <div class="flex-row"><div>Наличие Интернет-сайта или Интернет-страницы, доступного для слепых и слабовидящих (да - 1, нет - 0) (12)</div><div class="underline flex1 center">0</div></div>
    </div>
</div>`
});
},{}],86:[function(require,module,exports){
WDash.SixNK.SixNKPart4 = new Lure.Content({
    Name: 'SixNKPart4',
    Target: '',
    Type: 'SixNK-content',
    Parent: WDash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p4'
    },
    Content:
`<div class="data-part">
    <div class="strong border">4. Число пользователей и посещений библиотеки</div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">№ строки</th>
                    <th colspan="5">Число зарегистрированных пользователей библиотеки, человек</th>
                    <th colspan="3">Число посещений библиотеки, посещений</th>
                    <th colspan="2">Число обращений </th>
                </tr>
                <tr>
                    <th rowspan="2">всего</th>
                    <th colspan="3">в том числе пользователей, обслуженных в стенах библиотеки (из гр. 2)</th>
                    <th rowspan="2">в том числе удаленных пользователей (из гр. 2)</th>
                    <th rowspan="2">всего</th>
                    <th rowspan="2">из них для получения библиотечно-информационных услуг (из гр. 7)</th>
                    <th rowspan="2">число посещений массовых мероприятий (из гр. 7)</th>
                    <th rowspan="2">всего</th>
                    <th rowspan="2">из них обращений к веб-сайту (из гр. 10)</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из них (из гр. 3) дети до 14 лет включительно</th>
                    <th>из них (из гр. 3) молодежь 15 - 30 лет</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">12</td>
                    <td class="center">{{P4L12V2}}</td>
                    <td class="center">{{P4L12V3}}</td>
                    <td class="center">{{P4L12V4}}</td>
                    <td class="center">{{P4L12V5}}</td>
                    <td class="center">{{P4L12V6}}</td>
                    <td class="center">{{P4L12V7}}</td>
                    <td class="center">{{P4L12V8}}</td>
                    <td class="center">{{P4L12V9}}</td>
                    <td class="center">{{P4L12V10}}</td>
                    <td class="center">{{P4L12V11}}</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>`,
    Proto: {
        P4L12V2: 0,
        P4L12V3: 0,
        P4L12V4: 0,
        P4L12V5: 0,
        P4L12V6: 0,
        P4L12V7: 0,
        P4L12V8: 0,
        P4L12V9: 0,
        P4L12V10: 0,
        P4L12V11: 0,
    },
    Show: function () {
        if (!this.Parent.Updated) {
            this.Parent.RefreshData();
            this.Parent.Updated = true;
        }
    },
    Load: 'table',
    Methods: function () {
        this.RefreshData = function (data) {
            for (let key in this.Proto.Data)
                if (this.Proto.Data.hasOwnProperty(key))
                    this.Proto.Data[key] = data[key];
            this.Proto.Refresh();
        }
    }
});
},{}],87:[function(require,module,exports){
WDash.SixNK.SixNKPart5 = new Lure.Content({
    Name: 'SixNKPart5',
    Target: '',
    Type: 'SixNK-content',
    Parent: WDash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p5'
    },
    Content:
`<div class="data-part">
    <div class="strong border">5. Библиотечно-информационное обслуживание пользователей</div>
    <div>
        <div class="right">Код по ОКЕИ: единица - 642</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">Категории пользователей</th>
                    <th rowspan="3">№ строки</th>
                    <th colspan="5">Выдано (просмотрено) документов из фондов данной библиотеки, единиц</th>
                    <th colspan="3">Выдано (просмотрено) документов из фондов других библиотек, единиц</th>
                    <th rowspan="3">Изготовлено для пользователей</th>
                    <th rowspan="3">Выполнено справок и консультаций, единиц</th>
                </tr>
                <tr>
                    <th rowspan="2">всего</th>
                    <th colspan="4">в том числе (из гр. 3)</th>
                    <th rowspan="2">всего</th>
                    <th colspan="2">в том числе (из гр. 8)</th>
                </tr>
                <tr>
                    <th>из фонда на физических носителях</th>
                    <th>из электронной (цифровой) библиотеки</th>
                    <th>инсталлированных документов</th>
                    <th>сетевых удаленных лицензионных документов</th>
                    <th>полученных по системе МБА и ММБА</th>
                    <th>доступных в виртуальных читальных залах</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>В стационарном режиме</td>
                    <td class="center">13</td>
                    <td class="center">{{P5L13V3}}</td>
                    <td class="center">{{P5L13V4}}</td>
                    <td class="center">{{P5L13V5}}</td>
                    <td class="center">{{P5L13V6}}</td>
                    <td class="center">{{P5L13V7}}</td>
                    <td class="center">{{P5L13V8}}</td>
                    <td class="center">{{P5L13V9}}</td>
                    <td class="center">{{P5L13V10}}</td>
                    <td class="center">{{P5L13V11}}</td>
                    <td class="center">{{P5L13V12}}</td>
                </tr>
                <tr>
                    <td>в том числе дети до 14 лет</td>
                    <td class="center">14</td>
                    <td class="center">{{P5L14V3}}</td>
                    <td class="center">{{P5L14V4}}</td>
                    <td class="center">{{P5L14V5}}</td>
                    <td class="center">{{P5L14V6}}</td>
                    <td class="center">{{P5L14V7}}</td>
                    <td class="center">{{P5L14V8}}</td>
                    <td class="center">{{P5L14V9}}</td>
                    <td class="center">{{P5L14V10}}</td>
                    <td class="center">{{P5L14V11}}</td>
                    <td class="center">{{P5L14V12}}</td>
                </tr>
                <tr>
                    <td>в том числе молодежь 14 - 30 лет</td>
                    <td class="center">15</td>
                    <td class="center">{{P5L15V3}}</td>
                    <td class="center">{{P5L15V4}}</td>
                    <td class="center">{{P5L15V5}}</td>
                    <td class="center">{{P5L15V6}}</td>
                    <td class="center">{{P5L15V7}}</td>
                    <td class="center">{{P5L15V8}}</td>
                    <td class="center">{{P5L15V9}}</td>
                    <td class="center">{{P5L15V10}}</td>
                    <td class="center">{{P5L15V11}}</td>
                    <td class="center">{{P5L15V12}}</td>
                </tr>
                <tr>
                    <td>Удаленные пользователи</td>
                    <td class="center">16</td>
                    <td class="center">{{P5L16V3}}</td>
                    <td class="center">{{P5L16V4}}</td>
                    <td class="center">{{P5L16V5}}</td>
                    <td class="center">X</td>
                    <td class="center">{{P5L16V7}}</td>
                    <td class="center">X</td>
                    <td class="center">X</td>
                    <td class="center">X</td>
                    <td class="center">{{P5L16V11}}</td>
                    <td class="center">{{P5L16V12}}</td>
                </tr>
                <tr>
                    <td>Всего (сумма строк 13 и 16)</td>
                    <td class="center">17</td>
                    <td class="center">{{P5L17V3}}</td>
                    <td class="center">{{P5L17V4}}</td>
                    <td class="center">{{P5L17V5}}</td>
                    <td class="center">{{P5L17V6}}</td>
                    <td class="center">{{P5L17V7}}</td>
                    <td class="center">{{P5L17V8}}</td>
                    <td class="center">{{P5L17V9}}</td>
                    <td class="center">{{P5L17V10}}</td>
                    <td class="center">{{P5L17V11}}</td>
                    <td class="center">{{P5L17V12}}</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>`,
    Proto: {
        P5L13V3: 0,
        P5L13V4: 0,
        P5L13V5: 0,
        P5L13V6: 0,
        P5L13V7: 0,
        P5L13V8: 0,
        P5L13V9: 0,
        P5L13V10: 0,
        P5L13V11: 0,
        P5L13V12: 0,

        P5L14V3: 0,
        P5L14V4: 0,
        P5L14V5: 0,
        P5L14V6: 0,
        P5L14V7: 0,
        P5L14V8: 0,
        P5L14V9: 0,
        P5L14V10: 0,
        P5L14V11: 0,
        P5L14V12: 0,

        P5L15V3: 0,
        P5L15V4: 0,
        P5L15V5: 0,
        P5L15V6: 0,
        P5L15V7: 0,
        P5L15V8: 0,
        P5L15V9: 0,
        P5L15V10: 0,
        P5L15V11: 0,
        P5L15V12: 0,

        P5L16V3: 0,
        P5L16V4: 0,
        P5L16V5: 0,
        P5L16V6: 0,
        P5L16V7: 0,
        P5L16V8: 0,
        P5L16V9: 0,
        P5L16V10: 0,
        P5L16V11: 0,
        P5L16V12: 0,

        P5L17V3: 0,
        P5L17V4: 0,
        P5L17V5: 0,
        P5L17V6: 0,
        P5L17V7: 0,
        P5L17V8: 0,
        P5L17V9: 0,
        P5L17V10: 0,
        P5L17V11: 0,
        P5L17V12: 0
    },
    Show: function () {
        if (!this.Parent.Updated) {
            this.Parent.RefreshData();
            this.Parent.Updated = true;
        }
    },
    Load: 'table',
    Methods: function () {
        this.RefreshData = function (data) {
            for (let key in this.Proto.Data)
                if (this.Proto.Data.hasOwnProperty(key))
                    this.Proto.Data[key] = data[key];
            this.Proto.Refresh();
        }
    }
});
},{}],88:[function(require,module,exports){
WDash.SixNK.SixNKPart6 = new Lure.Content({
    Name: 'SixNKPart6',
    Target: '',
    Type: 'SixNK-content',
    Parent: WDash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p6'
    },
    Content:
`<div class="data-part">
    <div class="strong border">6. Персонал библиотеки</div>
    <div>
        <div class="right">Код по ОКЕИ: единица - 642</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="5">№ строки</th>
                    <th rowspan="5">Штат библиотеки на конец отчетного года, единиц</th>
                    <th colspan="14">Численность работников, человек</th>
                </tr>
                <tr>
                    <th rowspan="4">всего</th>
                    <th rowspan="4">из них имеют инвалид-ность</th>
                    <th colspan="6">из них (из гр. 3) основной персонал библиотеки</th>
                    <th colspan="3">в том числе со стажем работы в библиотеках (из гр. 5)</th>
                    <th colspan="3">в том числе по возрасту (из гр. 5)</th>
                </tr>
                <tr>
                    <th rowspan="3">всего</th>
                    <th rowspan="3">Из них прошли обучение (инструктиро-вание) по вопросам, связанным с предоставле-нием услуг инвалидам (из гр. 3)</th>
                    <th colspan="4">из них имеют образование (из гр. 5)</th>
                    <th rowspan="3">от 0 до 3 лет</th>
                    <th rowspan="3">от 3 до 10 лет</th>
                    <th rowspan="3">свыше 10 лет</th>
                    <th rowspan="3">до 30 лет</th>
                    <th rowspan="3">от 30 до 55 лет</th>
                    <th rowspan="3">55 лет и старше</th>
                </tr>
                <tr>
                    <th colspan="2">высшее</th>
                    <th colspan="2">среднее профессиональное</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из них библио-течное (из гр. 7)</th>
                    <th>всего</th>
                    <th>из них библио-течное (из гр. 9)</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th><th>16</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">18</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>

            </tbody>
        </table>
    </div>
</div>`
});
},{}],89:[function(require,module,exports){
WDash.SixNK.SixNKPart7 = new Lure.Content({
    Name: 'SixNKPart7',
    Target: '',
    Type: 'SixNK-content',
    Parent: WDash.SixNK,
    Control: {
        Target: '.six-nk .req-tab.p7'
    },
    Content:
`<div class="data-part">
    <div class="strong border">7. Поступление и использование финансовых средств</div>
    <div>
        <div class="right">Код по ОКЕИ: тысяча рублей - 384</div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">№ строки</th>
                    <th rowspan="3">Поступило за год всего (сумма граф 3, 4, 5, 9)</th>
                    <th colspan="7">из них (из гр. 2)</th>
                </tr>
                <tr>
                    <th rowspan="2">бюджетные ассигнования  учредителя</th>
                    <th rowspan="2">финансирование из бюджетов других уровней</th>
                    <th rowspan="2">от приносящей доход деятельности</th>
                    <th colspan="3">из них (из гр.5)</th>
                    <th rowspan="2">от сдачи имущества в аренду</th>
                </tr>
                <tr>
                    <th>от основных видов уставной деятельности</th>
                    <th>благотворительные и спонсорские вклады</th>
                    <th>от иной приносящей доход деятельности</th>
                </tr>
                <tr>
                    <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">19</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>

            </tbody>
        </table>
    </div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">№ строки</th>
                    <th rowspan="3">Израсходовано, всего</th>
                    <th colspan="6">из них (из гр. 10)</th>
                </tr>
                <tr>
                    <th colspan="3">расходы на оплату труда</th>
                    <th colspan="3">на комплектование фонда</th>
                </tr>
                <tr>
                    <th>всего</th>
                    <th>из общих расходов на оплату труда (из гр. 11) основному персоналу</th>
                    <th>из них за счет собственных средств (из гр. 12)</th>
                    <th>всего (из гр. 10)</th>
                    <th>из них на подписку на доступ к удаленным сетевым ресурсам (из гр. 14)</th>
                    <th>из них за счет собственных средств (из гр. 15)</th>
                </tr>
                <tr>
                    <th>1</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th><th>16</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">19</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>

            </tbody>
        </table>
    </div>
    <div>
        <table>
            <thead>
                <tr>
                    <th rowspan="3">№ строки</th>
                    <th colspan="9">из них</th>
                </tr>
                <tr>
                    <th colspan="2">расходы на капитальный ремонт и реконструкцию</th>
                    <th colspan="3">расходы на приобретение (замену) оборудования</th>
                    <th colspan="2">на организацию и проведение мероприятий</th>
                    <th colspan="2">на информатизацию библиотечной деятельности, в т.ч. создание электронных каталогов и оцифровку библиотечного фонда</th>
                </tr>
                <tr>
                    <th>всего (из гр. 10)</th>
                    <th>из них за счет собственных средств</th>
                    <th>всего (из гр. 10)</th>
                    <th>из них для улучшения условий доступности для инвалидов и лиц с ОВЗ</th>
                    <th>из них за счет собственных средств (из гр. 19)</th>
                    <th>всего (из гр. 10)</th>
                    <th>из них за счет собственных средств</th>
                    <th>всего (из гр. 10)</th>
                    <th>из них за счет собственных средств</th>
                </tr>
                <tr>
                    <th>1</th><th>17</th><th>18</th><th>19</th><th>20</th><th>21</th><th>22</th><th>23</th><th>24</th><th>25</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">19</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                </tr>

            </tbody>
        </table>
    </div>
    <div class="flex-row wid-100">
        <div class="flex1">Должностное лицо, ответственное за предоставление статистической информации (лицо, уполномоченное предоставлять статистическую информацию от имени юридического лица)</div>
        <div class="divide mar-7 flex1"><div class="underline center">Заведующий библиотекой</div><div class="divide-sub">(должность)</div></div>
        <div class="divide mar-7 flex1"><div class="underline"></div><div class="divide-sub">(Ф.И.О.)</div></div>
        <div class="divide mar-7 flex1"><div class="underline"></div><div class="divide-sub">(подпись)</div></div>
    </div>
    <div class="flex-row wid-100">
        <div class="flex1"></div>
        <div class="divide mar-7 flex1"><div class="underline"></div><div class="divide-sub">(номер контактного телефона)</div></div>
        <div class="divide mar-7 flex1"><div class="underline"></div><div class="divide-sub">(E-mail)</div></div>
        <div class="divide mar-7 flex1"><div class="center underline">«______» ________________ 20_____ год</div><div class="divide-sub">(дата составления документа)</div></div>
        
    </div>
</div>`

});
},{}],90:[function(require,module,exports){
let CheckBoxSelector = require('../../_common/filter-selector/filter-selector.js');
let SixNK = new Lure.Content({
    Name: 'SixNK',
    Target: '',
    Type: 'wdash-content',
    Parent: WDash,
    Control: {
        Target: '#nav-wsix-nk'
    },
    Content:
`<div class="six-nk">
    <div class="diary-bread l-row">
        <div class="li date-range">
            <div class="calendar-icon">&#128198;</div>
            <div class="dates"></div>
            <div class="dates-result">
                <select class="select-six-nk-range">
                    <option value="0">Год</option>
                    <option value="1" {{SelectedQ1}}>1 Квартал</option>
                    <option value="2" {{SelectedQ2}}>2 Квартал</option>
                    <option value="3" {{SelectedQ3}}>3 Квартал</option>
                    <option value="4" {{SelectedQ4}}>4 Квартал</option>
                </select>
            </div>
        </div>
        <div class="li l-row l-flexa-center flex-100">
            <div>Подразделение: &nbsp;&nbsp;</div>
            <div class="flex-100 library-tree-control strong">__</div>
        </div>
        <div class="li button-holder l-row">
            <button class="l-button button btn-refresh">Обновить</button> 
        </div>
        <div class="li button-holder l-row">
            <button class="l-button button button-get-xls">Экспорт</button>
        </div> 
    </div>
    <div class="part-header">
        <div class="req-tab active main">ГЛАВНАЯ</div>
        <div class="req-tab p1">МАТЕРИАЛЬНО-ТЕХНИЧЕСКАЯ БАЗА</div>
        <div class="req-tab p2">ФОРМИРОВАНИЕ ФОНДА НА ФИЗИЧЕСКИХ НОСИТЕЛЯХ</div>
        <div class="req-tab p3">ЭЛЕКТРОННЫЕ РЕСУРСЫ</div>
        <div class="req-tab p4">ПОСЕЩЕНИЯ БИБЛИОТЕКИ</div>
        <div class="req-tab p5">ИНФОРМАЦИОННОЕ ОБСЛУЖИВАНИЕ</div>
        <div class="req-tab p6">ПЕРСОНАЛ</div>
        <div class="req-tab p7">ФИНАНСЫ</div>
    </div>
    <div class="data-tables">
        
    </div>
</div>`,
    GetSet: {
        get CurrentLibraries() {
            return this.Proto.Data.LibraryIDListSelected;
        },
    },
    Proto: {
        DatesResult: ({1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[Math.floor(((new Date).getMonth()) / 3) + 1],
        SelectedQ1: Math.floor(((new Date).getMonth()) / 3) + 1 === 1 ? 'selected' : '',
        SelectedQ2: Math.floor(((new Date).getMonth()) / 3) + 1 === 2 ? 'selected' : '',
        SelectedQ3: Math.floor(((new Date).getMonth()) / 3) + 1 === 3 ? 'selected' : '',
        SelectedQ4: Math.floor(((new Date).getMonth()) / 3) + 1 === 4 ? 'selected' : ''
    },
    Show: function () {
        this.RefreshData();
    },
    Props: function(){
        this.ButtonGetXLS = this.Select('.button-get-xls');
        this.ButtonRefresh = this.Select('.btn-refresh');
    },
    Refresh: function () {
        if (this.isVisible)
            this.RefreshData();
    },
    Methods: function () {
/*        this.DateChanged = function (val) {
           console.log(val);
        };*/
        this.RefreshData = function () {
            // this.Proto.Data.DatesResult = ({1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[parseInt(this.RangeSelector.value)];
            this.SixNKMain.Proto.SetProperty('DateRange',  ({0: 'Годовая', 1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[parseInt(this.RangeSelector.value)]);
            this.SixNKPart4.Load.Show();
            this.SixNKPart5.Load.Show();
            api.Diary_Summary_6NK_Get(this.CurrentLibraries, (new Date).getFullYear(), this.RangeSelector.value, {
                Then: r => {
                    this.SixNKPart4.RefreshData(r[0]);
                    this.SixNKPart5.RefreshData(r[0]);
                },
                Finally: () => {
                    this.SixNKPart4.Load.Hide();
                    this.SixNKPart5.Load.Hide();
                }
            });
            this.Updated = true;
        };
        this.GetXLS = function () {
            //InputBox.Hide();
            //this.Load.Show();
            Lure.Button.Lock(this.ButtonGetXLS);
            let Dt = Lure.Date();
            api.Diary_Summary_6NK_GetXLS(this.CurrentLibraries, Dt.Year, this.RangeSelector.value, {
                Then: (Blob)=>{
                    Lure.SaveBlob(Blob, `6-НК ${Dt.Format('YYYY')}.xlsx`);
                },
                Catch: ()=>{
                    Lure.System.Error('Невозможно получить отчет');
                },
                Finally: ()=>{
                    Lure.Button.Release(this.ButtonGetXLS);
                    this.Load.Hide();
                },
            })
        };
    },
    AfterBuild: function () {
        new LibraryTree(this, this.Select('.library-tree-control'), {MultiSelect: true});
        // this.SixNKMain.Proto.SetProperty('DateRange',  ({0: 'Годовая', 1: '1 Квартал', 2: '2 Квартал', 3: '3 Квартал', 4: '4 Квартал', })[this.Proto.Data.DatesResult]);

        this.RangeSelector = this.Select('.select-six-nk-range');
        this.RangeSelector.onchange = () => this.RefreshData();
        this.ButtonGetXLS.addEventListener('click', this.GetXLS);
        this.ButtonRefresh.addEventListener('click', this.RefreshData);
    }
});
window.WDash.SixNK = SixNK;
require('./parts/main-part.js');
require('./parts/part1.js');
require('./parts/part2.js');
require('./parts/part3.js');
require('./parts/part4.js');
require('./parts/part5.js');
require('./parts/part6.js');
require('./parts/part7.js');

},{"../../_common/filter-selector/filter-selector.js":104,"./parts/main-part.js":82,"./parts/part1.js":83,"./parts/part2.js":84,"./parts/part3.js":85,"./parts/part4.js":86,"./parts/part5.js":87,"./parts/part6.js":88,"./parts/part7.js":89}],91:[function(require,module,exports){
WDash.WDashSummary.Part1 = new Lure.Content({
    Name: 'DashPart1',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Visible: true,
    Control:{
        Target: '#nav-wdash-summ-p1'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected p11">ЗАПИСЬ И ПОСЕЩЕНИЯ</div>
      <div class="req-tab p12">МЕРОПРИЯТИЯ И КЛУБЫ</div>
   </div>
   <table class="data-table p11 fixed-height">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего</th>
            <th colspan="1" rowspan="2" >Вновь записавшихся</th>
            <th colspan="1" rowspan="2" >Всего стационар</th>
            <th colspan="2" rowspan="1" >Возраст</th>
            <th colspan="1" rowspan="2" >Удаленные пользователи</th>
            <th colspan="5" rowspan="1" >Школьники</th>
            <th colspan="4" rowspan="1" >Отдельные группы</th>
            <th colspan="1" rowspan="2" >Всего посещений</th>
            <th colspan="3" rowspan="1" >В том числе</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >до 14 лет</th>
            <th colspan="1" rowspan="1" >14-30 лет</th>
            <th colspan="1" rowspan="1" >д/ш</th>
            <th colspan="1" rowspan="1" >7-10 лет</th>
            <th colspan="1" rowspan="1" >11-14 лет</th>
            <th colspan="1" rowspan="1" >Старшеклассники</th>
            <th colspan="1" rowspan="1" >РДЧ</th>
            <th colspan="1" rowspan="1" >Пенсионеры</th>
            <th colspan="1" rowspan="1" >Служащие</th>
            <th colspan="1" rowspan="1" >Студенты</th>
            <th colspan="1" rowspan="1" >Прочие</th>
            <th colspan="1" rowspan="1" >Стационар</th>
            <th colspan="1" rowspan="1" >Внестационар</th>
            <th colspan="1" rowspan="1" >Интернет</th>
         </tr>
      </thead>
      <tbody>
         {{#each p11}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P1V2">{{P1V2}}</td>
            <td data-prop="P1V3">{{P1V3}}</td>
            <td data-prop="P1V4">{{P1V4}}</td>
            <td data-prop="P1V5">{{P1V5}}</td>
            <td data-prop="P1V6">{{P1V6}}</td>
            <td data-prop="P1V7">{{P1V7}}</td>
            <td data-prop="P1V8">{{P1V8}}</td>
            <td data-prop="P1V9">{{P1V9}}</td>
            <td data-prop="P1V10">{{P1V10}}</td>
            <td data-prop="P1V11">{{P1V11}}</td>
            <td data-prop="P1V12">{{P1V12}}</td>
            <td data-prop="P1V13">{{P1V13}}</td>
            <td data-prop="P1V14">{{P1V14}}</td>
            <td data-prop="P1V15">{{P1V15}}</td>
            <td data-prop="P1V16">{{P1V16}}</td>
            <td data-prop="P1V17">{{P1V17}}</td>
            <td data-prop="P1V18">{{P1V18}}</td>
            <td data-prop="P1V19">{{P1V19}}</td>
            <td data-prop="P1V20">{{P1V20}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
   <table class="data-table p12 fixed-height none">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего посещений мероприятия стационар</th>
            <th colspan="2" rowspan="1" >Посещения мероприятий</th>
            <th colspan="1" rowspan="2" >Всего мероприятий</th>
            <th colspan="2" rowspan="1" >Количество мероприятий</th>
            <th colspan="1" rowspan="2" >Всего посещений мероприятия внестационар</th>
            <th colspan="2" rowspan="1" >Посещения мероприятий</th>
            <th colspan="1" rowspan="2" >Всего мероприятий внестационар</th>
            <th colspan="2" rowspan="1" >Посещения мероприятий</th>
            <th colspan="2" rowspan="1" >Бесплатные клубы</th>
            <th colspan="2" rowspan="1" >Платные клубы</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Бесплатные</th>
            <th colspan="1" rowspan="1" >Платные</th>
            <th colspan="1" rowspan="1" >Бесплатные</th>
            <th colspan="1" rowspan="1" >Платные</th>
            <th colspan="1" rowspan="1" >Бесплатные</th>
            <th colspan="1" rowspan="1" >Платные</th>
            <th colspan="1" rowspan="1" >Бесплатные</th>
            <th colspan="1" rowspan="1" >Платные</th>
            <th colspan="1" rowspan="1" >Количество заседаний</th>
            <th colspan="1" rowspan="1" >Число посещений</th>
            <th colspan="1" rowspan="1" >Количество заседаний</th>
            <th colspan="1" rowspan="1" >Число посещений</th>
         </tr>
      </thead>
      <tbody>
         {{#each p12}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P1V21">{{P1V21}}</td>
            <td data-prop="P1V22">{{P1V22}}</td>
            <td data-prop="P1V23">{{P1V23}}</td>
            <td data-prop="P1V24">{{P1V24}}</td>
            <td data-prop="P1V25">{{P1V25}}</td>
            <td data-prop="P1V26">{{P1V26}}</td>
            <td data-prop="P1V27">{{P1V27}}</td>
            <td data-prop="P1V28">{{P1V28}}</td>
            <td data-prop="P1V29">{{P1V29}}</td>
            <td data-prop="P1V30">{{P1V30}}</td>
            <td data-prop="P1V31">{{P1V31}}</td>
            <td data-prop="P1V32">{{P1V32}}</td>
            <td data-prop="P1V33">{{P1V33}}</td>
            <td data-prop="P1V34">{{P1V34}}</td>
            <td data-prop="P1V35">{{P1V35}}</td>
            <td data-prop="P1V36">{{P1V36}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Show: function () {
        this.Proto.Refresh()
    },
    Props: function () {
        this.SelectedTab = this.Select('.req-tab.selected');
        this.T_p11 = this.Select('table.p11');
        this.T_p12 = this.Select('table.p12');
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.part-header .req-tab', e => {
            if (e.currentTarget === this.SelectedTab) return;
            this.SelectedTab.classList.remove('selected');
            this.SelectedTab = e.currentTarget;
            let cl = e.currentTarget.classList;
            cl.add('selected');
            if (cl.contains('p11')) {
                this.T_p11.classList.remove('none');
                this.T_p12.classList.add('none');
            }
            if (cl.contains('p12')) {
                this.T_p11.classList.add('none');
                this.T_p12.classList.remove('none');
            }
        })
    }
});
},{}],92:[function(require,module,exports){
WDash.WDashSummary.Part2 = new Lure.Content({
    Name: 'DashPart2',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-wdash-summ-p2'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected p21">КНИГИ И БРОШЮРЫ</div>
      <div class="req-tab p22">ДОКУМЕНТЫ И КОПИИ</div>
      <div class="req-tab p23">СПРАВКИ И КОНСУЛЬТАЦИИ</div>
   </div>
   <table class="data-table fixed-height p21">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего выдано</th>
            <th colspan="5" rowspan="1" >По типу носителя</th>
            <th colspan="11" rowspan="1" >По содержанию</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >На физ носителях</th>
            <th colspan="1" rowspan="1" >Внестационар и на дому (6.1, 6.2)</th>
            <th colspan="1" rowspan="1" >Из электронной библиотеки</th>
            <th colspan="1" rowspan="1" >Инсталированные</th>
            <th colspan="1" rowspan="1" >Удаленные лицензионные</th>
            <th colspan="1" rowspan="1" >ОПЛ</th>
            <th colspan="1" rowspan="1" >Е/зн</th>
            <th colspan="1" rowspan="1" >Техника</th>
            <th colspan="1" rowspan="1" >С/х</th>
            <th colspan="1" rowspan="1" >Искусство</th>
            <th colspan="1" rowspan="1" >Спорт</th>
            <th colspan="1" rowspan="1" >81.83</th>
            <th colspan="1" rowspan="1" >Справочники</th>
            <th colspan="1" rowspan="1" >Дет. лит-ра</th>
            <th colspan="1" rowspan="1" >Худ. лит-ра</th>
            <th colspan="1" rowspan="1" >Дополнит.</th>
         </tr>
      </thead>
      <tbody>
         {{#each p21}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P2V2">{{P2V2}}</td>
            <td data-prop="P2V3">{{P2V3}}</td>
            <td data-prop="P2V4">{{P2V4}}</td>
            <td data-prop="P2V5">{{P2V5}}</td>
            <td data-prop="P2V6">{{P2V6}}</td>
            <td data-prop="P2V7">{{P2V7}}</td>
            <td data-prop="P2V8">{{P2V8}}</td>
            <td data-prop="P2V9">{{P2V9}}</td>
            <td data-prop="P2V10">{{P2V10}}</td>
            <td data-prop="P2V11">{{P2V11}}</td>
            <td data-prop="P2V12">{{P2V12}}</td>
            <td data-prop="P2V13">{{P2V13}}</td>
            <td data-prop="P2V14">{{P2V14}}</td>
            <td data-prop="P2V15">{{P2V15}}</td>
            <td data-prop="P2V16">{{P2V16}}</td>
            <td data-prop="P2V17">{{P2V17}}</td>
            <td data-prop="P2V18">{{P2V18}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
   <table class="data-table p22 fixed-height none">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="6" rowspan="1" >Выдано документов детям до 14 лет</th>
            <th colspan="6" rowspan="1" >Выдано документов пользователям 14-30 лет</th>
            <th colspan="3" rowspan="1" >Изготовлено и выдано копий</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Всего выдано</th>
            <th colspan="1" rowspan="1" >На физ носителях</th>
            <th colspan="1" rowspan="1" >Внестационар и на дому (6.1, 6.2)</th>
            <th colspan="1" rowspan="1" >Из электронной библиотеки</th>
            <th colspan="1" rowspan="1" >Инсталированные</th>
            <th colspan="1" rowspan="1" >Удаленные лицензионные</th>
            <th colspan="1" rowspan="1" >Всего выдано</th>
            <th colspan="1" rowspan="1" >На физ носителях</th>
            <th colspan="1" rowspan="1" >Внестационар и на дому (6.1, 6.2)</th>
            <th colspan="1" rowspan="1" >Из электронной библиотеки</th>
            <th colspan="1" rowspan="1" >Инсталированные</th>
            <th colspan="1" rowspan="1" >Удаленные лицензионные</th>
            <th colspan="1" rowspan="1" >Всего</th>
            <th colspan="1" rowspan="1" >Детям до 14 лет</th>
            <th colspan="1" rowspan="1" >Пользователям 14-30 лет</th>
         </tr>
      </thead>
      <tbody>
         {{#each p22}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P2V19">{{P2V19}}</td>
            <td data-prop="P2V20">{{P2V20}}</td>
            <td data-prop="P2V21">{{P2V21}}</td>
            <td data-prop="P2V22">{{P2V22}}</td>
            <td data-prop="P2V23">{{P2V23}}</td>
            <td data-prop="P2V24">{{P2V24}}</td>
            <td data-prop="P2V25">{{P2V25}}</td>
            <td data-prop="P2V26">{{P2V26}}</td>
            <td data-prop="P2V27">{{P2V27}}</td>
            <td data-prop="P2V28">{{P2V28}}</td>
            <td data-prop="P2V29">{{P2V29}}</td>
            <td data-prop="P2V30">{{P2V30}}</td>
            <td data-prop="P2V31">{{P2V31}}</td>
            <td data-prop="P2V32">{{P2V32}}</td>
            <td data-prop="P2V33">{{P2V33}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
   <table class="data-table p23 fixed-height none">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего выдано из фондов других библиотек</th>
            <th colspan="2" rowspan="1" >Выдано (просмотрено) док-ов из фондов других библиотек, единиц</th>
            <th colspan="1" rowspan="2" >Всего выполнено справок и консультаций</th>
            <th colspan="2" rowspan="1" >По возрасту</th>
            <th colspan="5" rowspan="1" >По типу</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >По системе МБА и ММБА</th>
            <th colspan="1" rowspan="1" >Виртуальные читальные залы</th>
            <th colspan="1" rowspan="1" >до 14 лет</th>
            <th colspan="1" rowspan="1" >14-30 лет</th>
            <th colspan="1" rowspan="1" >Тематические</th>
            <th colspan="1" rowspan="1" >Фактографич.</th>
            <th colspan="1" rowspan="1" >Библиографич.</th>
            <th colspan="1" rowspan="1" >Консультации</th>
            <th colspan="1" rowspan="1" >Удаленные справки</th>
         </tr>
      </thead>
      <tbody>
         {{#each p23}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P2V34">{{P2V34}}</td>
            <td data-prop="P2V35">{{P2V35}}</td>
            <td data-prop="P2V36">{{P2V36}}</td>
            <td data-prop="P2V37">{{P2V37}}</td>
            <td data-prop="P2V38">{{P2V38}}</td>
            <td data-prop="P2V39">{{P2V39}}</td>
            <td data-prop="P2V40">{{P2V40}}</td>
            <td data-prop="P2V41">{{P2V41}}</td>
            <td data-prop="P2V42">{{P2V42}}</td>
            <td data-prop="P2V43">{{P2V43}}</td>
            <td data-prop="P2V44">{{P2V44}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Show: function () {

    },
    Props: function () {
        this.SelectedTab = this.Select('.req-tab.selected');
        this.T_p21 = this.Select('table.p21');
        this.T_p22 = this.Select('table.p22');
        this.T_p23 = this.Select('table.p23');
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.part-header .req-tab', e => {
            if (e.currentTarget === this.SelectedTab) return;
            this.SelectedTab.classList.remove('selected');
            this.SelectedTab = e.currentTarget;
            let cl = e.currentTarget.classList;
            cl.add('selected');
            if (cl.contains('p21')) {
                this.T_p21.classList.remove('none');
                this.T_p22.classList.add('none');
                this.T_p23.classList.add('none');
            }
            if (cl.contains('p22')) {
                this.T_p21.classList.add('none');
                this.T_p22.classList.remove('none');
                this.T_p23.classList.add('none');
            }
            if (cl.contains('p23')) {
                this.T_p21.classList.add('none');
                this.T_p22.classList.add('none');
                this.T_p23.classList.remove('none');
            }
        })
    }
});
},{}],93:[function(require,module,exports){
WDash.WDashSummary.Part3 = new Lure.Content({
    Name: 'DashPart3',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-wdash-summ-p3'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected">УЧЕТ ВЫДАЧИ ЭЛЕКТРОННЫХ РЕСУРСОВ</div>
   </div>
   <table class="data-table fixed-height">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Всего выдано</th>
            <th colspan="4" rowspan="1" >По типу носителя</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Инсталлированные документы</th>
            <th colspan="1" rowspan="1" >Сетевые удаленные лицензионные</th>
            <th colspan="1" rowspan="1" >Из электронной (цифровой) библиотеки</th>
            <th colspan="1" rowspan="1" >DVD / CD-ROM</th>
         </tr>
      </thead>
      <tbody>
         {{#each p3}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P3V2">{{P3V2}}</td>
            <td data-prop="P3V3">{{P3V3}}</td>
            <td data-prop="P3V4">{{P3V4}}</td>
            <td data-prop="P3V5">{{P3V5}}</td>
            <td data-prop="P3V6">{{P3V6}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Show: function () {

    }
});
},{}],94:[function(require,module,exports){
WDash.WDashSummary.Part4 = new Lure.Content({
    Name: 'DashPart4',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-wdash-summ-p4'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected">КУЛЬТУРНО-МАССОВАЯ РАБОТА</div>
   </div>
   <table class="data-table">
      <thead class="thead">
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Даты проведения</th>
            <th colspan="1" rowspan="2" >Название мероприятия</th>
            <th colspan="1" rowspan="2" >Форма проведения</th>
            <th colspan="5" rowspan="1" >Стационар</th>
            <th colspan="5" rowspan="1" >Внестационар</th>
            <th colspan="3" rowspan="1" >Бесплатные клубы</th>
            <th colspan="3" rowspan="1" >Платные клубы</th>
            <th colspan="1" rowspan="2" >Выездное (название)</th>
            <th colspan="1" rowspan="2" >Ответственный</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Бесплатно</th>
            <th colspan="1" rowspan="1" >Платно</th>
            <th colspan="1" rowspan="1" >Инвалиды</th>
            <th colspan="1" rowspan="1" >Мигранты</th>
            <th colspan="1" rowspan="1" >Проф. семинары, лекции, и т.п.</th>
            <th colspan="1" rowspan="1" >Бесплатно</th>
            <th colspan="1" rowspan="1" >Платно</th>
            <th colspan="1" rowspan="1" >Инвалиды</th>
            <th colspan="1" rowspan="1" >Мигранты</th>
            <th colspan="1" rowspan="1" >Проф. семинары, лекции, и т.п.</th>
            <th colspan="1" rowspan="1" >Посещения</th>
            <th colspan="1" rowspan="1" >Инвалиды</th>
            <th colspan="1" rowspan="1" >Мигранты</th>
            <th colspan="1" rowspan="1" >Посещения</th>
            <th colspan="1" rowspan="1" >Инвалиды</th>
            <th colspan="1" rowspan="1" >Мигранты</th>
         </tr>
      </thead>
      <tbody>
         {{IsEmpty}}
         {{#each Part4}}
         <tr>
            <td data-prop="P4V1">{{DateStart}}<br>{{DateFinish}}</td>
            <td data-prop="P4V2" style="white-space: pre-wrap;">{{P4V2}}</td>
            <td data-prop="P4V3">{{P4V3}}</td>
            <td data-prop="P4V4">{{P4V4}}</td>
            <td data-prop="P4V5">{{P4V5}}</td>
            <td data-prop="P4V6">{{P4V6}}</td>
            <td data-prop="P4V7">{{P4V7}}</td>
            <td data-prop="P4V8">{{P4V8}}</td>
            <td data-prop="P4V9">{{P4V9}}</td>
            <td data-prop="P4V10">{{P4V10}}</td>
            <td data-prop="P4V11">{{P4V11}}</td>
            <td data-prop="P4V12">{{P4V12}}</td>
            <td data-prop="P4V13">{{P4V13}}</td>
            <td data-prop="P4V14">{{P4V14}}</td>
            <td data-prop="P4V15">{{P4V15}}</td>
            <td data-prop="P4V16">{{P4V16}}</td>
            <td data-prop="P4V17">{{P4V17}}</td>
            <td data-prop="P4V18">{{P4V18}}</td>
            <td data-prop="P4V19">{{P4V19}}</td>
            <td data-prop="P4V20" title='{{P4V20}}' class="cut-cell">{{P4V20}}</td>
            <td data-prop="P4V21" title='{{P4V21}}' class="cut-cell">{{P4V21}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Proto: {
        IsEmpty: ''
    },
    PropFormat: {
        DateStart: x => Lure.Date(x).Format('DD.MM.YYYY'),
        DateFinish: x => Lure.Date(x).Format('DD.MM.YYYY'),
        P4V3: x => Dictionary.EventTypeDict[x] || x,
        'IsEmpty': (x, p) => (p.Part4 || []).length > 0 ? '' : `<tr><td class="empty-row" colspan="21">Нет данных</td></tr>`,
        'P4V21': (UserID)=>{
            let User = Lure.User.Cache.UserList.Where(x=>x.ID === UserID).FirstOrDefault();
            if (User === null)
                return 'Не задан *';
            return User.Name
        }
    },
    Show: function () {

    }
});
},{}],95:[function(require,module,exports){
WDash.WDashSummary.Part5 = new Lure.Content({
    Name: 'DashPart5',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-wdash-summ-p5'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected">ВЫСТАВКИ</div>
   </div>
   <table class="data-table">
      <thead>
         <tr class="trow head-1">
            <th colspan="1" rowspan="1" >Дата</th>
            <th colspan="1" rowspan="1" >Название</th>
            <th colspan="1" rowspan="1" >Количество представленных документов</th>
            <th colspan="1" rowspan="1" >Количество выданных документов</th>
            <th colspan="1" rowspan="1" >Ответственный</th>
            <th colspan="1" rowspan="1" >Примечания</th>
         </tr>
      </thead>
      <tbody>
         {{IsEmpty}}
         {{#each Part5}}
         <tr>
            <td data-prop="DATES">{{DateStart}} - {{DateFinish}}</td>
            <td data-prop="P5V2">{{P5V2}}</td>
            <td data-prop="P5V3">{{P5V3}}</td>
            <td data-prop="P5V4">{{P5V4}}</td>
            <td data-prop="P5V5">{{P5V5}}</td>
            <td data-prop="P5V6">{{P5V6}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Proto: {
        IsEmpty: ''
    },
    PropFormat: {
        IsEmpty: (x, p) => (p.Part5 || []).length > 0 ? '' : `<tr><td class="empty-row" colspan="6">Нет данных</td></tr>`,
        DateStart: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
        DateFinish: (d)=>Lure.Date(d).Format('DD.MM.YYYY'),
        'P5V5': (UserID)=>{
            let User = Lure.User.Cache.UserList.Where(x=>x.ID === UserID).FirstOrDefault();
            if (User === null)
                return 'Не задан *';
            return User.Name
        }
    },
    Show: function () {

    }
});
},{}],96:[function(require,module,exports){
WDash.WDashSummary.Part6 = new Lure.Content({
    Name: 'DashPart6',
    Target: '.summary-content',
    Type: 'dash-summary-content',
    Control:{
        Target: '#nav-wdash-summ-p6'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
`<div>
   <div class="part-header">
      <div class="req-tab selected p61">ПОЛЬЗОВАТЕЛИ НА ДОМУ</div>
      <div class="req-tab p62">РАБОТА ПЕРЕДВИЖЕК</div>
   </div>
   <table class="data-table p61 fixed-height">
      <thead>
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Зарегестрировано пользователей</th>
            <th colspan="1" rowspan="2" >Из них инвалидов</th>
            <th colspan="1" rowspan="2" >Выдано книг на дом</th>
            <th colspan="3" rowspan="1" >Работа с передвижками</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >Посещение пользователей</th>
            <th colspan="1" rowspan="1" >Консультация пользователей</th>
            <th colspan="1" rowspan="1" >Семинар передвижников</th>
         </tr>
      </thead>
      <tbody>
         {{#each p61}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P6V2">{{P61V2}}</td>
            <td data-prop="P6V3">{{P61V3}}</td>
            <td data-prop="P6V4">{{P61V4}}</td>
            <td data-prop="P6V5">{{P61V5}}</td>
            <td data-prop="P6V6">{{P61V6}}</td>
            <td data-prop="P6V7">{{P61V7}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
   <table class="data-table p62 fixed-height none">
      <thead>
         <tr class="trow head-1">
            <th colspan="1" rowspan="2" >Дата</th>
            <th colspan="1" rowspan="2" >Количество передвижек</th>
            <th colspan="1" rowspan="2" >Число читателей в них</th>
            <th colspan="1" rowspan="2" >Всего выдано книг</th>
            <th colspan="11" rowspan="1" >По тематике</th>
            <th colspan="2" rowspan="1" >Массовые мероприятия</th>
         </tr>
         <tr class="trow head-2">
            <th colspan="1" rowspan="1" >ОПЛ</th>
            <th colspan="1" rowspan="1" >Е/зн</th>
            <th colspan="1" rowspan="1" >Техника</th>
            <th colspan="1" rowspan="1" >С/х</th>
            <th colspan="1" rowspan="1" >Искусство</th>
            <th colspan="1" rowspan="1" >Спорт</th>
            <th colspan="1" rowspan="1" >81.83</th>
            <th colspan="1" rowspan="1" >Справочники</th>
            <th colspan="1" rowspan="1" >Дет. лит-ра</th>
            <th colspan="1" rowspan="1" >Худ. лит-ра</th>
            <th colspan="1" rowspan="1" >Дополнит.</th>
            <th colspan="1" rowspan="1" >Количество</th>
            <th colspan="1" rowspan="1" >Число обслуженных</th>
         </tr>
      </thead>
      <tbody>
         {{#each p62}}
         <tr class="{{#if ($this.QQQ===-2) ? 'special-day' : ''}} {{#if ($this.IsDayOff) ? 'day-off' : ''}}">
            <td data-prop="DV">{{DateValue}}</td>
            <td data-prop="P62V2">{{P62V2}}</td>
            <td data-prop="P62V3">{{P62V3}}</td>
            <td data-prop="P62V4">{{P62V4}}</td>
            <td data-prop="P62V5">{{P62V5}}</td>
            <td data-prop="P62V6">{{P62V6}}</td>
            <td data-prop="P62V7">{{P62V7}}</td>
            <td data-prop="P62V8">{{P62V8}}</td>
            <td data-prop="P62V9">{{P62V9}}</td>
            <td data-prop="P62V10">{{P62V10}}</td>
            <td data-prop="P62V11">{{P62V11}}</td>
            <td data-prop="P62V12">{{P62V12}}</td>
            <td data-prop="P62V13">{{P62V13}}</td>
            <td data-prop="P62V14">{{P62V14}}</td>
            <td data-prop="P62V15">{{P62V15}}</td>
            <td data-prop="P62V16">{{P62V16}}</td>
            <td data-prop="P62V17">{{P62V17}}</td>
         </tr>
         {{#endeach}}
      </tbody>
   </table>
</div>`,
    Show: function () {

    },
    Props: function () {
        this.SelectedTab = this.Select('.req-tab.selected');
        this.T_p61 = this.Select('table.p61');
        this.T_p62 = this.Select('table.p62');
    },
    AfterBuild: function () {
        this.AddEventListener('click', '.part-header .req-tab', e => {
            if (e.currentTarget === this.SelectedTab) return;
            this.SelectedTab.classList.remove('selected');
            this.SelectedTab = e.currentTarget;
            let cl = e.currentTarget.classList;
            cl.add('selected');
            if (cl.contains('p61')) {
                this.T_p61.classList.remove('none');
                this.T_p62.classList.add('none');
            }
            if (cl.contains('p62')) {
                this.T_p61.classList.add('none');
                this.T_p62.classList.remove('none');
            }

        })
    }
});
},{}],97:[function(require,module,exports){
let CheckBoxSelector = require('../../_common/filter-selector/filter-selector.js');
WDash.WDashSummary = new Lure.Content({
    //Disabled: true,
    Name: 'WDashSummary',
    Target: '',
    Type: 'wdash-content',
    Control: {
        Target: '#nav-wdash-summary'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content:
        `<div class="wdash-summary">
            <div class="diary-bread l-row">
                <div class="li date-range">
                    <div class="calendar-icon">&#128198;</div>
                    <div class="dates"></div>
                    <div class="dates-result">{{DatesResult}}</div>
                </div>
                <div class="li l-row l-flexa-center flex-100">
                    <div>Подразделение: &nbsp;&nbsp;</div>
                    <div class="flex-100 library-tree-control strong">__</div>
                </div>
                <div class="li button-holder l-row">
                    <button class="l-button button btn-refresh">Обновить</button> 
                </div>
                <div class="li button-holder l-row">
                    <button class="l-button button button-get-xls">Экспорт</button>
                </div> 
            </div>
            <div class="summary-content"></div>
        </div>`,
    Proto: {
        // Months: (new Array((new Date).getMonth() + 1)).Select((x, i) => ({MNum: i + 1, Name: Lure.Date(Lure.Date().MonthStart.setMonth(i)).Format('MMMM YYYY'), Now: (new Date).getMonth() === i ? 'selected' : ''})),
        Part1236: [],
        Part4: [],
        Part5: [],
        DatesResult: [(new Date).getMonth() + 1]
    },
    PropFormat: {
        DatesResult: (x) => x.length > 0 ? x.map(m => Lure.Date(Lure.Date().MonthStart.setMonth(m - 1)).Format('MMMM')).join(', ') : 'Не выбрано'
    },
    GetSet: {
        get CurrentLibraries() {
            return this.Proto.Data.LibraryIDListSelected;
        },
    },
    Refresh: function () {
        // console.log('REFRESH');
        if (this.isVisible) {
            this.RefreshData();
            this.isRefreshed = true;
        }
    },
    Show: function () {
        // console.log('SHOW');
        if (!this.isRefreshed) {
            this.Refresh();
            this.isRefreshed = true;
        }
    },
    Load: '',
    Props: function () {
        let m = (new Date()).getMonth();
        this.DateSelector = this.Select('.dates-selector');
        this.CurDates = [((new Date).getMonth() + 1) + ''];

        this.ButtonExport = this.Select('.button-get-xls');
        this.ButtonRefresh = this.Select('.btn-refresh');
    },
    Methods: function () {
        this.RefreshData = function () {
            if (this.CurrentLibraries.length < 1) return;

            this.Load.Show();
            let [dateStart, dateEnd] = [Lure.Date(Lure.Date().MonthStart.setMonth(this.CurDates[0] - 1)).Date, Lure.Date(Lure.Date().MonthStart.setMonth(this.CurDates.Last() - 1)).MonthEnd];
            // console.log([dateStart, dateEnd]);

            api.Diary_Summary_Part1236View_Get(this.CurrentLibraries, (new Date).getFullYear(), this.CurDates, {})
                .then(data => {
                    let res = {p11: [], p12: [], p21: [], p22: [], p23: [], p3: [], p61: [], p62: []};
                    for (let r of data) {
                        switch (r.DateValue) {
                            case -1:
                                r.DateValue = 'Ранее';
                                r.QQQ = -2;
                                break;
                            case 100:
                                r.DateValue = 'Месяц';
                                r.QQQ = -2;
                                break;
                            case 101:
                                r.DateValue = 'Сумма';
                                r.QQQ = -2;
                                break;
                        }
                        let [p11, p12, p21, p22, p23, p3, p61, p62] = (new Array(8)).Select(x => ({DateValue: r.DateValue, QQQ: r.QQQ, IsDayOff: r.IsDayOff}));
                        for (let k in r)
                            if (r.hasOwnProperty(k))
                                switch (k[1]) {
                                    case '1':
                                        parseInt(k.substr(3)) >= 21 ? p12[k] = r[k] : p11[k] = r[k];
                                        break;
                                    case '2':
                                        if (parseInt(k.substr(3)) >= 34)
                                            p23[k] = r[k];
                                        else {
                                            if (parseInt(k.substr(3)) <= 18)
                                                p21[k] = r[k];
                                            else p22[k] = r[k];
                                        }
                                        break;
                                    case '3':
                                        p3[k] = r[k];
                                        break;
                                    case '6':
                                        if (k[2] === '1') p61[k] = r[k];
                                        if (k[2] === '2') p62[k] = r[k];
                                        break;
                                }

                        res.p11.push(p11);  // P1V2 .. P1V20 - p11
                        res.p12.push(p12);  // P1V21 .. P1V36 - p12
                        res.p21.push(p21);  // P2V2 .. P2V18 - p21
                        res.p22.push(p22);  // P2V19 .. P2V33 - p22
                        res.p23.push(p23);  // P2V34 .. P2V44 - p23
                        res.p3.push(p3);    // P3V2 .. P3V6 - p3
                        res.p61.push(p61);  // P61V2 .. P61V7 - p61
                        res.p62.push(p62);  // P62V2 .. P62V17 - p62
                    }

                    this.Part1.Proto.Data.p11 = res.p11;
                    this.Part1.Proto.Data.p12 = res.p12;
                    this.Part1.Proto.Refresh();
                    this.Part2.Proto.Data.p21 = res.p21;
                    this.Part2.Proto.Data.p22 = res.p22;
                    this.Part2.Proto.Data.p23 = res.p23;
                    this.Part2.Proto.Refresh();
                    this.Part3.Proto.Data.p3 = res.p3;
                    this.Part3.Proto.Refresh();
                    this.Part6.Proto.Data.p61 = res.p61;
                    this.Part6.Proto.Data.p62 = res.p62;
                    this.Part6.Proto.Refresh();
                })
                .then(() => api.Diary_SummaryPart4_Get(this.CurrentLibraries, dateStart, dateEnd))
                .then(data => {
                    this.Part4.Proto.Data.Part4 = data.filter(x => this.CurDates.indexOf((Lure.Date(x.DateStart).Month + 1) + '') !== -1 || this.CurDates.indexOf((Lure.Date(x.DateFinish).Month + 1) + '') !== -1);
                    this.Part4.Proto.Refresh();
                })
                .then(() => api.Diary_SummaryPart5_Get(this.CurrentLibraries, dateStart, dateEnd))
                .then(data => {
                    this.Part5.Proto.Data.Part5 = data.filter(x => this.CurDates.indexOf((Lure.Date(x.DateStart).Month + 1) + '') !== -1 || this.CurDates.indexOf((Lure.Date(x.DateFinish).Month + 1) + '') !== -1);
                    this.Part5.Proto.Refresh();
                })
                .then(() => this.Load.Hide())
                .catch(e => {
                    console.error(e);
                    this.Load.Hide();
                });
        };
        this.GetXLS = function () {
            this.Load.Show();
            let Dt = Lure.Date(this.CurrentDate);
            // let [dateStart, dateEnd] = this.CurDates;
            api.Diary_Summary_GetXLS(this.CurrentLibraries, (new Date).getFullYear(), this.CurDates, {
                Then: (Blob) => Lure.SaveBlob(Blob, `Сводная таблица ${Dt.Format('MMMM YYYY')}.xlsx`),
                Catch: () => Lure.System.Error('Невозможно получить отчет'),
                Finally: () => this.Load.Hide(),
            })
        };
        this.DateChanged = function (months) {
            if (months.length === 0) return;
            this.Proto.SetProperty('DatesResult', months);
            this.CurDates = months;
            this.RefreshData();
        };
    },
    AfterBuild: function() {
        new LibraryTree(this, this.Select('.library-tree-control'), {MultiSelect: true});
        this.Proto.Data.LibraryIDListSelected = [Lure.User.Cache.LibraryList.Last().ID];
        // this.DateSelector.onchange = () => this.RefreshData();
        this.ButtonExport.addEventListener('click', () => this.GetXLS());
        this.ButtonRefresh.addEventListener('click', () => this.Refresh());

        this.DatesSelector = CheckBoxSelector({
            target: this.Select('.dates'),
            Data: () => (new Array((new Date).getMonth() + 1)).Select((x, i) => ({MNum: i + 1, Name: Lure.Date(Lure.Date().MonthStart.setMonth(i)).Format('MMMM YYYY'), Check: i === (new Date).getMonth()})),
            Key: 'MNum',
            Value: 'Name',
            Control: this.Select('.date-range .dates-result'),
            onOK: r => this.DateChanged(r),
            checked: 'key'
        });
    }
});

require("./parts/part1.js");
require("./parts/part2.js");
require("./parts/part3.js");
require("./parts/part4.js");
require("./parts/part5.js");
require("./parts/part6.js");

},{"../../_common/filter-selector/filter-selector.js":104,"./parts/part1.js":91,"./parts/part2.js":92,"./parts/part3.js":93,"./parts/part4.js":94,"./parts/part5.js":95,"./parts/part6.js":96}],98:[function(require,module,exports){
WDash.WDashMain = new Lure.Content({
    //Disabled: true,
    Name: 'WDashMain',
    Target: '',
    Type: 'wdash-content',
    Visible: true,
    Control:{
        Target: '#nav-wdash-main'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content: `
<div>
    <div class="diary-bread l-row">
        <div class="li l-row l-flexa-center flex-100">
            <div>Подразделение: &nbsp;&nbsp;</div>
            <div class="flex-100 library-tree-control strong">__</div>
        </div>
    </div>
    
    <div class="period-picker">
        <div class="periods">
            <div class="per today selected">Сегодня</div>
            <div class="per yesterday">Вчера</div>
            <div class="per week">Неделя</div>
            <div class="per month">Месяц</div>
            <div class="per quarter">Квартал</div>
            <div class="per year">Год</div>
        </div>
        <div class="per calendar-period">
            <div class="icon">&#128198;</div>
            <div class="dates"></div>
        </div>
    </div>
    <div class="daily-chart">
        <div class="chart-header"></div>
        <div class="chart-wrap"></div>
    </div>
    <div class="pies">
        <div class="pie-visitors-wrap">
            <div class="chart-header">Посещаемость</div>
            <div class="pie-visitors">
                <div class="pie visitors-chart"></div>
                <div class="chart-subscript">
                    <div class="sub-icon param-icon"><span>{{Visitors.Sum}}</span><span>{{Divider}}</span><span>{{Visitors.Target}}</span></div>
                    <div class="sub-caption">выполнение<br>госзадания</div>
                </div>
            </div>
            <div class="parameters">
                <div class="param-header">
                    <div class="header-text">&nbsp;</div>
                    <div class="percent-123" data-type="Visitors"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                </div>
                <div class="row" data-type="v-0"><div class="color-mark new-reg">&nbsp;</div><div class="parameter-name">вновь записавшиеся</div><div class="parameter-value">{{Visitors.New}}</div></div>
                <div class="row" data-type="v-1"><div class="color-mark stationary">&nbsp;</div><div class="parameter-name">стационар</div><div class="parameter-value">{{Visitors.Stationary}}</div></div>
                <div class="row" data-type="v-2"><div class="color-mark events">&nbsp;</div><div class="parameter-name">мероприятия</div><div class="parameter-value">{{Visitors.Events}}</div></div>
                <div class="row" data-type="v-3"><div class="color-mark clubs">&nbsp;</div><div class="parameter-name">клубы</div><div class="parameter-value">{{Visitors.Clubs}}</div></div>
            </div>
        </div>
        
        <div class="pie-registers-double">
            <div class="chart-header">Записавшиеся</div>
            <div class="pie-registers-double-wrap">
                <div class="pie-registers-wrap">
                    <div class="pie-registers">
                        <div class="pie social-groups-chart"></div>
                        <div class="chart-subscript">
                            <div class="sub-icon param-icon"><span>{{Registers.Sum}}</span><span>{{Divider}}</span><span>{{Registers.Target}}</span></div>
                            <div class="sub-caption">выполнение<br>госзадания</div>
                        </div>
                    </div>
                    <div class="parameters">
                        <div class="param-header">
                            <div class="header-text">Социальные группы</div>
                            <div class="percent-123" data-type="Registers"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                        </div>
                        <div class="row" data-type="sg-0"><div class="color-mark pensioner">&nbsp;</div><div class="parameter-name">пенсионеры</div><div class="parameter-value">{{Registers.pensioner}}</div></div>
                        <div class="row" data-type="sg-1"><div class="color-mark employee">&nbsp;</div><div class="parameter-name">служащие</div><div class="parameter-value">{{Registers.employee}}</div></div>
                        <div class="row" data-type="sg-2"><div class="color-mark students">&nbsp;</div><div class="parameter-name">студенты</div><div class="parameter-value">{{Registers.students}}</div></div>
                        <div class="row" data-type="sg-3"><div class="color-mark schools">&nbsp;</div><div class="parameter-name">школьники</div><div class="parameter-value">{{Registers.schools}}</div></div>
                        <div class="row" data-type="sg-4"><div class="color-mark under-school">&nbsp;</div><div class="parameter-name">дошкольники</div><div class="parameter-value">{{Registers.under_school}}</div></div>
                        <div class="row" data-type="sg-5"><div class="color-mark rdch">&nbsp;</div><div class="parameter-name">рдч</div><div class="parameter-value">{{Registers.rdch}}</div></div>
                        <div class="row" data-type="sg-6"><div class="color-mark others">&nbsp;</div><div class="parameter-name">прочие</div><div class="parameter-value">{{Registers.others}}</div></div>
                        <div class="row"><div class="color-mark all-register">&nbsp;</div><div class="parameter-name">всего</div><div class="parameter-value">{{Registers.SumPerc}}</div></div>
                    </div>
                </div>
                <div class="pie-registers rotor">
                    <div class="gender-age-chart-wrap rotor-flip curr_side">
                        <div  class="pie gender-age-chart"></div>
                        <div class="parameters">
                            <div class="param-header">
                                <div class="header-text double-chart">Половозрастная структура</div>
                                <div class="percent-123" data-type="GenderAge"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                            </div>
                            <table class="gender-age-table">
                                <tbody>
                                    <tr class="head"><td class="no-border"></td><td>Женщины</td><td>Мужчины</td><td>Всего</td></tr>
                                    <tr>
                                        <td>30+</td>
                                        <td class="second" data-type="ga-0"><div class="color-mark women-30">&nbsp;</div><span>{{GenderAge.women_30}}</span></td>
                                        <td class="second" data-type="ga-3"><div class="color-mark men-30">&nbsp;</div><span>{{GenderAge.men_30}}</span></td>
                                        <td>{{GenderAge._30}}</td>
                                    </tr>
                                    <tr>
                                        <td>14-30</td>
                                        <td class="second" data-type="ga-1"><div class="color-mark women-14-30">&nbsp;</div><span>{{GenderAge.women_14_30}}</span></td>
                                        <td class="second" data-type="ga-4"><div class="color-mark men-14-30">&nbsp;</div><span>{{GenderAge.men_14_30}}</span></td>
                                        <td>{{GenderAge._14_30}}</td>
                                    </tr>
                                    <tr>
                                        <td>0-14</td>
                                        <td class="second" data-type="ga-2"><div class="color-mark women-14">&nbsp;</div><span>{{GenderAge.women_14}}</span></td>
                                        <td class="second" data-type="ga-5"><div class="color-mark men-14">&nbsp;</div><span>{{GenderAge.men_14}}</span></td>
                                        <td>{{GenderAge._14}}</td>
                                    </tr>
                                    <tr>
                                        <td>Всего</td>
                                        <td class="second"><div class="color-mark women-all">&nbsp;</div><span>{{GenderAge.women}}</span></td>
                                        <td class="second"><div class="color-mark men-all">&nbsp;</div><span>{{GenderAge.men}}</span></td>
                                        <td class="no-border"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="gender-age-chart-2-wrap rotor-flip next next_side">
                        <div  class="pie gender-age-chart-2"></div>
                        <div class="parameters">
                            <div class="param-header">
                                <div class="header-text double-chart">Половозрастная структура</div>
                                <div class="percent-123" data-type="GenderAge"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                            </div>
                            <table class="gender-age-table">
                                <tbody>
                                    <tr class="head"><td class="no-border"></td><td>0 - 14</td><td>14 - 30</td><td>30+</td><td>Всего</td></tr>
                                    <tr>
                                        <td>Женщины</td>
                                        <td class="second" data-type="ag-4"><div class="color-mark women-14">&nbsp;</div><span>{{GenderAge.women_14}}</span></span></td>
                                        <td class="second" data-type="ag-2"><div class="color-mark women-14-30">&nbsp;</div><span>{{GenderAge.women_14_30}}</span></td>
                                        <td class="second" data-type="ag-0"><div class="color-mark women-30">&nbsp;</div><span>{{GenderAge.women_30}}</span></td>
                                        <td>{{GenderAge.women}}</td>
                                    </tr>
                                    <tr>
                                        <td>Мужчины</td>
                                        <td class="second" data-type="ag-5"><div class="color-mark men-14">&nbsp;</div><span>{{GenderAge.men_14}}</span></td>
                                        <td class="second" data-type="ag-3"><div class="color-mark men-14-30">&nbsp;</div><span>{{GenderAge.men_14_30}}</span></td>
                                        <td class="second" data-type="ag-1"><div class="color-mark men-30">&nbsp;</div><span>{{GenderAge.men_30}}</span></td>
                                        <td>{{GenderAge.men}}</td>
                                    </tr>
                                    <tr>
                                        <td>Всего</td>
                                        <td class="second"><div class="color-mark all-14">&nbsp;</div><span>{{GenderAge._14}}</span></td>
                                        <td class="second"><div class="color-mark all-14-30">&nbsp;</div><span>{{GenderAge._14_30}}</span></td>
                                        <td class="second"><div class="color-mark all-30">&nbsp;</div><span>{{GenderAge._30}}</span></td>
                                        <td class="no-border"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="pie-book-giving-wrap">
            <div class="chart-header">Книговыдача</div>
            <div class="pie-book-giving">
                <div class="pie book-giving-chart"></div>
                <div class="chart-subscript">
                    <div class="sub-icon param-icon"><span>{{BookGiving.Sum}}</span><span>{{Divider}}</span><span>{{BookGiving.Target}}</span></div>
                    <div class="sub-caption">выполнение<br>госзадания</div>
                </div>
            </div>
            <div class="parameters">
                <div class="param-header">
                    <div class="header-text">Категории</div>
                    <div class="percent-123" data-type="BookGiving"><span class="numbers selected">123</span> I <span class="percents">%</span></div>
                </div> 
                <div class="row" data-type="bg-0"><div class="color-mark new-reg">&nbsp;</div><div class="parameter-name">книги и брошюры</div><div class="parameter-value">{{BookGiving.Books}}</div></div>
                <div class="row" data-type="bg-1"><div class="color-mark stationary">&nbsp;</div><div class="parameter-name">документы и копии</div><div class="parameter-value">{{BookGiving.DocsCopies}}</div></div>
                <div class="row" data-type="bg-2"><div class="color-mark events">&nbsp;</div><div class="parameter-name">справки и консультации</div><div class="parameter-value">{{BookGiving.Consults}}</div></div>
                <div class="row" data-type="bg-3"><div class="color-mark clubs">&nbsp;</div><div class="parameter-name">прочее</div><div class="parameter-value">{{BookGiving.Other}}</div></div>
            </div>
        </div>
        
    </div>
    
</div>`,
    Proto:{
        Visitors: {
            New: 10,
            Stationary: 20,
            Events: 30,
            Clubs: 40,
            Target: 300,
            Sum: function() { let s = 0; for (let k in this) if (this.hasOwnProperty(k) && k !== 'Sum' && k !== 'Target') s += this[k]; return s; }
        },
        Registers: {
            pensioner: 5,
            employee: 10,
            students: 15,
            schools: 20,
            under_school: 15,
            rdch: 20,
            others: 15,
            Target: 600,
            Sum: function() { let s = 0; for (let k in this) if (this.hasOwnProperty(k) && k !== 'Sum' && k !== 'Target') s += this[k]; return s; }
        },
        GenderAge: {
            women_30: 15,
            women_14_30: 25,
            women_14: 35,
            men_30: 28,
            men_14_30: 41,
            men_14: 23,
            Sum: function() { let s = 0; for (let k in this) if (this.hasOwnProperty(k)) k !== 'Sum' ? s += this[k] : s += 0; return s; }
        },
        BookGiving: {
            Books: 11,
            DocsCopies: 22,
            Consults: 33,
            Other: 44,
            Target: 300,
            Sum: function() { let s = 0; for (let k in this) if (this.hasOwnProperty(k) && k !== 'Sum' && k !== 'Target') s += this[k]; return s; }
        },
        Percent: {
            Visitors: false,
            Registers: false,
            GenderAge: false,
            BookGiving: false
        }
    },
    PropFormat: {
        'Visitors.New': (x, p) => p.Percent.Visitors ? (x === 0 ? 0 : Math.round(x / p.Visitors.Sum() * 100)) + ' %' : x, // функция для посещаемости
        'Visitors.Stationary': (x, p) => p.Percent.Visitors ? (x === 0 ? 0 : Math.round(x / p.Visitors.Sum() * 100)) + ' %' : x,
        'Visitors.Events': (x, p) => p.Percent.Visitors ? (x === 0 ? 0 : Math.round(x / p.Visitors.Sum() * 100)) + ' %' : x,
        'Visitors.Clubs': (x, p) => p.Percent.Visitors ? (x === 0 ? 0 : Math.round(x / p.Visitors.Sum() * 100)) + ' %' : x,
        'Visitors.Sum': (x, p) => p.Visitors.Sum(),

        'Registers.pensioner': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x, // функция для Регистрации
        'Registers.employee': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.students': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.schools': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.under_school': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.rdch': (x, p) => p.Percent.Registers ? (x === 0 ? 0 :  Math.round(x / p.Registers.Sum() * 100)) + ' %' : x,
        'Registers.others': (x, p) => p.Percent.Registers ? (x === 0 ? 0 : Math.round(x / p.Registers.Sum() * 100))+ ' %' : x,
        'Registers.Sum': (x, p) => p.Registers.Sum(),
        'Registers.SumPerc': (x, p) => p.Percent.Registers ? '100 %' : p.Registers.Sum(),

        'GenderAge.women_14_30': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x, // функция для половозрастной структуры
        'GenderAge.women_14': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge.men_30': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge.men_14_30': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge.men_14': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge.women_30': (x, p) => p.Percent.GenderAge ? (x === 0 ? 0 : Math.round(x / p.GenderAge.Sum() * 100)) + ' %' : x,
        'GenderAge._14': (x, p, n) => (n = (p.GenderAge.men_14 + p.GenderAge.women_14), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),
        'GenderAge._14_30': (x, p, n) => (n = (p.GenderAge.men_14_30 + p.GenderAge.women_14_30), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),
        'GenderAge._30': (x, p, n) => (n = (p.GenderAge.men_30 + p.GenderAge.women_30), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),
        'GenderAge.men': (x, p, n) => (n = (p.GenderAge.men_14 + p.GenderAge.men_14_30 + p.GenderAge.men_30), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),
        'GenderAge.women': (x, p, n) => (n = (p.GenderAge.women_14 + p.GenderAge.women_14_30 + p.GenderAge.women_30), p.Percent.GenderAge ? ( n === 0 ? 0 :Math.round(n / p.GenderAge.Sum() * 100)) + ' %' : n),

        'BookGiving.Books': (x, p) => p.Percent.BookGiving ? (x === 0 ? 0 : Math.round(x / p.BookGiving.Sum() * 100))+ ' %' : x, // функция для книговыдачи
        'BookGiving.DocsCopies': (x, p) => p.Percent.BookGiving ? (x === 0 ? 0 : Math.round(x / p.BookGiving.Sum() * 100))+ ' %' : x,
        'BookGiving.Consults': (x, p) => p.Percent.BookGiving ? (x === 0 ? 0 :  Math.round(x / p.BookGiving.Sum() * 100)) + ' %' : x,
        'BookGiving.Other': (x, p) => p.Percent.BookGiving ? (x === 0 ? 0 : Math.round(x / p.BookGiving.Sum() * 100))+ ' %' : x,
        'BookGiving.Sum': (x, p) => p.BookGiving.Sum(),
        'Divider': (x, p) => (p.BookGiving.Target > 9999 || p.Registers.Target > 9999 || p.Visitors.Target > 9999) ? "<div style='border-top: 2px solid black;'></div>" : '/'
    },
    GetSet: {
        get CurrentLibraries(){
            return this.Proto.Data.LibraryIDListSelected;
        },
    },
    Props: function () {
        let p = this.Proto.Data;
        this.GetChartOptions = function (target, series) {
            let res = {
                Target: target,
                Type: 'pie',
                Labels: {Visible: false},
                Legend: {Visible: false},
                Series: [ ],
                Grid: {Visible: false,},
                Tooltip: {
                    Format: (Tip) => {
                        let sum = Tip.Episode.Data.reduce((a, b) => a + b);
                        let perc = Math.floor(sum === 0 ? 0 : (Tip.Value / sum) * 10000) / 100;
                        return `<div class="tip">
                                      <div class="tip-bg"></div>
                                      <div class="tip-value">
                                            <div class="l-row l-flexa-center">
                                                <div class="tip-icon" style="background-color: ${Tip.Color}"></div>
                                                <div class="tip-label">${Tip.Name}: ${Tip.Value} (${perc}%)</div>
                                            </div>
                                      </div>
                                </div>`;
                    }
                },
                AxisY: {Visible: false}
            };
            for (let d of series) {
                let e = {
                    Labels: {Data: d.Labels},
                    Data: d.Data,
                    Colors: d.Colors,
                    Type: d.Type ? d.Type : 'ring',
                    AngleStart: -90
                };
                if (d.Width) e.Width = d.Width;
                if (d.Margin) e.Margin = d.Margin;
                res.Series.push(e);
            }
            return res;
        };
        this.ChartVisitors = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.visitors-chart'),
            [{
                Labels: ['вновь записавшиеся', 'стационар', 'мероприятия', 'клубы'],
                Data: [p.Visitors.New, p.Visitors.Stationary, p.Visitors.Events, p.Visitors.Clubs],
                Colors: ['#416E75', '#79CDDB', '#708284', '#51A2A8'],
                Width: 32
            }, {
                Labels: ["Посетили", "Осталось"],
                Data: [p.Visitors.Sum(), p.Visitors.Target - p.Visitors.Sum()],
                Colors: ["#5DA85D", "#4A8453"],
                Width: 22,
                Margin: 3
            }]
        ));
        this.ChartVisitors.Load = new Lure.Load({Target: this.ChartVisitors.Target});

        // Книговыдача
        this.ChartBookGiving = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.book-giving-chart'),
            [{
                Labels: ['книги и брошюры', 'документы и копии', 'справки и консультации', 'прочее'],
                Data: [p.BookGiving.Books, p.BookGiving.DocsCopies, p.BookGiving.Consults, p.BookGiving.Other],
                Colors: ['#416E75', '#79CDDB', '#708284', '#51A2A8'],
                Width: 32
            }, {
                Labels: ['выдано', 'осталось'],
                Data: [p.BookGiving.Sum(), p.BookGiving.Target - p.BookGiving.Sum()],
                Colors:  ["#5DA85D", "#4A8453"],
                Width: 22,
                Margin: 3
            }]
        ));
        this.ChartBookGiving.Load = new Lure.Load({Target: this.ChartBookGiving.Target});

        // Социальные группы
        this.ChartSocialGroups = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.social-groups-chart'),
            [{
                Labels: ['пенсионеры', 'служащие', 'студенты', 'школьники', 'дошкольники', 'рдч', 'прочее'],
                Data: [p.Registers.pensioner, p.Registers.employee, p.Registers.students, p.Registers.schools, p.Registers.under_school, p.Registers.rdch, p.Registers.others],
                Colors: ['#51A1A7', '#416E75', '#79CCDA', '#20A4A4', '#4B7798', '#40667F', '#345466'],
                Width: 32
            }, {
                Labels: ['выдано', 'осталось'],
                Data: [p.Registers.Sum(), p.Registers.Target - p.Registers.Sum()],
                Colors: ["#5DA85D", "#4A8453"],
                Width: 22,
                Margin: 3
            }]
        ));
        this.ChartSocialGroups.Load = new Lure.Load({Target: this.ChartSocialGroups.Target});

        // Половозрастная структура 1
        this.ChartGenderAge = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.gender-age-chart'),
            [{
                Labels: ['женщины 30+', 'женщины 14-30', 'женщины 0-14', 'мужчины 30+', 'мужчины 14-30', 'мужчины 0-14'],
                Data: [p.GenderAge.women_30, p.GenderAge.women_14_30, p.GenderAge.women_14, p.GenderAge.men_30, p.GenderAge.men_14_30, p.GenderAge.men_14],
                Colors: ['#993F73', '#7F3663', '#662C53', '#345466', '#40667F', '#4B7799'],
                Width: 32
            }, {
                Labels: ['женщины', 'мужчины'],
                Data: [p.GenderAge.women_30 + p.GenderAge.women_14_30 + p.GenderAge.women_14, p.GenderAge.men_30 + p.GenderAge.men_14_30 + p.GenderAge.men_14],
                Colors: ['#D7569C', '#6CA9E0'],
                Type: 'pie',
                Margin: 3
            }]
        ));
        this.ChartGenderAge.Load = new Lure.Load({Target: this.ChartGenderAge.Target});

        // Половозрастная структура 2
        this.ChartAgeGender = new Lure.Chart(this.GetChartOptions(
            this.Select('.pie.gender-age-chart-2'),
            [{
                Labels: ['женщины 30+', 'мужчины 30+', 'женщины 14-30', 'мужчины 14-30', 'женщины 0-14', 'мужчины 0-14'],
                Data: [p.GenderAge.women_30, p.GenderAge.men_30, p.GenderAge.women_14_30, p.GenderAge.men_14_30, p.GenderAge.women_14, p.GenderAge.men_14],
                Colors: ['#993F73', '#345466', '#7F3663', '#40667F', '#662C53', '#4B7799'],
                Width: 32
            }, {
                Labels: ['Старше 30', 'От 14 до 30', 'Младше 14'],
                Data: [p.GenderAge.women_30 + p.GenderAge.men_30, p.GenderAge.women_14_30 + p.GenderAge.men_14_30, p.GenderAge.women_14 + p.GenderAge.men_14],
                Colors: ['#74B87A', '#589255', '#3C5F42'],
                Type: 'pie',
                Margin: 3
            }]
        ));
        this.ChartAgeGender.Load = new Lure.Load({Target: this.ChartAgeGender.Target});

        ////////////////////// ANOTHER PROPS \\\\\\\\\\\\\\\\\\\
        this.selectedPeriod = [ Lure.Date().DayStart, Lure.Date().DayEnd ];
        this.SelectLibrary = this.Select('.lib-list');

        this.DailyChart = new Lure.Chart({
            Target: this.Select('.daily-chart .chart-wrap'),
            Type: 'Line',
            Name: 'Сводный график',
            Legend: {Position: 'right'},
            AxisX: {Data: (new Array(12)).Select((a, b) => Lure.Date(new Date(2018, b)).Format('MMMM'))},
            Series: [{
                Name: 'Посещаемость',
                Color: '#65599E',
                Data: (new Array(12)).Select((a, b) => b % 5),
            }, {
                Name: 'Запись',
                Color: '#53AA62',
                Data: (new Array(12)).Select((a, b) => b % 7),
            }, {
                Name: 'Книговыдача',
                Color: '#9F4944',
                Data: (new Array(12)).Select((a, b) => b % 9),
            }],
            Tooltip: {
                Format: Tip =>
                    `<div class="tip">
                        <div class="tip-bg"></div>
                        <div class="tip-value">
                            <div class="l-row">
                                <div class="tip-icon" style="background-color: ${Tip.Episode.Color}"></div>
                                <div class="tip-label">${Tip.ValueX}</div>
                            </div>
                            <div class="l-row">${Tip.Episode.Name}: ${Tip.Value}</div>
                        </div>
                    </div>`
            }
        });
        this.DailyChart.Load = new Lure.Load({Target: this.DailyChart.Target});
        // this.DailyChart.Redraw();
    },
    Show: function () {
        this.Refresh();
    },
    Refresh: function() {
        if (this.isVisible)
            this.ChartsUpdate();
    },
    Methods: function() {
        this.selectPeriod = function (period, e) {
            this.Select('.per.selected').classList.remove('selected');
            e.classList.add('selected');

            let date_start = Lure.Date();
            let date_end = Lure.Date();
            if ((typeof period) === 'string') {
                this.DatePicker.Reset();
                switch (period) {
                    case 'today':
                        date_start = date_start.DayStart;
                        date_end = date_end.DayEnd;
                        break;
                    case 'yesterday':
                        date_start.AddDays(-1);
                        date_end.AddDays(-1);
                        date_start = date_start.DayStart;
                        date_end = date_end.DayEnd;
                        break;
                    case 'week':
                        date_start = date_start.WeekStart;
                        date_end = date_end.WeekEnd;
                        break;
                    case 'month':
                        date_start = date_start.MonthStart;
                        date_end = date_end.MonthEnd;
                        break;
                    case 'quarter':
                        let month;
                        let cm = date_start.Date.getMonth();
                        if (cm <= 2)
                            month = 0;
                        else if (cm >= 3 && cm <= 5)
                            month = 3;
                        else if (cm >= 6 && cm <= 9)
                            month = 6;
                        else month = 9;
                        date_start = Lure.Date(new Date(date_start.Date.getFullYear(), month)).MonthStart;
                        date_end = Lure.Date(new Date(date_end.Date.getFullYear(), month + 2)).MonthEnd;
                        break;
                    case 'year':
                        date_start = new Date(date_start.Date.getFullYear(), 0, 1, 0, 0, 0);
                        date_end = new Date(date_end.Date.getFullYear(), 11, 31, 23, 59, 59);
                        break;
                }
                this.selectedPeriod = [date_start, date_end];
                // Lure.System.Notice(date_start.Format('D MMMM YYYY', true) + ' - ' + date_end.Format('D MMMM YYYY', true));
            }
            else {
                date_start = Lure.Date(period[0]).DayStart;
                date_end = Lure.Date(period[1]).DayEnd;
                this.selectedPeriod = [date_start, date_end];
            }
            //console.log(period, this.selectedPeriod);
            this.ChartsUpdate();
        };
        this.ChangePercent123 = function (elem) {
            let type = elem.dataset['type'];
            this.Proto.Data.Percent[type] = !this.Proto.Data.Percent[type];
            this.Proto.Refresh();
            if (type === 'GenderAge')
                for (let e of this.SelectAll('.percent-123[data-type="' + type + '"]')) {
                    e.children[0].classList.toggle('selected');
                    e.children[1].classList.toggle('selected');
                }
            else {
                elem.children[0].classList.toggle('selected');
                elem.children[1].classList.toggle('selected');
            }
            // console.log(elem, type);
        };
        this.ChartsUpdate = function () {
            let plus_or_zero = (x = []) => {
                for (let k in x)
                    if (x.hasOwnProperty(k) && x[k] < 0)
                        x[k] = 0;
                return x;
            };

            let date_start = new Date(this.selectedPeriod[0]);
            let date_end = new Date(this.selectedPeriod[1]);
            // console.log('DATES: ', date_start, date_end);
            let lib = this.CurrentLibraries;
            // Посещаемость
            this.ChartVisitors.Load.Show();
            api.Dash_Visitation_Get(lib, date_start, date_end)
                .then(
                    r => {
                        r = plus_or_zero(r);
                        Object.assign(this.Proto.Data.Visitors, {
                            New: r.Registered,
                            Stationary: r.Stationary,
                            Events: r.Event,
                            Clubs: r.Club,
                            Target: r.CountPlan
                        });
                        this.Proto.Refresh();
                        let p = this.Proto.Data.Visitors;
                        this.ChartVisitors.Options.Series[0].Data = [p.New, p.Stationary, p.Events, p.Clubs];
                        this.ChartVisitors.Options.Series[1].Data = plus_or_zero([p.Sum(), p.Target - p.Sum()]);
                        this.ChartVisitors.Load.Hide();
                        this.ChartVisitors.Refresh();
                    }).catch(console.error);
            // Записавшиеся Социальные группы
            this.ChartSocialGroups.Load.Show();
            api.Dash_VisitRegistered_Get(lib, date_start, date_end)
                .then(
                    r => {
                        r = plus_or_zero(r);
                        Object.assign(this.Proto.Data.Registers, {
                            pensioner: r.Retired,
                            employee: r.Servant,
                            students: r.Student,
                            schools: r.Schooler,
                            under_school: r.Preschooler,
                            rdch: r.RDC,
                            others: r.Other,
                            Target: r.CountPlan
                        });
                        this.Proto.Refresh();
                        let p = this.Proto.Data.Registers;
                        this.ChartSocialGroups.Options.Series[0].Data = [p.pensioner, p.employee, p.students, p.schools, p.under_school, p.rdch, p.others];
                        this.ChartSocialGroups.Options.Series[1].Data = plus_or_zero([p.Sum(), p.Target - p.Sum()]);
                        this.ChartSocialGroups.Load.Hide();
                        this.ChartSocialGroups.Refresh();
                    }).catch(console.error);
            // Записавшиеся Половозрастная структура
            this.ChartGenderAge.Load.Show();
            this.ChartAgeGender.Load.Show();
            api.Dash_VisitGengerAge_Get(lib, date_start, date_end)
                .then(
                    r => {
                        r = plus_or_zero(r);
                        Object.assign(this.Proto.Data.GenderAge, {
                            women_30: r.Female_Over30,
                            women_14_30: r.Female_30,
                            women_14: r.Female_14,
                            men_30: r.Male_Over30,
                            men_14_30: r.Male_30,
                            men_14: r.Male_14
                        });
                        this.Proto.Refresh();
                        let p = this.Proto.Data.GenderAge;
                        this.ChartGenderAge.Options.Series[0].Data = [p.women_30, p.women_14_30, p.women_14, p.men_30, p.men_14_30, p.men_14];
                        this.ChartGenderAge.Options.Series[1].Data = [p.women_30 + p.women_14_30 + p.women_14, p.men_30 + p.men_14_30 + p.men_14];
                        this.ChartAgeGender.Options.Series[0].Data = [p.women_30, p.men_30, p.women_14_30, p.men_14_30, p.women_14, p.men_14];
                        this.ChartAgeGender.Options.Series[1].Data = [p.women_30 + p.men_30, p.women_14_30 + p.men_14_30, p.women_14 + p.men_14];
                        this.ChartGenderAge.Load.Hide();
                        this.ChartAgeGender.Load.Hide();
                        this.ChartGenderAge.Refresh();
                        this.ChartAgeGender.Refresh();
                    }).catch(console.error);
            // Книговыдача
            this.ChartBookGiving.Load.Show();
            api.Dash_GivingBook_Get(lib, date_start, date_end)
                .then(
                    r => {
                        r = plus_or_zero(r);
                        Object.assign(this.Proto.Data.BookGiving, {
                            Books: r.GivingBook,
                            DocsCopies: r.GivingDoc,
                            Consults: r.GivingConsult,
                            Other: r.GivingOther,
                            Target: r.CountPlan
                        });
                        this.Proto.Refresh();
                        let p = this.Proto.Data.BookGiving;
                        this.ChartBookGiving.Options.Series[0].Data = [p.Books, p.DocsCopies, p.Consults, p.Other];
                        this.ChartBookGiving.Options.Series[1].Data = plus_or_zero([p.Sum(), p.Target - p.Sum()]);
                        this.ChartBookGiving.Load.Hide();
                        this.ChartBookGiving.Refresh();
                    }).catch(console.error);
            // Сводный график
            let date_diff = Math.floor((date_end.getTime() - date_start.getTime()) / 1000);
            if (date_diff < 90000)
                this.DailyChart.Target.classList.add('none');
            else {
                this.DailyChart.Target.classList.remove('none');
                this.DailyChart.Load.Show();
                api.Dash_SummaryGraph_Get(lib, Lure.Date(date_start), Lure.Date(date_end))
                    .then(
                        r => {
                            let labels;
                            if (date_diff / 86400 < 32)
                                labels = r.map(a => Lure.Date(a.Date).Format('D MMMM', true));
                            else
                                labels = r.map(a => Lure.Date(a.Date).Format('MMMM YYYY', false));
                            this.DailyChart.Options.Series[0].Data = r.map(a => a.Visit);
                            this.DailyChart.Options.Series[1].Data = r.map(a => a.Registration);
                            this.DailyChart.Options.Series[2].Data = r.map(a => a.BookGiving);

                            this.DailyChart.Options.AxisX.Data = labels;
                            if (!this.DailyChart.Options.Graph)
                                this.DailyChart.Redraw();

                            this.DailyChart.Options.Graph[0].AxisX.Data = labels;
                            this.DailyChart.Options.Graph[1].AxisX.Data = labels;
                            this.DailyChart.Options.Graph[2].AxisX.Data = labels;
                            this.DailyChart.Load.Hide();
                            this.DailyChart.Redraw();
                        }).catch(console.error);
            }
        };
    },
    AfterBuild: function() {
        new LibraryTree(this, this.Select('.library-tree-control'));
        this.Proto.Data.LibraryIDListSelected = [Lure.User.Cache.LibraryList.Last().ID];
        let self = this;
        this.DatePicker = new Lure.PeriodPicker({
            Target: '.calendar-period .dates',
            OnConfirm: function () {
                self.selectPeriod(this.Date, this.Target.parentElement);
            }
        });
        this.DatePicker.Reset();

        let curr = this.Select('.curr_side');
        let next = this.Select('.next_side');
        this.AddEventListener('click', '.double-chart', () => {
            curr.classList.toggle('flipped');
            next.classList.toggle('next');
        });
        this.AddEventListener('click', '.periods .per', (e) => this.selectPeriod(e.currentTarget.classList[1], e.currentTarget));
        this.AddEventListener('click', '.percent-123', (e) => this.ChangePercent123(e.currentTarget));
        this.AddEventListener('click', '.gender-age-chart-2-wrap td, .gender-age-chart-wrap td, .pie-registers-wrap .row, .pie-book-giving-wrap .row, .pie-visitors-wrap .row', (e) => {
            if (e.currentTarget.dataset['type']) {
                let data = e.currentTarget.dataset['type'].split('-');

                data[1] = parseInt(data[1]);
                e.currentTarget.classList.toggle('series-hide');
                switch (data[0]) {
                    case 'v':  this.ChartVisitors.SerieSwitch(0, data[1]); break;
                    case 'bg': this.ChartBookGiving.SerieSwitch(0, data[1]); break;
                    case 'sg': this.ChartSocialGroups.SerieSwitch(0, data[1]); break;
                    case 'ga': this.ChartGenderAge.SerieSwitch(0, data[1]); break;
                    case 'ag': this.ChartAgeGender.SerieSwitch(0, data[1]); break;
                }
            }
        });
    }
});
// window.Dash.DashMain = DashMain;
// module.exports = Dash;

},{}],99:[function(require,module,exports){
const Dictionary = require("../_common/dictionary");

let WDash = new Lure.Content({
    //Disabled: true,
    Name: 'WDash',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '#nav-wdash'
    },
    Permission: {
        Roles: [Dictionary.Role.Dashboard]
    },
    Content: `<div class="wdash content"></div>`,
    Show: function () {
        this.SixNK.Refresh();
    }
});
window.WDash = WDash;
require('./wdash-main/wdash-main.js');
require('./summary/wdash-summary.js');
require('./six-nk/six-nk.js');
module.exports = WDash;

},{"../_common/dictionary":102,"./six-nk/six-nk.js":90,"./summary/wdash-summary.js":97,"./wdash-main/wdash-main.js":98}],100:[function(require,module,exports){
//import * as Dictionary from "../global/dictionary";

const Dictionary = require("../_common/dictionary");

/**
 * @class DashTester
 * @type Lure.Content
 */
let DashTester = new Lure.Content({
    //Disabled: true,
    Name: 'DashTester',
    Target: '.body',
    Type: 'content',
    Control:{
        Target: '#nav-dash-test'
    },
    Permission: {
        Roles: [Dictionary.Role.Admin]
    },
    Content: `<div class="dash-tester content">
                 <h1>Dush-push</h1>
                 <h2>DKuk: <div class="wef editable">{{Kuk}}</div></h2>
                 <div class="widgets">
                    <div class="widget-row-1 l-row"></div>
                    <div class="widget-row-2 l-row"></div>
                    <div class="widget-row-3 l-row">
                        <div class="diche">
                            <input class="fileman" type="file" name="Package" >
                        </div>
                    </div>
                </div>
               </div>`,
    State:{
        Kuk: 12,
    },
    Props: function () {
        this._ResizeTarget = null;

        this.InputFile = this.Select('.fileman');
    },
    Methods: function(){
        this.MakeResizable = function (Content, Resizer, OnResize) {
            let Parent = this;
            Content._Resizer = Content.Select(Resizer);
            Content._Resize = {
                x: null,
                y: null,
            };
            Content._OnResize = function (e) {
                if (this._Resize.x !== null){
                    let dx = e.clientX - this._Resize.x;
                    let dy = e.clientY - this._Resize.y;
                    //console.log(dx, dy);
                    if (dx > 165){
                        this.State.Widget.Width = this.State.Widget.Width + 1;
                        OnResize.call(this);
                        this._Resize.x = e.clientX;
                    }
                    if (dx < -165 && this.State.Widget.Width > 2){
                        this.State.Widget.Width = this.State.Widget.Width - 1;
                        OnResize.call(this);
                        this._Resize.x = e.clientX;
                    }

                    if (dy > 137){
                        this.State.Widget.Height = this.State.Widget.Height + 1;
                        OnResize.call(this);
                        this._Resize.y = e.clientY;
                    }
                    if (dy < -137 && this.State.Widget.Height > 2){
                        this.State.Widget.Height = this.State.Widget.Height - 1;
                        OnResize.call(this);
                        this._Resize.y = e.clientY;
                    }
                }
                else{
                    this.Resize.x = e.clientX;
                    this.Resize.y = e.clientY;
                }

            }.bind(Content);
            Content._Resizer.addEventListener('mousedown', function(e){
                Parent._ResizeTarget = Content;
                Content._Resize.x = e.clientX;
                Content._Resize.y = e.clientY;
            });

        };

        this.UploadTest = function () {
            let file = this.InputFile.files[0];
            if (!file)
                return;
            //let reader = new FileReader();
            api.GetFileTest(file, {onprogress: (a,b)=>{
                console.log('onprogress->',a,b)
                }});
        }
    },
    Show: function(){
        this.DashTestW.Chart.Redraw();
        this.DashTestW2.Chart.Redraw();
    },
    AfterBuild: function(){


        this.InputFile.addEventListener('change', ()=>{
            this.UploadTest();
        });
        this.Content.addEventListener('mouseup', (e)=>{
            this._ResizeTarget = null;
        });
        this.Content.addEventListener('mousemove', (e)=>{
            if (this._ResizeTarget){
                this._ResizeTarget._OnResize(e);
            }
        });


    },


});

DashTester.DashTestW = new Lure.Content({
    Parent: DashTester,
    Target: '.widget-row-1',
    Content: `<div class="widget" style="--widget-width: {{Widget.Width}}; --widget-height: {{Widget.Height}}">
                    <div class="resizer"></div>
                    <div class="widget-head l-row">
                      <div class="widget-title l-row">
                        <div class="widget-icon icon-visitor-new"></div>  
                        <div class="widget-caption">Курва и курвёнок</div> 
                      </div> 
                      <div class="widget-controls">
                        <div class="widget-control widget-control-move" title="Переместить"></div>
                        <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                      </div>  
                    </div>
                    <div class="widget-content">
                       <div class="le-chart-1"></div>
                    </div>
                </div>`,
    State: {
        Widget:{
            Width:  4,
            Height: 2,
        }
    },
    Props: function(){
        this.Chart = new Lure.Chart({
            DrawAfterInit: false,
            Target: this.Select('.le-chart-1'),
            AxisX: {
                Data: [1,2,3,4,5,6,7,9,10,11,12,15]
            },
            Series: [
                {
                    Name: 'Vahabit',
                    Data: (new Array(12)).Select(x=>Lure.GetRandom(150))
                },
                {
                    Name: 'Vahabyte',
                    Data: (new Array(12)).Select(x=>Lure.GetRandom(200, 5))
                },
                {
                    Name: 'Terapeut',
                    Data: (new Array(12)).Select(x=>Lure.GetRandom(120, 100)),

                }
            ],
            AxisY:{
                Min: 0,
                //Step: 10
            },
            SeriesOptions:{
                Marker:{
                    Visible: false,
                },

            }

        });
    },
    Methods: function(){
        this.OnResize = function (e) {
            if (this.Resize.x !== null){
                let dx = e.clientX - this.Resize.x;
                let dy = e.clientY - this.Resize.y;
                //console.log(dx, dy);
                if (dx > 165){
                    this.State.Widget.Width = this.State.Widget.Width + 1;
                    this.Refresh();
                    this.Resize.x = e.clientX;
                }
                if (dx < -165 && this.State.Widget.Width > 2){
                    this.State.Widget.Width = this.State.Widget.Width - 1;
                    this.Refresh();
                    this.Resize.x = e.clientX;
                }

                if (dy > 137){
                    this.State.Widget.Height = this.State.Widget.Height + 1;
                    this.Refresh();
                    this.Resize.y = e.clientY;
                }
                if (dy < -137 && this.State.Widget.Height > 2){
                    this.State.Widget.Height = this.State.Widget.Height - 1;
                    this.Refresh();
                    this.Resize.y = e.clientY;

                }

            }
            else{
                this.Resize.x = e.clientX;
                this.Resize.y = e.clientY;
            }

        }
    },
    Refresh: function(){
        this.Proto.Refresh();
        //this.Chart.Redraw();
    },
    AfterBuild: function () {
        DashTester.MakeResizable(this, '.resizer', this.Refresh);
    },
});


DashTester.DashTestW2 = new Lure.Content({
    Parent: DashTester,
    Target: '.widget-row-1',
    Content: `<div class="widget" style="--widget-width: {{Widget.Width}}; --widget-height: {{Widget.Height}}">
                    <div class="resizer"></div>
                    <div class="widget-head l-row">
                      <div class="widget-title l-row">
                        <div class="widget-icon icon-visitor-new"></div>  
                        <div class="widget-caption">Репей и репейник</div> 
                      </div> 
                      <div class="widget-controls">
                        <div class="widget-control widget-control-move" title="Переместить"></div>
                        <div class="widget-control widget-control-favorite" title="На главный экран"></div>
                      </div>  
                    </div>
                    <div class="widget-content">
                       <div class="le-chart-1"></div>
                    </div>
                </div>`,
    State: {
        Widget:{
            Width:  4,
            Height: 2,
        }
    },
    Props: function(){
        this.Chart = new Lure.Chart({
            DrawAfterInit: false,
            Target: this.Select('.le-chart-1'),
            Legend:{
                Position: 'right',
            },
            AxisX: {
                Data: [1,2,3,4,5,6,7,9,10,11,12,15]
            },
            Series: [
                {
                    Name: 'Vahabit',
                    Data: (new Array(12)).Select(x=>Lure.GetRandom(150)/100)
                },
                {
                    Name: 'Vahabyte',
                    Data: (new Array(12)).Select(x=>Lure.GetRandom(200, 5)/100)
                },
                {
                    Name: 'Terapeut',
                    Data: (new Array(12)).Select(x=>Lure.GetRandom(120, 100)/100),

                }
            ],

            SeriesOptions:{
                Marker:{
                    Visible: false,
                },

            }

        });
    },
    Methods: function(){
        this.OnResize = function (e) {
            if (this.Resize.x !== null){
                let dx = e.clientX - this.Resize.x;
                let dy = e.clientY - this.Resize.y;
                //console.log(dx, dy);
                if (dx > 165){
                    this.State.Widget.Width = this.State.Widget.Width + 1;
                    this.Refresh();
                    this.Resize.x = e.clientX;
                }
                if (dx < -165 && this.State.Widget.Width > 2){
                    this.State.Widget.Width = this.State.Widget.Width - 1;
                    this.Refresh();
                    this.Resize.x = e.clientX;
                }

                if (dy > 137){
                    this.State.Widget.Height = this.State.Widget.Height + 1;
                    this.Refresh();
                    this.Resize.y = e.clientY;
                }
                if (dy < -137 && this.State.Widget.Height > 2){
                    this.State.Widget.Height = this.State.Widget.Height - 1;
                    this.Refresh();
                    this.Resize.y = e.clientY;

                }

            }
            else{
                this.Resize.x = e.clientX;
                this.Resize.y = e.clientY;
            }

        }
    },
    Refresh: function(){
        this.Proto.Refresh();
        this.Chart.Redraw();
    },
    AfterBuild: function () {
        DashTester.MakeResizable(this, '.resizer', this.Refresh);
    },
});


window.DashTester = DashTester;
module.exports = DashTester;
},{"../_common/dictionary":102}],101:[function(require,module,exports){
module.exports = new Lure.Content({
    Name: 'LibrarySettings',
    Target: '.body',
    Type: 'content',
    Control: {
        Target: '#nav-settings-menu'
    },
    Permission: {
        Roles: [Dictionary.Role.Admin]
    },
    Content:
        `<div class="settings-menu content">
            <h1>Настройки-настроечки</h1>
            <div class="settings-container">
                <div class="local-navigator"></div>
                <div class="menu-item-content"></div>
            </div>
        </div>`,
    SubContent: function () {
        // ДОБАВЛЯЕТСЯ ПОЗЖЕ
    }
});
},{}],102:[function(require,module,exports){
let Dictionary = {
    PersonType: {
        School: 1,
        SchoolRDC: 2,
        Student: 3,
        Servant: 4,
        Retired: 5,
        Other: 6,
        UnderSchool: 7,
    },
    PersonTypeDict: {
        1: 'Школа',
        2: 'Школа (РДЧ)',
        3: 'Студент',
        4: 'Служащий',
        5: 'Пенсионер',
        6: 'Прочее',
        7: 'Дошкола',
    },
    UserPosition: {
        Librarian: 1,
        Master: 2,
        MasterElder: 3,
        Moderator: 4,
        RegionModerator: 5,
        RegionAdmin: 6,
        Admin: 7,
    },
    UserPositionDict: {
        1: 'Библиотекарь',
        2: 'Заведующий библиотеки',
        3: 'Супер заведующий',
        4: 'Модератор',
        5: 'Модератор ЦБС',
        6: 'Администратор ЦБС',
        7: 'Администратор',
    },
    LibraryEventType: {
        EventFree: 1,
        EventPaid: 2,
        ClubFree: 3,
        ClubPaid: 4,
        Exhibition: 5,
    },
    LibraryEventTypeDict: {
        1: 'Бесплатное мероприятие',
        2: 'Платное мероприятие',
        3: 'Бесплатный клуб',
        4: 'Платный клуб',
        5: 'Выставка'
    },
    LibraryBookType: {
        OPL: 1,
        Nature: 2,
        Tech: 3,
        Agriculture: 4,
        Art: 5,
        Sport: 6,
        WTF_8183: 7,
        Catalog: 8,
        Children: 9,
        Fiction: 10,
        Other: 11,
    },
    LibraryBookTypeDict: {
        1: 'ОПЛ',
        2: 'Естествознание',
        3: 'Техника',
        4: 'Сельское хозяйство',
        5: 'Искусство',
        6: 'Спорт',
        7: '81, 83',
        8: 'Справочники',
        9: 'Детская литература',
        10: 'Художественная литература',
        11: 'Дополнительно',
    },
    LibraryBookCarryType: {
        Physical: 1,
        Electron: 2,
        Installed: 3,
        Remote: 4,
        Copy: 5,
    },
    LibraryConsultType: {
        Theme: 1,
        Factor: 2,
        Library: 3,
        Consult: 4,
        Copy: 5,
    },

    BookwareOtherPlace: {
        MMBA: 1,
        VirtualReadingHall: 2,
    },
    BookwareOtherPlaceDict: {
        1: 'ММБА',
        2: 'Виртуальные читальные залы',
    },

    Role: {
        Admin: 1,
        User: 2,
        AdminCBS: 13,
        ModeratorCBS: 15,
        Moderator: 21,

        DairyInput: 3,
        DairyInputMovings: 20,
        DairySummary: 4,
        DairySummaryEdit: 5,
        DairySummaryEditRemote: 24,

        Dashboard: 6,

        Passport: 7,
        PassportEdit: 17,
        Helpdesk: 8,
        HelpdeskResolve: 9,
        HelpdeskModerator: 23,

        SetupPlan: 10,
        SetupPlanEdit: 18,
        SetupEvent: 11,
        SetupEventEdit: 19,
        SetupEventOffer: 29,

        Meter: 12,
        MeterCreate: 27,
        MeterEdit: 28,

        LibraryID: 14,
        LibraryRegionID: 16,

        AdminUserManagement: 22,
        AdminTechManagement: 25,

        AdminUserCreate: 26,

        TesterPanel: 30,
    },
    RoleDict: {
        1: 'Администратор системы',
        2: 'Юзер',
        13: 'Администратор ЦБС',
        15: 'Модератор ЦБС',
        3: 'Ввод первичных данных',
        20: 'Ввод первичных данных передвижек',
        4: 'Сводная таблица, видимость',
        5: 'Сводная таблица, изменение',
        24: 'Сводная таблица, изменение удаленных пользователей',
        6: 'Дашборд',
        7: 'Паспорт видимость',
        17: 'Паспорт изменение',
        8: 'Хелпдеск',
        9: 'Хелпдеск техник',
        23: 'Хелпдеск модератор',
        10: 'Плановые показатели, видимость',
        18: 'Плановые показатели, изменение',
        11: 'Мероприятия (клубы, выставки), видимость',
        19: 'Мероприятия (клубы, выставки), изменение',
        29: 'Мероприятия (клубы, выставки), создание (на модерацию)',
        12: 'Счетчики, внесение данных',
        27: 'Счетчики, создание',
        28: 'Счетчики, изменение',
        14: 'Доступ к библиотекам',
        16: 'Доступ к ЦБС',
        21: 'Модератор библиотеки',
        22: 'Управление пользователями, изменение',
        25: 'Управление техниками',
        26: 'Управление пользователями, создание',
        30: 'А это панель тестового пользователя',
        //29 last
    },
    EventType: {
        Act: 1,
        Bal: 2,
        //...
    },
    EventTypeDict: {
        'null':'неизвестно',
        'undefined':'неизвестно',
        '0':'неизвестно',
        1: 'акция',
        2: 'бал',
        3: 'беседа',
        4: 'вебинар',
        5: 'вечер',
        6: 'викторина',
        7: 'встреча',
        8: 'выставка',
        9: 'гостиная',
        10: 'дискуссия',
        11: 'интерактив',
        12: 'карнавал',
        13: 'кинолекторий',
        14: 'КЛУБ',
        15: 'конкурс',
        16: 'конференция',
        17: 'концерт',
        18: 'круглый стол',
        19: 'лекция',
        20: 'мастер класс',
        21: 'народное гуляние',
        22: 'памятная дата',
        23: 'праздник',
        24: 'представление',
        25: 'презентация',
        26: 'программа/комплексное мероприятие',
        27: 'семинар',
        28: 'ток-шоу',
        29: 'утренник',
        30: 'фестиваль',
        31: 'форум',
        32: 'экскурсия',
        33: 'юбилей',
        34: 'ярмарка',
    },
    EventTrendsDict: {
        1: 'Антинаркотическое',
        2: 'Антитеррористическое',
        3: 'Безопасность движения',
        4: 'Иформационно-просветительское',
        5: 'Культурно-досуговое',
        6: 'Культурно-просветительское',
        7: 'Культурно-развлекательное',
        8: 'Международные и межрегиональные связи',
        9: 'Межэтнические и этноконфессиональные отношения',
        10: 'Мемориальное',
        11: 'Музыкально-просветительское',
        12: 'Образовательное',
        13: 'Патриотическое',
        14: 'Пропаганда здорового образа жизни',
        15: 'Пропаганда ЗОЖ',
        16: 'Профилактика беспризорности и безнадзорности несовершеннолетних',
        17: 'Профилактика жестокого обращения с детьми и подростками',
        18: 'Профилактика правонарушений среди несовершеннолетних',
        19: 'Работа с местным сообществом',
        20: 'Сохранение семейных ценностей',
        21: 'Социальное',
        22: 'Экологическое'
    },
    EventPlaceType: {
        Stationary:    1,
        NonStationary: 2
    },
    EventPlaceTypeDict: {
        1: 'Стационар',
        2: 'Внестационар',
    },
    Holidays: {
        0: "Нет",
        1: "Библионочь (общегородское мероприятие)",
        2: "Битва под Москвой (5 декабря)",
        3: "Всемирная акция 'День Земли' (22 апреля)",
        4: "Всемирный день борьбы с наркоманией и наркобизнесом (26 июня)",
        5: "Всемирный день книги и авторского права (23 апреля)",
        6: "Всемирный день культурного разнообразия во имя диалога и развития (21 мая)",
        7: "Всемирный день писателя (3 марта)",
        8: "Всемирный день поэзии (21 марта)",
        9: "Всемирный день ребенка (20 ноября)",
        10: "Всемирный день свободы печати (3 мая)",
        11: "Всемирный День Согласия и Примирения (7 ноября)",
        12: "Год кино (общегородское мероприятие 2016 год)",
        13: "Годовщина вывода Советских войск из Афганистана (15 февраля)",
        14: "Годовщина Победы в ВОВ 1941-1945 (9 мая)",
        15: "День всех влюблённых (14 февраля)",
        16: "День Героев Отечества (9 декабря)",
        17: "День города (4 сентября)",
        18: "День Государственного флага Российской Федерации (22 августа)",
        19: "День защитника Отечества (23 февраля)",
        20: "День защиты детей (1 июня)",
        21: "День знаний (1 сентября)",
        22: "День Конституции Российской Федерации (12 декабря)",
        23: "День космонавтики (12 апреля)",
        24: "День матери (последний выходной ноября)",
        25: "День молодежи (27 июня)",
        26: "День МФЦ (22 августа)",
        27: "День народного единства (4 ноября)",
        28: "День памяти и скорби (22 июня)",
        29: "День православной книги (14 марта)",
        30: "День работника архива (10 марта)",
        31: "День работников культуры России (25 марта)",
        32: "День работников торговли, бытового обслуживания населения и жилищно-коммунального хозяйства (3 воскресенье марта)",
        33: "День разгрома немецко-фашистских войск под Сталинградом (2 февраля)",
        34: "День родного языка (21 февраля)",
        35: "День России (12 июня)",
        36: "День российского кино (27 августа)",
        37: "День российской науки (8 февраля)",
        38: "День русского языка (6 июня)",
        39: "День семьи (15 мая)",
        40: "День семьи любви и верности (8 июля)",
        41: "День славянской письменности и культуры (24 мая)",
        42: "День снятия блокады Ленинграда (27 января)",
        43: "День солидарности в борьбе с терроризмом (3 сентября)",
        44: "День сотрудников органов внутренних дел Российской Федерации (10 ноября)",
        45: "День учителя (5 октября)",
        46: "Масленица (13 марта)",
        47: "Международный день детского телевидения и радиовещания (6 марта)",
        48: "Международный день детской книги (2 апреля)",
        49: "Международный День инвалидов (3 декабря)",
        50: "Международный день искоренения неграмотности (8 сентября)",
        51: "Международный день кино (28 декабря)",
        52: "Международный день мира (21 сентября)",
        53: "Международный день молодёжи (12 августа)",
        54: "Международный день музеев (18 мая)",
        55: "Международный день музыки (1 октября)",
        56: "Международный День пожилых людей (1 октября)",
        57: "Международный День толерантности (16 ноября)",
        58: "Международный женский день (8 марта)",
        59: "Неделя детской книги (последняя неделя марта)",
        60: "Новый год",
        61: "Ночь искусств (общегородское мероприятие)",
        62: "Ночь музеев (общегородское мероприятие 18 мая)",
        63: "Ночь музыки (общегородское мероприятие)",
        64: "Общероссийский день библиотек (библиотекаря) (27 мая)",
        65: "Пасха",
        66: "Праздник весны и труда (1 мая)",
        67: "Пушкинский день России (6 июня)",
        68: "Рождество Христово (7 января)",
        69: "Старый Новый год (14 января)",
        70: "Татьянин день (25 января)",
        71: "Фестиваль Московское Лето – Московское варенье (общегородское мероприятие 13 августа – 23 августа)",
        72: "Фестиваль Путешествие в Рождество (общегородское мероприятие 18 декабря – 10 января)"
    },
    CelebrationDict: {
        0: "Нет",
        1: "Библионочь (общегородское мероприятие)",
        2: "Битва под Москвой (5 декабря)",
        3: "Всемирная акция 'День Земли' (22 апреля)",
        4: "Всемирный день борьбы с наркоманией и наркобизнесом (26 июня)",
        5: "Всемирный день книги и авторского права (23 апреля)",
        6: "Всемирный день культурного разнообразия во имя диалога и развития (21 мая)",
        7: "Всемирный день писателя (3 марта)",
        8: "Всемирный день поэзии (21 марта)",
        9: "Всемирный день ребенка (20 ноября)",
        10: "Всемирный день свободы печати (3 мая)",
        11: "Всемирный День Согласия и Примирения (7 ноября)",
        12: "Год кино (общегородское мероприятие 2016 год)",
        13: "Годовщина вывода Советских войск из Афганистана (15 февраля)",
        14: "Годовщина Победы в ВОВ 1941-1945 (9 мая)",
        15: "День всех влюблённых (14 февраля)",
        16: "День Героев Отечества (9 декабря)",
        17: "День города (4 сентября)",
        18: "День Государственного флага Российской Федерации (22 августа)",
        19: "День защитника Отечества (23 февраля)",
        20: "День защиты детей (1 июня)",
        21: "День знаний (1 сентября)",
        22: "День Конституции Российской Федерации (12 декабря)",
        23: "День космонавтики (12 апреля)",
        24: "День матери (последний выходной ноября)",
        25: "День молодежи (27 июня)",
        26: "День МФЦ (22 августа)",
        27: "День народного единства (4 ноября)",
        28: "День памяти и скорби (22 июня)",
        29: "День православной книги (14 марта)",
        30: "День работника архива (10 марта)",
        31: "День работников культуры России (25 марта)",
        32: "День работников торговли, бытового обслуживания населения и жилищно-коммунального хозяйства (3 воскресенье марта)",
        33: "День разгрома немецко-фашистских войск под Сталинградом (2 февраля)",
        34: "День родного языка (21 февраля)",
        35: "День России (12 июня)",
        36: "День российского кино (27 августа)",
        37: "День российской науки (8 февраля)",
        38: "День русского языка (6 июня)",
        39: "День семьи (15 мая)",
        40: "День семьи любви и верности (8 июля)",
        41: "День славянской письменности и культуры (24 мая)",
        42: "День снятия блокады Ленинграда (27 января)",
        43: "День солидарности в борьбе с терроризмом (3 сентября)",
        44: "День сотрудников органов внутренних дел Российской Федерации (10 ноября)",
        45: "День учителя (5 октября)",
        46: "Масленица (13 марта)",
        47: "Международный день детского телевидения и радиовещания (6 марта)",
        48: "Международный день детской книги (2 апреля)",
        49: "Международный День инвалидов (3 декабря)",
        50: "Международный день искоренения неграмотности (8 сентября)",
        51: "Международный день кино (28 декабря)",
        52: "Международный день мира (21 сентября)",
        53: "Международный день молодёжи (12 августа)",
        54: "Международный день музеев (18 мая)",
        55: "Международный день музыки (1 октября)",
        56: "Международный День пожилых людей (1 октября)",
        57: "Международный День толерантности (16 ноября)",
        58: "Международный женский день (8 марта)",
        59: "Неделя детской книги (последняя неделя марта)",
        60: "Новый год",
        61: "Ночь искусств (общегородское мероприятие)",
        62: "Ночь музеев (общегородское мероприятие 18 мая)",
        63: "Ночь музыки (общегородское мероприятие)",
        64: "Общероссийский день библиотек (библиотекаря) (27 мая)",
        65: "Пасха",
        66: "Праздник весны и труда (1 мая)",
        67: "Пушкинский день России (6 июня)",
        68: "Рождество Христово (7 января)",
        69: "Старый Новый год (14 января)",
        70: "Татьянин день (25 января)",
        71: "Фестиваль Московское Лето – Московское варенье (общегородское мероприятие 13 августа – 23 августа)",
        72: "Фестиваль Путешествие в Рождество (общегородское мероприятие 18 декабря – 10 января)"
    },

    LibraryRegion: {
        CAO: 1,
        VAO: 2,
        ZAO: 3,
        ZELAO: 4,
        NOVOMOSCOW: 5,
        SAO: 6,
        SVAO: 7,
        SZAO: 8,
        UAO: 10,
        UVAO: 11,
        UZAO: 12,
    },
    LibraryRegionDict: {
        1: 'ЦБС «ЦАО»',
        2: 'ЦБС «ВАО»',
        3: 'ЦБС «ЗАО»',
        4: 'ЦБС «ЗелАО»',
        5: 'ЦБС «Новомосковская»',
        6: 'ЦБС «САО»',
        7: 'ЦБС «СВАО»',
        8: 'ЦБС «СЗАО»',
        10: 'ЦБС «ЮАО»',
        11: 'ЦБС «ЮВАО»',
        12: 'ЦБС «ЮЗАО»',
    },

    HelpRequestType: {
        WorkingPlace: 0,
        PC: 1,
        OfficeEquip: 2,
        Software: 3,
        MetersAlarms: 4,
        EventTechProvision: 5,
        Repair: 6,
        ReplaceInstall: 7,
        IT: 8,
        AHD: 9
    },
    HelpRequestTypeDict: {
        0: 'ОРГАНИЗАЦИЯ РАБОЧЕГО МЕСТА',
        1: 'ОБСЛУЖИВАНИЕ КОМПЬЮТЕРОВ',
        2: 'ОБСЛУЖИВАНИЕ ОРГТЕХНИКИ',
        3: 'ОБСЛУЖИВАНИЕ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ',
        4: 'НАБЛЮДЕНИЕ, СЧЕТЧИКИ, СИГНАЛИЗАЦИЯ',
        5: 'ТЕХНИЧЕСКОЕ СОПРОВОЖДЕНИЕ МЕРОПРИЯТИЙ',
        6: 'РЕМОНТ',
        7: 'ЗАМЕНА / УСТАНОВКА',
        8: 'ИТ',
        9: 'АХД',
    },
    HelpRequestTypeITList: [],  //filled in app.js
    HelpRequestTypeAHDList: [], //filled in app.js

    HelpRequestStatus: {
        New: 0,
        Active: 1,
        Closed: 2,
        Rejected: 3,
        Returned: 4
        // 1 - в работе
        // 2 - закрытые
        // 3 - отклоненные
        // 4 - возвращенные
    },
    HelpRequestStatusDict: {
        0: 'Новая',
        1: 'В работе',
        2: 'Закрыта',
        3: 'Отклонена',
        4: 'Возвращена'
    },
    HelpRequestPriority: {
        Low: 1,
        Mid: 2,
        High: 3,
        ExactDate: 4,
    },
    HelpRequestPriorityDict:{
        1: 'Низкий',
        2: 'Средний',
        3: 'Высокий',
        4: 'Точная дата',
    },


    TechnicianDict: {
        '-1': 'Неизвестно',
    },


    MeterType: {
        WaterCold: 0,
        WaterHot:  1,
        Electricity:  2,
    },
    MeterTypeDict: {
        0: 'ХВС',
        1: 'ГВС',
        2: 'Электричество',
    },

    SubscribeType: {
        VisitRegisterAdd: 1,
        VisitVisitAdd: 2,
        VisitEventAdd: 3,
        Bookware: 4,
        Movings: 5,
        SummaryChange: 6,
        PassportChange: 7,
        DataInputPlan: 8,
        DataInputEvent: 9,
        SupportAdd: 10,
        SupportMessageAdd: 10,
    }
};

module.exports = Dictionary;











},{}],103:[function(require,module,exports){
module.exports = class DragAndDropItem {

    /**
     *
     * @param {DragAndDropItem} co
     */
    constructor ({
                     Target = null,
                 })
    {
        this._Target = Target;
        let dragSrcEl = null;
        let that      = this;
        this._handleDragStart = (e) => {
            e.target.style.opacity = '1'; // this / e.target is the source node.
            dragSrcEl = e.target;
        };
        that._handleDragOver = (e) => {
            if (e.preventDefault) {
                e.preventDefault(); // Necessary. Allows us to drop.
            }
            e.dataTransfer.dropEffect = 'move';
            return false;
        };
        that._handleDragEnter = (e) => {
            // this / e.target is the current hover target.
            e.target.classList.add('over');
        };
        that._handleDragLeave = (e) => {
            e.target.classList.remove('over'); // this / e.target is previous target element.
        };
        that._isAtribute = () => {

        };
        that._handleDrop = (e) => {
            if (e.stopPropagation) {
                e.stopPropagation(); // stops the browser from redirecting.
            }
            //console.log(dragSrcEl.parentNode);

            //if (e.target.parentNode.hasAttributes('draggable')) {
                //console.log(e.target.hasAttributes('draggable'));
                // console.log('123123');

                //if (dragSrcEl != e.target) {
                    // Set the source column HTML to the HTML of the column we dropped on.

                    var fillPlace   = e.target.parentNode.cloneNode(false);
                    //console.log(e.target.parentNode);
                    e.target.parentNode.parentNode.insertBefore(fillPlace, dragSrcEl);
                    e.target.parentNode.parentNode.insertBefore(dragSrcEl, e.target.parentNode);
                    e.target.parentNode.parentNode.insertBefore(e.target.parentNode, fillPlace);
                    fillPlace.remove();
                //}

            //}
            return false;
        };

        that._handleDragEnd = (e) => {
            // this/e.target is the source node.
            e.target.style.opacity = '1';
            Target.forEach(function (elem) {
                elem.classList.remove('over');
            });
        };

        Target.forEach(function(elem) {
            elem.addEventListener('dragstart', that._handleDragStart, false);
            elem.addEventListener('dragenter', that._handleDragEnter, false);
            elem.addEventListener('dragover', that._handleDragOver, false);
            elem.addEventListener('dragleave', that._handleDragLeave, false);
            elem.addEventListener('drop', that._handleDrop, false);
            elem.addEventListener('dragend', that._handleDragEnd, false);
        });
        window.dddd = this;
        //console.log(this);
    }
    get Target(){
        return this._Target;
    }
    set Target(v){
        this._Target = v;
    }

};

},{}],104:[function(require,module,exports){
module.exports = function (
    {
        Control = null,
        target = '',
        Key = 'Key',
        Value = 'Value',
        CheckKey = 'Check',
        Data = () => ([]),
        onOK = () => {},
        right = '',
        checked = 'checked', // '' - ничего не выбрано, 'checked' - все выбрано, 'key' - по ключу
        AllSelector = true,
        UpdateListLive = false
    } = {} ) {
    let AllSelectorText = `<label><input type="checkbox" class="all-check" ${checked}>Все</label>`;
    if (!AllSelector)
        AllSelectorText = '';
    else AllSelector = true;

    return new Lure.Content({
        Target: target,
        Type: 'select-filter',
        Content:
            `<div class="filter-selector ${right}">
                ${AllSelectorText}
                <div class="wrap">
                {{#each ItemList}}
                    <label><input type="checkbox" value="{{${Key}}}" class="item-check" ${checked === 'checked' ? 'checked' : ''} {{CheckKey}}>{{${Value}}}</label>
                {{#endeach}}
                </div> 
                <button class="l-button button ok-button">OK</button>
            </div>`,
        Show: function () {
            if (!this.Proto.Data.ItemList || UpdateListLive)
                this.Proto.SetProperty('ItemList', (typeof Data === 'function' ? Data() : Data));
        },
        Hide: function () {
            this.needUpdate = true;
        },
        Proto: {ItemList: null},
        PropFormat: {
            CheckKey: (x, p) => checked === 'key' && p[CheckKey] ? 'checked' : ''
        },
        Props: function () {
            // this.needUpdate = true;
        },
        Methods: function () {
            this.ResetSelection = function () {
                for (let elem of Array.prototype.slice.call(Lure.SelectAll('.wrap input', this.Content)))
                    elem.checked = false;
            }
        },
        AfterBuild: function () {
            if (Control) Control.addEventListener('click', e => this.Show());
            this.AddEventListener('click', '.ok-button', () => {
                // console.log(a);
                onOK(Array.prototype.map.call(Lure.SelectAll('.wrap input:checked', this.Content), x => x.value));
                this.Hide();
            });
            if (AllSelector) {
                this.AddEventListener('change', '.wrap input', e => this.Select('.all-check').checked = false);
                this.AddEventListener('change', '.all-check', e => {
                    for (let elem of Array.prototype.slice.call(Lure.SelectAll('.wrap input', this.Content)))
                        elem.checked = e.currentTarget.checked;
                });
            }
            document.addEventListener('click', e => {
                if (e.target !== this.Content && e.target !== Control && e.target !== target &&  e.target.offsetParent !== this.Content) {
                    // console.log(e.target, e.target.offsetParent === this.Content);
                    this.Hide();
                    e.stopPropagation();
                }
            });
        }
    });
};

},{}],105:[function(require,module,exports){
let Footer = new Lure.Content({
    Name: 'Footer',
    Target: 'body',
    Content: `<div class="footer l-row">
                  <div class="foot-left l-row">
                    <div class="foot-item">Организация: {{Organisation}}</div>  
                    <div class="foot-item">|</div>
                    <div class="foot-item">ID клиента: {{ClientID}}</div>  
                    <div class="foot-item">|</div>  
                    <div class="foot-item">№ лицензии: {{LicenseID}}</div>  
                  </div>
                  <div class="foot-right l-row">
                    <div class="foot-item">© ${Lure.Date().Format('YYYY')} БиблиоPRO</div>    
                    <div class="foot-item">|</div>  
                    <div class="foot-item">Круглосуточная служба технической поддержки 8-800-228-14-88</div>  
                  </div>
              </div>`,
    State: {
        Organisation: 'ГБУК г. Москвы «ЦБС ЦАО»',
        ClientID: 'L234324324324',
        LicenseID: '010201020102010201',
    },
    AfterBuild: function () {
        //this.Proto.SetProperty('Name', Lure.User.Name);
        //this.Proto.SetProperty('Position', Dictionary.UserPositionDict[Lure.User.PositionID]);
    }
});
},{}],106:[function(require,module,exports){
module.exports = {
    GetDigit(number, n, NumberSockets=4){
        let count = number.toString();
        if (n <= NumberSockets - count.length){
            return "0";
        }
        return count.charAt(n-(NumberSockets+1-count.length));
    }
};
},{}],107:[function(require,module,exports){
module.exports = new Lure.Content({
    Name: 'Headline',
    Target: '.header',
    Content: `<div class="headline l-row">
                  <div class="headline-logo"></div>
                  <div class="headline-bush"></div>
                  <div class="headline-user l-col l-flex-center">
                    <div class="position">{{Position}}</div>
                    <div class="name">{{Name}}</div>
                  </div>
                  <div class="submenu-control">
                    <div class="user-menu">
                      <div class="li user-menu_account">Учетная запись</div>
                      <div class="li exit">Выход</div>
                    </div>
                  </div>
              </div>`,
    AfterBuild: function () {
        this.Select('.exit').addEventListener('click', ()=>{
            api.LogOff({Then: ()=>{
                    api.onUnauth();
                }});
        });
        this.Proto.SetProperty('Name', Lure.User.Name);
        this.Proto.SetProperty('Position', Lure.User.Position);
    }
});
},{}],108:[function(require,module,exports){
let CoolDown = 3000;

let WindowInterval = null;
let Subscribers = [];
let LastID = -1;
let ClientID = Lure.String.Random(36, true); //something like 'Q3dP9eXk2k8lZ02kYUVSmLlWggSn265kld5X'

function GetHistory() {
    api.Cache_GetMasterHistoryLast(LastID, {
        Then: async (history)=>{
            /*for (let i = 0; i < history.length; i++){
                let Man = await DataStorage.GetUser(history[i].ManagerID);
                history[i].Manager = Man.Name;
                history[i].Position = Man.Position;
            }*/
            if (LastID > 0 && history.length > 0){
                Check(history);
            }
            if (history.length > 0){
                LastID = history.Last().ID;
            }
        },
        Catch: (e)=>{
            //HistoryMaster.Stop();
            //HistoryMaster.Reset();
            //console.error(e);
        }
    });
}
function Check(history) {
    for (let i = 0; i < Subscribers.length; i++) {
        let Subscriber = Subscribers[i];
        if (Subscriber._isDisabled){
            continue;
        }
        let Data = history.Where(Subscriber._Condition);
        if (Data.length > 0) {
            Subscriber._OnSubscribe(Lure.Object.Clone(Data));
        }
    }
}

let HistoryMaster = {
    Run(Interval=2000){
        WindowInterval = window.setInterval(GetHistory, Interval);
    },
    Stop(){
        window.clearInterval(WindowInterval);
        WindowInterval = null;
    },
    Reset(){
        //console.info('HistoryMaster.Reset');
        this.Stop();
        window.setTimeout(this.Run, CoolDown);
    },
    AddSubscription(Subscription){
        Subscribers.push(Subscription);
    },

    IncreaseLastID(){
        LastID++;
    },
    DecreaseLastID(){
        LastID++;
    }
};



let HMD = {  //history master dictionary
    Type: {
        Visitation:{
            ID: 0,
            MessageType:{
                Register:   1,
                Count:      2,
                EventFree:  3,
                EventPaid:  4,
                ClubFree:   5,
                ClubPaid:   6,
                Exhibition: 7,
            }
        }
    },
    TypeID:{
        Visitation: 0,
        Bookware: 1,
        Summary: 2,
        Passport: 3,
        Meters: 4,
        SetupEvents: 5,
    }
};

module.exports = HistoryMaster;
},{}],109:[function(require,module,exports){
let HistoryMaster = require('./history-master');

/**
 * @typedef {Object} HistoryItem
 * @property {int} ID
 *
 * @property {Date} DateCreated
 * @property {Date} DateValue
 * @property {int} TypeID
 * @property {int} MessageType

 * @property {int} ItemID
 * @property {int} LibraryID
 * @property {int} LoginID
 * @property {int} Value1
 * @property {int} Value2
 * @property {string} MessageText1
 * @property {string} MessageText2
 */

/**
 *@callback Condition_call
 * @param {HistoryItem} histItem
 */
/**
 *@callback OnSubscribe_call
 * @param {[HistoryItem]} histItem
 */

/**
 * @typedef {Object} HistoryConstructor
 * @property {Condition_call} Condition
 * @property {OnSubscribe_call} OnSubscribe
 * @property {boolean} isInstantSubscribe
 */
function HMSConstructor({
                            Condition          = (h)=>true,
                            OnSubscribe        = (histItemList)=>{},
                            isInstantSubscribe = false
                        }){
    this._isDisabled  = !isInstantSubscribe;
    this._OnSubscribe = OnSubscribe;
    this._Condition   = Condition;
    HistoryMaster.AddSubscription(this);
}


class HistorySubscription{
    Subscribe(){
        this._isDisabled = false;
    }
    Unsubscribe(){
        this._isDisabled = true;
    }
    get isActive(){
        return !this._isDisabled;
    }

    /**
     *
     * @param {HistoryConstructor} co
     */
    constructor(co){
        HMSConstructor.call(this, co);
    }
}

module.exports = HistorySubscription;
},{"./history-master":108}],110:[function(require,module,exports){
const InputBox = new Lure.Content({
    Name: 'InputBox',
    Target: 'body',
    Visible: false,
    Route: false,
    Content: `<div class="input-box">
                <div class="inner">
                  <div class="head"><div class="caption">{{Caption}}</div></div>
                  <div class="screen text-screen">
                    <div class="range-block">
                        <div class="range-row">
                            <div class="start-value">От 0</div>
                            <div><input type="range" class="range range-start"></div>
                        </div>
                        <div class="range-row">
                            <div class="end-value">До 0</div>
                            <div><input type="range" class="range range-end"></div>
                        </div>
                    </div>
                    <input class="textbox l-textbox" type="text" value="{{Value}}">
                    <textarea class="textarea l-textarea">{{Value}}</textarea>
                    <textarea class="CKEditor-area" name="CKEditor-area">{{Value}}</textarea>
                    <select class="select l-select"></select>
                    <div class="select-screen">
                    </div>
                  </div>
                  <div class="numpad-inner">
                      <div class="screen">{{Value}}</div>
                      <div class="l-row">
                          <div class="cell btn-clear">ОЧИСТИТЬ</div>
                          <div class="cell btn-remove">УДАЛИТЬ</div>
                      </div>
                      <div class="l-row">
                          <div class="cell digit" data-value="1">1</div>
                          <div class="cell digit" data-value="2">2</div>
                          <div class="cell digit" data-value="3">3</div>
                      </div>
                      <div class="l-row">
                          <div class="cell digit" data-value="4">4</div>
                          <div class="cell digit" data-value="5">5</div>
                          <div class="cell digit" data-value="6">6</div>
                      </div>
                      <div class="l-row">
                          <div class="cell digit" data-value="7">7</div>
                          <div class="cell digit" data-value="8">8</div>
                          <div class="cell digit" data-value="9">9</div>
                      </div>
                      <div class="l-row">
                          <div class="cell digit" data-value="-">-</div>
                          <div class="cell digit" data-value="0">0</div>
                          <div class="cell digit" data-value="+">+</div>
                      </div>
                    </div>
                  
                  <div class="l-row">
                      <div class="cell button button2 btn-cancel">ОТМЕНА</div>
                      <div class="cell button btn-confirm">ОК</div>
                  </div>
                </div>
                
                
                
                
                <div class="wires">
                    <div class="wire wire-1"></div>
                    <div class="wire wire-2"></div>
                    <div class="wire wire-3"></div>
                    <div class="wire4 wire-4"></div> 
                </div>
              </div>`,
    Proto:{
        Caption: '',
        Value: '',

        Width: 0,
        Height: 0,
    },
    Controller: {
        Target: '.select',
        ListElement: `<option value="{{Value}}">{{View}}</option>`,
    },
    Props: function () {
        this.TextBox = this.Select('.textbox');
        this.TextArea = this.Select('.textarea');
        this.InputSelect = this.Select('.select');
        this.InputRange = this.Select('.range-block');
        this.InputRangeStart = this.Select('.range-block .range-start');
        this.InputRangeEnd = this.Select('.range-block .range-end');
        this.CKEditor = this.Select('.CKEditor-area');

        this.InputText = this.Select('.text-screen');
        this.InputNumPad = this.Select('.numpad-inner');

        this._ControlConfirmDelegate = null;
        this._JustShowed = true;

        this.Wires = [
            this.Select('.wire-1'),
            this.Select('.wire-2'),
            this.Select('.wire-3'),
            //this.Select('.wire-4')
        ];
        this._RegexDigit = new RegExp("\\d"); // /\d/

        this._Type = null;

        this.InnerContent = this.Select('.inner');

    },
    Methods: function () {


        this.ShowType = function (type) {
            if (!this.CKEditor)
                this.CKEditor = this.Select('#cke_CKEditor-area');
            this.CKEditor.style.display = 'none';
            switch (type) {
                case 'number':
                    this.InputNumPad.style.display = '';
                    this.InputText.style.display = 'none';
                    this.InputRange.style.display = 'none';
                    break;
                case 'select':
                    this.InputNumPad.style.display = 'none';
                    this.InputRange.style.display = 'none';
                    this.TextBox.style.display = 'none';
                    this.TextArea.style.display = 'none';
                    this.InputSelect.style.display = '';
                    this.InputText.style.display = '';
                    break;
                case 'richtext':
                    this.InputNumPad.style.display = 'none';
                    this.InputRange.style.display = 'none';
                    this.TextBox.style.display = 'none';
                    this.InputSelect.style.display = 'none';
                    this.InputText.style.display = '';
                    this.TextArea.style.display = '';
                    break;
                case 'text':
                    this.InputNumPad.style.display = 'none';

                    this.InputRange.style.display = 'none';
                    this.TextArea.style.display = 'none';
                    this.InputSelect.style.display = 'none';
                    this.TextBox.style.display = '';
                    this.InputText.style.display = '';
                    break;
                case 'range':
                    this.InputNumPad.style.display = 'none';
                    this.TextArea.style.display = 'none';
                    this.InputSelect.style.display = 'none';
                    this.TextBox.style.display = 'none';
                    this.InputRange.style.display = '';
                    break;
                case 'editor':
                    this.InputNumPad.style.display = 'none';
                    this.TextArea.style.display = 'none';
                    this.InputSelect.style.display = 'none';
                    this.TextBox.style.display = 'none';
                    this.InputRange.style.display = 'none';
                    this.CKEditor.style.display = '';
                    break;
            }
        };
        this._RunNumpad = function (Element, CurrentValue, ConfirmDelegate, ExtraOptions = {}) {
            this.ShowType('number');
            this._Type = 'number';
        };
        this._RunSelection = function (Element, CurrentValue, ConfirmDelegate, ExtraOptions) {
            // ExtraOptionsExample = {
            //     Data: [{ID: 1, Name: 'Kekropus'}],
            //     KeyValue: 'ID',
            //     KeyView: 'Name',
            //     TextArea: false,
            // }
            //

            this._Type = 'select';
            this.ShowType('select');

            let KeyValue = ExtraOptions.KeyValue;
            let KeyView = ExtraOptions.KeyView;
            let Data = [];
            for (let i = 0; i < ExtraOptions.Data.length; i++) {
                let Item = ExtraOptions.Data[i];
                if (KeyValue) {
                    Data.push({Value: Item[KeyValue], View: Item[KeyView]})
                } else {
                    Data.push({Value: Item, View: Item})
                }
            }
            this.Controller.Refresh(Data).then(() => this.InputSelect.value = CurrentValue);
        };
        this._RunText = function (Element, CurrentValue, ConfirmDelegate, ExtraOptions) {

            if (ExtraOptions.TextArea || ExtraOptions.Type === 'richtext')
                this._Type = 'richtext';
            else
                this._Type = 'text';

            this.ShowType(this._Type);

        };
        this._RunInterval = function (Element, CurrentValue, ConfirmDelegate, ExtraOptions) {
            this._Type = 'range';
            this.ShowType('range');
            let minValue = 0, maxValue = 100;
            if (ExtraOptions.hasOwnProperty('MinValue')) minValue = ExtraOptions.MinValue;
            if (ExtraOptions.hasOwnProperty('MaxValue')) maxValue = ExtraOptions.MaxValue;
            if (ExtraOptions.hasOwnProperty('Value') && ExtraOptions.Value[0] && ExtraOptions.Value[1]) {
                this.InputRangeStart.value = parseInt(ExtraOptions.Value[0]);
                this.InputRangeEnd.value = parseInt(ExtraOptions.Value[1]);
            } else {
                this.InputRangeStart.value = minValue;
                this.InputRangeEnd.value = maxValue;
            }

            this.InputRangeStart.min = minValue;
            this.InputRangeStart.max = maxValue;
            this.InputRangeEnd.min = minValue;
            this.InputRangeEnd.max = maxValue;

            let RStart = this.Select('.range-block .start-value');
            let REnd = this.Select('.range-block .end-value');
            RStart.innerText = "От " + this.InputRangeStart.value;
            REnd.innerText = "До " + this.InputRangeEnd.value;

            this.InputRangeStart.oninput = e => {
                let a = parseInt(this.InputRangeStart.value),
                    b = parseInt(this.InputRangeEnd.value);
                if (a >= b) this.InputRangeEnd.value = this.InputRangeStart.value;
                RStart.innerText = "От " + a;
                REnd.innerText = "До " + this.InputRangeEnd.value;
            };
            this.InputRangeEnd.oninput = e => {
                let a = parseInt(this.InputRangeStart.value),
                    b = parseInt(this.InputRangeEnd.value);
                if (b <= a) this.InputRangeStart.value = this.InputRangeEnd.value;
                RStart.innerText = "От " + this.InputRangeStart.value;
                REnd.innerText = "До " + b;
            };

        };
        let ck = false;
        this._RunEditor = function (Element, CurrentValue, ConfirmDelegate, ExtraOptions) {
            this._Type = 'editor';
            this.ShowType('editor');
            if (!ck) {
                CKEDITOR.replace('CKEditor-area');
                this.CKEditor = null;
                ck = true;
            }
            CKEDITOR.instances["CKEditor-area"].setData(CurrentValue);
        };
        this.Run = function (Element, CurrentValue, ConfirmDelegate, ExtraOptions = {}) {
            ExtraOptions.CustomWidth = ExtraOptions.CustomWidth ? ExtraOptions.CustomWidth : 124;
            ExtraOptions.Type = ExtraOptions.Type !== void 0 ? ExtraOptions.Type : 'auto';
            this.State.Caption = (ExtraOptions.Caption !== void 0 && ExtraOptions.Caption !== null) ? ExtraOptions.Caption : '';

            if (ExtraOptions.Type === 'range')
                ExtraOptions.CustomWidth = 210;
            this.TextArea.style.minHeight = ExtraOptions.CustomHeight + 'px';
            //this.TextArea.style.width = ExtraOptions.CustomWidth + 'px';
            //this.Content.style.width = ExtraOptions.CustomWidth + 'px';


            this.Content.style.width = ExtraOptions.CustomWidth + 'px';

            // if (ExtraOptions.Type === 'range' || this._Type === 'richtext') {
            //     if (!ExtraOptions.CustomWidth)
            //         this.Content.style.width = '210px';
            //     else
            //         this.Content.style.width = ExtraOptions.CustomWidth + 'px';
            // } else if (ExtraOptions.Type === 'editor') {
            //     this.Content.style.width = '550px';
            //     // this.CKEditor.style.minWidth = '550px';
            //     // this.CKEditor.style.minHeight = '550px';
            // } else this.Content.style.width = '';



            if (ExtraOptions.Type === 'range') {
                this._RunInterval(Element, CurrentValue, ConfirmDelegate, ExtraOptions);
            } else if (ExtraOptions.Data) {
                this._RunSelection(Element, CurrentValue, ConfirmDelegate, ExtraOptions);
            } else if (ExtraOptions.Type === 'number' || (ExtraOptions.Type === 'auto' && Lure.isNumeric(CurrentValue))) {
                this._RunNumpad(Element, CurrentValue, ConfirmDelegate, ExtraOptions);
            } else if (ExtraOptions.Type === 'editor') {
                this._RunEditor(Element, CurrentValue, ConfirmDelegate, ExtraOptions)
            } else {
                this._RunText(Element, CurrentValue, ConfirmDelegate, ExtraOptions);
            }

            this._ControlConfirmDelegate = ConfirmDelegate;
            this.TextBox.value = CurrentValue;
            this.TextArea.value = CurrentValue;
            this.Proto.Data.Value = CurrentValue;
            this.Proto.Refresh();
            if (this.Element)
                this.Element.classList.remove('numpad-edit');
            this.Element = Element;
            this.Element.classList.add('numpad-edit');
            this.HideWires();
            this.Show();
            this.SetPos(Element);
        };

        this.HideWires = function () {
            for (let i = 0; i < this.Wires.length; i++){
                this.Wires[i].style.display = 'none';
            }
        };
        this.ShowWires = function () {
            for (let i = 0; i < this.Wires.length; i++){
                this.Wires[i].style.display = '';
            }
        };
        this.SetPos = function(Element){
            let BodyRect = document.body.getBoundingClientRect();
            let ElemRect = Element.getBoundingClientRect();

            let OffsetTop =  ElemRect.top + ElemRect.height + 5;
            let OffsetLeft = ElemRect.left + ElemRect.width + 5;

            let MaxLeft = BodyRect.width - 130;
            let MaxTop = BodyRect.height - 230 - ElemRect.height;
            if (OffsetLeft > MaxLeft){
                OffsetLeft = ElemRect.left - 130;
            }
            if (OffsetTop > MaxTop){
                OffsetTop = ElemRect.top - 230;
            }
            this.Positions = {
                ElemRect: ElemRect,
                OffsetLeft: OffsetLeft,
                OffsetTop: OffsetTop,
            };
            this.Content.style.left = OffsetLeft + 'px';
            this.Content.style.top = OffsetTop + 'px';
            //console.log(`w: ${this.State.Width}, h: ${this.State.Height}, ew:${ElemRect.width}, eh:${ElemRect.height}, MaxLeft: ${MaxLeft}, MaxTop:${MaxTop}`)
        };
        this.SetWires = function () {
            if (!this.Element.classList.contains('tcell')) //wire
                return;

            let P = this.Positions;
            let Rect = this.Content.getBoundingClientRect();
            P.OffsetTop = Rect.top;
            P.OffsetLeft = Rect.left;
            let WireOffsetTop  = [
                P.OffsetTop > P.ElemRect.top ? -2 : 2,
                P.OffsetTop > P.ElemRect.top ? -2 : 2,
                P.OffsetTop > P.ElemRect.top ? -P.ElemRect.height:P.ElemRect.height-2,
                P.OffsetTop > P.ElemRect.top ? -P.ElemRect.height:P.ElemRect.height,
            ];
            let WireOffsetLeft = [
                P.OffsetLeft > P.ElemRect.left ? -2 : 2,
                P.OffsetLeft > P.ElemRect.left ? -P.ElemRect.width:P.ElemRect.width-2,
                P.OffsetLeft > P.ElemRect.left ? -2 : 2,
                P.OffsetLeft > P.ElemRect.left ? -P.ElemRect.width:P.ElemRect.width,
            ];

            for (let i = 0; i < this.Wires.length; i++){
                let Dot = {
                    Start: {
                        Top:  (P.OffsetTop  > P.ElemRect.top ? 0 : P.Height -2),
                        Left: (P.OffsetLeft > P.ElemRect.left? 0 : P.Width -2),
                    },
                    End: {
                        Top:  WireOffsetTop[i] + (P.OffsetTop  > P.ElemRect.top ? (P.ElemRect.top +P.ElemRect.height-P.OffsetTop) : (P.ElemRect.top-P.OffsetTop)  ),
                        Left: WireOffsetLeft[i]+ (P.OffsetLeft> P.ElemRect.left? (P.ElemRect.left+P.ElemRect.width -P.OffsetLeft): (P.ElemRect.left-P.OffsetLeft) ),
                    }
                };
                //1st
                let Width1 = Math.sqrt( Math.pow( (Dot.Start.Top-Dot.End.Top), 2) + Math.pow( (Dot.Start.Left-Dot.End.Left), 2)  );

                let k = (Dot.Start.Top - Dot.End.Top) / (Dot.Start.Left - Dot.End.Left);
                let angle = Math.atan(k);
                let angleDeg = angle * 180/ Math.PI;
                if (angle < 0)
                {
                    angleDeg = 180+ angleDeg;
                }
                //if input under output
                if (Dot.Start.Top - Dot.End.Top > 0)
                {
                    angleDeg = 180+ angleDeg;
                }
                //in same line bug fix
                if (Dot.Start.Top - Dot.End.Top === 0 && Dot.Start.Left > Dot.End.Left)
                {
                    angleDeg = 180+ angleDeg;
                }
                this.Wires[i].style.left = Dot.Start.Left + 'px';
                this.Wires[i].style.top  = Dot.Start.Top  + 'px';
                this.Wires[i].style.width = Width1  + 'px';
                this.Wires[i].style.transform = `rotate(${angleDeg}deg)`;
                this.Wires[i].style.display = '';
            }

        };
        this.Confirm = function () {
            let val = this.Proto.Data.Value;
            if (this._Type === 'number')
                val = parseInt(val);
            if (this._Type === 'range')
                val = [parseInt(this.InputRangeStart.value), parseInt(this.InputRangeEnd.value)];
            if (this._Type === 'editor')
                val = CKEDITOR.instances["CKEditor-area"].getData();
            this._ControlConfirmDelegate(val);
            this._JustShowed = true;
            this.Hide();
        };
        this.Cancel = function () {
            this._JustShowed = true;
            this.Hide();
        };

        this.AddDigit = function (v) {

            if (v === '-'){
                if (this.Proto.Data.Value === '' || this.Proto.Data.Value <= 1)
                    this.Proto.Data.Value = "0";
                else
                    this.Proto.Data.Value = parseInt(this.Proto.Data.Value) - 1 + '';
            }
            else if (v === '+'){
                if (this.Proto.Data.Value === '')
                {
                    this.Proto.Data.Value = "1";
                }
                else
                {
                    let val = parseInt(this.Proto.Data.Value) + 1;
                    if (val > 99999999)
                        return;
                    this.Proto.Data.Value = val + '';
                }
            }
            else {
                if (this.Proto.Data.Value.length > 7)
                    return;
                if (this._JustShowed){
                    this.Proto.Data.Value = "0";
                    this._JustShowed = false;
                }
                this.Proto.Data.Value = this.Proto.Data.Value + v;
            }
            this.Proto.Data.Value = this.Proto.Data.Value.replace(/^([0]+)[\d]*$/, function (m,zeros) {
                m = m.substring(zeros.length, m.length);
                return m==='' ? "0": m;
            });
            this.Proto.Refresh();
        };

    },
    Show: function () {
        if (this._Type === 'text'){
            this.TextBox.focus();
            this.TextBox.select();
        }
        else if (this._Type === 'richtext'){
            this.TextArea.focus();
            this.TextArea.select();

        }
        else if (this._Type === 'select'){
            let OptionDefault = Lure.Select(`[value="${this.Proto.Data.Value}"]`,InputBox.InputSelect);
            if (OptionDefault)
                OptionDefault.selected = true;
        }

        this.Positions.Height = this.Content.offsetHeight;
        this.Positions.Width  = this.Content.offsetWidth;
        this.SetWires();
    },
    Hide: function () {
        if (this.Element)
            this.Element.classList.remove('numpad-edit');

    },
    AfterBuild: function () {
        this.Draggable = Lure.Draggable(this.Select('.head'), this.Content, {OnMove: this.SetWires, Containment: [0, 0, 'auto', 'auto']});

        let Rect = this.Content.getBoundingClientRect();
        this.State.Width  = Rect.width;
        this.State.Height = Rect.height;


        this.Select('.btn-confirm').onclick = ()=>{this.Confirm();};
        this.Select('.btn-cancel').onclick = ()=>{this.Cancel();};


        this.InputSelect.addEventListener('change', (e)=>{
            this.Proto.Data.Value = e.currentTarget.value;
        });
        this.TextBox.addEventListener('keyup', (e)=>{
            this.Proto.Data.Value = e.currentTarget.value;
            if (this.isActive && e.keyCode === 13){
                this.Confirm();
            }
        });
        this.TextArea.addEventListener('keyup', (e)=>{
            this.Proto.Data.Value = e.currentTarget.value;
        });

        this.AddEventListener('click', '.digit', function (e) {
            let v = e.currentTarget.dataset['value'];
            this.AddDigit(v);
        });
        this.Select('.btn-clear').onclick = ()=>{
            this.Proto.Data.Value = '';
            this.Proto.Refresh();
        };
        this.Select('.btn-remove').onclick = ()=>{
            this.Proto.Data.Value = this.Proto.Data.Value.substring(0, this.Proto.Data.Value.length-1);
            this.Proto.Refresh();
        };

        document.addEventListener('keyup', (e)=>{
            //numpad open and pressed 0-9
            //if (this.isActive && (e.keyCode >= 48 && e.keyCode <= 57){
            if (this.isActive && this._Type==='number' && this._RegexDigit.test(e.key) ){
                this.AddDigit(e.key);
            }
            else if (this.isActive && e.keyCode === 13){
                this.Confirm();
            }
        })
    }
});

window.InputBox = InputBox;
module.exports = InputBox;
},{}],111:[function(require,module,exports){
class LibraryTree{
    constructor(Parent, ControlTarget, Options={}){
        if (!Parent.HasPermission)
            return;
        //debugger
        Options.MultiSelect = Options.MultiSelect !== void 0 ? Options.MultiSelect : false;
        Options.ControlPush = Options.ControlPush !== void 0 ? Options.ControlPush : true;
        Options.SelectedList = Options.SelectedList !== void 0 ? Options.SelectedList : null;
        Options.ButtonOkCaption = Options.ButtonOkCaption !== void 0 ? Options.ButtonOkCaption : "Показать";
        Options.ButtonCancelCaption = Options.ButtonCancelCaption !== void 0 ? Options.ButtonCancelCaption : "Отмена";

        Parent.Proto.Data.LibraryIDListSelected = [];
        Parent.LibraryTree = new Lure.Content({
            Name: 'LibraryTree',
            Visible: false,
            Parent: Parent,
            Route: false,
            Content: `<div class="library-tree">
                 <div class="search-box l-row l-flexa-center">
                    <div class="caption">Поиск: </div>
                    <div class="flex-100"><input class="textbox l-textbox search" type="text"></div>
                 </div>
                 <div class="lib-group-list ${Options.MultiSelect ? 'multi-select':'single-select'}"></div>
                 <div class="button-holder l-row l-flex-end">
                    <button class="button button2 l-button btn-cancel">${Options.ButtonCancelCaption}</button>
                    <button class="button l-button btn-ok">${Options.ButtonOkCaption}</button>
                 </div>
              </div>`,
            Control: {
                Target: ControlTarget,
            },
            Animation: {
                Hide: 'lure-animation-fadeOut',
                Show: 'lure-animation-fade',
            },
            Controller: {
                Target: '.lib-group-list',
                Data: Lure.User.Cache.LibraryGroupList,
                ListElement: `<div class="tree-element cbs">
                             <div class="lib-line l-row">
                                <input class="l-checkbox checkbox checkbox-cbs" type="${Options.MultiSelect ? 'checkbox':'radio'}" id="libtree-{{($g.Lure.GetID())}}"  data-id="{{ID}}">
                                <label class="label l-checkbox-label label-cbs l-pointer" for="libtree-{{($g.Lure.GetLastID())}}">{{Name}}</label>
                             </div>
                             <div class="sub">
                                {{#each LibraryList}}
                                <div class="lib-line lib-row l-row" data-name="{{($g.this.GetSearchName(o.Name))}}">
                                  <input class="l-checkbox checkbox checkbox-lib" type="${Options.MultiSelect ? 'checkbox':'radio'}" id="libtree-{{($g.Lure.GetID())}}" data-id="{{ID}}" data-cbsid="{{$item.ID}}">
                                  <label class="label l-checkbox-label l-pointer" for="libtree-{{($g.Lure.GetLastID())}}">{{Name}}</label>
                                 </div>
                                {{#endeach}}
                             </div>
                          </div>`,
            },
            Props: function(){
                this.InputSearch = this.Select('.search');
                this.Selected = [];
                this.SelectedCBS = [];

                this.Changes = [];
            },
            Methods: function(){
                this.GetSearchName = function (Text) {
                    return Text.replace(/"/g, '').toLowerCase();
                };
                this.SetSelectedLibraries = function (isInit=false) {
                    if (this.Selected.length < 1)
                        return Lure.System.ShowWarn('Выберите, по крайней мере, одну библиотеку');
                    if (Options.ControlPush){
                        if (this.SelectedCBS.length < 1){
                            let LibsNames = Lure.User.Cache.LibraryList
                                .Where(x=> this.Selected.indexOf(x.ID) > -1)
                                .Select(x=>x.Name);
                            let Names = LibsNames.join('\n');
                            this.Control._ControlList[0].Control[0].setAttribute('title', Names);
                            this.Control._ControlList[0].Control[0].innerHTML = LibsNames.length > 1 ? LibsNames[0]+` (и еще ${LibsNames.length-1})` : LibsNames[0];
                        }
                        else {
                            let Names = this.SelectedCBS
                                .Select(x=>Dictionary.LibraryRegionDict[x])
                                .join(', ');
                            this.Control._ControlList[0].Control[0].setAttribute('title', Names);
                            this.Control._ControlList[0].Control[0].innerHTML = Names;
                        }
                    }

                    if (isInit)
                        return;

                    if (Options.OnSelect){
                        Options.OnSelect(this.Selected);
                    }else{
                        Parent.Proto.Data.LibraryIDListSelected = this.Selected;
                        Parent.Refresh();
                    }
                    this.Hide();
                };
                this.SetDefaultLibrary = function () {
                    if (Options.SelectedList){
                        this.Selected = Options.SelectedList
                    }
                    else {
                        this.Selected = [this.Controller.Data[0].LibraryList.Last().ID];
                    }
                    for (let LibID of this.Selected){
                        this.Select(`.checkbox[data-id="${LibID}"]`).checked = true;
                    }
                    this.SetSelectedLibraries(true);
                };
                this.Search = function (Text) {
                    let Elems = this.SelectAll('.lib-row');

                    for (let i = 0; i < Elems.length; i++){
                        let Elem = Elems[i];
                        if (Elem.classList.contains('cbs'))
                            continue;
                        //console.log(Elem.dataset['name'].indexOf(Text) > -1, Elem.dataset['name'], Text);
                        if (Elem.dataset['name'].indexOf(Text) > -1)
                            Elem.style.display = '';
                        else
                            Elem.style.display = 'none';
                    }
                };
                this.OnChangeCBS = function (CBSCheckbox) {
                    let LibraryRegionID = parseInt(CBSCheckbox.dataset['id']);
                    let Libs = [];
                    let ChBoxes = this.SelectAll(`.checkbox-lib[data-cbsid="${LibraryRegionID}"]`);
                    for (let i = 0; i < ChBoxes.length; i++){
                        ChBoxes[i].checked = CBSCheckbox.checked;
                        if (ChBoxes[i].checked)
                            Libs.push(parseInt(ChBoxes[i].dataset['id']));
                        else
                            Lure.Array.Remove(Libs, x=>x===parseInt(ChBoxes[i].dataset['id']));
                    }
                    if (CBSCheckbox.checked && this.SelectedCBS.indexOf(LibraryRegionID) < 0){
                        this.SelectedCBS.push(LibraryRegionID)
                    }
                    else if (!CBSCheckbox.checked && this.SelectedCBS.indexOf(LibraryRegionID) > -1){
                        Lure.Array.Remove(this.SelectedCBS, x=>x===LibraryRegionID);
                    }
                    this.Selected = Libs;
                };
                this.OnChangeLibrary = function (Checkbox) {
                    let Chs = this.SelectAll('.checkbox:checked');
                    let Libs = [];
                    for (let i = 0; i < Chs.length; i++){
                        if (!Options.MultiSelect && Chs[i] !== Checkbox){
                            Chs[i].checked = false;
                        }
                        Libs.push(parseInt(Chs[i].dataset['id']));
                    }
                    this.Selected = Libs;
                    if (!Options.MultiSelect){
                        this.Selected = [parseInt(Checkbox.dataset['id'])];
                        this.SetSelectedLibraries();
                    }
                };


                this.SaveCheckboxStatuses = function () {
                    this.CheckboxStatuses = [];
                    for (let i = 0; i < this.Checkboxes.length; i++){
                        this.CheckboxStatuses[i] = this.Checkboxes[i].checked;
                    }
                };
                this.RestoreCheckboxStatuses = function () {
                    for (let i = 0; i < this.Checkboxes.length; i++){
                        this.Checkboxes[i].checked = this.CheckboxStatuses[i];
                    }
                };
                this.Cancel = function () {
                    this.RestoreCheckboxStatuses();
                    this.Hide();
                };
            },
            Refresh: function(){
                if (!Parent.HasPermission)
                    return;
                this.Controller.Refresh(Lure.User.Cache.LibraryGroupList);
                this.SetDefaultLibrary();
                this.Checkboxes = this.SelectAll('.checkbox');
            },
            BeforeShow: function(){
                this.SaveCheckboxStatuses();
            },
            AfterBuild: function () {
                this.Refresh();

                this.Select('.btn-ok').addEventListener('click', ()=>{
                    this.SetSelectedLibraries();
                });
                this.Select('.btn-cancel').addEventListener('click', ()=>{
                    this.Cancel();
                });

                this.InputSearch.addEventListener('keyup', (e)=>{
                    this.Search(e.currentTarget.value.toLowerCase());
                });
                this.AddEventListener('change', '.checkbox-cbs', function (e) {
                    if (!Options.MultiSelect)
                        return;
                    this.Changes.push(e.currentTarget);
                    this.OnChangeCBS(e.currentTarget);
                });
                this.AddEventListener('change', '.checkbox-lib', function (e) {
                    this.Changes.push(e.currentTarget);
                    this.OnChangeLibrary(e.currentTarget);
                });

                document.addEventListener('click', (e)=>{
                    //calling this.isActive is cheaper than isVisible, so if inactive than invisible too
                    if (this.isActive && this.isVisible && e.target !== this.Content && e.target.closest('.library-tree') === null){
                        this.Cancel();
                        e.stopPropagation();
                    }
                })
            },
        });
    }
}

module.exports = LibraryTree;
},{}],112:[function(require,module,exports){
class ListSelector{
    Run(SelectedIDList=[]){

    }
    SetSelected(Selected){
        this.Context.Selected = Selected;
    }
    Refresh(Data){
        this.Context.Controller.Refresh(Data);
    }
    Hide(){
        this.Context.Hide();
    }
    constructor(Options={}){
        //debugger
        Options.MultiSelect = Options.MultiSelect !== void 0 ? Options.MultiSelect : false;
        Options.isAllowEmpty = Options.isAllowEmpty !== void 0 ? Options.isAllowEmpty : false;
        Options.ControlPush = Options.ControlPush !== void 0 ? Options.ControlPush : true;
        Options.Selected = Options.Selected !== void 0 ? Options.Selected : [];
        Options.ButtonOkCaption = Options.ButtonOkCaption !== void 0 ? Options.ButtonOkCaption : "Выбрать";
        Options.ButtonCancelCaption = Options.ButtonCancelCaption !== void 0 ? Options.ButtonCancelCaption : "Отмена";
        Options.Groups = Options.Groups ? Options.Groups : [];



        this.Context = new Lure.Content({
            Target: Options.Target,
            Name: 'ListSelector',
            Visible: false,
            Route: false,
            Content: `<div class="list-selector">
                 <div class="search-box">
                    <div class="caption">Поиск: </div>
                    <div class="flex-100"><input class="textbox l-textbox search" type="text"></div>
                 </div>
                 <div class="select-deselect-full l-row l-flex-start ${Options.MultiSelect ? '':'none'}">
                    <button class="button button2 l-button btn-deselect-all">Снять все</button>
                    <button class="button l-button btn-select-all">Выбрать все</button>
                 </div>
                 <div class="groups ${Options.Groups.length > 0 ? '': 'none'}">
                    <div class="group-caption">Применить готовый набор:</div>
                    <div class="group-list">
                        {{#each Groups}}
                        <div class="group-item" data-index="{{j}}">{{Name}}</div>
                        {{#endeach}}
                    </div>
                 </div>
                 <div class="items-group-list ${Options.MultiSelect ? 'multi-select':'single-select'}"></div>
                 <div class="button-holder l-row l-flex-end">
                    <button class="button button2 l-button btn-cancel">${Options.ButtonCancelCaption}</button>
                    <button class="button l-button btn-ok">${Options.ButtonOkCaption}</button>
                 </div>
              </div>`,
            State: {
                Groups: Options.Groups,
            },
            Control: {
                Target: Options.Control,
            },
            Animation: {
                Hide: 'lure-animation-fadeOut',
                Show: 'lure-animation-fade',
            },
            Controller: {
                Target: '.items-group-list',
                Data: Options.Data,
                ListElement: `<div class="item-line lib-row l-row" data-name="{{($g.this.GetSearchName(o.Name))}}">
                                <input class="l-checkbox checkbox checkbox-item" type="${Options.MultiSelect ? 'checkbox':'radio'}" id="libtree-{{($g.Lure.GetID())}}" data-id="{{ID}}" data-cbsid="{{$item.ID}}">
                                <label class="label l-checkbox-label l-pointer" for="libtree-{{($g.Lure.GetLastID())}}">{{Name}}</label>
                              </div>`,
            },
            Props: function(){
                this.InputSearch = this.Select('.search');
                this.Selected = Options.Selected;

                this.ButtonSelectAll = this.Select('.btn-select-all');
                this.ButtonDeselectAll = this.Select('.btn-deselect-all');
                this.Changes = [];
            },
            Methods: function(){
                this.GetSearchName = function (Text) {
                    return Text.replace(/"/g, '').toLowerCase();
                };
                this.SetSelected = function () {
                    if (this.Selected.length < 1 && !Options.isAllowEmpty)
                        return Lure.System.ShowWarn('Ничего не выбрано');
                    if (Options.OnSelect){
                        Options.OnSelect(this.Selected);
                    }
                    this.Hide();
                };
                this.Search = function (Text) {
                    let Elems = this.SelectAll('.lib-row');

                    for (let i = 0; i < Elems.length; i++){
                        let Elem = Elems[i];
                        if (Elem.classList.contains('cbs'))
                            continue;
                        //console.log(Elem.dataset['name'].indexOf(Text) > -1, Elem.dataset['name'], Text);
                        if (Elem.dataset['name'].indexOf(Text) > -1)
                            Elem.style.display = '';
                        else
                            Elem.style.display = 'none';
                    }
                };
                this.OnChange = function (Checkbox) {
                    let Chs = this.SelectAll('.checkbox:checked');
                    let Libs = [];
                    for (let i = 0; i < Chs.length; i++){
                        if (!Options.MultiSelect && Chs[i] !== Checkbox){
                            Chs[i].checked = false;
                        }
                        Libs.push(parseInt(Chs[i].dataset['id']));
                    }
                    this.Selected = Libs;
                    if (!Options.MultiSelect){
                        this.Selected = [parseInt(Checkbox.dataset['id'])];
                        this.SetSelected();
                    }
                };
                this.SaveCheckboxStatuses = function () {
                    this.CheckboxStatuses = [];
                    for (let i = 0; i < this.Checkboxes.length; i++){
                        this.Checkboxes[i].checked = this.Selected.indexOf(parseInt(this.Checkboxes[i].dataset['id'])) > -1;
                        this.CheckboxStatuses[i] = this.Checkboxes[i].checked;
                    }
                };
                this.RestoreCheckboxStatuses = function () {
                    for (let i = 0; i < this.Checkboxes.length; i++){
                        this.Checkboxes[i].checked = this.CheckboxStatuses[i];
                    }
                };
                this.Cancel = function () {
                    this.RestoreCheckboxStatuses();
                    this.Hide();
                };


                this.SelectGroup = function (GroupIndex) {
                    this.Selected = this.State.Groups[GroupIndex].Values;
                    this.SetSelected();
                };

                this.SetAllCheckboxes = function (Checked) {
                    for (let ch of this.Checkboxes){
                        ch.checked = Checked;
                    }
                }
            },
            BeforeShow: function(){
                this.SaveCheckboxStatuses();
            },
            AfterBuild: function () {
                this.Checkboxes = this.SelectAll('.checkbox');

                this.Select('.btn-ok').addEventListener('click', ()=>{
                    this.SetSelected();
                });
                this.Select('.btn-cancel').addEventListener('click', ()=>{
                    this.Cancel();
                });
                this.InputSearch.addEventListener('keyup', (e)=>{
                    this.Search(e.currentTarget.value.toLowerCase());
                });
                this.AddEventListener('change', '.checkbox-item', function (e) {
                    this.Changes.push(e.currentTarget);
                    this.OnChange(e.currentTarget);
                });

                this.AddEventListener('click', '.group-item', (e)=>this.SelectGroup(e.currentTarget.dataset['index']));

                this.ButtonSelectAll.addEventListener('click', ()=>this.SetAllCheckboxes(true));
                this.ButtonDeselectAll.addEventListener('click', ()=>this.SetAllCheckboxes(false));
                document.addEventListener('click', (e)=>{
                    //calling this.isActive is cheaper than isVisible, so if inactive than invisible too
                    if (this.isActive && this.isVisible && e.target !== this.Content && e.target.closest('.list-selector') === null){
                        this.Cancel();
                        e.stopPropagation();
                    }
                })
            },
        });
    }
}

module.exports = ListSelector;
},{}],113:[function(require,module,exports){
const InputBox = require("../input-box/input-box");

/**
 * @class Navigator
 */
let Navigator = new Lure.Content({
    Name: 'Navigator',
    Target: '.body',
    Content: `<div class="navigator l-col">
                 <div class="navigator-activator">
                    <div class="li"></div>
                    <div class="li"></div>
                    <div class="li"></div>
                 </div>
                 <div class="navigator-content-container">
                     <div class="navigator-content">
                        <div class="nav-control">
                            <div class="li"></div>
                            <div class="li"></div> 
                            <div class="li"></div>
                        </div>
                     </div>
                     <div class="navigator-content2">
                         <div class="navigator-li">
                            <div class="navigator-item l-row" id="nav-settings-menu">
                                <div class="nav-icon nav-settings-menu"></div>
                                <div class="nav-name">Настройки</div>
                            </div>
                         </div>
                     </div>
                 </div>
              </div>`,
    Controller:{
        Target: '.navigator-content',
        Data:[
            // {
            //             //     Name: 'Featured',
            //             //     NameClass: 'nav-featured',
            //             //     Subs: []
            //             // },
            {
                Name: 'Рабочий стол руководителя',
                NameClass: 'nav-dash',
                Subs: [
                    {Name: 'Рабочий стол', ID: 'nav-dash-main'},
                    {
                        Name: 'Сводная таблица', ID: 'nav-dash-summary',
                        Subs: [
                            {Name: 'Часть 1', ID: 'nav-dash-summ-p1'},
                            {Name: 'Часть 2', ID: 'nav-dash-summ-p2'},
                            {Name: 'Часть 3', ID: 'nav-dash-summ-p3'},
                            {Name: 'Часть 4', ID: 'nav-dash-summ-p4'},
                            {Name: 'Часть 5', ID: 'nav-dash-summ-p5'},
                            {Name: 'Часть 6', ID: 'nav-dash-summ-p6'},
                        ]
                    },
                    {Name: '6 НК', ID: 'nav-six-nk'}
                ]
            },
            {
                Name: 'Второй Рабочий стол',
                NameClass: 'nav-wdash',
                Subs: [
                    {Name: 'WРабочий стол', ID: 'nav-wdash-main'},
                    {
                        Name: 'WСводная таблица', ID: 'nav-wdash-summary',
                        Subs: [
                            {Name: 'Часть 1', ID: 'nav-wdash-summ-p1'},
                            {Name: 'Часть 2', ID: 'nav-wdash-summ-p2'},
                            {Name: 'Часть 3', ID: 'nav-wdash-summ-p3'},
                            {Name: 'Часть 4', ID: 'nav-wdash-summ-p4'},
                            {Name: 'Часть 5', ID: 'nav-wdash-summ-p5'},
                            {Name: 'Часть 6', ID: 'nav-wdash-summ-p6'},
                        ]
                    },
                    {Name: '6 НК', ID: 'nav-wsix-nk'}
                ]
            },
            // {
            //     Name: 'Даштустер',
            //     NameClass: 'nav-dash-test',
            //     Subs: [
            //     ]
            // },
            {
                Name: 'Электронный дневник',
                NameClass: 'nav-diary',
                Subs: [
                    {Name: 'Посещения',       ID: 'nav-diary-visit'},
                    {Name: 'Книговыдача',     ID: 'nav-diary-bookware'},
                    {Name: 'Внестационар',    ID: 'nav-diary-book-out'},
                    {
                        Name: 'Сводная таблица',
                        ID: 'nav-diary-summary',
                        Subs: [
                            {
                                Name: 'Часть 1',
                                ID: 'nav-diary-summary-1'
                            },{
                                Name: 'Часть 2',
                                ID: 'nav-diary-summary-2'
                            },{
                                Name: 'Часть 3',
                                ID: 'nav-diary-summary-3'
                            },{
                                Name: 'Часть 4',
                                ID: 'nav-diary-summary-4'
                            },{
                                Name: 'Часть 5',
                                ID: 'nav-diary-summary-5'
                            },{
                                Name: 'Часть 6',
                                ID: 'nav-diary-summary-6'
                            },
                        ]},
                ]
            },
            {
                Name: 'Паспорт учреждения',
                NameClass: 'nav-passport',
                Subs: []
            },
            {
                Name: 'Учет показаний счетчиков',
                NameClass: 'nav-meter',
                Subs: [{
                        Name: 'Внесение показаний',
                        ID: 'nav-meter-incoming'
                    },
                    {
                        Name: 'Управление счетчиками',
                        ID: 'nav-meter-management'
                    }
                    ]
            },
            {
                Name: 'Ввод данных',
                NameClass: 'nav-data-input',
                Subs: [
                    {
                        Name: 'Плановые показатели',
                        ID: 'nav-data-input-plan'
                    },
                    {
                        Name: 'Мероприятия',
                        ID: 'nav-data-input-affiche'
                    }]
            },
            {
                Name: 'Поддержка',
                NameClass: 'nav-help-desk',
                Subs: [
                    {
                        Name: 'Мои заявки',
                        ID: 'nav-help-desk-my-req'
                    },
                    {
                        Name: 'Новая заявка',
                        ID: 'nav-help-desk-new-req'
                    }]
            },
            {
                Name: 'Admin',
                NameClass: 'nav-admin',
                Subs: [
                    {
                        Name: 'Создать пользователя',
                        ID: 'nav-admin-user-create'
                    },
                    {
                        Name: 'Изменить пользователя',
                        ID: 'nav-admin-user-management'
                    },
                    {
                        Name: 'Техники',
                        ID: 'nav-admin-technician-management'
                    },

                ]
            },
            {
                Name: 'Testnav',
                NameClass: 'nav-test',
                Subs: [
                    {
                        Name: 'Рабочий стол',
                        ID: 'nav-test-main',
                        Subs: [
                            {
                                Name: 'Уровень 3-1',
                                ID: 'nav-test-main-level3-1'
                            },
                        ]
                    },
                    {
                        Name: 'Второй стол',
                        ID: 'nav-test-main2',
                        Subs: [
                            {
                                Name: 'Уровень 3-2',
                                ID: 'nav-test-main2-1',
                            },
                        ]
                    },
                ]
            },
        ],
        ListElement: `<div class="navigator-li">
                        <div class="navigator-item l-row" id="{{NameClass}}">
                            <div class="nav-icon {{NameClass}}"></div>
                            <div class="nav-name">{{Name}}</div>
                        </div>
                        <div class="nav-li-subs l-col">
                          {{#each Subs}}
                            <div class="li">
                                <div class="l-element-line nav-subname" id="{{ID}}">{{Name}}</div>
                                <div class="nav-sublist">
                                    {{#each Subs}}
                                        <div class="l-element-line sub-li" id="{{ID}}">{{Name}}</div>
                                    {{#endeach}}
                                </div>
                            </div>
                          {{#endeach}}
                        </div>
                      </div>`
    },
    Props: function () {
        this.Nav = this.Select('.navigator-content-container');
    },
    AfterBuild: function () {
        this.Content.addEventListener('mouseout', (e)=>{
            if (e.target === this.Content)
                console.log('this.Content mouseout', e.target);
        });
        this.Content.addEventListener('click', ()=>{
            InputBox.Hide();
        });
        this.Select('.navigator-activator').addEventListener('click', ()=>{
            this.Nav.classList.toggle('active');
            localStorage.setItem('isActiveNavigator', (this.Nav.classList.contains('active')*1).toString() );
        })
    }
});

module.exports = Navigator;







},{"../input-box/input-box":110}],114:[function(require,module,exports){
let Dictionary = require('./dictionary.js');

let Static = {
    DateHoursEditingLimit: 14,

};


/* make lists from Dict*/
(function () {
    for (let k in Dictionary){
        if (Dictionary.hasOwnProperty(k) && k.indexOf('Dict') > -1){
            let StaticKey = k.replace('Dict', '') + 's';
            Static[StaticKey] = [];
            for (let ki in Dictionary[k]){
                if (Dictionary[k].hasOwnProperty(ki)){
                    Static[StaticKey].push({
                        ID: parseInt(ki),
                        Name: Dictionary[k][ki]
                    })
                }
            }

        }
    }
})();

module.exports = Static;





},{"./dictionary.js":102}],115:[function(require,module,exports){
window.DEBUG = true;
window.isMobile = false;
let DocumentPerf = window.performance.now();

let CustomSvg = `<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   id="Слой_1"
   x="0px"
   y="0px"
   width="60"
   height="60"
   viewBox="0 0 60.000001 60"
   enable-background="new 0 0 115.5 64"
   xml:space="preserve"
   sodipodi:docname="gear1.svg"
   inkscape:version="0.92.3 (2405546, 2018-03-11)"><metadata
   id="metadata45"><rdf:RDF><cc:Work
       rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
         rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata><defs
   id="defs43" /><sodipodi:namedview
   pagecolor="#ffffff"
   bordercolor="#666666"
   borderopacity="1"
   objecttolerance="10"
   gridtolerance="10"
   guidetolerance="10"
   inkscape:pageopacity="0"
   inkscape:pageshadow="2"
   inkscape:window-width="1615"
   inkscape:window-height="837"
   id="namedview41"
   showgrid="false"
   inkscape:zoom="9.3056477"
   inkscape:cx="19.215939"
   inkscape:cy="30.67169"
   inkscape:window-x="0"
   inkscape:window-y="0"
   inkscape:window-maximized="0"
   inkscape:current-layer="Слой_1"
   units="px"
   width="60in" />

<path class="custom-load-pass"
   inkscape:connector-curvature="0"
   d="m 54.836173,44.863545 c -3.364843,3.364843 -6.59672,6.594007 -9.828597,9.82317 -0.179097,0.179097 -0.366334,0.344625 -0.708246,0.664828 -1.245534,-1.275384 -2.569763,-2.46122 -3.679618,-3.820725 -1.017594,-1.242821 -1.856091,-0.238795 -2.78685,-0.04613 -0.898196,0.184524 -0.69739,0.868347 -0.700104,1.454481 -0.0081,1.660713 -0.0027,3.321425 -0.0027,5.060832 -4.936007,0 -9.774325,0 -14.767318,0 0,-1.750261 -0.03799,-3.4761 0.01628,-5.201938 0.02442,-0.762517 -0.227941,-1.085434 -0.933472,-1.432772 -1.280812,-0.626838 -2.157299,-0.447741 -3.052781,0.664828 -0.947041,1.177695 -2.056896,2.225138 -3.066349,3.294289 C 11.739049,51.712628 8.3226482,48.274519 4.8194126,44.744147 6.0188163,43.550171 7.269778,42.19338 8.6401374,40.974981 9.7635607,39.976382 8.6564189,39.222006 8.5261669,38.364514 8.4121964,37.620992 7.8477712,37.653555 7.2833459,37.656269 c -1.736693,0 -3.4706725,0 -5.2833459,0 0,-4.949575 0,-9.793321 0,-14.802595 1.6715671,0 3.3621292,0.02714 5.0499778,0 0.5617117,0 1.2889519,0.282213 1.4734755,-0.656687 C 8.7052634,21.277082 9.7527064,20.452153 8.512599,19.431846 7.1530939,18.311136 5.961831,16.989621 4.7461459,15.801072 8.2927988,12.257133 11.720054,8.8298777 15.293842,5.256089 c 1.193977,1.2373938 2.472074,2.5154913 3.693186,3.8478605 0.510154,0.553571 0.933473,0.7055316 1.671568,0.3717609 1.687848,-0.7625168 1.706843,-0.7136723 1.709557,-2.6267483 0,-1.3405099 0.0081,-2.6837335 0.01628,-4.0242434 0,-0.070553 0.03256,-0.1411063 0.07055,-0.3039213 4.813897,0 9.652215,0 14.677771,0 0,1.6688535 -0.01628,3.3539885 0.01085,5.0391235 0.0081,0.442314 0.0081,1.1207097 0.263218,1.2753839 0.697391,0.4178918 1.519606,0.6539735 2.314686,0.865633 0.165529,0.043417 0.458596,-0.3012077 0.659401,-0.5020129 1.305233,-1.3025198 2.602326,-2.6131803 3.864142,-3.8858507 3.492381,3.5086627 6.908782,6.9440588 10.450008,10.5042798 -1.199404,1.185835 -2.447652,2.5372 -3.826152,3.74203 -1.131564,0.987745 -0.04342,1.742121 0.07869,2.596899 0.122111,0.846638 0.76523,0.702818 1.332369,0.702818 1.701416,0 3.402833,0 5.196511,0 0,4.92244 0,9.790607 0,14.799882 -1.755688,0 -3.48424,0 -5.215506,0 -0.607843,0 -1.204831,-0.02714 -1.324229,0.762516 -0.130252,0.854779 -1.231966,1.606441 -0.07598,2.596899 1.3785,1.177695 2.610467,2.518205 3.975399,3.856001 z M 14.740271,19.016668 c -1.017593,2.851976 -1.896794,5.36204 -2.83298,7.850395 -0.100402,0.263218 -0.542716,0.54543 -0.838497,0.561712 -1.229253,0.06513 -2.4666468,0 -3.6958998,0.05698 -0.3012077,0.02714 -0.8384972,0.322917 -0.8466379,0.512867 -0.06784,1.652572 -0.03799,3.310571 -0.03799,5.087968 1.8588043,0 3.5819297,0 5.0255557,0 1.120709,2.843835 2.162725,5.484151 3.30243,8.379544 -1.066439,1.031162 -2.309259,2.233279 -3.448964,3.334994 1.288952,1.30252 2.553481,2.580617 3.980826,4.02153 1.115282,-1.253676 2.265842,-2.545341 3.131474,-3.522231 2.887253,1.017594 5.402745,1.88594 7.893814,2.813985 0.252363,0.09498 0.502013,0.561712 0.512867,0.865633 0.05156,1.473476 0.02442,2.949665 0.02442,4.458417 1.956493,0 3.774594,0 5.676816,0 0,-1.424631 0.07327,-2.767854 -0.02442,-4.09751 -0.07055,-0.9389 0.328344,-1.207544 1.145132,-1.44634 1.625436,-0.47759 3.21831,-1.071865 4.800328,-1.687848 0.724527,-0.282213 1.383928,-0.732668 2.382526,-1.275384 1.166841,1.267243 2.333682,2.5372 3.364843,3.657909 1.313374,-1.31066 2.580617,-2.57519 4.005248,-3.997107 -1.191262,-1.096288 -2.466646,-2.268555 -3.524944,-3.240018 1.123424,-2.868257 2.157299,-5.511287 3.245445,-8.298137 1.51418,0 3.204742,0 5.025556,0 0,-1.752974 0.02442,-3.410973 -0.03528,-5.066259 -0.0054,-0.18181 -0.483017,-0.480304 -0.754376,-0.491158 -1.229253,-0.05699 -2.466647,0 -3.6959,-0.06241 -0.331057,-0.02714 -0.827642,-0.298494 -0.933472,-0.575279 -0.941613,-2.485642 -1.815387,-4.99842 -2.82484,-7.831401 0.987744,-0.911764 2.260415,-2.084031 3.516804,-3.242731 -1.381214,-1.37036 -2.656598,-2.634889 -4.040525,-4.005249 -0.971463,0.987744 -2.005338,1.994484 -2.979514,3.055495 -0.46945,0.512867 -0.838498,0.58342 -1.470762,0.227941 -1.131564,-0.634979 -2.311973,-1.207545 -3.522231,-1.674281 -1.172268,-0.453168 -2.406948,-0.738095 -3.714895,-1.128851 0,-1.698702 0,-3.3892646 0,-5.1015354 -1.929357,0 -3.744744,0 -5.636112,0 0,1.7665425 0,3.4245414 0,4.7921874 -2.645743,1.150559 -5.109677,2.244133 -7.600746,3.272581 -0.241509,0.100403 -0.740808,-0.11397 -0.966036,-0.336484 -1.050156,-1.039303 -2.048755,-2.13559 -2.974086,-3.115193 -1.449054,1.430058 -2.724437,2.691874 -4.09751,4.045952 1.210258,1.117996 2.482928,2.292977 3.462531,3.199314 z"
   id="path30"
   style="fill:#5c9baa;fill-opacity:1;stroke-width:2.71358299" /><path
   inkscape:connector-curvature="0"
   d="m 29.835933,17.800983 c 6.425765,0 12.371225,5.94546 12.417356,12.425496 0.04342,6.509885 -6.002446,12.566602 -12.539467,12.555748 -6.436619,0 -12.477055,-6.0133 -12.477055,-12.39836 -0.0027,-6.640138 5.940033,-12.577457 12.599166,-12.582884 z m 7.809692,12.485195 c -0.0054,-4.621232 -3.26444,-7.926376 -7.8314,-7.939944 -4.651081,-0.02714 -7.969794,3.283435 -7.969794,7.918235 0.0027,4.661936 3.264441,7.923662 7.942658,7.945371 4.539824,0.02714 7.863963,-3.33228 7.858536,-7.923662 z"
   id="path32"
   style="fill:#5c9baa;fill-opacity:1;stroke-width:2.71358299" /></svg>`;

// device detection
(function(){
    if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)
        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4)))
    {
        //document.head.appendChild(Lure.CreateElementFromString(`<link rel="stylesheet" href="css/mobile.css" type="text/css" />`));
        window.isMobile = true;
    }
    else {
        //document.head.appendChild(Lure.CreateElementFromString(`<link rel="stylesheet" href="css/no-mobile.css" type="text/css" />`));
    }
}());

/* Test LibraryID = 440 */


api.debug = true;
//api.onUnauth = null;
//api.timeout = xxx;
//here 'xxx' in gulpfile (7000 or same value)
api.ontimeout = (method)=>{
    if (method !== 'Cache_GetMasterHistoryLast'){
        Lure.System.Error('Превышено время ожидания ответа сервера. Операция прервана');
    }
};
api.debugExcludes = {
    //key: value,
    //{string} method: {bool} LogIfNotEmpty
    'Cache_GetMasterHistoryLast': true,
    //'Passport_Get': false,
};
Lure.Application.Entry = 'Dash';// Visitation / Bookware / SummaryPart1 / Dash //Account
Lure.Route.Enabled = true;

Lure.Settings.Tutor.Options.Frame.backgroundColor = '';
Lure.Settings.Tutor.Options.Frame.outline = 'none';
Lure.Settings.Content.Permission.Strict = false;
Lure.Settings.Load.Svg = CustomSvg;


let Load = new Lure.Load({BackgroundColor: '#fff'});
window.Load = Load;
Load.Show();

if (window.isMobile){
   //something to do
}
Lure.User.Cache = {
    Libraries: [], //int
    LibraryList:[],
    LibraryListDict:{},
    LibraryGroupList: [], //by LibraryRegionID
    LibraryRegions:[], //int
    WorkingDates: [], // [LastWorkingDayDate, TodayDate]
    Technicians: [],
    TechnicianDict: {},
    UserList: [],

};


window.Global = require('./_common/global');

const Dictionary = require('./_common/dictionary');
window.Dictionary = Dictionary;
window.D = Dictionary;
window.Static = require('./_common/static');


Dictionary.HelpRequestTypeITList = [
    Dictionary.HelpRequestType.IT,
    Dictionary.HelpRequestType.EventTechProvision,
    Dictionary.HelpRequestType.MetersAlarms,
    Dictionary.HelpRequestType.OfficeEquip,
    Dictionary.HelpRequestType.PC,
    Dictionary.HelpRequestType.Software,
    Dictionary.HelpRequestType.WorkingPlace,
];
Dictionary.HelpRequestTypeAHDList = [
    Dictionary.HelpRequestType.AHD,
    Dictionary.HelpRequestType.Repair,
    Dictionary.HelpRequestType.ReplaceInstall,
];

// External plugins
// require('./../js/plugins/ckeditor/ckeditor');

require('./_common/headline/headline');
require('./_common/footer/footer');
let Navigator = require('./_common/navigator/navigator');
let LibraryTree = require('./_common/library-tree/library-tree');
//let InputBox = require('./_common/input-box/input-box'); window.InputBox = InputBox;

window.LibraryTree = LibraryTree;





let Featured = require('./Featured/Featured');
let Dash = require('./Dash/dashboard');

let WDash = require('./WDash/wdashboard');

let DashTester = require('./_DashTester/DashTester');
let Diary = require('./Diary/Diary');
let LibrarySettings = require('./__LibrarySettings/library-settings');
let Passport = require('./Passport/Passport');
let Meter = require('./Meter/Meter');
let DataInput = require('./DataInput/data-input');
let HelpDesk = require('./HelpDesk/HelpDesk');
let Admin = require('./Admin/Admin');
let Testnav = require('./Testnav/Testnav');
let Account = require('./Account/Account');

//window.Passport = Passport;

/**
 * @function Navigator._Init
 */
Navigator._Init();

let HistoryMaster = require('./_common/history-master/history-master');

Lure.Perf(DocumentPerf, "Content Scripts");

(async function StartPoint() {
    if (localStorage.getItem('isActiveNavigator') > 0){
        Navigator.Nav.classList.add('active');
    }
    let GentlePack = await api.GetStartPack({});
    Lure.User.ID          = GentlePack.UserID;
    Lure.User.Name        = GentlePack.UserName;
    Lure.User.Email       = GentlePack.Email;
    Lure.User.Phone       = GentlePack.Phone;
    Lure.User.Position    = GentlePack.Position;
    Lure.User.Roles       = GentlePack.Roles;
    //Lure.User.Roles.push(Dictionary.Role.TesterPanel);

    Lure.User.WebSettings = JSON.parse(GentlePack.WebSettings);
    //Lure.User.SubRoles   = GentlePack.SubRoles;
    for (let r of GentlePack.SubRoles){
        Lure.User.SubRoles[r.Key] = r.Value;
    }
    Lure.User.Cache.LibraryRegions = Lure.User.SubRoles[Dictionary.Role.LibraryRegionID];
    Lure.User.Cache.Libraries = Lure.User.SubRoles[Dictionary.Role.LibraryID];
    Lure.User.Cache.LibraryList  = GentlePack.Libraries.Where(x=>!x.IsVirtual);
    Lure.User.Cache.LibraryFullList  = GentlePack.Libraries;
    Lure.User.Cache.WorkingDates = GentlePack.WorkingDates.Select(x=>Lure.Date(x).Date);

    Lure.User.Cache.LibraryGroupList = [];
    Lure.User.Cache.LibraryListDict = {};
    for (let l of Lure.User.Cache.LibraryFullList){
        Lure.User.Cache.LibraryListDict[l.ID] = l;
    }
    Lure.User.Cache.LibraryListDict[-1] = {ID: -1, Name: 'Все библиотеки'};
    //debugger
    Lure.User.Cache.LibraryGroupList =  Lure.User.Cache.LibraryList
        .GroupBy('LibraryRegionID')
        .Select(x=>{
            return {
                ID: parseInt(x.Key),
                Name: Dictionary.LibraryRegionDict[x.Key],
                isCBS: 1,
                LibraryList: x,
            }
        });

    // * Technicians *
    Lure.User.Cache.Technicians = GentlePack.Technicians;
    for(let t of GentlePack.Technicians){
        Lure.User.Cache.TechnicianDict[t.ID] = t;
    }
    Lure.User.Cache.UserList = GentlePack.UserList;
    Lure.User.Cache.UserDict = Lure.User.Cache.UserList.ToDictionary(x=>x.ID, x=>x);



    //debugger;
    if (Lure.User.ID !== 3 && Lure.User.Roles.indexOf(Dictionary.Role.DairyInput) > -1)
        Lure.Application.Entry = 'Visitation';
    if (Lure.User.ID !== 3 && Lure.User.Roles.indexOf(Dictionary.Role.DairyInput) < 0)
        Lure.Application.Entry = 'Dash';


    Lure.Application.Run();
    HistoryMaster.Run();

    setTimeout(()=>{
        Load.Hide();
        Lure.Perf(DocumentPerf, "Document render done");
    }, 0)

})();
//StartPoint();
















},{"./Account/Account":1,"./Admin/Admin":3,"./Dash/dashboard":10,"./DataInput/data-input":29,"./Diary/Diary":34,"./Featured/Featured":61,"./HelpDesk/HelpDesk":62,"./Meter/Meter":68,"./Passport/Passport":74,"./Testnav/Testnav":77,"./WDash/wdashboard":99,"./_DashTester/DashTester":100,"./__LibrarySettings/library-settings":101,"./_common/dictionary":102,"./_common/footer/footer":105,"./_common/global":106,"./_common/headline/headline":107,"./_common/history-master/history-master":108,"./_common/library-tree/library-tree":111,"./_common/navigator/navigator":113,"./_common/static":114}]},{},[115])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvbW9kdWxlcy9BY2NvdW50L0FjY291bnQuanMiLCJzcmMvbW9kdWxlcy9BY2NvdW50L19jaGFuZ2UtcGFzcy5qcyIsInNyYy9tb2R1bGVzL0FkbWluL0FkbWluLmpzIiwic3JjL21vZHVsZXMvQWRtaW4vVGVjaG5pY2lhbk1hbmFnZW1lbnQvVGVjaG5pY2lhbkNyZWF0b3IuanMiLCJzcmMvbW9kdWxlcy9BZG1pbi9UZWNobmljaWFuTWFuYWdlbWVudC9UZWNobmljaWFuRWRpdG9yLmpzIiwic3JjL21vZHVsZXMvQWRtaW4vVXNlck1hbmFnZW1lbnQvVXNlckNyZWF0b3IuanMiLCJzcmMvbW9kdWxlcy9BZG1pbi9Vc2VyTWFuYWdlbWVudC9Vc2VyRWRpdG9yLmpzIiwic3JjL21vZHVsZXMvQWRtaW4vVXNlck1hbmFnZW1lbnQvX1JvbGVQb3NpdGlvbnNQcmVzZXQuanMiLCJzcmMvbW9kdWxlcy9EYXNoL2Rhc2gtbWFpbi9kYXNoLW1haW4uanMiLCJzcmMvbW9kdWxlcy9EYXNoL2Rhc2hib2FyZC5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc2l4LW5rL3BhcnRzL21haW4tcGFydC5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQxLmpzIiwic3JjL21vZHVsZXMvRGFzaC9zaXgtbmsvcGFydHMvcGFydDIuanMiLCJzcmMvbW9kdWxlcy9EYXNoL3NpeC1uay9wYXJ0cy9wYXJ0My5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQ0LmpzIiwic3JjL21vZHVsZXMvRGFzaC9zaXgtbmsvcGFydHMvcGFydDUuanMiLCJzcmMvbW9kdWxlcy9EYXNoL3NpeC1uay9wYXJ0cy9wYXJ0Ni5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQ3LmpzIiwic3JjL21vZHVsZXMvRGFzaC9zaXgtbmsvc2l4LW5rLmpzIiwic3JjL21vZHVsZXMvRGFzaC9zdW1tYXJ5L2Rhc2gtc3VtbWFyeS5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc3VtbWFyeS9wYXJ0cy9wYXJ0MS5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc3VtbWFyeS9wYXJ0cy9wYXJ0Mi5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc3VtbWFyeS9wYXJ0cy9wYXJ0My5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc3VtbWFyeS9wYXJ0cy9wYXJ0NC5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc3VtbWFyeS9wYXJ0cy9wYXJ0NS5qcyIsInNyYy9tb2R1bGVzL0Rhc2gvc3VtbWFyeS9wYXJ0cy9wYXJ0Ni5qcyIsInNyYy9tb2R1bGVzL0RhdGFJbnB1dC9kYXRhLWFmZmljaGUtaW5wdXQvZGF0YS1hZmZpY2hlLWlucHV0LmpzIiwic3JjL21vZHVsZXMvRGF0YUlucHV0L2RhdGEtYWZmaWNoZS1pbnB1dC9ldmVudC1lZGl0b3IvZXZlbnQtZWRpdG9yLmpzIiwic3JjL21vZHVsZXMvRGF0YUlucHV0L2RhdGEtaW5wdXQuanMiLCJzcmMvbW9kdWxlcy9EYXRhSW5wdXQvZGF0YS1wbGFuLWlucHV0L2NhbGVuZGFyL2NhbGVuZGFyLmpzIiwic3JjL21vZHVsZXMvRGF0YUlucHV0L2RhdGEtcGxhbi1pbnB1dC9jaGFydHMvY2hhcnRzLmpzIiwic3JjL21vZHVsZXMvRGF0YUlucHV0L2RhdGEtcGxhbi1pbnB1dC9kYXRhLXBsYW4taW5wdXQuanMiLCJzcmMvbW9kdWxlcy9EYXRhSW5wdXQvZGF0YS1wbGFuLWlucHV0L3BsYW4tY2hhcnQvcGxhbi1jaGFydC5qcyIsInNyYy9tb2R1bGVzL0RpYXJ5L0RpYXJ5LmpzIiwic3JjL21vZHVsZXMvRGlhcnkvYm9va3dhcmUvYm9va3dhcmUuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS9ib29rd2FyZS93aWRnZXRzL2dpdmUtYm9vay1wcm9ncmVzcy9naXZlLWJvb2stcHJvZ3Jlc3MuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS9ib29rd2FyZS93aWRnZXRzL2dpdmUtYm9vay9naXZlLWJvb2suanMiLCJzcmMvbW9kdWxlcy9EaWFyeS9ib29rd2FyZS93aWRnZXRzL2dpdmUtY29uc3VsdC9naXZlLWNvbnN1bHQuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS9ib29rd2FyZS93aWRnZXRzL2dpdmUtZG9jL2dpdmUtZG9jLmpzIiwic3JjL21vZHVsZXMvRGlhcnkvYm9va3dhcmUvd2lkZ2V0cy9naXZlLW90aGVyL2dpdmUtb3RoZXIuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS9tb3ZpbmdzL21vdmluZ3MuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS9zdW1tYXJ5L2xpbmUtZWRpdG9yL2xpbmUtZWRpdG9yLmpzIiwic3JjL21vZHVsZXMvRGlhcnkvc3VtbWFyeS9wYXJ0MS5qcyIsInNyYy9tb2R1bGVzL0RpYXJ5L3N1bW1hcnkvcGFydDIuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS9zdW1tYXJ5L3BhcnQzLmpzIiwic3JjL21vZHVsZXMvRGlhcnkvc3VtbWFyeS9wYXJ0NC5qcyIsInNyYy9tb2R1bGVzL0RpYXJ5L3N1bW1hcnkvcGFydDUuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS9zdW1tYXJ5L3BhcnQ2LmpzIiwic3JjL21vZHVsZXMvRGlhcnkvc3VtbWFyeS9zdW1tYXJ5LmpzIiwic3JjL21vZHVsZXMvRGlhcnkvdmlzaXRhdGlvbi92aXNpdGF0aW9uLmpzIiwic3JjL21vZHVsZXMvRGlhcnkvdmlzaXRhdGlvbi93aWRnZXRzL2F1dG9jb3VudGVyL2F1dG9jb3VudGVyLmpzIiwic3JjL21vZHVsZXMvRGlhcnkvdmlzaXRhdGlvbi93aWRnZXRzL2NsdWItZnJlZS9jbHViLWZyZWUuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS92aXNpdGF0aW9uL3dpZGdldHMvY2x1Yi1wYWlkL2NsdWItcGFpZC5qcyIsInNyYy9tb2R1bGVzL0RpYXJ5L3Zpc2l0YXRpb24vd2lkZ2V0cy9jb3VudC9jb3VudC5qcyIsInNyYy9tb2R1bGVzL0RpYXJ5L3Zpc2l0YXRpb24vd2lkZ2V0cy9ldmVudC1mcmVlL2V2ZW50LWZyZWUuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS92aXNpdGF0aW9uL3dpZGdldHMvZXZlbnQtcGFpZC9ldmVudC1wYWlkLmpzIiwic3JjL21vZHVsZXMvRGlhcnkvdmlzaXRhdGlvbi93aWRnZXRzL2V2ZW50LXN1bW1hcnkvZXZlbnQtc3VtbWFyeS5qcyIsInNyYy9tb2R1bGVzL0RpYXJ5L3Zpc2l0YXRpb24vd2lkZ2V0cy9leGhpYml0aW9uL2V4aGliaXRpb24uanMiLCJzcmMvbW9kdWxlcy9EaWFyeS92aXNpdGF0aW9uL3dpZGdldHMvcmVnaXN0ZXIvcmVnaXN0ZXIuanMiLCJzcmMvbW9kdWxlcy9EaWFyeS92aXNpdGF0aW9uL3dpZGdldHMvdGVzdC90ZXN0LmpzIiwic3JjL21vZHVsZXMvRmVhdHVyZWQvRmVhdHVyZWQuanMiLCJzcmMvbW9kdWxlcy9IZWxwRGVzay9IZWxwRGVzay5qcyIsInNyYy9tb2R1bGVzL0hlbHBEZXNrL215LXJlcXMvbXktcmVxcy5qcyIsInNyYy9tb2R1bGVzL0hlbHBEZXNrL215LXJlcXMvc2lkZWJhci9tb2Rlci1zaWRlYmFyLmpzIiwic3JjL21vZHVsZXMvSGVscERlc2svbXktcmVxcy9zaWRlYmFyL3NpZGViYXIuanMiLCJzcmMvbW9kdWxlcy9IZWxwRGVzay9uZXctcmVxL25ldy1yZXEuanMiLCJzcmMvbW9kdWxlcy9IZWxwRGVzay9uZXctcmVxL3JlcXVlc3Qtc2VuZGVyL3JlcXVlc3Qtc2VuZGVyLmpzIiwic3JjL21vZHVsZXMvTWV0ZXIvTWV0ZXIuanMiLCJzcmMvbW9kdWxlcy9NZXRlci9NZXRlckNvbW1vbkluZm8vTWV0ZXJDb21tb25JbmZvLmpzIiwic3JjL21vZHVsZXMvTWV0ZXIvTWV0ZXJFZGl0b3IvTWV0ZXJFZGl0b3IuanMiLCJzcmMvbW9kdWxlcy9NZXRlci9NZXRlckVkaXRvci9UYXJpZmZTZXR0ZXIvVGFyaWZmU2V0dGVyLmpzIiwic3JjL21vZHVsZXMvTWV0ZXIvTWV0ZXJJbmNvbWluZy9NZXRlckluY29taW5nLmpzIiwic3JjL21vZHVsZXMvTWV0ZXIvTWV0ZXJJbmNvbWluZy9NZXRlclZhbHVlSW5wdXQvTWV0ZXJWYWx1ZUlucHV0LmpzIiwic3JjL21vZHVsZXMvUGFzc3BvcnQvUGFzc3BvcnQuanMiLCJzcmMvbW9kdWxlcy9QYXNzcG9ydC9kZWZhdWx0RGF0YS9kZWZhdWx0SlNPTi5qcyIsInNyYy9tb2R1bGVzL1Bhc3Nwb3J0L2RlZmF1bHREYXRhL3J1c3NpYW5GaWVsZHMuanMiLCJzcmMvbW9kdWxlcy9UZXN0bmF2L1Rlc3RuYXYuanMiLCJzcmMvbW9kdWxlcy9UZXN0bmF2L3Rlc3QtbWFpbjIvbGV2ZWwtdGhyZWUvbGV2ZWwtdGhyZWUuanMiLCJzcmMvbW9kdWxlcy9UZXN0bmF2L3Rlc3QtbWFpbjIvdGVzdC1tYWluMi5qcyIsInNyYy9tb2R1bGVzL1Rlc3RuYXYvdGVzdC1tYWluL2xldmVsMy9sZXZlbDMuanMiLCJzcmMvbW9kdWxlcy9UZXN0bmF2L3Rlc3QtbWFpbi90ZXN0LW1haW4uanMiLCJzcmMvbW9kdWxlcy9XRGFzaC9zaXgtbmsvcGFydHMvbWFpbi1wYXJ0LmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQxLmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQyLmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQzLmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQ0LmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQ1LmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQ2LmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc2l4LW5rL3BhcnRzL3BhcnQ3LmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc2l4LW5rL3NpeC1uay5qcyIsInNyYy9tb2R1bGVzL1dEYXNoL3N1bW1hcnkvcGFydHMvcGFydDEuanMiLCJzcmMvbW9kdWxlcy9XRGFzaC9zdW1tYXJ5L3BhcnRzL3BhcnQyLmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc3VtbWFyeS9wYXJ0cy9wYXJ0My5qcyIsInNyYy9tb2R1bGVzL1dEYXNoL3N1bW1hcnkvcGFydHMvcGFydDQuanMiLCJzcmMvbW9kdWxlcy9XRGFzaC9zdW1tYXJ5L3BhcnRzL3BhcnQ1LmpzIiwic3JjL21vZHVsZXMvV0Rhc2gvc3VtbWFyeS9wYXJ0cy9wYXJ0Ni5qcyIsInNyYy9tb2R1bGVzL1dEYXNoL3N1bW1hcnkvd2Rhc2gtc3VtbWFyeS5qcyIsInNyYy9tb2R1bGVzL1dEYXNoL3dkYXNoLW1haW4vd2Rhc2gtbWFpbi5qcyIsInNyYy9tb2R1bGVzL1dEYXNoL3dkYXNoYm9hcmQuanMiLCJzcmMvbW9kdWxlcy9fRGFzaFRlc3Rlci9EYXNoVGVzdGVyLmpzIiwic3JjL21vZHVsZXMvX19MaWJyYXJ5U2V0dGluZ3MvbGlicmFyeS1zZXR0aW5ncy5qcyIsInNyYy9tb2R1bGVzL19jb21tb24vZGljdGlvbmFyeS5qcyIsInNyYy9tb2R1bGVzL19jb21tb24vZHJhZ2FuZGRyb3BpdGVtLmpzIiwic3JjL21vZHVsZXMvX2NvbW1vbi9maWx0ZXItc2VsZWN0b3IvZmlsdGVyLXNlbGVjdG9yLmpzIiwic3JjL21vZHVsZXMvX2NvbW1vbi9mb290ZXIvZm9vdGVyLmpzIiwic3JjL21vZHVsZXMvX2NvbW1vbi9nbG9iYWwuanMiLCJzcmMvbW9kdWxlcy9fY29tbW9uL2hlYWRsaW5lL2hlYWRsaW5lLmpzIiwic3JjL21vZHVsZXMvX2NvbW1vbi9oaXN0b3J5LW1hc3Rlci9oaXN0b3J5LW1hc3Rlci5qcyIsInNyYy9tb2R1bGVzL19jb21tb24vaGlzdG9yeS1tYXN0ZXIvaGlzdG9yeS1zdWJzY3JpcHRpb24uanMiLCJzcmMvbW9kdWxlcy9fY29tbW9uL2lucHV0LWJveC9pbnB1dC1ib3guanMiLCJzcmMvbW9kdWxlcy9fY29tbW9uL2xpYnJhcnktdHJlZS9saWJyYXJ5LXRyZWUuanMiLCJzcmMvbW9kdWxlcy9fY29tbW9uL2xpc3Qtc2VsZWN0b3IvbGlzdC1zZWxlY3Rvci5qcyIsInNyYy9tb2R1bGVzL19jb21tb24vbmF2aWdhdG9yL25hdmlnYXRvci5qcyIsInNyYy9tb2R1bGVzL19jb21tb24vc3RhdGljLmpzIiwic3JjL21vZHVsZXMvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6TEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcllBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDNXJCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3RCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcEZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDN0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDNUpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM5Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQy9GQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3A5QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN4UkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOWlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM3T0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbEpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3pUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcEtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDN0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25KQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3hPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6ckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDLzlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcFhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFjQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwckRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQy9KQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25TQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQy9KQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1RkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNubUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOWdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM3WUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDblBBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN4SEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25GQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0lBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3RDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3RCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3pEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM3REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMvSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcElBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM5Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQy9GQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3ZyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3ZCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN0RkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1RUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25FQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcmhCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzVOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDekxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJsZXQgQWNjb3VudCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0FjY291bnQnLFxyXG4gICAgVGFyZ2V0OiAnLmJvZHknLFxyXG4gICAgVHlwZTogJ2NvbnRlbnQnLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnVzZXItbWVudV9hY2NvdW50J1xyXG4gICAgfSxcclxuXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cImFjY291bnQgY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwiaDJcIj7QnNC+0Y8g0YPRh9C10YLQvdCw0Y8g0LfQsNC/0LjRgdGMPC9oMj5cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBQcm90bzoge1xyXG5cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgfVxyXG59KTtcclxud2luZG93LkFjY291bnQgPSBBY2NvdW50O1xyXG5yZXF1aXJlKCcuL19jaGFuZ2UtcGFzcycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBBY2NvdW50O1xyXG4iLCJtb2R1bGUuZXhwb3J0cyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBBY2NvdW50LFxyXG4gICAgTmFtZTogJ0FjY291bnRDaGFuZ2VQYXNzJyxcclxuICAgIFR5cGU6ICdhY2NvdW50LWNvbnRlbnQnLFxyXG4gICAgVmlzaWJsZTogdHJ1ZSxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwiY2hhbmdlLXBhc3NcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoM1wiPtCY0LfQvNC10L3QtdC90LjQtSDQn9Cw0YDQvtC70Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lXCI+PGlucHV0IGNsYXNzPVwidGV4dGJveCBsLXRleHRib3ggcGFzczFcIiB0eXBlPVwicGFzc3dvcmRcIiBwbGFjZWhvbGRlcj1cItCd0L7QstGL0Lkg0L/QsNGA0L7Qu9GMXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZVwiPjxpbnB1dCBjbGFzcz1cInRleHRib3ggbC10ZXh0Ym94IHBhc3MyXCIgdHlwZT1cInBhc3N3b3JkXCIgcGxhY2Vob2xkZXI9XCLQndC+0LLRi9C5INC/0LDRgNC+0LvRjCDQtdGJ0LUg0YDQsNC3XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGwtYnV0dG9uIGJ0bi1jb21taXRcIj7QodC80LXQvdC40YLRjDwvYnV0dG9uPiBcclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlRleHRCb3hQYXNzMSA9IHRoaXMuU2VsZWN0KCcucGFzczEnKTtcclxuICAgICAgICB0aGlzLlRleHRCb3hQYXNzMiA9IHRoaXMuU2VsZWN0KCcucGFzczInKTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkNoYW5nZVBhc3MgPSB0aGlzLlNlbGVjdCgnLmJ0bi1jb21taXQnKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5DaGFuZ2VQYXNzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgcGFzczEgPSB0aGlzLlRleHRCb3hQYXNzMS52YWx1ZTtcclxuICAgICAgICAgICAgbGV0IHBhc3MyID0gdGhpcy5UZXh0Qm94UGFzczIudmFsdWU7XHJcblxyXG4gICAgICAgICAgICBpZiAocGFzczEubGVuZ3RoIDwgOClcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5XYXJuKCfQn9Cw0YDQvtC70Ywg0LzQtdC90LXQtSA4INGB0LjQvNCy0L7Qu9C+0LInKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChwYXNzMSAhPT0gcGFzczIpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLldhcm4oJ9Cf0LDRgNC+0LvQuCDQvdC1INGB0L7QstC/0YDQsNC00LDRjtGCJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2sodGhpcy5CdXR0b25DaGFuZ2VQYXNzKTtcclxuICAgICAgICAgICAgYXBpLkNoYW5nZVBhc3MocGFzczEsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2Vzcygn0J/QsNGA0L7Qu9GMINC40LfQvNC10L3QtdC9Jyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgQ2F0Y2g6IChlKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLkVycm9yKCfQvdC1INGD0LTQsNC70L7RgdGMINGB0LzQtdC90LjRgtGMINC/0LDRgNC+0LvRjCcsIGUpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZSh0aGlzLkJ1dHRvbkNoYW5nZVBhc3MpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5CdXR0b25DaGFuZ2VQYXNzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcclxuICAgICAgICAgICAgdGhpcy5DaGFuZ2VQYXNzKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufSk7IiwiLy9pbXBvcnQgKiBhcyBEaWN0aW9uYXJ5IGZyb20gXCIuLi9nbG9iYWwvZGljdGlvbmFyeVwiO1xyXG5jb25zdCBEID0gcmVxdWlyZSgnLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuXHJcblxyXG5sZXQgQWRtaW4gPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdBZG1pbicsXHJcbiAgICBUYXJnZXQ6ICcuYm9keScsXHJcbiAgICBUeXBlOiAnY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWFkbWluJ1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0QuUm9sZS5BZG1pbkNCUywgRC5Sb2xlLkFkbWluVXNlck1hbmFnZW1lbnQsIEQuUm9sZS5BZG1pblRlY2hNYW5hZ2VtZW50LCBELlJvbGUuQWRtaW5Vc2VyQ3JlYXRlXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwiYWRtaW4gY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgPCEtLTxoMiBjbGFzcz1cImgyXCI+Q0JTTXlBZG1pbjwvaDI+LS0+XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBMaWJyYXJ5UmVnaW9uSUQ6IDEsXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHt9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge30sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7fSxcclxuICAgIEJlZm9yZVNob3c6IGZ1bmN0aW9uICgpIHt9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge31cclxufSk7XHJcbndpbmRvdy5BZG1pbiA9IEFkbWluO1xyXG5yZXF1aXJlKCcuL1VzZXJNYW5hZ2VtZW50L1VzZXJDcmVhdG9yLmpzJyk7XHJcbnJlcXVpcmUoJy4vVXNlck1hbmFnZW1lbnQvVXNlckVkaXRvci5qcycpO1xyXG5cclxucmVxdWlyZSgnLi9UZWNobmljaWFuTWFuYWdlbWVudC9UZWNobmljaWFuRWRpdG9yJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEFkbWluO1xyXG4iLCJsZXQgTGlzdFNlbGVjdG9yID0gcmVxdWlyZSgnLi4vLi4vX2NvbW1vbi9saXN0LXNlbGVjdG9yL2xpc3Qtc2VsZWN0b3InKTtcclxuY29uc3QgRCA9IHJlcXVpcmUoJy4vLi4vLi4vX2NvbW1vbi9kaWN0aW9uYXJ5Jyk7XHJcblxyXG5BZG1pbi5UZWNobmljaWFuTWFuYWdlci5DcmVhdG9yID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IEFkbWluLlRlY2huaWNpYW5NYW5hZ2VyLFxyXG4gICAgTmFtZTogJ1RlY2huaWNpYW5DcmVhdG9yJyxcclxuICAgIFJvdXRlOiBmYWxzZSxcclxuICAgIFZpc2libGU6IGZhbHNlLFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRC5Sb2xlLkFkbWluQ0JTLCBELlJvbGUuQWRtaW5Vc2VyTWFuYWdlbWVudF1cclxuICAgIH0sXHJcblxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJy5idG4tdGVjaG5pY2lhbi1hZGQnXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJ0ZWNobmljaWFuLWNyZWF0b3JcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbm5lci13cmFwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCf0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCwg0LrQvtGC0L7RgNGL0Lkg0YHRgtCw0L3QtdGCINGC0LXRhdC90LjQutC+0Lw6IDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwidXNlci1zZWxlY3RcIj48L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPklEOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tJRH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCb0L7Qs9C40L06PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e0xvZ2lufX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JjQvNGPOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIFwiPnt7TmFtZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPkVtYWlsOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIFwiPnt7RW1haWx9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QotC10LvQtdGE0L7QvTo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSBcIj57e1Bob25lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JTQvtC70LbQvdC+0YHRgtGMOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIFwiPnt7UG9zaXRpb259fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QkdC40LHQu9C40L7RgtC10LrQuDo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSB2YWx1ZS1saWJyYXJ5XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIExpYnJhcnlJRExpc3R9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIHRpdGxlPVwie3skZy5MdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0WyR0aGlzXS5OYW1lfX1cIj7igJQge3skZy5MdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0WyR0aGlzXS5OYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCi0LjQv9GLINC30LDRj9Cy0L7Qujo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSB2YWx1ZS1yZXF1ZXN0dHlwZXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggSGVscFJlcXVlc3RUeXBlSURMaXN0fX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiB0aXRsZT1cInt7JGcuRC5MaWJyYXJ5UmVnaW9uRGljdFskdGhpc119fVwiPuKAlCB7eyRnLkQuSGVscFJlcXVlc3RUeXBlRGljdFskdGhpc119fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGwtYnV0dG9uIGJ0bi10ZWNobmljaWFuLWFkZC1jb21taXRcIj7Qk9C+0YLQvtCy0L48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcblxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy51c2VyLXNlbGVjdCcsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8b3B0aW9uIHZhbHVlPVwie3tJRH19XCI+e3tOYW1lfX08L29wdGlvbj5gLFxyXG4gICAgfSxcclxuICAgIFN0YXRlOiB7XHJcbiAgICAgICAgSUQ6IC0xLFxyXG4gICAgICAgIExvZ2luOiAnJyxcclxuICAgICAgICBOYW1lOiAnJyxcclxuICAgICAgICBFbWFpbDogJycsXHJcbiAgICAgICAgUGhvbmU6ICcnLFxyXG4gICAgICAgIFBvc2l0aW9uOiAnVGVjaG1hbicsXHJcbiAgICAgICAgTGlicmFyeUlETGlzdDogW10sXHJcbiAgICAgICAgSGVscFJlcXVlc3RUeXBlSURMaXN0OiBbXSxcclxuICAgIH0sXHJcbiAgICBMb2FkOiAnLmlubmVyLXdyYXAnLFxyXG5cclxuICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuU2VsZWN0VXNlciA9IHRoaXMuU2VsZWN0KCcudXNlci1zZWxlY3QnKTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkNvbW1pdCA9IHRoaXMuU2VsZWN0KCcuYnRuLXRlY2huaWNpYW4tYWRkLWNvbW1pdCcpXHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLlNldFVzZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBVc2VySUQgPSBwYXJzZUludCh0aGlzLlNlbGVjdFVzZXIudmFsdWUpO1xyXG4gICAgICAgICAgICBsZXQgVXNlciA9IHRoaXMuQ29udHJvbGxlci5EYXRhLldoZXJlKHg9PnguSUQgPT09IFVzZXJJRCkuRmlyc3RPckRlZmF1bHQoKTtcclxuICAgICAgICAgICAgVXNlci5MaWJyYXJ5SURMaXN0ID0gW107XHJcbiAgICAgICAgICAgIFVzZXIuSGVscFJlcXVlc3RUeXBlSURMaXN0ID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuTGlzdFNlbGVjdG9yTGlicmFyaWVzLlNldFNlbGVjdGVkKFtdKTtcclxuICAgICAgICAgICAgdGhpcy5MaXN0U2VsZWN0b3JIZWxwUmVxdWVzdFR5cGVzLlNldFNlbGVjdGVkKFtdKTtcclxuICAgICAgICAgICAgdGhpcy5TdGF0ZSA9IFVzZXI7XHJcblxyXG4gICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ29tbWl0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgU3RhdGUgPSB0aGlzLlN0YXRlO1xyXG4gICAgICAgICAgICBpZiAoU3RhdGUuTGlicmFyeUlETGlzdC5sZW5ndGggPCAxKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGL0LHQtdGA0LjRgtC1INCx0LjQsdC70LjQvtGC0LXQutC4INC+0LHRgdC70YPQttC40LLQsNC90LjRjycpO1xyXG4gICAgICAgICAgICBpZiAoU3RhdGUuSGVscFJlcXVlc3RUeXBlSURMaXN0Lmxlbmd0aCA8IDEpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9CS0YvQsdC10YDQuNGC0LUg0YLQuNC/0Ysg0L7QsdGB0LvRg9C20LjQstCw0L3QuNGPINCx0LjQsdC70LjQvtGC0LXQuicpO1xyXG5cclxuICAgICAgICAgICAgYXBpLkFkbWluX1RlY2huaWNpYW5fQWRkKEFkbWluLlRlY2huaWNpYW5NYW5hZ2VyLkN1cnJlbnRMaWJyYXJ5UmVnaW9uSUQsIFN0YXRlLklELCBTdGF0ZS5MaWJyYXJ5SURMaXN0LCBTdGF0ZS5IZWxwUmVxdWVzdFR5cGVJRExpc3QsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcyA8IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uRXJyb3IoJ2Vycm9yJylcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2Vzcyhg0KLQtdGF0L3QuNC6INC90LDQt9C90LDRh9C10L0g0L3QsCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8gXCIke1N0YXRlLk5hbWV9XCJgKTtcclxuICAgICAgICAgICAgICAgICAgICBBZG1pbi5UZWNobmljaWFuTWFuYWdlci5UZWNoTG9naW5JRHMucHVzaChTdGF0ZS5JRCk7XHJcbiAgICAgICAgICAgICAgICAgICAgU3RhdGUuTGlicmFyeUlETGlzdCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIFN0YXRlLkhlbHBSZXF1ZXN0VHlwZUlETGlzdCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICBhcGkuQWRtaW5fVXNlckxpc3RHZXQoQWRtaW4uVGVjaG5pY2lhbk1hbmFnZXIuQ3VycmVudExpYnJhcnlSZWdpb25JRCwgLTEsIHtcclxuICAgICAgICAgICBUaGVuOiAobGlzdCk9PntcclxuICAgICAgICAgICAgICAgbGlzdCA9IGxpc3QuV2hlcmUoeD0+QWRtaW4uVGVjaG5pY2lhbk1hbmFnZXIuVGVjaExvZ2luSURzLmluZGV4T2YoeC5Mb2dpbklEKSA8IDApO1xyXG4gICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChsaXN0KTtcclxuICAgICAgICAgICAgICAgdGhpcy5TZXRVc2VyKCk7XHJcbiAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIEJlZm9yZVNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5MaXN0U2VsZWN0b3JMaWJyYXJpZXMgPSBuZXcgTGlzdFNlbGVjdG9yKHtcclxuICAgICAgICAgICAgVGFyZ2V0OiB0aGlzLkNvbnRlbnQsXHJcbiAgICAgICAgICAgIENvbnRyb2w6IHRoaXMuU2VsZWN0KCcudmFsdWUtbGlicmFyeScpLFxyXG4gICAgICAgICAgICBEYXRhOiBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUdyb3VwTGlzdC5XaGVyZShnPT5nLklEID09PSBBZG1pbi5UZWNobmljaWFuTWFuYWdlci5DdXJyZW50TGlicmFyeVJlZ2lvbklEKS5GaXJzdE9yRGVmYXVsdCgpLkxpYnJhcnlMaXN0LFxyXG4gICAgICAgICAgICBNdWx0aVNlbGVjdDogdHJ1ZSxcclxuICAgICAgICAgICAgU2VsZWN0ZWQ6IHRoaXMuU3RhdGUuTGlicmFyeUlETGlzdCxcclxuICAgICAgICAgICAgT25TZWxlY3Q6IChzZWxlY3RlZCk9PntcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLlN0YXRlLklEIDwgMClcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdMaWJyYXJ5SURMaXN0Jywgc2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5MaXN0U2VsZWN0b3JIZWxwUmVxdWVzdFR5cGVzID0gbmV3IExpc3RTZWxlY3Rvcih7XHJcbiAgICAgICAgICAgIFRhcmdldDogdGhpcy5Db250ZW50LFxyXG4gICAgICAgICAgICBDb250cm9sOiB0aGlzLlNlbGVjdCgnLnZhbHVlLXJlcXVlc3R0eXBlcycpLFxyXG4gICAgICAgICAgICBEYXRhOiBTdGF0aWMuSGVscFJlcXVlc3RUeXBlcyxcclxuICAgICAgICAgICAgTXVsdGlTZWxlY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIFNlbGVjdGVkOiB0aGlzLlN0YXRlLkxpYnJhcnlJRExpc3QsXHJcbiAgICAgICAgICAgIE9uU2VsZWN0OiAoc2VsZWN0ZWQpPT57XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5TdGF0ZS5JRCA8IDApXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnSGVscFJlcXVlc3RUeXBlSURMaXN0Jywgc2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBHcm91cHM6IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRgdC1JyxcclxuICAgICAgICAgICAgICAgICAgICBWYWx1ZXM6IFN0YXRpYy5IZWxwUmVxdWVzdFR5cGVzLlNlbGVjdCh4PT54LklEKVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JjQoicsXHJcbiAgICAgICAgICAgICAgICAgICAgVmFsdWVzOiBELkhlbHBSZXF1ZXN0VHlwZUlUTGlzdCxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CQ0KXQlCcsXHJcbiAgICAgICAgICAgICAgICAgICAgVmFsdWVzOiBELkhlbHBSZXF1ZXN0VHlwZUFIRExpc3QsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5TZWxlY3RVc2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpPT50aGlzLlNldFVzZXIoKSk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db21taXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+dGhpcy5Db21taXQoKSk7XHJcbiAgICB9XHJcbn0pOyIsImxldCBMaXN0U2VsZWN0b3IgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2xpc3Qtc2VsZWN0b3IvbGlzdC1zZWxlY3RvcicpO1xyXG5jb25zdCBEID0gcmVxdWlyZSgnLi8uLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuXHJcbkFkbWluLlRlY2huaWNpYW5NYW5hZ2VyID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IEFkbWluLFxyXG4gICAgTmFtZTogJ1RlY2huaWNpYW5NYW5hZ2VyJyxcclxuICAgIFR5cGU6ICdhZG1pbi1jb250ZW50JyxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0QuUm9sZS5BZG1pblRlY2hNYW5hZ2VtZW50XSxcclxuICAgIH0sXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1hZG1pbi10ZWNobmljaWFuLW1hbmFnZW1lbnQnXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJ0ZWNobmljaWFuLW1hbmFnZXJcIj5cclxuICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cImgyXCI+Q0JTTXlBZG1pbiAtINCj0L/RgNCw0LLQu9C10L3QuNC1INGC0LXRhdC90LjQutCw0LzQuDwvaDI+IFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJsb2NrIGxpYnJhcnktcmVnaW9uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpdGxlXCI+0KPQv9GA0LDQstC70LXQvdC40LUg0LIg0YDQsNC80LrQsNGFINCm0JHQoTo8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItY2FyZC13cmFwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPklEOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7SUR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7Qm9C+0LPQuNC9OjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7TG9naW59fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QmNC80Y86PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIFwiPnt7TmFtZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPkVtYWlsOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSBcIj57e0VtYWlsfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0KLQtdC70LXRhNC+0L06PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIFwiPnt7UGhvbmV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QlNC+0LvQttC90L7RgdGC0Yw6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIFwiPnt7UG9zaXRpb259fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QkdC40LHQu9C40L7RgtC10LrQuDo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUgdmFsdWUtbGlicmFyeVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggTGlicmFyeUlETGlzdH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIHRpdGxlPVwie3skZy5MdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0WyR0aGlzXS5OYW1lfX1cIj7igJQge3skZy5MdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0WyR0aGlzXS5OYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0KLQuNC/0Ysg0LfQsNGP0LLQvtC6OjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSB2YWx1ZS1yZXF1ZXN0dHlwZXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIEhlbHBSZXF1ZXN0VHlwZUlETGlzdH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIHRpdGxlPVwie3skZy5ELkxpYnJhcnlSZWdpb25EaWN0WyR0aGlzXX19XCI+4oCUIHt7JGcuRC5IZWxwUmVxdWVzdFR5cGVEaWN0WyR0aGlzXX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1jb2xcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IHNvcnQtdXNlci1saXN0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZWxlbWVudCBuYW1lIHNvcnQtbmFtZVwiPtC/0L4g0LjQvNC10L3QuDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVsZW1lbnQgcG9zaXRpb24gc29ydC1wb3NpdGlvblwiPtC/0L4g0LTQvtC70LbQvdC+0YHRgtC4PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1saXN0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiBsLWJ1dHRvbiBidG4tdGVjaG5pY2lhbi1hZGRcIj7QndCw0LfQvdCw0YfQuNGC0Ywg0L3QvtCy0L7Qs9C+INGC0LXRhdC90LjQutCwPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgR2V0U2V0OntcclxuICAgICAgICBnZXQgQ3VycmVudExpYnJhcnlSZWdpb25JRCgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX0xpYlJlZ2lvbnMuVmFsdWU7XHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBDb250cm9sbGVyOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnVzZXItbGlzdCcsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8ZGl2IGNsYXNzPVwidHIgbC1yb3cgdXNlci1saXN0X2VsZW1lbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlbGVtZW50IGZsZXgtMTAwXCI+e3tOYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlbGVtZW50IHBvc2l0aW9uXCI+e3tQb3NpdGlvbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXYgY2xhc3M9XCJsaXN0LWVtcHR5XCI+ZW1wdHk8L2Rpdj5gLFxyXG4gICAgfSxcclxuICAgIFNvcnQ6IHtcclxuICAgICAgICBOYW1lOiAnLnNvcnQtbmFtZScsXHJcbiAgICAgICAgUG9zaXRpb246ICcuc29ydC1wb3NpdGlvbicsXHJcbiAgICB9LFxyXG4gICAgU3RhdGU6IHtcclxuICAgICAgICBJRDogLTEsXHJcbiAgICAgICAgTG9naW46ICcnLFxyXG4gICAgICAgIE5hbWU6ICcnLFxyXG4gICAgICAgIEVtYWlsOiAnJyxcclxuICAgICAgICBQaG9uZTogJycsXHJcbiAgICAgICAgUG9zaXRpb246ICdUZWNobWFuJyxcclxuICAgICAgICBMaWJyYXJ5SURMaXN0OiBbXSxcclxuICAgICAgICBIZWxwUmVxdWVzdFR5cGVJRExpc3Q6IFtdLFxyXG4gICAgfSxcclxuICAgIFN1YkNvbnRlbnQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLl9MaWJSZWdpb25zID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICAgICAgICAgIFRhcmdldDogJy5saWJyYXJ5LXJlZ2lvbicsXHJcbiAgICAgICAgICAgIENvbnRlbnQ6IGA8c2VsZWN0IGNsYXNzPVwic2VsZWN0IHNlbGVjdC1jYnNcIj48L3NlbGVjdD5gLFxyXG4gICAgICAgICAgICBDb250cm9sbGVyOiB7XHJcbiAgICAgICAgICAgICAgICBMaXN0RWxlbWVudDogYDxvcHRpb24gdmFsdWU9XCJ7e0lEfX1cIj57e05hbWV9fTwvb3B0aW9uPmAsXHJcbiAgICAgICAgICAgICAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250ZW50LnZhbHVlID0gdGhpcy5Db250cm9sbGVyLkRhdGEuRmlyc3RPckRlZmF1bHQoe30pLklEO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVmFsdWUgPSB0aGlzLkNvbnRyb2xsZXIuRGF0YS5GaXJzdE9yRGVmYXVsdCh7fSkuSUQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DRGF0YSA9IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5UmVnaW9ucy5TZWxlY3QoeD0+e3JldHVybiB7SUQ6IHgsIE5hbWU6IEQuTGlicmFyeVJlZ2lvbkRpY3RbeF19fSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlZhbHVlID0gdGhpcy5DRGF0YVswXS5JRDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2godGhpcy5DRGF0YSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5WYWx1ZSA9IHBhcnNlSW50KGUuY3VycmVudFRhcmdldC52YWx1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFyZW50Lk9uQ2hhbmdlQ0JTKCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5Mb2FkQ2FyZCA9IG5ldyBMdXJlLkxvYWQoe1RhcmdldDogdGhpcy5TZWxlY3QoJy51c2VyLWNhcmQnKX0pO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5HZXRUZWNobmljaWFuTGlzdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgcmV0dXJuIGFwaS5BZG1pbl9UZWNobmljaWFuTGlzdEdldCh0aGlzLkN1cnJlbnRMaWJyYXJ5UmVnaW9uSUQsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChsaXN0KT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVGVjaExvZ2luSURzID0gbGlzdC5TZWxlY3QoeD0+eC5Mb2dpbklEKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChsaXN0KTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDYXRjaDogKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uRXJyb3IoZSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlByZXBhcmVVc2VyID0gZnVuY3Rpb24gKFRlY2huaWNpYW4pIHtcclxuICAgICAgICAgICAgdGhpcy5TdGF0ZSA9IFRlY2huaWNpYW47XHJcbiAgICAgICAgICAgIHRoaXMuTGlzdFNlbGVjdG9yTGlicmFyaWVzLlNldFNlbGVjdGVkKFRlY2huaWNpYW4uTGlicmFyeUlETGlzdCk7XHJcbiAgICAgICAgICAgIHRoaXMuTGlzdFNlbGVjdG9ySGVscFJlcXVlc3RUeXBlcy5TZXRTZWxlY3RlZChUZWNobmljaWFuLkhlbHBSZXF1ZXN0VHlwZUlETGlzdCk7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLkdldFRlY2huaWNpYW5MaXN0KCk7XHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkxpc3RTZWxlY3RvckxpYnJhcmllcyA9IG5ldyBMaXN0U2VsZWN0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuQ29udGVudCxcclxuICAgICAgICAgICAgQ29udHJvbDogdGhpcy5TZWxlY3QoJy52YWx1ZS1saWJyYXJ5JyksXHJcbiAgICAgICAgICAgIERhdGE6IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5R3JvdXBMaXN0LldoZXJlKGc9PmcuSUQgPT09IHRoaXMuQ3VycmVudExpYnJhcnlSZWdpb25JRCkuRmlyc3RPckRlZmF1bHQoKS5MaWJyYXJ5TGlzdCxcclxuICAgICAgICAgICAgTXVsdGlTZWxlY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIFNlbGVjdGVkOiB0aGlzLlN0YXRlLkxpYnJhcnlJRExpc3QsXHJcbiAgICAgICAgICAgIE9uU2VsZWN0OiAoc2VsZWN0ZWQpPT57XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5TdGF0ZS5JRCA8IDApXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgYXBpLkFkbWluX1RlY2huaWNpYW5FZGl0X0xpYnJhcmllcyh0aGlzLkN1cnJlbnRMaWJyYXJ5UmVnaW9uSUQsIHRoaXMuU3RhdGUuSUQsIHNlbGVjdGVkLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcyA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2VzcygnTGlicmFyeUlETGlzdCBDaGFuZ2VkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdMaWJyYXJ5SURMaXN0Jywgc2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBDYXRjaDogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uRXJyb3IoJ0xpYnJhcnlJRExpc3QgY2hhbmdpbmcgZXJyb3InKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuTGlzdFNlbGVjdG9ySGVscFJlcXVlc3RUeXBlcyA9IG5ldyBMaXN0U2VsZWN0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuQ29udGVudCxcclxuICAgICAgICAgICAgQ29udHJvbDogdGhpcy5TZWxlY3QoJy52YWx1ZS1yZXF1ZXN0dHlwZXMnKSxcclxuICAgICAgICAgICAgRGF0YTogU3RhdGljLkhlbHBSZXF1ZXN0VHlwZXMsXHJcbiAgICAgICAgICAgIE11bHRpU2VsZWN0OiB0cnVlLFxyXG4gICAgICAgICAgICBTZWxlY3RlZDogdGhpcy5TdGF0ZS5MaWJyYXJ5SURMaXN0LFxyXG4gICAgICAgICAgICBPblNlbGVjdDogKHNlbGVjdGVkKT0+e1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuU3RhdGUuSUQgPCAwKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIGFwaS5BZG1pbl9UZWNobmljaWFuRWRpdF9IZWxwUmVxdWVzdFR5cGVzKHRoaXMuQ3VycmVudExpYnJhcnlSZWdpb25JRCwgdGhpcy5TdGF0ZS5JRCwgc2VsZWN0ZWQsIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzID4gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TdWNjZXNzKCdIZWxwUmVxdWVzdFR5cGVzIENoYW5nZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0hlbHBSZXF1ZXN0VHlwZUlETGlzdCcsIHNlbGVjdGVkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgQ2F0Y2g6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLkVycm9yKCdIZWxwUmVxdWVzdFR5cGVzIGNoYW5naW5nIGVycm9yJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBHcm91cHM6IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRgdC1JyxcclxuICAgICAgICAgICAgICAgICAgICBWYWx1ZXM6IFN0YXRpYy5IZWxwUmVxdWVzdFR5cGVzLlNlbGVjdCh4PT54LklEKVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JjQoicsXHJcbiAgICAgICAgICAgICAgICAgICAgVmFsdWVzOiBELkhlbHBSZXF1ZXN0VHlwZUlUTGlzdCxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CQ0KXQlCcsXHJcbiAgICAgICAgICAgICAgICAgICAgVmFsdWVzOiBELkhlbHBSZXF1ZXN0VHlwZUFIRExpc3QsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcudXNlci1saXN0X2VsZW1lbnQ6bm90KC5hY3RpdmUpJywgZnVuY3Rpb24gKGUsIHApIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgdiBvZiB0aGlzLkNvbnRyb2xsZXIuRGF0YUl0ZW1zKVxyXG4gICAgICAgICAgICAgICAgdi5ET00uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQocC5MaW5lSUQpO1xyXG4gICAgICAgICAgICB0aGlzLlByZXBhcmVVc2VyKERhdGFJdGVtLkRhdGEpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59KTtcclxucmVxdWlyZSgnLi9UZWNobmljaWFuQ3JlYXRvcicpO1xyXG4vL21vZHVsZS5leHBvcnRzID0gQWRtaW4uVGVjaG5pY2lhbk1hbmFnZXI7IiwiLy9pbXBvcnQgKiBhcyBEaWN0aW9uYXJ5IGZyb20gXCIuLi8uLi9nbG9iYWwvZGljdGlvbmFyeVwiO1xyXG5jb25zdCBEID0gcmVxdWlyZSgnLi4vLi4vX2NvbW1vbi9kaWN0aW9uYXJ5Jyk7XHJcbmxldCBMaXN0U2VsZWN0b3IgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2xpc3Qtc2VsZWN0b3IvbGlzdC1zZWxlY3RvcicpO1xyXG5sZXQgVXNlclBvc2l0aW9uUHJlc2V0ID0gcmVxdWlyZSgnLi9fUm9sZVBvc2l0aW9uc1ByZXNldCcpO1xyXG5cclxuQWRtaW4uVXNlckNyZWF0b3IgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogQWRtaW4sXHJcbiAgICBOYW1lOiAnVXNlckNyZWF0b3InLFxyXG4gICAgVHlwZTogJ2FkbWluLWNvbnRlbnQnLFxyXG4gICAgVmlzaWJsZTogdHJ1ZSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0QuUm9sZS5BZG1pblVzZXJDcmVhdGVdXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1hZG1pbi11c2VyLWNyZWF0ZSdcclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cInVzZXItY3JlYXRvclwiPlxyXG4gICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwiaDJcIj5DQlNNeUFkbWluIC0g0J3QvtCy0YvQuSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Yw8L2gyPiBcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJibG9jayBsaWJyYXJ5LXJlZ2lvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXRsZVwiPkxpYnJhcnkgUmVnaW9uIChDQlMpOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1jYXJkLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlciBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1idXR0b24gYnV0dG9uIGwtcG9pbnRlciBidG4tbG9hZC1kZWZhdWx0LXJvbGVzIG5vbmVcIj5Mb2FkIGRlZmF1bHQgcG9zaXRpb24ncyByb2xlczwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7Qm9C+0LPQuNC9OjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+PGlucHV0IGNsYXNzPVwibC10ZXh0Ym94IHRleHRib3ggdXNlci1sb2dpblwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCLQu9C+0LPQuNC9XCI+IDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QmNC80Y86PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj48aW5wdXQgY2xhc3M9XCJsLXRleHRib3ggdGV4dGJveCB1c2VyLW5hbWVcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwi0LjQvNGPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj5FbWFpbDo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPjxpbnB1dCBjbGFzcz1cImwtdGV4dGJveCB0ZXh0Ym94IHVzZXItZW1haWxcIiB0eXBlPVwiZW1haWxcIiBwbGFjZWhvbGRlcj1cImVtYWlsQGhvc3QucnVcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0KLQtdC70LXRhNC+0L06PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj48aW5wdXQgY2xhc3M9XCJsLXRleHRib3ggdGV4dGJveCB1c2VyLXBob25lXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIjAwMC0wMC0wMFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QlNC+0LvQttC90L7RgdGC0Yw6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj48aW5wdXQgY2xhc3M9XCJsLXRleHRib3ggdGV4dGJveCB1c2VyLXBvc2l0aW9uXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cItC00L7Qu9C20L3QvtGB0YLRjFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QmtC+0LzQvNC10L3RgtCw0YDQuNC4OjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+PGlucHV0IGNsYXNzPVwibC10ZXh0Ym94IHRleHRib3ggdXNlci1wb3NpdGlvblwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCLQntC/0LjRgdCw0L3QuNC1XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCf0YDQsNCy0LAg0LTQvtGB0YLRg9C/0LA6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUgdmFsdWUtcm9sZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZWFjaCBSb2xlc319XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgdGl0bGU9XCJ7eyRnLkQuUm9sZURpY3RbJHRoaXNdfX1cIj7igJQge3skZy5ELlJvbGVEaWN0WyR0aGlzXX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QkdC40LHQu9C40L7RgtC10LrQuDo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSB2YWx1ZS1saWJyYXJ5XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIExpYnJhcnlJRExpc3R9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIHRpdGxlPVwie3skZy5MdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0WyR0aGlzXS5OYW1lfX1cIj7igJQge3skZy5MdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0WyR0aGlzXS5OYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCm0JHQoTo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSB2YWx1ZS1jYnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggTGlicmFyeVJlZ2lvbklETGlzdH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgdGl0bGU9XCJ7eyRnLkQuTGlicmFyeVJlZ2lvbkRpY3RbJHRoaXNdfX1cIj57eyRnLkQuTGlicmFyeVJlZ2lvbkRpY3RbJHRoaXNdfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlciBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gbC1wb2ludGVyIGJ0bi1tYW5hZ2VtZW50LWNvbW1pdFwiPkNyZWF0ZSB1c2VyPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcbiAgICBHZXRTZXQ6e1xyXG4gICAgICAgIGdldCBDdXJyZW50TGlicmFyeVJlZ2lvbklEKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fTGliUmVnaW9ucy5WYWx1ZTtcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFN0YXRlOiB7XHJcbiAgICAgICAgSUQ6IC0xLFxyXG4gICAgICAgIExvZ2luOiAnJyxcclxuICAgICAgICBOYW1lOiAnJyxcclxuICAgICAgICBQb3NpdGlvbjogJ0xpYnJhcmlhbicsXHJcbiAgICAgICAgRW1haWw6ICcnLFxyXG4gICAgICAgIFBob25lOiAnJyxcclxuICAgICAgICBSb2xlczogVXNlclBvc2l0aW9uUHJlc2V0WzFdLFxyXG4gICAgICAgIExpYnJhcnlJRExpc3Q6IFs0NDBdLFxyXG4gICAgICAgIExpYnJhcnlSZWdpb25JRExpc3Q6IFtdLFxyXG5cclxuICAgICAgICBVc2VyUG9zaXRpb25zOiBTdGF0aWMuVXNlclBvc2l0aW9uc1xyXG4gICAgfSxcclxuICAgIFN1YkNvbnRlbnQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5fTGliUmVnaW9ucyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgICAgICAgICBUYXJnZXQ6ICcubGlicmFyeS1yZWdpb24nLFxyXG4gICAgICAgICAgICBDb250ZW50OiBgPHNlbGVjdCBjbGFzcz1cInNlbGVjdCBzZWxlY3QtY2JzXCI+PC9zZWxlY3Q+YCxcclxuICAgICAgICAgICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgICAgICAgICAgTGlzdEVsZW1lbnQ6IGA8b3B0aW9uIHZhbHVlPVwie3tJRH19XCI+e3tOYW1lfX08L29wdGlvbj5gLFxyXG4gICAgICAgICAgICAgICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udGVudC52YWx1ZSA9IHRoaXMuQ29udHJvbGxlci5EYXRhLkZpcnN0T3JEZWZhdWx0KHt9KS5JRDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlZhbHVlID0gdGhpcy5Db250cm9sbGVyLkRhdGEuRmlyc3RPckRlZmF1bHQoe30pLklEO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ0RhdGEgPSBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeVJlZ2lvbnMuU2VsZWN0KHg9PntyZXR1cm4ge0lEOiB4LCBOYW1lOiBELkxpYnJhcnlSZWdpb25EaWN0W3hdfX0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5WYWx1ZSA9IHRoaXMuQ0RhdGFbMF0uSUQ7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKHRoaXMuQ0RhdGEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Db250ZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVmFsdWUgPSBwYXJzZUludChlLmN1cnJlbnRUYXJnZXQudmFsdWUpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5PbkNoYW5nZUNCUygpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQnV0dG9uQ29tbWl0ID0gdGhpcy5TZWxlY3QoJy5idG4tbWFuYWdlbWVudC1jb21taXQnKTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkxvYWREZWZhdWx0Um9sZXMgPSB0aGlzLlNlbGVjdCgnLmJ0bi1sb2FkLWRlZmF1bHQtcm9sZXMnKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5PbkNoYW5nZUNCUyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5MaXN0U2VsZWN0b3JMaWJyYXJpZXMuUmVmcmVzaChMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUdyb3VwTGlzdC5XaGVyZShnPT5nLklEID09PSB0aGlzLkN1cnJlbnRMaWJyYXJ5UmVnaW9uSUQpLkZpcnN0T3JEZWZhdWx0KHtMaWJyYXJ5TGlzdDpbXX0pLkxpYnJhcnlMaXN0KTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnTGlicmFyeUlETGlzdCcsIFtdKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ29tbWl0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgVXNlciA9IHRoaXMuU3RhdGU7XHJcbiAgICAgICAgICAgIGlmIChVc2VyLkxvZ2luID09PSAnJylcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5XYXJuKCdFbnRlciB1c2VyIExPR0lOJyk7XHJcbiAgICAgICAgICAgIGlmIChVc2VyLk5hbWUgPT09ICcnKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLldhcm4oJ0VudGVyIHVzZXIgTkFNRScpO1xyXG4gICAgICAgICAgICBpZiAoIFVzZXIuTGlicmFyeVJlZ2lvbklETGlzdC5sZW5ndGggPCAxICYmIChVc2VyLlJvbGVzLmluZGV4T2YoRC5Sb2xlLkFkbWluQ0JTKSA+IC0xIHx8IFVzZXIuUm9sZXMuaW5kZXhPZihELlJvbGUuTW9kZXJhdG9yQ0JTKSA+IC0xKSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uV2FybignRm9yIGFkbWluIG9yIG1vZGVyYXRvciBjcmVhdGlvbiB5b3UgaGF2ZSB0byBzZWxlY3QgTGlicmFyeVJlZ2lvbnMgKENCUyknKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBVc2VyLlBhc3MgPSBMdXJlLlN0cmluZy5SYW5kb20oOCk7XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2sodGhpcy5CdXR0b25Db21taXQpO1xyXG4gICAgICAgICAgICByZXR1cm4gYXBpLkFkbWluX1VzZXJBZGQodGhpcy5DdXJyZW50TGlicmFyeVJlZ2lvbklELCBVc2VyLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMgPT09IC0yKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLldhcm4oJ0xPR0lOIGFscmVhZHkgZXhpc3RzJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMgPT09IC0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLkVycm9yKCdTZXJ2ZXIgZXJyb3InKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLy9Vc2VyLklEID0gcmVzO1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQ29uZmlybSgnVXNlciBjcmVhdGlvbicsIGBVc2VyIGNyZWF0ZWQuIExvZ2luOiA8c3Ryb25nPiR7VXNlci5Mb2dpbn08L3N0cm9uZz4gUGFzc3dvcmQ6IDxzdHJvbmc+JHtVc2VyLlBhc3N9PC9zdHJvbmc+YCk7XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2VzcyhgVXNlciBjcmVhdGVkOiAke1VzZXIuTG9naW59LCAke1VzZXIuTmFtZX1gKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDYXRjaDogKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uRXJyb3IoJ1NlcnZlciBjb25uZWN0aW9uIGVycm9yJywgZSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKHRoaXMuQnV0dG9uQ29tbWl0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5MaXN0U2VsZWN0b3JSb2xlcyA9IG5ldyBMaXN0U2VsZWN0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuQ29udGVudCxcclxuICAgICAgICAgICAgQ29udHJvbDogdGhpcy5TZWxlY3QoJy52YWx1ZS1yb2xlJyksXHJcbiAgICAgICAgICAgIERhdGE6IFN0YXRpYy5Sb2xlcy5XaGVyZShyPT5yLklEID4gMiAmJiByLklEICE9PSAxNCAmJiByLklEICE9PSAxNikuc29ydCgoYSxiKT0+e3JldHVybiBhLk5hbWU+Yi5OYW1lID8gMTotMX0pLFxyXG4gICAgICAgICAgICBNdWx0aVNlbGVjdDogdHJ1ZSxcclxuICAgICAgICAgICAgU2VsZWN0ZWQ6IHRoaXMuU3RhdGUuUm9sZXMsXHJcbiAgICAgICAgICAgIE9uU2VsZWN0OiAoc2VsZWN0ZWQpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdSb2xlcycsIHNlbGVjdGVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuTGlzdFNlbGVjdG9yTGlicmFyaWVzID0gbmV3IExpc3RTZWxlY3Rvcih7XHJcbiAgICAgICAgICAgIFRhcmdldDogdGhpcy5Db250ZW50LFxyXG4gICAgICAgICAgICBDb250cm9sOiB0aGlzLlNlbGVjdCgnLnZhbHVlLWxpYnJhcnknKSxcclxuICAgICAgICAgICAgRGF0YTogTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlHcm91cExpc3QuV2hlcmUoZz0+Zy5JRCA9PT0gdGhpcy5DdXJyZW50TGlicmFyeVJlZ2lvbklEKS5GaXJzdE9yRGVmYXVsdCgpLkxpYnJhcnlMaXN0LFxyXG4gICAgICAgICAgICBNdWx0aVNlbGVjdDogdHJ1ZSxcclxuICAgICAgICAgICAgU2VsZWN0ZWQ6IHRoaXMuU3RhdGUuTGlicmFyeUlETGlzdCxcclxuICAgICAgICAgICAgT25TZWxlY3Q6IChzZWxlY3RlZCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0xpYnJhcnlJRExpc3QnLCBzZWxlY3RlZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkxpc3RTZWxlY3RvckNCUyA9IG5ldyBMaXN0U2VsZWN0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuQ29udGVudCxcclxuICAgICAgICAgICAgQ29udHJvbDogdGhpcy5TZWxlY3QoJy52YWx1ZS1jYnMnKSxcclxuICAgICAgICAgICAgaXNBbGxvd0VtcHR5OiB0cnVlLFxyXG4gICAgICAgICAgICBEYXRhOiBTdGF0aWMuTGlicmFyeVJlZ2lvbnMuV2hlcmUoeD0+THVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlSZWdpb25zLmluZGV4T2YoeC5JRCkgPiAtMSksXHJcbiAgICAgICAgICAgIE11bHRpU2VsZWN0OiB0cnVlLFxyXG4gICAgICAgICAgICBTZWxlY3RlZDogW10sXHJcbiAgICAgICAgICAgIE9uU2VsZWN0OiAoc2VsZWN0ZWQpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdMaWJyYXJ5UmVnaW9uSURMaXN0Jywgc2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy51c2VyLWxvZ2luJykuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpPT57XHJcbiAgICAgICAgICAgIHRoaXMuU3RhdGUuTG9naW4gPSBlLmN1cnJlbnRUYXJnZXQudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy51c2VyLW5hbWUnKS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSk9PntcclxuICAgICAgICAgICAgdGhpcy5TdGF0ZS5OYW1lID0gZS5jdXJyZW50VGFyZ2V0LnZhbHVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcudXNlci1lbWFpbCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlN0YXRlLkVtYWlsID0gZS5jdXJyZW50VGFyZ2V0LnZhbHVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcudXNlci1waG9uZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlN0YXRlLlBob25lID0gZS5jdXJyZW50VGFyZ2V0LnZhbHVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcudXNlci1wb3NpdGlvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGUpPT57XHJcbiAgICAgICAgICAgIHRoaXMuU3RhdGUuUG9zaXRpb24gPSBlLmN1cnJlbnRUYXJnZXQudmFsdWVcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkxvYWREZWZhdWx0Um9sZXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xyXG4gICAgICAgICAgICAvL3RoaXMuTG9hZERlZmF1bHRSb2xlcygpO1xyXG4gICAgICAgICAgICB0aGlzLkxpc3RTZWxlY3RvclJvbGVzLlNldFNlbGVjdGVkKHRoaXMuUHJvdG8uRGF0YS5Sb2xlcyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db21taXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLkNvbW1pdCgpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pO1xyXG4iLCJsZXQgTGlzdFNlbGVjdG9yID0gcmVxdWlyZSgnLi4vLi4vX2NvbW1vbi9saXN0LXNlbGVjdG9yL2xpc3Qtc2VsZWN0b3InKTtcclxubGV0IFVzZXJQb3NpdGlvblByZXNldCA9IHJlcXVpcmUoJy4vX1JvbGVQb3NpdGlvbnNQcmVzZXQnKTtcclxuY29uc3QgRCA9IHJlcXVpcmUoJy4uLy4uL19jb21tb24vZGljdGlvbmFyeScpO1xyXG5BZG1pbi5Vc2VyTWFuYWdlbWVudCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBBZG1pbixcclxuICAgIE5hbWU6ICdVc2VyRWRpdG9yJyxcclxuICAgIFR5cGU6ICdhZG1pbi1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtYWRtaW4tdXNlci1tYW5hZ2VtZW50J1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0QuUm9sZS5BZG1pblVzZXJNYW5hZ2VtZW50XSxcclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cInVzZXItbWFuYWdlbWVudFwiPlxyXG4gICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwiaDJcIj5DQlNNeUFkbWluIC0g0KPQv9GA0LDQstC70LXQvdC40LUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10Lw8L2gyPiBcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoM1wiPtCe0YHQvdC+0LLQvdGL0LUg0LTQsNC90L3Ri9C1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJsb2NrIGxpYnJhcnktcmVnaW9uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpdGxlXCI+0KPQv9GA0LDQstC70LXQvdC40LUg0LIg0YDQsNC80LrQsNGFINCm0JHQoTo8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXIgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1idXR0b24gYnV0dG9uIGwtcG9pbnRlciBidG4tbG9hZC1kZWZhdWx0LXJvbGVzIG5vbmVcIj5Mb2FkIGRlZmF1bHQgcG9zaXRpb24ncyByb2xlczwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1jYXJkLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+SUQ6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tJRH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCb0L7Qs9C40L06PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tMb2dpbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCY0LzRjzo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUgZWRpdGFibGVcIj57e05hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj5FbWFpbDo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUgZWRpdGFibGVcIj57e0VtYWlsfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0KLQtdC70LXRhNC+0L06PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIGVkaXRhYmxlXCI+e3tQaG9uZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCU0L7Qu9C20L3QvtGB0YLRjDo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUgZWRpdGFibGVcIj57e1Bvc2l0aW9ufX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtbGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JTQvtC70LbQvdC+0YHRgtGMOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSBlZGl0YWJsZVwiPnt7UG9zaXRpb259fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7Qn9GA0LDQstCwINC00L7RgdGC0YPQv9CwOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSB2YWx1ZS1yb2xlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZWFjaCBSb2xlc319XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIHRpdGxlPVwie3skZy5ELlJvbGVEaWN0WyR0aGlzXX19XCI+e3skZy5ELlJvbGVEaWN0WyR0aGlzXX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCR0LjQsdC70LjQvtGC0LXQutC4OjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSB2YWx1ZS1saWJyYXJ5XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZWFjaCBMaWJyYXJ5SURMaXN0fX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgdGl0bGU9XCJ7eyRnLkx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdERpY3RbJHRoaXNdLk5hbWV9fVwiPuKAlCB7eyRnLkx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdERpY3RbJHRoaXNdLk5hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QptCR0KE6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIHZhbHVlLWNic1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggTGlicmFyeVJlZ2lvbklETGlzdH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIHRpdGxlPVwie3skZy5ELkxpYnJhcnlSZWdpb25EaWN0WyR0aGlzXX19XCI+4oCUIHt7JGcuRC5MaWJyYXJ5UmVnaW9uRGljdFskdGhpc119fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtY29sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBzb3J0LXVzZXItbGlzdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVsZW1lbnQgbmFtZSBzb3J0LW5hbWVcIj7Qv9C+INC40LzQtdC90Lg8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlbGVtZW50IHBvc2l0aW9uIHNvcnQtcG9zaXRpb25cIj7Qv9C+INC00L7Qu9C20L3QvtGB0YLQuDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItbGlzdFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFzcy1jaGFuZ2luZ1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoM1wiPtCX0LDQtNCw0YLRjCDQvdC+0LLRi9C5INC/0LDRgNC+0LvRjCDQstGL0LHRgNCw0L3QvdC+0LPQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZVwiPjxpbnB1dCBjbGFzcz1cInRleHRib3ggbC10ZXh0Ym94IGlucHV0LWNoYW5nZS1wYXNzXCIgdHlwZT1cInBhc3N3b3JkXCIgcGxhY2Vob2xkZXI9XCLQvdC+0LLRi9C5INC/0LDRgNC+0LvRjFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lXCI+PGlucHV0IGNsYXNzPVwidGV4dGJveCBsLXRleHRib3ggaW5wdXQtY2hhbmdlLXBhc3MyXCIgdHlwZT1cInBhc3N3b3JkXCIgcGxhY2Vob2xkZXI9XCLQvdC+0LLRi9C5INC/0LDRgNC+0LvRjCDQv9C+0LLRgtC+0YBcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZVwiPjxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnRuLWNoYW5nZS1wYXNzXCI+0JfQsNC00LDRgtGMINC/0LDRgNC+0LvRjDwvYnV0dG9uPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWtpbGxlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoM1wiPtCj0LTQsNC70LjRgtGMINCy0YvQsdGA0LDQvdC90L7Qs9C+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lXCI+PGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGJ1dHRvbiBidG4tdXNlci1raWxsXCI+0KPQtNCw0LvQuNGC0Ywg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPPC9idXR0b24+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcblxyXG4gICAgU3RhdGU6IHtcclxuICAgICAgICBJRDogLTEsXHJcbiAgICAgICAgTG9naW46ICcnLFxyXG4gICAgICAgIE5hbWU6ICcnLFxyXG4gICAgICAgIEVtYWlsOiAnJyxcclxuICAgICAgICBQaG9uZTogJycsXHJcbiAgICAgICAgUG9zaXRpb246ICdMaWJyYXJpYW4nLFxyXG4gICAgICAgIFJvbGVzOiBVc2VyUG9zaXRpb25QcmVzZXRbMV0sXHJcbiAgICAgICAgTGlicmFyeUlETGlzdDogWzQ0MF0sXHJcbiAgICAgICAgTGlicmFyeVJlZ2lvbklETGlzdDogWzFdLFxyXG5cclxuICAgICAgICBUZXN0T3B0aW9uczogW3tWYWx1ZTogMywgTmFtZTogMzMzfSx7VmFsdWU6IDEsIE5hbWU6IDExMX0se1ZhbHVlOiAyLCBOYW1lOiAyMjJ9LHtWYWx1ZTogNCwgTmFtZTogNDQ0fSxdXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy51c2VyLWxpc3QnLFxyXG4gICAgICAgIExpc3RFbGVtZW50OiBgPGRpdiBjbGFzcz1cInRyIGwtcm93IHVzZXItbGlzdF9lbGVtZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZWxlbWVudCBmbGV4LTEwMFwiPnt7TmFtZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZWxlbWVudCBwb3NpdGlvblwiPnt7UG9zaXRpb259fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgICAgICBFbXB0eU1lc3NhZ2U6IGA8ZGl2IGNsYXNzPVwibGlzdC1lbXB0eVwiPmVtcHR5PC9kaXY+YCxcclxuICAgIH0sXHJcbiAgICBTb3J0OiB7XHJcbiAgICAgICAgTmFtZTogJy5zb3J0LW5hbWUnLFxyXG4gICAgICAgIFBvc2l0aW9uOiAnLnNvcnQtcG9zaXRpb24nLFxyXG4gICAgfSxcclxuICAgIE9uQ2hhbmdlOiBmdW5jdGlvbihQYXJhbSwgVmFsdWUpe1xyXG4gICAgICAgIGlmICh0aGlzLlN0YXRlLklEIDwgMClcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCcnKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgT25DaGFuZ2UtPiAke1BhcmFtfT0ke1ZhbHVlfWApO1xyXG4gICAgICAgIGlmIChQYXJhbSA9PT0gJ05hbWUnKVxyXG4gICAgICAgICAgICByZXR1cm4gYXBpLkFkbWluX1VzZXJFZGl0X05hbWUodGhpcy5DdXJyZW50TGlicmFyeVJlZ2lvbklELCB0aGlzLlN0YXRlLklELCBWYWx1ZSwge30pO1xyXG4gICAgICAgIGlmIChQYXJhbSA9PT0gJ1Bvc2l0aW9uJylcclxuICAgICAgICAgICAgcmV0dXJuIGFwaS5BZG1pbl9Vc2VyRWRpdF9Qb3NpdGlvbih0aGlzLkN1cnJlbnRMaWJyYXJ5UmVnaW9uSUQsIHRoaXMuU3RhdGUuSUQsIFZhbHVlLCB7fSk7XHJcbiAgICAgICAgaWYgKFBhcmFtID09PSAnRW1haWwnKVxyXG4gICAgICAgICAgICByZXR1cm4gYXBpLkFkbWluX1VzZXJFZGl0X0VtYWlsKHRoaXMuQ3VycmVudExpYnJhcnlSZWdpb25JRCwgdGhpcy5TdGF0ZS5JRCwgVmFsdWUsIHt9KTtcclxuICAgICAgICBpZiAoUGFyYW0gPT09ICdQaG9uZScpXHJcbiAgICAgICAgICAgIHJldHVybiBhcGkuQWRtaW5fVXNlckVkaXRfUGhvbmUodGhpcy5DdXJyZW50TGlicmFyeVJlZ2lvbklELCB0aGlzLlN0YXRlLklELCBWYWx1ZSwge30pO1xyXG5cclxuXHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgnJyk7XHJcbiAgICB9LFxyXG4gICAgLy8gUHJvcFR5cGVzOiB7XHJcbiAgICAvLyAgICAgUG9zaXRpb25JRDogTHVyZS5Qcm9wVHlwZXMuSW50XHJcbiAgICAvLyB9LFxyXG4gICAgLy8gUHJvcEZvcm1hdDoge1xyXG4gICAgLy8gICAgIFBvc2l0aW9uSUQ6IChwKT0+RC5Vc2VyUG9zaXRpb25EaWN0W3BdXHJcbiAgICAvLyB9LFxyXG4gICAgR2V0U2V0OntcclxuICAgICAgICBnZXQgQ3VycmVudExpYnJhcnlSZWdpb25JRCgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX0xpYlJlZ2lvbnMuVmFsdWU7XHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgU3ViQ29udGVudDogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLl9MaWJSZWdpb25zID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICAgICAgICAgIFRhcmdldDogJy5saWJyYXJ5LXJlZ2lvbicsXHJcbiAgICAgICAgICAgIENvbnRlbnQ6IGA8c2VsZWN0IGNsYXNzPVwic2VsZWN0IHNlbGVjdC1jYnNcIj48L3NlbGVjdD5gLFxyXG4gICAgICAgICAgICBDb250cm9sbGVyOiB7XHJcbiAgICAgICAgICAgICAgICBMaXN0RWxlbWVudDogYDxvcHRpb24gdmFsdWU9XCJ7e0lEfX1cIj57e05hbWV9fTwvb3B0aW9uPmAsXHJcbiAgICAgICAgICAgICAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250ZW50LnZhbHVlID0gdGhpcy5Db250cm9sbGVyLkRhdGEuRmlyc3RPckRlZmF1bHQoe30pLklEO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVmFsdWUgPSB0aGlzLkNvbnRyb2xsZXIuRGF0YS5GaXJzdE9yRGVmYXVsdCh7fSkuSUQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DRGF0YSA9IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5UmVnaW9ucy5TZWxlY3QoeD0+e3JldHVybiB7SUQ6IHgsIE5hbWU6IEQuTGlicmFyeVJlZ2lvbkRpY3RbeF19fSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlZhbHVlID0gdGhpcy5DRGF0YVswXS5JRDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2godGhpcy5DRGF0YSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5WYWx1ZSA9IHBhcnNlSW50KGUuY3VycmVudFRhcmdldC52YWx1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFyZW50Lk9uQ2hhbmdlQ0JTKCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkxvYWRDYXJkID0gbmV3IEx1cmUuTG9hZCh7VGFyZ2V0OiB0aGlzLlNlbGVjdCgnLnVzZXItY2FyZCcpfSk7XHJcbiAgICAgICAgLy8gdGhpcy5Db250cm9sbGVyVXNlcnMgPSBuZXcgTHVyZS5Db250cm9sbGVyLlRlbXBsYXRvcih7XHJcbiAgICAgICAgLy9cclxuICAgICAgICAvLyAgICAgT3duZXI6IHRoaXMsXHJcbiAgICAgICAgLy8gfSk7XHJcblxyXG4gICAgICAgIHRoaXMuQnV0dG9uQ29tbWl0ID0gdGhpcy5TZWxlY3QoJy5idG4tbWFuYWdlbWVudC1jb21taXQnKTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkxvYWREZWZhdWx0Um9sZXMgPSB0aGlzLlNlbGVjdCgnLmJ0bi1sb2FkLWRlZmF1bHQtcm9sZXMnKTtcclxuICAgICAgICB0aGlzLlVzZXJMaXN0ID0gdGhpcy5TZWxlY3QoJy51c2VyLWxpc3QnKTtcclxuXHJcbiAgICAgICAgdGhpcy5UZXh0Qm94UGFzcyA9IHRoaXMuU2VsZWN0KCcuaW5wdXQtY2hhbmdlLXBhc3MnKTtcclxuICAgICAgICB0aGlzLlRleHRCb3hQYXNzMiA9IHRoaXMuU2VsZWN0KCcuaW5wdXQtY2hhbmdlLXBhc3MyJyk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25DaGFuZ2VQYXNzID0gdGhpcy5TZWxlY3QoJy5idG4tY2hhbmdlLXBhc3MnKTtcclxuICAgICAgICB0aGlzLkJ1dHRvblVzZXJLaWxsID0gdGhpcy5TZWxlY3QoJy5idG4tdXNlci1raWxsJyk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuT25DaGFuZ2VDQlMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuR2V0VXNlckxpc3QoKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuR2V0VXNlckxpc3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIHJldHVybiBhcGkuQWRtaW5fVXNlckxpc3RHZXQoQWRtaW4uVXNlck1hbmFnZW1lbnQuQ3VycmVudExpYnJhcnlSZWdpb25JRCwgLTEsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChsaXN0KT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKGxpc3QpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIENhdGNoOiAoZSk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcihlKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIC8vIHRoaXMuTG9hZERlZmF1bHRSb2xlcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnUm9sZXMnLCBVc2VyUG9zaXRpb25QcmVzZXRbdGhpcy5Qcm90by5EYXRhLlBvc2l0aW9uSURdKTtcclxuICAgICAgICAvLyB9O1xyXG4gICAgICAgIHRoaXMuUHJlcGFyZVVzZXIgPSBmdW5jdGlvbiAoVXNlcklEKSB7XHJcbiAgICAgICAgICAgIHRoaXMuTG9hZENhcmQuU2hvdygpO1xyXG4gICAgICAgICAgICByZXR1cm4gYXBpLkFkbWluX1VzZXJHZXQodGhpcy5DdXJyZW50TGlicmFyeVJlZ2lvbklELCBVc2VySUQsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46ICh1c2VyKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCh1c2VyKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkxpc3RTZWxlY3RvclJvbGVzLlNldFNlbGVjdGVkKHVzZXIuUm9sZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTGlzdFNlbGVjdG9yTGlicmFyaWVzLlNldFNlbGVjdGVkKHVzZXIuTGlicmFyeUlETGlzdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5MaXN0U2VsZWN0b3JDQlMuU2V0U2VsZWN0ZWQodXNlci5MaWJyYXJ5UmVnaW9uSURMaXN0KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNob3coKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTG9hZENhcmQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5DaGFuZ2VQYXNzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5TdGF0ZS5JRCA8IDApXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uV2Fybihg0KPRh9C10YLQvdCw0Y8g0LfQsNC/0LjRgdGMINC90LUg0LLRi9Cx0YDQsNC90LBgKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBQd2QgPSB0aGlzLlRleHRCb3hQYXNzLnZhbHVlO1xyXG4gICAgICAgICAgICBsZXQgUHdkMiA9IHRoaXMuVGV4dEJveFBhc3MyLnZhbHVlO1xyXG4gICAgICAgICAgICBpZiAoUHdkLmxlbmd0aCA8IDEpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLldhcm4oJ0VudGVyIG5ldyBwYXNzd29yZCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChQd2QgIT09ICBQd2QyKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5XYXJuKGBQYXNzd29yZHMgYXJlbid0IHNhbWVgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKHRoaXMuQnV0dG9uQ2hhbmdlUGFzcyk7XHJcbiAgICAgICAgICAgIGFwaS5BZG1pbl9Vc2VyRWRpdF9QYXNzKHRoaXMuQ3VycmVudExpYnJhcnlSZWdpb25JRCwgdGhpcy5TdGF0ZS5JRCwgUHdkLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMgPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2VzcygnUGFzc3dvcmQgY2hhbmdlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uV2FybihgUGFzc3dvcmQgaXNuJ3QgY2hhbmRlZGApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDYXRjaDogKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uRXJyb3IoYFNlcnZlciBlcnJvcmAsIGUpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZSh0aGlzLkJ1dHRvbkNoYW5nZVBhc3MpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5LaWxsVXNlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuU3RhdGUuSUQgPCAwKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLldhcm4oYNCj0YfQtdGC0L3QsNGPINC30LDQv9C40YHRjCDQvdC1INCy0YvQsdGA0LDQvdCwYCk7XHJcblxyXG4gICAgICAgICAgICBMdXJlLkNvbmZpcm0oJ9CS0L3QuNC80LDQvdC40LUnLCBg0JLRiyDRgdC+0LHQuNGA0LDQtdGC0LXRgdGMINGD0LTQsNC70LjRgtGMINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyA8c3Ryb25nPiR7dGhpcy5TdGF0ZS5Mb2dpbn08L3N0cm9uZz4uINCf0YDQvtC00L7Qu9C20LjRgtGMP2AsIHtcclxuICAgICAgICAgICAgICAgIE9uQWdyZWU6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgYXBpLkFkbWluX1VzZXJfS2lsbCh0aGlzLkN1cnJlbnRMaWJyYXJ5UmVnaW9uSUQsIHRoaXMuU3RhdGUuSUQsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMgPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TdWNjZXNzKCfQo9GH0LXRgtC90LDRjyDQt9Cw0L/QuNGB0Ywg0YPQtNCw0LvQtdC90LAnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgTGluZUlEID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlEZWxlZ2F0ZSh4PT54LklEID09PSB0aGlzLlN0YXRlLklEKS5MaW5lSUQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlbW92ZShMaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoXCJJRFwiLCAtMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLldhcm4oJ9Cj0YfQtdGC0L3Rg9GOINC30LDQv9C40YHRjCDRg9C00LDQu9C10YLRjCDQvdC1INGD0LTQsNC70L7RgdGMJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENhdGNoOiAoZSk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLldhcm4oJ9Ce0YjQuNCx0LrQsCDRg9C00LDQu9C10L3QuNGPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjycsIGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIE9uQ2FuY2VsOiAoKT0+e31cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh0aGlzLkNvbnRyb2xsZXIuRGF0YS5sZW5ndGggPCAxKVxyXG4gICAgICAgICAgICB0aGlzLkdldFVzZXJMaXN0KCk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuTGlzdFNlbGVjdG9yUm9sZXMgPSBuZXcgTGlzdFNlbGVjdG9yKHtcclxuICAgICAgICAgICAgVGFyZ2V0OiB0aGlzLkNvbnRlbnQsXHJcbiAgICAgICAgICAgIENvbnRyb2w6IHRoaXMuU2VsZWN0KCcudmFsdWUtcm9sZScpLFxyXG4gICAgICAgICAgICBEYXRhOiBTdGF0aWMuUm9sZXMuV2hlcmUocj0+ci5JRCA+IDIgJiYgci5JRCAhPT0gMTQgJiYgci5JRCAhPT0gMTYpLnNvcnQoKGEsYik9PntyZXR1cm4gYS5OYW1lPmIuTmFtZSA/IDE6LTF9KSxcclxuICAgICAgICAgICAgTXVsdGlTZWxlY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIFNlbGVjdGVkOiB0aGlzLlN0YXRlLlJvbGVzLFxyXG4gICAgICAgICAgICBPblNlbGVjdDogKHNlbGVjdGVkKT0+e1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuU3RhdGUuSUQgPCAwKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIGFwaS5BZG1pbl9Vc2VyRWRpdF9Sb2xlcyh0aGlzLkN1cnJlbnRMaWJyYXJ5UmVnaW9uSUQsIHRoaXMuU3RhdGUuSUQsIHNlbGVjdGVkLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcyA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2VzcygnUm9sZXMgQ2hhbmdlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnUm9sZXMnLCBzZWxlY3RlZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIENhdGNoOiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcignUm9sZXMgY2hhbmdpbmcgZXJyb3InKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkxpc3RTZWxlY3RvckxpYnJhcmllcyA9IG5ldyBMaXN0U2VsZWN0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuQ29udGVudCxcclxuICAgICAgICAgICAgQ29udHJvbDogdGhpcy5TZWxlY3QoJy52YWx1ZS1saWJyYXJ5JyksXHJcbiAgICAgICAgICAgIERhdGE6IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5R3JvdXBMaXN0LldoZXJlKGc9PmcuSUQgPT09IHRoaXMuQ3VycmVudExpYnJhcnlSZWdpb25JRCkuRmlyc3RPckRlZmF1bHQoKS5MaWJyYXJ5TGlzdCxcclxuICAgICAgICAgICAgTXVsdGlTZWxlY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIFNlbGVjdGVkOiB0aGlzLlN0YXRlLkxpYnJhcnlJRExpc3QsXHJcbiAgICAgICAgICAgIE9uU2VsZWN0OiAoc2VsZWN0ZWQpPT57XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5TdGF0ZS5JRCA8IDApXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgYXBpLkFkbWluX1VzZXJFZGl0X0xpYnJhcmllcyh0aGlzLkN1cnJlbnRMaWJyYXJ5UmVnaW9uSUQsIHRoaXMuU3RhdGUuSUQsIHNlbGVjdGVkLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcyA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2VzcygnTGlicmFyeUlETGlzdCBDaGFuZ2VkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdMaWJyYXJ5SURMaXN0Jywgc2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBDYXRjaDogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uRXJyb3IoJ0xpYnJhcnlJRExpc3QgY2hhbmdpbmcgZXJyb3InKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkxpc3RTZWxlY3RvckNCUyA9IG5ldyBMaXN0U2VsZWN0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuQ29udGVudCxcclxuICAgICAgICAgICAgQ29udHJvbDogdGhpcy5TZWxlY3QoJy52YWx1ZS1jYnMnKSxcclxuICAgICAgICAgICAgaXNBbGxvd0VtcHR5OiB0cnVlLFxyXG4gICAgICAgICAgICBEYXRhOiBTdGF0aWMuTGlicmFyeVJlZ2lvbnMuV2hlcmUoeD0+THVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlSZWdpb25zLmluZGV4T2YoeC5JRCkgPiAtMSksXHJcbiAgICAgICAgICAgIE11bHRpU2VsZWN0OiB0cnVlLFxyXG4gICAgICAgICAgICBTZWxlY3RlZDogW10sXHJcbiAgICAgICAgICAgIE9uU2VsZWN0OiAoc2VsZWN0ZWQpPT57XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5TdGF0ZS5JRCA8IDApXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgYXBpLkFkbWluX1VzZXJFZGl0X0xpYnJhcnlSZWdpb25zKHRoaXMuQ3VycmVudExpYnJhcnlSZWdpb25JRCwgdGhpcy5TdGF0ZS5JRCwgc2VsZWN0ZWQsIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzID4gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TdWNjZXNzKCdMaWJyYXJ5UmVnaW9uSURMaXN0IENoYW5nZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0xpYnJhcnlSZWdpb25JRExpc3QnLCBzZWxlY3RlZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIENhdGNoOiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcignTGlicmFyeVJlZ2lvbklETGlzdCBjaGFuZ2luZyBlcnJvcicpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uTG9hZERlZmF1bHRSb2xlcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XHJcbiAgICAgICAgICAgIHRoaXMuTG9hZERlZmF1bHRSb2xlcygpO1xyXG4gICAgICAgICAgICB0aGlzLkxpc3RTZWxlY3RvclJvbGVzLkNvbnRleHQuU2VsZWN0ZWQgPSB0aGlzLlByb3RvLkRhdGEuUm9sZXM7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcudXNlci1saXN0X2VsZW1lbnQ6bm90KC5hY3RpdmUpJywgZnVuY3Rpb24gKGUsIHApIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgdiBvZiB0aGlzLkNvbnRyb2xsZXIuRGF0YUl0ZW1zKVxyXG4gICAgICAgICAgICAgICAgdi5ET00uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQocC5MaW5lSUQpO1xyXG4gICAgICAgICAgICB0aGlzLlByZXBhcmVVc2VyKERhdGFJdGVtLkRhdGEuSUQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uQ2hhbmdlUGFzcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XHJcbiAgICAgICAgICAgIHRoaXMuQ2hhbmdlUGFzcygpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uVXNlcktpbGwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLktpbGxVc2VyKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG4iLCJjb25zdCBEID0gcmVxdWlyZSgnLi4vLi4vX2NvbW1vbi9kaWN0aW9uYXJ5Jyk7XHJcblxyXG5sZXQgVXNlclBvc2l0aW9uUHJlc2V0ID0ge307XHJcblVzZXJQb3NpdGlvblByZXNldFtELlVzZXJQb3NpdGlvbi5MaWJyYXJpYW5dID0gW1xyXG4gICAgRC5Sb2xlLkRhaXJ5SW5wdXQsXHJcbiAgICBELlJvbGUuRGFpcnlJbnB1dE1vdmluZ3MsXHJcbiAgICBELlJvbGUuSGVscGRlc2tcclxuXTtcclxuVXNlclBvc2l0aW9uUHJlc2V0W0QuVXNlclBvc2l0aW9uLk1hc3Rlcl0gPSBbXHJcbiAgICBELlJvbGUuRGFpcnlTdW1tYXJ5LFxyXG4gICAgRC5Sb2xlLkRhaXJ5U3VtbWFyeUVkaXQsXHJcbiAgICBELlJvbGUuRGFzaGJvYXJkLFxyXG4gICAgRC5Sb2xlLlBhc3Nwb3J0LFxyXG4gICAgRC5Sb2xlLkhlbHBkZXNrLFxyXG4gICAgRC5Sb2xlLk1ldGVyLFxyXG5dO1xyXG5Vc2VyUG9zaXRpb25QcmVzZXRbRC5Vc2VyUG9zaXRpb24uTWFzdGVyRWxkZXJdID0gW0QuUm9sZS5IZWxwZGVzaywgRC5Sb2xlLlBhc3Nwb3J0LCBELlJvbGUuTWV0ZXIsIEQuUm9sZS5EYXNoYm9hcmQsIEQuUm9sZS5EYWlyeVN1bW1hcnksIEQuUm9sZS5EYWlyeVN1bW1hcnlFZGl0XTtcclxuVXNlclBvc2l0aW9uUHJlc2V0W0QuVXNlclBvc2l0aW9uLk1vZGVyYXRvcl0gPSBbXHJcbiAgICBELlJvbGUuSGVscGRlc2ssXHJcbiAgICBELlJvbGUuUGFzc3BvcnQsXHJcbiAgICBELlJvbGUuTWV0ZXIsXHJcbiAgICBELlJvbGUuRGFzaGJvYXJkLFxyXG4gICAgRC5Sb2xlLkRhaXJ5U3VtbWFyeSxcclxuICAgIEQuUm9sZS5EYWlyeVN1bW1hcnlFZGl0LFxyXG4gICAgRC5Sb2xlLk1vZGVyYXRvckNCUyxcclxuXTtcclxuVXNlclBvc2l0aW9uUHJlc2V0W0QuVXNlclBvc2l0aW9uLlJlZ2lvbk1vZGVyYXRvcl0gPSBbXHJcbiAgICBELlJvbGUuSGVscGRlc2ssXHJcbiAgICBELlJvbGUuUGFzc3BvcnQsXHJcbiAgICBELlJvbGUuTWV0ZXIsXHJcbiAgICBELlJvbGUuRGFzaGJvYXJkLFxyXG4gICAgRC5Sb2xlLkRhaXJ5U3VtbWFyeSxcclxuICAgIEQuUm9sZS5EYWlyeVN1bW1hcnlFZGl0LFxyXG4gICAgRC5Sb2xlLk1vZGVyYXRvckNCUyxcclxuXTtcclxuVXNlclBvc2l0aW9uUHJlc2V0W0QuVXNlclBvc2l0aW9uLlJlZ2lvbkFkbWluXSA9IFtcclxuICAgIEQuUm9sZS5IZWxwZGVzayxcclxuICAgIEQuUm9sZS5QYXNzcG9ydCxcclxuICAgIEQuUm9sZS5NZXRlcixcclxuICAgIEQuUm9sZS5EYXNoYm9hcmQsXHJcbiAgICBELlJvbGUuRGFpcnlTdW1tYXJ5LFxyXG4gICAgRC5Sb2xlLkRhaXJ5U3VtbWFyeUVkaXQsXHJcbiAgICBELlJvbGUuTW9kZXJhdG9yQ0JTLFxyXG4gICAgRC5Sb2xlLkFkbWluQ0JTLFxyXG5dO1xyXG5Vc2VyUG9zaXRpb25QcmVzZXRbRC5Vc2VyUG9zaXRpb24uQWRtaW5dID0gW1xyXG4gICAgRC5Sb2xlLkhlbHBkZXNrLFxyXG4gICAgRC5Sb2xlLlBhc3Nwb3J0LFxyXG4gICAgRC5Sb2xlLk1ldGVyLFxyXG4gICAgRC5Sb2xlLkRhc2hib2FyZCxcclxuICAgIEQuUm9sZS5EYWlyeVN1bW1hcnksXHJcbiAgICBELlJvbGUuRGFpcnlTdW1tYXJ5RWRpdCxcclxuICAgIEQuUm9sZS5Nb2RlcmF0b3JDQlMsXHJcbiAgICBELlJvbGUuQWRtaW5DQlMsXHJcbiAgICBELlJvbGUuQWRtaW4sXHJcbiAgICBELlJvbGUuVGVzdGVyUGFuZWwsXHJcbl07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFVzZXJQb3NpdGlvblByZXNldDsiLCJcclxuRGFzaC5EYXNoTWFpbiA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgLy9EaXNhYmxlZDogdHJ1ZSxcclxuICAgIE5hbWU6ICdEYXNoTWFpbicsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ2Rhc2gtY29udGVudCcsXHJcbiAgICBWaXNpYmxlOiB0cnVlLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1kYXNoLW1haW4nXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLkRhc2hib2FyZF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgXHJcbjxkaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZGlhcnktYnJlYWQgbC1yb3dcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibGkgbC1yb3cgbC1mbGV4YS1jZW50ZXIgZmxleC0xMDBcIj5cclxuICAgICAgICAgICAgPGRpdj7Qn9C+0LTRgNCw0LfQtNC10LvQtdC90LjQtTogJm5ic3A7Jm5ic3A7PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTEwMCBsaWJyYXJ5LXRyZWUtY29udHJvbCBzdHJvbmdcIj5fXzwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICBcclxuICAgIDxkaXYgY2xhc3M9XCJwZXJpb2QtcGlja2VyXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInBlcmlvZHNcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBlciB0b2RheSBzZWxlY3RlZFwiPtCh0LXQs9C+0LTQvdGPPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZXIgeWVzdGVyZGF5XCI+0JLRh9C10YDQsDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGVyIHdlZWtcIj7QndC10LTQtdC70Y88L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBlciBtb250aFwiPtCc0LXRgdGP0YY8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBlciBxdWFydGVyXCI+0JrQstCw0YDRgtCw0Ls8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBlciB5ZWFyXCI+0JPQvtC0PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInBlciBjYWxlbmRhci1wZXJpb2RcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImljb25cIj4mIzEyODE5ODs8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVzXCI+PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJwaWVzXCI+XHJcbiAgICBcclxuICAgICAgICA8ZGl2IGNsYXNzPVwicGllLXZpc2l0b3JzLXdyYXBcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LWhlYWRlclwiPtCf0L7RgdC10YnQsNC10LzQvtGB0YLRjDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGllLXZpc2l0b3JzXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGllIHZpc2l0b3JzLWNoYXJ0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQtc3Vic2NyaXB0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Yi1pY29uIHBhcmFtLWljb25cIj48c3Bhbj57e1Zpc2l0b3JzLlN1bX19PC9zcGFuPjxzcGFuPnt7RGl2aWRlcn19PC9zcGFuPjxzcGFuPnt7VmlzaXRvcnMuVGFyZ2V0fX08L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Yi1jYXB0aW9uXCI+0LLRi9C/0L7Qu9C90LXQvdC40LU8YnI+0LPQvtGB0LfQsNC00LDQvdC40Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtZXRlcnNcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLXRleHRcIj4mbmJzcDs8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGVyY2VudC0xMjNcIiBkYXRhLXR5cGU9XCJWaXNpdG9yc1wiPjxzcGFuIGNsYXNzPVwibnVtYmVycyBzZWxlY3RlZFwiPjEyMzwvc3Bhbj4gSSA8c3BhbiBjbGFzcz1cInBlcmNlbnRzXCI+JTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInYtMFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG5ldy1yZWdcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7QstC90L7QstGMINC30LDQv9C40YHQsNCy0YjQuNC10YHRjzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1Zpc2l0b3JzLk5ld319PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwidi0xXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgc3RhdGlvbmFyeVwiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtGB0YLQsNGG0LjQvtC90LDRgDwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1Zpc2l0b3JzLlN0YXRpb25hcnl9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInYtMlwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGV2ZW50c1wiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC80LXRgNC+0L/RgNC40Y/RgtC40Y88L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLXZhbHVlXCI+e3tWaXNpdG9ycy5FdmVudHN9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInYtM1wiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGNsdWJzXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0LrQu9GD0LHRizwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1Zpc2l0b3JzLkNsdWJzfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInBpZS1yZWdpc3RlcnMtZG91YmxlXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaGFydC1oZWFkZXJcIj7Ql9Cw0L/QuNGB0LDQstGI0LjQtdGB0Y88L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZS1yZWdpc3RlcnMtZG91YmxlLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwaWUtcmVnaXN0ZXJzLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGllLXJlZ2lzdGVyc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGllIHNvY2lhbC1ncm91cHMtY2hhcnRcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LXN1YnNjcmlwdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Yi1pY29uIHBhcmFtLWljb25cIj48c3Bhbj57e1JlZ2lzdGVycy5TdW19fTwvc3Bhbj48c3Bhbj57e0RpdmlkZXJ9fTwvc3Bhbj48c3Bhbj57e1JlZ2lzdGVycy5UYXJnZXR9fTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWItY2FwdGlvblwiPtCy0YvQv9C+0LvQvdC10L3QuNC1PGJyPtCz0L7RgdC30LDQtNCw0L3QuNGPPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbWV0ZXJzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXItdGV4dFwiPtCh0L7RhtC40LDQu9GM0L3Ri9C1INCz0YDRg9C/0L/RizwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBlcmNlbnQtMTIzXCIgZGF0YS10eXBlPVwiUmVnaXN0ZXJzXCI+PHNwYW4gY2xhc3M9XCJudW1iZXJzIHNlbGVjdGVkXCI+MTIzPC9zcGFuPiBJIDxzcGFuIGNsYXNzPVwicGVyY2VudHNcIj4lPC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInNnLTBcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBwZW5zaW9uZXJcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7Qv9C10L3RgdC40L7QvdC10YDRizwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1JlZ2lzdGVycy5wZW5zaW9uZXJ9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic2ctMVwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGVtcGxveWVlXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0YHQu9GD0LbQsNGJ0LjQtTwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1JlZ2lzdGVycy5lbXBsb3llZX19PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIiBkYXRhLXR5cGU9XCJzZy0yXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgc3R1ZGVudHNcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7RgdGC0YPQtNC10L3RgtGLPC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7UmVnaXN0ZXJzLnN0dWRlbnRzfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInNnLTNcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBzY2hvb2xzXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0YjQutC+0LvRjNC90LjQutC4PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7UmVnaXN0ZXJzLnNjaG9vbHN9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic2ctNFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIHVuZGVyLXNjaG9vbFwiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC00L7RiNC60L7Qu9GM0L3QuNC60Lg8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLXZhbHVlXCI+e3tSZWdpc3RlcnMudW5kZXJfc2Nob29sfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInNnLTVcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayByZGNoXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0YDQtNGHPC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7UmVnaXN0ZXJzLnJkY2h9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic2ctNlwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG90aGVyc1wiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC/0YDQvtGH0LjQtTwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1JlZ2lzdGVycy5vdGhlcnN9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgYWxsLXJlZ2lzdGVyXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0LLRgdC10LPQvjwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1JlZ2lzdGVycy5TdW1QZXJjfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZS1yZWdpc3RlcnMgcm90b3JcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2VuZGVyLWFnZS1jaGFydC13cmFwIHJvdG9yLWZsaXAgY3Vycl9zaWRlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwicGllIGdlbmRlci1hZ2UtY2hhcnRcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtZXRlcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLXRleHQgZG91YmxlLWNoYXJ0XCI+0J/QvtC70L7QstC+0LfRgNCw0YHRgtC90LDRjyDRgdGC0YDRg9C60YLRg9GA0LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGVyY2VudC0xMjNcIiBkYXRhLXR5cGU9XCJHZW5kZXJBZ2VcIj48c3BhbiBjbGFzcz1cIm51bWJlcnMgc2VsZWN0ZWRcIj4xMjM8L3NwYW4+IEkgPHNwYW4gY2xhc3M9XCJwZXJjZW50c1wiPiU8L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cImdlbmRlci1hZ2UtdGFibGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cImhlYWRcIj48dGQgY2xhc3M9XCJuby1ib3JkZXJcIj48L3RkPjx0ZD7QltC10L3RidC40L3RizwvdGQ+PHRkPtCc0YPQttGH0LjQvdGLPC90ZD48dGQ+0JLRgdC10LPQvjwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjMwKzwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJnYS0wXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS53b21lbl8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJnYS0zXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgbWVuLTMwXCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2UubWVuXzMwfX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e0dlbmRlckFnZS5fMzB9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xNC0zMDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJnYS0xXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tMTQtMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS53b21lbl8xNF8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJnYS00XCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgbWVuLTE0LTMwXCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2UubWVuXzE0XzMwfX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e0dlbmRlckFnZS5fMTRfMzB9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4wLTE0PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiIGRhdGEtdHlwZT1cImdhLTJcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayB3b21lbi0xNFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLndvbWVuXzE0fX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiIGRhdGEtdHlwZT1cImdhLTVcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBtZW4tMTRcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS5tZW5fMTR9fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7R2VuZGVyQWdlLl8xNH19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPtCS0YHQtdCz0L48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwic2Vjb25kXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tYWxsXCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2Uud29tZW59fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwic2Vjb25kXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgbWVuLWFsbFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLm1lbn19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJuby1ib3JkZXJcIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2VuZGVyLWFnZS1jaGFydC0yLXdyYXAgcm90b3ItZmxpcCBuZXh0IG5leHRfc2lkZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInBpZSBnZW5kZXItYWdlLWNoYXJ0LTJcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtZXRlcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLXRleHQgZG91YmxlLWNoYXJ0XCI+0J/QvtC70L7QstC+0LfRgNCw0YHRgtC90LDRjyDRgdGC0YDRg9C60YLRg9GA0LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGVyY2VudC0xMjNcIiBkYXRhLXR5cGU9XCJHZW5kZXJBZ2VcIj48c3BhbiBjbGFzcz1cIm51bWJlcnMgc2VsZWN0ZWRcIj4xMjM8L3NwYW4+IEkgPHNwYW4gY2xhc3M9XCJwZXJjZW50c1wiPiU8L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cImdlbmRlci1hZ2UtdGFibGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cImhlYWRcIj48dGQgY2xhc3M9XCJuby1ib3JkZXJcIj48L3RkPjx0ZD4wIC0gMTQ8L3RkPjx0ZD4xNCAtIDMwPC90ZD48dGQ+MzArPC90ZD48dGQ+0JLRgdC10LPQvjwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPtCW0LXQvdGJ0LjQvdGLPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiIGRhdGEtdHlwZT1cImFnLTRcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayB3b21lbi0xNFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLndvbWVuXzE0fX08L3NwYW4+PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJhZy0yXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tMTQtMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS53b21lbl8xNF8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJhZy0wXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS53b21lbl8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tHZW5kZXJBZ2Uud29tZW59fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD7QnNGD0LbRh9C40L3RizwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJhZy01XCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgbWVuLTE0XCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2UubWVuXzE0fX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiIGRhdGEtdHlwZT1cImFnLTNcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBtZW4tMTQtMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS5tZW5fMTRfMzB9fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwic2Vjb25kXCIgZGF0YS10eXBlPVwiYWctMVwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG1lbi0zMFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLm1lbl8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tHZW5kZXJBZ2UubWVufX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+0JLRgdC10LPQvjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBhbGwtMTRcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS5fMTR9fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwic2Vjb25kXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgYWxsLTE0LTMwXCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2UuXzE0XzMwfX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGFsbC0zMFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLl8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJuby1ib3JkZXJcIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBcclxuICAgICAgICA8ZGl2IGNsYXNzPVwicGllLWJvb2stZ2l2aW5nLXdyYXBcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LWhlYWRlclwiPtCa0L3QuNCz0L7QstGL0LTQsNGH0LA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZS1ib29rLWdpdmluZ1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZSBib29rLWdpdmluZy1jaGFydFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LXN1YnNjcmlwdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWItaWNvbiBwYXJhbS1pY29uXCI+PHNwYW4+e3tCb29rR2l2aW5nLlN1bX19PC9zcGFuPjxzcGFuPnt7RGl2aWRlcn19PC9zcGFuPjxzcGFuPnt7Qm9va0dpdmluZy5UYXJnZXR9fTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ViLWNhcHRpb25cIj7QstGL0L/QvtC70L3QtdC90LjQtTxicj7Qs9C+0YHQt9Cw0LTQsNC90LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFyYW1ldGVyc1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtLWhlYWRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXItdGV4dFwiPtCa0LDRgtC10LPQvtGA0LjQuDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZXJjZW50LTEyM1wiIGRhdGEtdHlwZT1cIkJvb2tHaXZpbmdcIj48c3BhbiBjbGFzcz1cIm51bWJlcnMgc2VsZWN0ZWRcIj4xMjM8L3NwYW4+IEkgPHNwYW4gY2xhc3M9XCJwZXJjZW50c1wiPiU8L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwiYmctMFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG5ldy1yZWdcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7QutC90LjQs9C4INC4INCx0YDQvtGI0Y7RgNGLPC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7Qm9va0dpdmluZy5Cb29rc319PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwiYmctMVwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIHN0YXRpb25hcnlcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7QtNC+0LrRg9C80LXQvdGC0Ysg0Lgg0LrQvtC/0LjQuDwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e0Jvb2tHaXZpbmcuRG9jc0NvcGllc319PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwiYmctMlwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGV2ZW50c1wiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtGB0L/RgNCw0LLQutC4INC4INC60L7QvdGB0YPQu9GM0YLQsNGG0LjQuDwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e0Jvb2tHaXZpbmcuQ29uc3VsdHN9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cImJnLTNcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBjbHVic1wiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC/0YDQvtGH0LXQtTwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e0Jvb2tHaXZpbmcuT3RoZXJ9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBcclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImRhaWx5LWNoYXJ0XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LWhlYWRlclwiPjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjaGFydC13cmFwXCI+PC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YCxcclxuICAgIC8vIENvbnRyb2xsZXI6e1xyXG4gICAgLy8gICAgIFRhcmdldDogJy5saWItbGlzdCcsXHJcbiAgICAvLyAgICAgTGlzdEVsZW1lbnQ6IGA8b3B0aW9uIHZhbHVlPVwie3tJRH19XCI+e3tOYW1lfX08L29wdGlvbj5gXHJcbiAgICAvLyB9LFxyXG4gICAgUHJvdG86e1xyXG4gICAgICAgIFZpc2l0b3JzOiB7XHJcbiAgICAgICAgICAgIE5ldzogMTAsXHJcbiAgICAgICAgICAgIFN0YXRpb25hcnk6IDIwLFxyXG4gICAgICAgICAgICBFdmVudHM6IDMwLFxyXG4gICAgICAgICAgICBDbHViczogNDAsXHJcbiAgICAgICAgICAgIFRhcmdldDogMzAwLFxyXG4gICAgICAgICAgICBTdW06IGZ1bmN0aW9uKCkgeyBsZXQgcyA9IDA7IGZvciAobGV0IGsgaW4gdGhpcykgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkoaykgJiYgayAhPT0gJ1N1bScgJiYgayAhPT0gJ1RhcmdldCcpIHMgKz0gdGhpc1trXTsgcmV0dXJuIHM7IH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIFJlZ2lzdGVyczoge1xyXG4gICAgICAgICAgICBwZW5zaW9uZXI6IDUsXHJcbiAgICAgICAgICAgIGVtcGxveWVlOiAxMCxcclxuICAgICAgICAgICAgc3R1ZGVudHM6IDE1LFxyXG4gICAgICAgICAgICBzY2hvb2xzOiAyMCxcclxuICAgICAgICAgICAgdW5kZXJfc2Nob29sOiAxNSxcclxuICAgICAgICAgICAgcmRjaDogMjAsXHJcbiAgICAgICAgICAgIG90aGVyczogMTUsXHJcbiAgICAgICAgICAgIFRhcmdldDogNjAwLFxyXG4gICAgICAgICAgICBTdW06IGZ1bmN0aW9uKCkgeyBsZXQgcyA9IDA7IGZvciAobGV0IGsgaW4gdGhpcykgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkoaykgJiYgayAhPT0gJ1N1bScgJiYgayAhPT0gJ1RhcmdldCcpIHMgKz0gdGhpc1trXTsgcmV0dXJuIHM7IH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIEdlbmRlckFnZToge1xyXG4gICAgICAgICAgICB3b21lbl8zMDogMTUsXHJcbiAgICAgICAgICAgIHdvbWVuXzE0XzMwOiAyNSxcclxuICAgICAgICAgICAgd29tZW5fMTQ6IDM1LFxyXG4gICAgICAgICAgICBtZW5fMzA6IDI4LFxyXG4gICAgICAgICAgICBtZW5fMTRfMzA6IDQxLFxyXG4gICAgICAgICAgICBtZW5fMTQ6IDIzLFxyXG4gICAgICAgICAgICBTdW06IGZ1bmN0aW9uKCkgeyBsZXQgcyA9IDA7IGZvciAobGV0IGsgaW4gdGhpcykgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkoaykpIGsgIT09ICdTdW0nID8gcyArPSB0aGlzW2tdIDogcyArPSAwOyByZXR1cm4gczsgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgQm9va0dpdmluZzoge1xyXG4gICAgICAgICAgICBCb29rczogMTEsXHJcbiAgICAgICAgICAgIERvY3NDb3BpZXM6IDIyLFxyXG4gICAgICAgICAgICBDb25zdWx0czogMzMsXHJcbiAgICAgICAgICAgIE90aGVyOiA0NCxcclxuICAgICAgICAgICAgVGFyZ2V0OiAzMDAsXHJcbiAgICAgICAgICAgIFN1bTogZnVuY3Rpb24oKSB7IGxldCBzID0gMDsgZm9yIChsZXQgayBpbiB0aGlzKSBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eShrKSAmJiBrICE9PSAnU3VtJyAmJiBrICE9PSAnVGFyZ2V0JykgcyArPSB0aGlzW2tdOyByZXR1cm4gczsgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgUGVyY2VudDoge1xyXG4gICAgICAgICAgICBWaXNpdG9yczogZmFsc2UsXHJcbiAgICAgICAgICAgIFJlZ2lzdGVyczogZmFsc2UsXHJcbiAgICAgICAgICAgIEdlbmRlckFnZTogZmFsc2UsXHJcbiAgICAgICAgICAgIEJvb2tHaXZpbmc6IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICAnVmlzaXRvcnMuTmV3JzogKHgsIHApID0+IHAuUGVyY2VudC5WaXNpdG9ycyA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuVmlzaXRvcnMuU3VtKCkgKiAxMDApKSArICcgJScgOiB4LCAvLyDRhNGD0L3QutGG0LjRjyDQtNC70Y8g0L/QvtGB0LXRidCw0LXQvNC+0YHRgtC4XHJcbiAgICAgICAgJ1Zpc2l0b3JzLlN0YXRpb25hcnknOiAoeCwgcCkgPT4gcC5QZXJjZW50LlZpc2l0b3JzID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5WaXNpdG9ycy5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ1Zpc2l0b3JzLkV2ZW50cyc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuVmlzaXRvcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlZpc2l0b3JzLlN1bSgpICogMTAwKSkgKyAnICUnIDogeCxcclxuICAgICAgICAnVmlzaXRvcnMuQ2x1YnMnOiAoeCwgcCkgPT4gcC5QZXJjZW50LlZpc2l0b3JzID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5WaXNpdG9ycy5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ1Zpc2l0b3JzLlN1bSc6ICh4LCBwKSA9PiBwLlZpc2l0b3JzLlN1bSgpLFxyXG5cclxuICAgICAgICAnUmVnaXN0ZXJzLnBlbnNpb25lcic6ICh4LCBwKSA9PiBwLlBlcmNlbnQuUmVnaXN0ZXJzID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5SZWdpc3RlcnMuU3VtKCkgKiAxMDApKSsgJyAlJyA6IHgsIC8vINGE0YPQvdC60YbQuNGPINC00LvRjyDQoNC10LPQuNGB0YLRgNCw0YbQuNC4XHJcbiAgICAgICAgJ1JlZ2lzdGVycy5lbXBsb3llZSc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuUmVnaXN0ZXJzID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5SZWdpc3RlcnMuU3VtKCkgKiAxMDApKSsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ1JlZ2lzdGVycy5zdHVkZW50cyc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuUmVnaXN0ZXJzID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5SZWdpc3RlcnMuU3VtKCkgKiAxMDApKSsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ1JlZ2lzdGVycy5zY2hvb2xzJzogKHgsIHApID0+IHAuUGVyY2VudC5SZWdpc3RlcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlJlZ2lzdGVycy5TdW0oKSAqIDEwMCkpKyAnICUnIDogeCxcclxuICAgICAgICAnUmVnaXN0ZXJzLnVuZGVyX3NjaG9vbCc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuUmVnaXN0ZXJzID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5SZWdpc3RlcnMuU3VtKCkgKiAxMDApKSsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ1JlZ2lzdGVycy5yZGNoJzogKHgsIHApID0+IHAuUGVyY2VudC5SZWdpc3RlcnMgPyAoeCA9PT0gMCA/IDAgOiAgTWF0aC5yb3VuZCh4IC8gcC5SZWdpc3RlcnMuU3VtKCkgKiAxMDApKSArICcgJScgOiB4LFxyXG4gICAgICAgICdSZWdpc3RlcnMub3RoZXJzJzogKHgsIHApID0+IHAuUGVyY2VudC5SZWdpc3RlcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlJlZ2lzdGVycy5TdW0oKSAqIDEwMCkpKyAnICUnIDogeCxcclxuICAgICAgICAnUmVnaXN0ZXJzLlN1bSc6ICh4LCBwKSA9PiBwLlJlZ2lzdGVycy5TdW0oKSxcclxuICAgICAgICAnUmVnaXN0ZXJzLlN1bVBlcmMnOiAoeCwgcCkgPT4gcC5QZXJjZW50LlJlZ2lzdGVycyA/ICcxMDAgJScgOiBwLlJlZ2lzdGVycy5TdW0oKSxcclxuXHJcbiAgICAgICAgJ0dlbmRlckFnZS53b21lbl8xNF8zMCc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuR2VuZGVyQWdlID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5HZW5kZXJBZ2UuU3VtKCkgKiAxMDApKSArICcgJScgOiB4LCAvLyDRhNGD0L3QutGG0LjRjyDQtNC70Y8g0L/QvtC70L7QstC+0LfRgNCw0YHRgtC90L7QuSDRgdGC0YDRg9C60YLRg9GA0YtcclxuICAgICAgICAnR2VuZGVyQWdlLndvbWVuXzE0JzogKHgsIHApID0+IHAuUGVyY2VudC5HZW5kZXJBZ2UgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLkdlbmRlckFnZS5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ0dlbmRlckFnZS5tZW5fMzAnOiAoeCwgcCkgPT4gcC5QZXJjZW50LkdlbmRlckFnZSA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuR2VuZGVyQWdlLlN1bSgpICogMTAwKSkgKyAnICUnIDogeCxcclxuICAgICAgICAnR2VuZGVyQWdlLm1lbl8xNF8zMCc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuR2VuZGVyQWdlID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5HZW5kZXJBZ2UuU3VtKCkgKiAxMDApKSArICcgJScgOiB4LFxyXG4gICAgICAgICdHZW5kZXJBZ2UubWVuXzE0JzogKHgsIHApID0+IHAuUGVyY2VudC5HZW5kZXJBZ2UgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLkdlbmRlckFnZS5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ0dlbmRlckFnZS53b21lbl8zMCc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuR2VuZGVyQWdlID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5HZW5kZXJBZ2UuU3VtKCkgKiAxMDApKSArICcgJScgOiB4LFxyXG4gICAgICAgICdHZW5kZXJBZ2UuXzE0JzogKHgsIHAsIG4pID0+IChuID0gKHAuR2VuZGVyQWdlLm1lbl8xNCArIHAuR2VuZGVyQWdlLndvbWVuXzE0KSwgcC5QZXJjZW50LkdlbmRlckFnZSA/ICggbiA9PT0gMCA/IDAgOk1hdGgucm91bmQobiAvIHAuR2VuZGVyQWdlLlN1bSgpICogMTAwKSkgKyAnICUnIDogbiksXHJcbiAgICAgICAgJ0dlbmRlckFnZS5fMTRfMzAnOiAoeCwgcCwgbikgPT4gKG4gPSAocC5HZW5kZXJBZ2UubWVuXzE0XzMwICsgcC5HZW5kZXJBZ2Uud29tZW5fMTRfMzApLCBwLlBlcmNlbnQuR2VuZGVyQWdlID8gKCBuID09PSAwID8gMCA6TWF0aC5yb3VuZChuIC8gcC5HZW5kZXJBZ2UuU3VtKCkgKiAxMDApKSArICcgJScgOiBuKSxcclxuICAgICAgICAnR2VuZGVyQWdlLl8zMCc6ICh4LCBwLCBuKSA9PiAobiA9IChwLkdlbmRlckFnZS5tZW5fMzAgKyBwLkdlbmRlckFnZS53b21lbl8zMCksIHAuUGVyY2VudC5HZW5kZXJBZ2UgPyAoIG4gPT09IDAgPyAwIDpNYXRoLnJvdW5kKG4gLyBwLkdlbmRlckFnZS5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IG4pLFxyXG4gICAgICAgICdHZW5kZXJBZ2UubWVuJzogKHgsIHAsIG4pID0+IChuID0gKHAuR2VuZGVyQWdlLm1lbl8xNCArIHAuR2VuZGVyQWdlLm1lbl8xNF8zMCArIHAuR2VuZGVyQWdlLm1lbl8zMCksIHAuUGVyY2VudC5HZW5kZXJBZ2UgPyAoIG4gPT09IDAgPyAwIDpNYXRoLnJvdW5kKG4gLyBwLkdlbmRlckFnZS5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IG4pLFxyXG4gICAgICAgICdHZW5kZXJBZ2Uud29tZW4nOiAoeCwgcCwgbikgPT4gKG4gPSAocC5HZW5kZXJBZ2Uud29tZW5fMTQgKyBwLkdlbmRlckFnZS53b21lbl8xNF8zMCArIHAuR2VuZGVyQWdlLndvbWVuXzMwKSwgcC5QZXJjZW50LkdlbmRlckFnZSA/ICggbiA9PT0gMCA/IDAgOk1hdGgucm91bmQobiAvIHAuR2VuZGVyQWdlLlN1bSgpICogMTAwKSkgKyAnICUnIDogbiksXHJcblxyXG4gICAgICAgICdCb29rR2l2aW5nLkJvb2tzJzogKHgsIHApID0+IHAuUGVyY2VudC5Cb29rR2l2aW5nID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5Cb29rR2l2aW5nLlN1bSgpICogMTAwKSkrICcgJScgOiB4LCAvLyDRhNGD0L3QutGG0LjRjyDQtNC70Y8g0LrQvdC40LPQvtCy0YvQtNCw0YfQuFxyXG4gICAgICAgICdCb29rR2l2aW5nLkRvY3NDb3BpZXMnOiAoeCwgcCkgPT4gcC5QZXJjZW50LkJvb2tHaXZpbmcgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLkJvb2tHaXZpbmcuU3VtKCkgKiAxMDApKSsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ0Jvb2tHaXZpbmcuQ29uc3VsdHMnOiAoeCwgcCkgPT4gcC5QZXJjZW50LkJvb2tHaXZpbmcgPyAoeCA9PT0gMCA/IDAgOiAgTWF0aC5yb3VuZCh4IC8gcC5Cb29rR2l2aW5nLlN1bSgpICogMTAwKSkgKyAnICUnIDogeCxcclxuICAgICAgICAnQm9va0dpdmluZy5PdGhlcic6ICh4LCBwKSA9PiBwLlBlcmNlbnQuQm9va0dpdmluZyA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuQm9va0dpdmluZy5TdW0oKSAqIDEwMCkpKyAnICUnIDogeCxcclxuICAgICAgICAnQm9va0dpdmluZy5TdW0nOiAoeCwgcCkgPT4gcC5Cb29rR2l2aW5nLlN1bSgpLFxyXG4gICAgICAgICdEaXZpZGVyJzogKHgsIHApID0+IChwLkJvb2tHaXZpbmcuVGFyZ2V0ID4gOTk5OSB8fCBwLlJlZ2lzdGVycy5UYXJnZXQgPiA5OTk5IHx8IHAuVmlzaXRvcnMuVGFyZ2V0ID4gOTk5OSkgPyBcIjxkaXYgc3R5bGU9J2JvcmRlci10b3A6IDJweCBzb2xpZCBibGFjazsnPjwvZGl2PlwiIDogJy8nXHJcbiAgICB9LFxyXG4gICAgR2V0U2V0OiB7XHJcbiAgICAgICAgZ2V0IEN1cnJlbnRMaWJyYXJpZXMoKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5SURMaXN0U2VsZWN0ZWQ7XHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGxldCBwID0gdGhpcy5Qcm90by5EYXRhO1xyXG4gICAgICAgIHRoaXMuR2V0Q2hhcnRPcHRpb25zID0gZnVuY3Rpb24gKHRhcmdldCwgc2VyaWVzKSB7XHJcbiAgICAgICAgICAgIGxldCByZXMgPSB7XHJcbiAgICAgICAgICAgICAgICBUYXJnZXQ6IHRhcmdldCxcclxuICAgICAgICAgICAgICAgIFR5cGU6ICdwaWUnLFxyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiB7VmlzaWJsZTogZmFsc2V9LFxyXG4gICAgICAgICAgICAgICAgTGVnZW5kOiB7VmlzaWJsZTogZmFsc2V9LFxyXG4gICAgICAgICAgICAgICAgU2VyaWVzOiBbIF0sXHJcbiAgICAgICAgICAgICAgICBHcmlkOiB7VmlzaWJsZTogZmFsc2UsfSxcclxuICAgICAgICAgICAgICAgIFRvb2x0aXA6IHtcclxuICAgICAgICAgICAgICAgICAgICBGb3JtYXQ6IChUaXApID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHN1bSA9IFRpcC5FcGlzb2RlLkRhdGEucmVkdWNlKChhLCBiKSA9PiBhICsgYik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwZXJjID0gTWF0aC5mbG9vcihzdW0gPT09IDAgPyAwIDogKFRpcC5WYWx1ZSAvIHN1bSkgKiAxMDAwMCkgLyAxMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBgPGRpdiBjbGFzcz1cInRpcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXAtYmdcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLXZhbHVlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93IGwtZmxleGEtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXAtaWNvblwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogJHtUaXAuQ29sb3J9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXAtbGFiZWxcIj4ke1RpcC5OYW1lfTogJHtUaXAuVmFsdWV9ICgke3BlcmN9JSk8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBBeGlzWToge1Zpc2libGU6IGZhbHNlfVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBmb3IgKGxldCBkIG9mIHNlcmllcykge1xyXG4gICAgICAgICAgICAgICAgbGV0IGUgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGFiZWxzOiB7RGF0YTogZC5MYWJlbHN9LFxyXG4gICAgICAgICAgICAgICAgICAgIERhdGE6IGQuRGF0YSxcclxuICAgICAgICAgICAgICAgICAgICBDb2xvcnM6IGQuQ29sb3JzLFxyXG4gICAgICAgICAgICAgICAgICAgIFR5cGU6IGQuVHlwZSA/IGQuVHlwZSA6ICdyaW5nJyxcclxuICAgICAgICAgICAgICAgICAgICBBbmdsZVN0YXJ0OiAtOTBcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBpZiAoZC5XaWR0aCkgZS5XaWR0aCA9IGQuV2lkdGg7XHJcbiAgICAgICAgICAgICAgICBpZiAoZC5NYXJnaW4pIGUuTWFyZ2luID0gZC5NYXJnaW47XHJcbiAgICAgICAgICAgICAgICByZXMuU2VyaWVzLnB1c2goZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHJlcztcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hhcnRWaXNpdG9ycyA9IG5ldyBMdXJlLkNoYXJ0KHRoaXMuR2V0Q2hhcnRPcHRpb25zKFxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLnBpZS52aXNpdG9ycy1jaGFydCcpLFxyXG4gICAgICAgICAgICBbe1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbJ9Cy0L3QvtCy0Ywg0LfQsNC/0LjRgdCw0LLRiNC40LXRgdGPJywgJ9GB0YLQsNGG0LjQvtC90LDRgCcsICfQvNC10YDQvtC/0YDQuNGP0YLQuNGPJywgJ9C60LvRg9Cx0YsnXSxcclxuICAgICAgICAgICAgICAgIERhdGE6IFtwLlZpc2l0b3JzLk5ldywgcC5WaXNpdG9ycy5TdGF0aW9uYXJ5LCBwLlZpc2l0b3JzLkV2ZW50cywgcC5WaXNpdG9ycy5DbHVic10sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6IFsnIzQxNkU3NScsICcjNzlDRERCJywgJyM3MDgyODQnLCAnIzUxQTJBOCddLFxyXG4gICAgICAgICAgICAgICAgV2lkdGg6IDMyXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIExhYmVsczogW1wi0J/QvtGB0LXRgtC40LvQuFwiLCBcItCe0YHRgtCw0LvQvtGB0YxcIl0sXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBbcC5WaXNpdG9ycy5TdW0oKSwgcC5WaXNpdG9ycy5UYXJnZXQgLSBwLlZpc2l0b3JzLlN1bSgpXSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogW1wiIzVEQTg1RFwiLCBcIiM0QTg0NTNcIl0sXHJcbiAgICAgICAgICAgICAgICBXaWR0aDogMjIsXHJcbiAgICAgICAgICAgICAgICBNYXJnaW46IDNcclxuICAgICAgICAgICAgfV1cclxuICAgICAgICApKTtcclxuICAgICAgICB0aGlzLkNoYXJ0VmlzaXRvcnMuTG9hZCA9IG5ldyBMdXJlLkxvYWQoe1RhcmdldDogdGhpcy5DaGFydFZpc2l0b3JzLlRhcmdldH0pO1xyXG5cclxuICAgICAgICAvLyDQmtC90LjQs9C+0LLRi9C00LDRh9CwXHJcbiAgICAgICAgdGhpcy5DaGFydEJvb2tHaXZpbmcgPSBuZXcgTHVyZS5DaGFydCh0aGlzLkdldENoYXJ0T3B0aW9ucyhcclxuICAgICAgICAgICAgdGhpcy5TZWxlY3QoJy5waWUuYm9vay1naXZpbmctY2hhcnQnKSxcclxuICAgICAgICAgICAgW3tcclxuICAgICAgICAgICAgICAgIExhYmVsczogWyfQutC90LjQs9C4INC4INCx0YDQvtGI0Y7RgNGLJywgJ9C00L7QutGD0LzQtdC90YLRiyDQuCDQutC+0L/QuNC4JywgJ9GB0L/RgNCw0LLQutC4INC4INC60L7QvdGB0YPQu9GM0YLQsNGG0LjQuCcsICfQv9GA0L7Rh9C10LUnXSxcclxuICAgICAgICAgICAgICAgIERhdGE6IFtwLkJvb2tHaXZpbmcuQm9va3MsIHAuQm9va0dpdmluZy5Eb2NzQ29waWVzLCBwLkJvb2tHaXZpbmcuQ29uc3VsdHMsIHAuQm9va0dpdmluZy5PdGhlcl0sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6IFsnIzQxNkU3NScsICcjNzlDRERCJywgJyM3MDgyODQnLCAnIzUxQTJBOCddLFxyXG4gICAgICAgICAgICAgICAgV2lkdGg6IDMyXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIExhYmVsczogWyfQstGL0LTQsNC90L4nLCAn0L7RgdGC0LDQu9C+0YHRjCddLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogW3AuQm9va0dpdmluZy5TdW0oKSwgcC5Cb29rR2l2aW5nLlRhcmdldCAtIHAuQm9va0dpdmluZy5TdW0oKV0sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6ICBbXCIjNURBODVEXCIsIFwiIzRBODQ1M1wiXSxcclxuICAgICAgICAgICAgICAgIFdpZHRoOiAyMixcclxuICAgICAgICAgICAgICAgIE1hcmdpbjogM1xyXG4gICAgICAgICAgICB9XVxyXG4gICAgICAgICkpO1xyXG4gICAgICAgIHRoaXMuQ2hhcnRCb29rR2l2aW5nLkxvYWQgPSBuZXcgTHVyZS5Mb2FkKHtUYXJnZXQ6IHRoaXMuQ2hhcnRCb29rR2l2aW5nLlRhcmdldH0pO1xyXG5cclxuICAgICAgICAvLyDQodC+0YbQuNCw0LvRjNC90YvQtSDQs9GA0YPQv9C/0YtcclxuICAgICAgICB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzID0gbmV3IEx1cmUuQ2hhcnQodGhpcy5HZXRDaGFydE9wdGlvbnMoXHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0KCcucGllLnNvY2lhbC1ncm91cHMtY2hhcnQnKSxcclxuICAgICAgICAgICAgW3tcclxuICAgICAgICAgICAgICAgIExhYmVsczogWyfQv9C10L3RgdC40L7QvdC10YDRiycsICfRgdC70YPQttCw0YnQuNC1JywgJ9GB0YLRg9C00LXQvdGC0YsnLCAn0YjQutC+0LvRjNC90LjQutC4JywgJ9C00L7RiNC60L7Qu9GM0L3QuNC60LgnLCAn0YDQtNGHJywgJ9C/0YDQvtGH0LXQtSddLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogW3AuUmVnaXN0ZXJzLnBlbnNpb25lciwgcC5SZWdpc3RlcnMuZW1wbG95ZWUsIHAuUmVnaXN0ZXJzLnN0dWRlbnRzLCBwLlJlZ2lzdGVycy5zY2hvb2xzLCBwLlJlZ2lzdGVycy51bmRlcl9zY2hvb2wsIHAuUmVnaXN0ZXJzLnJkY2gsIHAuUmVnaXN0ZXJzLm90aGVyc10sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6IFsnIzUxQTFBNycsICcjNDE2RTc1JywgJyM3OUNDREEnLCAnIzIwQTRBNCcsICcjNEI3Nzk4JywgJyM0MDY2N0YnLCAnIzM0NTQ2NiddLFxyXG4gICAgICAgICAgICAgICAgV2lkdGg6IDMyXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIExhYmVsczogWyfQstGL0LTQsNC90L4nLCAn0L7RgdGC0LDQu9C+0YHRjCddLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogW3AuUmVnaXN0ZXJzLlN1bSgpLCBwLlJlZ2lzdGVycy5UYXJnZXQgLSBwLlJlZ2lzdGVycy5TdW0oKV0sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6IFtcIiM1REE4NURcIiwgXCIjNEE4NDUzXCJdLFxyXG4gICAgICAgICAgICAgICAgV2lkdGg6IDIyLFxyXG4gICAgICAgICAgICAgICAgTWFyZ2luOiAzXHJcbiAgICAgICAgICAgIH1dXHJcbiAgICAgICAgKSk7XHJcbiAgICAgICAgdGhpcy5DaGFydFNvY2lhbEdyb3Vwcy5Mb2FkID0gbmV3IEx1cmUuTG9hZCh7VGFyZ2V0OiB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzLlRhcmdldH0pO1xyXG5cclxuICAgICAgICAvLyDQn9C+0LvQvtCy0L7Qt9GA0LDRgdGC0L3QsNGPINGB0YLRgNGD0LrRgtGD0YDQsCAxXHJcbiAgICAgICAgdGhpcy5DaGFydEdlbmRlckFnZSA9IG5ldyBMdXJlLkNoYXJ0KHRoaXMuR2V0Q2hhcnRPcHRpb25zKFxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLnBpZS5nZW5kZXItYWdlLWNoYXJ0JyksXHJcbiAgICAgICAgICAgIFt7XHJcbiAgICAgICAgICAgICAgICBMYWJlbHM6IFsn0LbQtdC90YnQuNC90YsgMzArJywgJ9C20LXQvdGJ0LjQvdGLIDE0LTMwJywgJ9C20LXQvdGJ0LjQvdGLIDAtMTQnLCAn0LzRg9C20YfQuNC90YsgMzArJywgJ9C80YPQttGH0LjQvdGLIDE0LTMwJywgJ9C80YPQttGH0LjQvdGLIDAtMTQnXSxcclxuICAgICAgICAgICAgICAgIERhdGE6IFtwLkdlbmRlckFnZS53b21lbl8zMCwgcC5HZW5kZXJBZ2Uud29tZW5fMTRfMzAsIHAuR2VuZGVyQWdlLndvbWVuXzE0LCBwLkdlbmRlckFnZS5tZW5fMzAsIHAuR2VuZGVyQWdlLm1lbl8xNF8zMCwgcC5HZW5kZXJBZ2UubWVuXzE0XSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogWycjOTkzRjczJywgJyM3RjM2NjMnLCAnIzY2MkM1MycsICcjMzQ1NDY2JywgJyM0MDY2N0YnLCAnIzRCNzc5OSddLFxyXG4gICAgICAgICAgICAgICAgV2lkdGg6IDMyXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIExhYmVsczogWyfQttC10L3RidC40L3RiycsICfQvNGD0LbRh9C40L3RiyddLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogW3AuR2VuZGVyQWdlLndvbWVuXzMwICsgcC5HZW5kZXJBZ2Uud29tZW5fMTRfMzAgKyBwLkdlbmRlckFnZS53b21lbl8xNCwgcC5HZW5kZXJBZ2UubWVuXzMwICsgcC5HZW5kZXJBZ2UubWVuXzE0XzMwICsgcC5HZW5kZXJBZ2UubWVuXzE0XSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogWycjRDc1NjlDJywgJyM2Q0E5RTAnXSxcclxuICAgICAgICAgICAgICAgIFR5cGU6ICdwaWUnLFxyXG4gICAgICAgICAgICAgICAgTWFyZ2luOiAzXHJcbiAgICAgICAgICAgIH1dXHJcbiAgICAgICAgKSk7XHJcbiAgICAgICAgdGhpcy5DaGFydEdlbmRlckFnZS5Mb2FkID0gbmV3IEx1cmUuTG9hZCh7VGFyZ2V0OiB0aGlzLkNoYXJ0R2VuZGVyQWdlLlRhcmdldH0pO1xyXG5cclxuICAgICAgICAvLyDQn9C+0LvQvtCy0L7Qt9GA0LDRgdGC0L3QsNGPINGB0YLRgNGD0LrRgtGD0YDQsCAyXHJcbiAgICAgICAgdGhpcy5DaGFydEFnZUdlbmRlciA9IG5ldyBMdXJlLkNoYXJ0KHRoaXMuR2V0Q2hhcnRPcHRpb25zKFxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLnBpZS5nZW5kZXItYWdlLWNoYXJ0LTInKSxcclxuICAgICAgICAgICAgW3tcclxuICAgICAgICAgICAgICAgIExhYmVsczogWyfQttC10L3RidC40L3RiyAzMCsnLCAn0LzRg9C20YfQuNC90YsgMzArJywgJ9C20LXQvdGJ0LjQvdGLIDE0LTMwJywgJ9C80YPQttGH0LjQvdGLIDE0LTMwJywgJ9C20LXQvdGJ0LjQvdGLIDAtMTQnLCAn0LzRg9C20YfQuNC90YsgMC0xNCddLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogW3AuR2VuZGVyQWdlLndvbWVuXzMwLCBwLkdlbmRlckFnZS5tZW5fMzAsIHAuR2VuZGVyQWdlLndvbWVuXzE0XzMwLCBwLkdlbmRlckFnZS5tZW5fMTRfMzAsIHAuR2VuZGVyQWdlLndvbWVuXzE0LCBwLkdlbmRlckFnZS5tZW5fMTRdLFxyXG4gICAgICAgICAgICAgICAgQ29sb3JzOiBbJyM5OTNGNzMnLCAnIzM0NTQ2NicsICcjN0YzNjYzJywgJyM0MDY2N0YnLCAnIzY2MkM1MycsICcjNEI3Nzk5J10sXHJcbiAgICAgICAgICAgICAgICBXaWR0aDogMzJcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbJ9Ch0YLQsNGA0YjQtSAzMCcsICfQntGCIDE0INC00L4gMzAnLCAn0JzQu9Cw0LTRiNC1IDE0J10sXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBbcC5HZW5kZXJBZ2Uud29tZW5fMzAgKyBwLkdlbmRlckFnZS5tZW5fMzAsIHAuR2VuZGVyQWdlLndvbWVuXzE0XzMwICsgcC5HZW5kZXJBZ2UubWVuXzE0XzMwLCBwLkdlbmRlckFnZS53b21lbl8xNCArIHAuR2VuZGVyQWdlLm1lbl8xNF0sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6IFsnIzc0Qjg3QScsICcjNTg5MjU1JywgJyMzQzVGNDInXSxcclxuICAgICAgICAgICAgICAgIFR5cGU6ICdwaWUnLFxyXG4gICAgICAgICAgICAgICAgTWFyZ2luOiAzXHJcbiAgICAgICAgICAgIH1dXHJcbiAgICAgICAgKSk7XHJcbiAgICAgICAgdGhpcy5DaGFydEFnZUdlbmRlci5Mb2FkID0gbmV3IEx1cmUuTG9hZCh7VGFyZ2V0OiB0aGlzLkNoYXJ0QWdlR2VuZGVyLlRhcmdldH0pO1xyXG5cclxuICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vIEFOT1RIRVIgUFJPUFMgXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcclxuICAgICAgICB0aGlzLnNlbGVjdGVkUGVyaW9kID0gWyBMdXJlLkRhdGUoKS5EYXlTdGFydCwgTHVyZS5EYXRlKCkuRGF5RW5kIF07XHJcbiAgICAgICAgdGhpcy5TZWxlY3RMaWJyYXJ5ID0gdGhpcy5TZWxlY3QoJy5saWItbGlzdCcpO1xyXG5cclxuICAgICAgICB0aGlzLkRhaWx5Q2hhcnQgPSBuZXcgTHVyZS5DaGFydCh7XHJcbiAgICAgICAgICAgIFRhcmdldDogdGhpcy5TZWxlY3QoJy5kYWlseS1jaGFydCAuY2hhcnQtd3JhcCcpLFxyXG4gICAgICAgICAgICBUeXBlOiAnTGluZScsXHJcbiAgICAgICAgICAgIE5hbWU6ICfQodCy0L7QtNC90YvQuSDQs9GA0LDRhNC40LonLFxyXG4gICAgICAgICAgICBMZWdlbmQ6IHtQb3NpdGlvbjogJ3JpZ2h0J30sXHJcbiAgICAgICAgICAgIEF4aXNYOiB7RGF0YTogKG5ldyBBcnJheSgxMikpLlNlbGVjdCgoYSwgYikgPT4gTHVyZS5EYXRlKG5ldyBEYXRlKDIwMTgsIGIpKS5Gb3JtYXQoJ01NTU0nKSl9LFxyXG4gICAgICAgICAgICBTZXJpZXM6IFt7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J/QvtGB0LXRidCw0LXQvNC+0YHRgtGMJyxcclxuICAgICAgICAgICAgICAgIENvbG9yOiAnIzY1NTk5RScsXHJcbiAgICAgICAgICAgICAgICBEYXRhOiAobmV3IEFycmF5KDEyKSkuU2VsZWN0KChhLCBiKSA9PiBiICUgNSksXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQl9Cw0L/QuNGB0YwnLFxyXG4gICAgICAgICAgICAgICAgQ29sb3I6ICcjNTNBQTYyJyxcclxuICAgICAgICAgICAgICAgIERhdGE6IChuZXcgQXJyYXkoMTIpKS5TZWxlY3QoKGEsIGIpID0+IGIgJSA3KSxcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L3QuNCz0L7QstGL0LTQsNGH0LAnLFxyXG4gICAgICAgICAgICAgICAgQ29sb3I6ICcjOUY0OTQ0JyxcclxuICAgICAgICAgICAgICAgIERhdGE6IChuZXcgQXJyYXkoMTIpKS5TZWxlY3QoKGEsIGIpID0+IGIgJSA5KSxcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIFRvb2x0aXA6IHtcclxuICAgICAgICAgICAgICAgIEZvcm1hdDogVGlwID0+XHJcbiAgICAgICAgICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJ0aXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpcC1iZ1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLXZhbHVlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLWljb25cIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICR7VGlwLkVwaXNvZGUuQ29sb3J9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpcC1sYWJlbFwiPiR7VGlwLlZhbHVlWH08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93XCI+JHtUaXAuRXBpc29kZS5OYW1lfTogJHtUaXAuVmFsdWV9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PmBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuRGFpbHlDaGFydC5Mb2FkID0gbmV3IEx1cmUuTG9hZCh7VGFyZ2V0OiB0aGlzLkRhaWx5Q2hhcnQuVGFyZ2V0fSk7XHJcbiAgICAgICAgLy8gdGhpcy5EYWlseUNoYXJ0LlJlZHJhdygpO1xyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbigpIHtcclxuICAgICAgICBpZiAodGhpcy5pc1Zpc2libGUpXHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnRzVXBkYXRlKCk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RQZXJpb2QgPSBmdW5jdGlvbiAocGVyaW9kLCBlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0KCcucGVyLnNlbGVjdGVkJykuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgZS5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGRhdGVfc3RhcnQgPSBMdXJlLkRhdGUoKTtcclxuICAgICAgICAgICAgbGV0IGRhdGVfZW5kID0gTHVyZS5EYXRlKCk7XHJcbiAgICAgICAgICAgIGlmICgodHlwZW9mIHBlcmlvZCkgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkRhdGVQaWNrZXIuUmVzZXQoKTtcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAocGVyaW9kKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAndG9kYXknOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX3N0YXJ0ID0gZGF0ZV9zdGFydC5EYXlTdGFydDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQgPSBkYXRlX2VuZC5EYXlFbmQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ3llc3RlcmRheSc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQuQWRkRGF5cygtMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfZW5kLkFkZERheXMoLTEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX3N0YXJ0ID0gZGF0ZV9zdGFydC5EYXlTdGFydDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQgPSBkYXRlX2VuZC5EYXlFbmQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ3dlZWsnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX3N0YXJ0ID0gZGF0ZV9zdGFydC5XZWVrU3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfZW5kID0gZGF0ZV9lbmQuV2Vla0VuZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnbW9udGgnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX3N0YXJ0ID0gZGF0ZV9zdGFydC5Nb250aFN0YXJ0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX2VuZCA9IGRhdGVfZW5kLk1vbnRoRW5kO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdxdWFydGVyJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG1vbnRoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgY20gPSBkYXRlX3N0YXJ0LkRhdGUuZ2V0TW9udGgoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNtIDw9IDIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb250aCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNtID49IDMgJiYgY20gPD0gNSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoID0gMztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoY20gPj0gNiAmJiBjbSA8PSA5KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9udGggPSA2O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIG1vbnRoID0gOTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZV9zdGFydCA9IEx1cmUuRGF0ZShuZXcgRGF0ZShkYXRlX3N0YXJ0LkRhdGUuZ2V0RnVsbFllYXIoKSwgbW9udGgpKS5Nb250aFN0YXJ0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX2VuZCA9IEx1cmUuRGF0ZShuZXcgRGF0ZShkYXRlX2VuZC5EYXRlLmdldEZ1bGxZZWFyKCksIG1vbnRoICsgMikpLk1vbnRoRW5kO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICd5ZWFyJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZV9zdGFydCA9IG5ldyBEYXRlKGRhdGVfc3RhcnQuRGF0ZS5nZXRGdWxsWWVhcigpLCAwLCAxLCAwLCAwLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQgPSBuZXcgRGF0ZShkYXRlX2VuZC5EYXRlLmdldEZ1bGxZZWFyKCksIDExLCAzMSwgMjMsIDU5LCA1OSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFBlcmlvZCA9IFtkYXRlX3N0YXJ0LCBkYXRlX2VuZF07XHJcbiAgICAgICAgICAgICAgICAvLyBMdXJlLlN5c3RlbS5Ob3RpY2UoZGF0ZV9zdGFydC5Gb3JtYXQoJ0QgTU1NTSBZWVlZJywgdHJ1ZSkgKyAnIC0gJyArIGRhdGVfZW5kLkZvcm1hdCgnRCBNTU1NIFlZWVknLCB0cnVlKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkYXRlX3N0YXJ0ID0gTHVyZS5EYXRlKHBlcmlvZFswXSkuRGF5U3RhcnQ7XHJcbiAgICAgICAgICAgICAgICBkYXRlX2VuZCA9IEx1cmUuRGF0ZShwZXJpb2RbMV0pLkRheUVuZDtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRQZXJpb2QgPSBbZGF0ZV9zdGFydCwgZGF0ZV9lbmRdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2cocGVyaW9kLCB0aGlzLnNlbGVjdGVkUGVyaW9kKTtcclxuICAgICAgICAgICAgdGhpcy5DaGFydHNVcGRhdGUoKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlUGVyY2VudDEyMyA9IGZ1bmN0aW9uIChlbGVtKSB7XHJcbiAgICAgICAgICAgIGxldCB0eXBlID0gZWxlbS5kYXRhc2V0Wyd0eXBlJ107XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5QZXJjZW50W3R5cGVdID0gIXRoaXMuUHJvdG8uRGF0YS5QZXJjZW50W3R5cGVdO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdHZW5kZXJBZ2UnKVxyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgZSBvZiB0aGlzLlNlbGVjdEFsbCgnLnBlcmNlbnQtMTIzW2RhdGEtdHlwZT1cIicgKyB0eXBlICsgJ1wiXScpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZS5jaGlsZHJlblswXS5jbGFzc0xpc3QudG9nZ2xlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGUuY2hpbGRyZW5bMV0uY2xhc3NMaXN0LnRvZ2dsZSgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBlbGVtLmNoaWxkcmVuWzBdLmNsYXNzTGlzdC50b2dnbGUoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICBlbGVtLmNoaWxkcmVuWzFdLmNsYXNzTGlzdC50b2dnbGUoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZWxlbSwgdHlwZSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNoYXJ0c1VwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IHBsdXNfb3JfemVybyA9ICh4ID0gW10pID0+IHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGsgaW4geClcclxuICAgICAgICAgICAgICAgICAgICBpZiAoeC5oYXNPd25Qcm9wZXJ0eShrKSAmJiB4W2tdIDwgMClcclxuICAgICAgICAgICAgICAgICAgICAgICAgeFtrXSA9IDA7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geDtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIGxldCBkYXRlX3N0YXJ0ID0gbmV3IERhdGUodGhpcy5zZWxlY3RlZFBlcmlvZFswXSk7XHJcbiAgICAgICAgICAgIGxldCBkYXRlX2VuZCA9IG5ldyBEYXRlKHRoaXMuc2VsZWN0ZWRQZXJpb2RbMV0pO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnREFURVM6ICcsIGRhdGVfc3RhcnQsIGRhdGVfZW5kKTtcclxuICAgICAgICAgICAgbGV0IGxpYiA9IHRoaXMuQ3VycmVudExpYnJhcmllcztcclxuICAgICAgICAgICAgLy8g0J/QvtGB0LXRidCw0LXQvNC+0YHRgtGMXHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnRWaXNpdG9ycy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgYXBpLkRhc2hfVmlzaXRhdGlvbl9HZXQobGliLCBkYXRlX3N0YXJ0LCBkYXRlX2VuZClcclxuICAgICAgICAgICAgICAgIC50aGVuKFxyXG4gICAgICAgICAgICAgICAgICAgIHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByID0gcGx1c19vcl96ZXJvKHIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuUHJvdG8uRGF0YS5WaXNpdG9ycywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmV3OiByLlJlZ2lzdGVyZWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdGF0aW9uYXJ5OiByLlN0YXRpb25hcnksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFdmVudHM6IHIuRXZlbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDbHViczogci5DbHViLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFyZ2V0OiByLkNvdW50UGxhblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwID0gdGhpcy5Qcm90by5EYXRhLlZpc2l0b3JzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0VmlzaXRvcnMuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YSA9IFtwLk5ldywgcC5TdGF0aW9uYXJ5LCBwLkV2ZW50cywgcC5DbHVic107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRWaXNpdG9ycy5PcHRpb25zLlNlcmllc1sxXS5EYXRhID0gcGx1c19vcl96ZXJvKFtwLlN1bSgpLCBwLlRhcmdldCAtIHAuU3VtKCldKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydFZpc2l0b3JzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0VmlzaXRvcnMuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAvLyDQl9Cw0L/QuNGB0LDQstGI0LjQtdGB0Y8g0KHQvtGG0LjQsNC70YzQvdGL0LUg0LPRgNGD0L/Qv9GLXHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnRTb2NpYWxHcm91cHMuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIGFwaS5EYXNoX1Zpc2l0UmVnaXN0ZXJlZF9HZXQobGliLCBkYXRlX3N0YXJ0LCBkYXRlX2VuZClcclxuICAgICAgICAgICAgICAgIC50aGVuKFxyXG4gICAgICAgICAgICAgICAgICAgIHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByID0gcGx1c19vcl96ZXJvKHIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuUHJvdG8uRGF0YS5SZWdpc3RlcnMsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlbnNpb25lcjogci5SZXRpcmVkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW1wbG95ZWU6IHIuU2VydmFudCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0dWRlbnRzOiByLlN0dWRlbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hvb2xzOiByLlNjaG9vbGVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5kZXJfc2Nob29sOiByLlByZXNjaG9vbGVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmRjaDogci5SREMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdGhlcnM6IHIuT3RoZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUYXJnZXQ6IHIuQ291bnRQbGFuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSB0aGlzLlByb3RvLkRhdGEuUmVnaXN0ZXJzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzLk9wdGlvbnMuU2VyaWVzWzBdLkRhdGEgPSBbcC5wZW5zaW9uZXIsIHAuZW1wbG95ZWUsIHAuc3R1ZGVudHMsIHAuc2Nob29scywgcC51bmRlcl9zY2hvb2wsIHAucmRjaCwgcC5vdGhlcnNdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzLk9wdGlvbnMuU2VyaWVzWzFdLkRhdGEgPSBwbHVzX29yX3plcm8oW3AuU3VtKCksIHAuVGFyZ2V0IC0gcC5TdW0oKV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICAgICAgICAgICAgLy8g0JfQsNC/0LjRgdCw0LLRiNC40LXRgdGPINCf0L7Qu9C+0LLQvtC30YDQsNGB0YLQvdCw0Y8g0YHRgtGA0YPQutGC0YPRgNCwXHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnRHZW5kZXJBZ2UuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnRBZ2VHZW5kZXIuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIGFwaS5EYXNoX1Zpc2l0R2VuZ2VyQWdlX0dldChsaWIsIGRhdGVfc3RhcnQsIGRhdGVfZW5kKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oXHJcbiAgICAgICAgICAgICAgICAgICAgciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHIgPSBwbHVzX29yX3plcm8ocik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5Qcm90by5EYXRhLkdlbmRlckFnZSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd29tZW5fMzA6IHIuRmVtYWxlX092ZXIzMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvbWVuXzE0XzMwOiByLkZlbWFsZV8zMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvbWVuXzE0OiByLkZlbWFsZV8xNCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lbl8zMDogci5NYWxlX092ZXIzMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lbl8xNF8zMDogci5NYWxlXzMwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVuXzE0OiByLk1hbGVfMTRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHRoaXMuUHJvdG8uRGF0YS5HZW5kZXJBZ2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRHZW5kZXJBZ2UuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YSA9IFtwLndvbWVuXzMwLCBwLndvbWVuXzE0XzMwLCBwLndvbWVuXzE0LCBwLm1lbl8zMCwgcC5tZW5fMTRfMzAsIHAubWVuXzE0XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEdlbmRlckFnZS5PcHRpb25zLlNlcmllc1sxXS5EYXRhID0gW3Aud29tZW5fMzAgKyBwLndvbWVuXzE0XzMwICsgcC53b21lbl8xNCwgcC5tZW5fMzAgKyBwLm1lbl8xNF8zMCArIHAubWVuXzE0XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEFnZUdlbmRlci5PcHRpb25zLlNlcmllc1swXS5EYXRhID0gW3Aud29tZW5fMzAsIHAubWVuXzMwLCBwLndvbWVuXzE0XzMwLCBwLm1lbl8xNF8zMCwgcC53b21lbl8xNCwgcC5tZW5fMTRdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0QWdlR2VuZGVyLk9wdGlvbnMuU2VyaWVzWzFdLkRhdGEgPSBbcC53b21lbl8zMCArIHAubWVuXzMwLCBwLndvbWVuXzE0XzMwICsgcC5tZW5fMTRfMzAsIHAud29tZW5fMTQgKyBwLm1lbl8xNF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRHZW5kZXJBZ2UuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRBZ2VHZW5kZXIuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRHZW5kZXJBZ2UuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0QWdlR2VuZGVyLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICAgICAgICAgICAgLy8g0JrQvdC40LPQvtCy0YvQtNCw0YfQsFxyXG4gICAgICAgICAgICB0aGlzLkNoYXJ0Qm9va0dpdmluZy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgYXBpLkRhc2hfR2l2aW5nQm9va19HZXQobGliLCBkYXRlX3N0YXJ0LCBkYXRlX2VuZClcclxuICAgICAgICAgICAgICAgIC50aGVuKFxyXG4gICAgICAgICAgICAgICAgICAgIHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByID0gcGx1c19vcl96ZXJvKHIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuUHJvdG8uRGF0YS5Cb29rR2l2aW5nLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBCb29rczogci5HaXZpbmdCb29rLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRG9jc0NvcGllczogci5HaXZpbmdEb2MsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb25zdWx0czogci5HaXZpbmdDb25zdWx0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgT3RoZXI6IHIuR2l2aW5nT3RoZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUYXJnZXQ6IHIuQ291bnRQbGFuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSB0aGlzLlByb3RvLkRhdGEuQm9va0dpdmluZztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEJvb2tHaXZpbmcuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YSA9IFtwLkJvb2tzLCBwLkRvY3NDb3BpZXMsIHAuQ29uc3VsdHMsIHAuT3RoZXJdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0Qm9va0dpdmluZy5PcHRpb25zLlNlcmllc1sxXS5EYXRhID0gcGx1c19vcl96ZXJvKFtwLlN1bSgpLCBwLlRhcmdldCAtIHAuU3VtKCldKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEJvb2tHaXZpbmcuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRCb29rR2l2aW5nLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICAgICAgICAgICAgLy8g0KHQstC+0LTQvdGL0Lkg0LPRgNCw0YTQuNC6XHJcbiAgICAgICAgICAgIGxldCBkYXRlX2RpZmYgPSBNYXRoLmZsb29yKChkYXRlX2VuZC5nZXRUaW1lKCkgLSBkYXRlX3N0YXJ0LmdldFRpbWUoKSkgLyAxMDAwKTtcclxuICAgICAgICAgICAgaWYgKGRhdGVfZGlmZiA8IDkwMDAwKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0LlRhcmdldC5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0LlRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgICAgICBhcGkuRGFzaF9TdW1tYXJ5R3JhcGhfR2V0KGxpYiwgTHVyZS5EYXRlKGRhdGVfc3RhcnQpLCBMdXJlLkRhdGUoZGF0ZV9lbmQpKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBsYWJlbHM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZV9kaWZmIC8gODY0MDAgPCAzMilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbHMgPSByLm1hcChhID0+IEx1cmUuRGF0ZShhLkRhdGUpLkZvcm1hdCgnRCBNTU1NJywgdHJ1ZSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscyA9IHIubWFwKGEgPT4gTHVyZS5EYXRlKGEuRGF0ZSkuRm9ybWF0KCdNTU1NIFlZWVknLCBmYWxzZSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGEgPSByLm1hcChhID0+IGEuVmlzaXQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzFdLkRhdGEgPSByLm1hcChhID0+IGEuUmVnaXN0cmF0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuRGFpbHlDaGFydC5PcHRpb25zLlNlcmllc1syXS5EYXRhID0gci5tYXAoYSA9PiBhLkJvb2tHaXZpbmcpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuRGFpbHlDaGFydC5PcHRpb25zLkF4aXNYLkRhdGEgPSBsYWJlbHM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuRGFpbHlDaGFydC5PcHRpb25zLkdyYXBoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuRGFpbHlDaGFydC5SZWRyYXcoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuT3B0aW9ucy5HcmFwaFswXS5BeGlzWC5EYXRhID0gbGFiZWxzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0Lk9wdGlvbnMuR3JhcGhbMV0uQXhpc1guRGF0YSA9IGxhYmVscztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuRGFpbHlDaGFydC5PcHRpb25zLkdyYXBoWzJdLkF4aXNYLkRhdGEgPSBsYWJlbHM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuUmVkcmF3KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbigpIHtcclxuICAgICAgICBuZXcgTGlicmFyeVRyZWUodGhpcywgdGhpcy5TZWxlY3QoJy5saWJyYXJ5LXRyZWUtY29udHJvbCcpKTtcclxuICAgICAgICB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUlETGlzdFNlbGVjdGVkID0gW0x1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5MYXN0KCkuSURdO1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICB0aGlzLkRhdGVQaWNrZXIgPSBuZXcgTHVyZS5QZXJpb2RQaWNrZXIoe1xyXG4gICAgICAgICAgICBUYXJnZXQ6ICcuY2FsZW5kYXItcGVyaW9kIC5kYXRlcycsXHJcbiAgICAgICAgICAgIE9uQ29uZmlybTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RQZXJpb2QodGhpcy5EYXRlLCB0aGlzLlRhcmdldC5wYXJlbnRFbGVtZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuRGF0ZVBpY2tlci5SZXNldCgpO1xyXG5cclxuICAgICAgICBsZXQgY3VyciA9IHRoaXMuU2VsZWN0KCcuY3Vycl9zaWRlJyk7XHJcbiAgICAgICAgbGV0IG5leHQgPSB0aGlzLlNlbGVjdCgnLm5leHRfc2lkZScpO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmRvdWJsZS1jaGFydCcsICgpID0+IHtcclxuICAgICAgICAgICAgY3Vyci5jbGFzc0xpc3QudG9nZ2xlKCdmbGlwcGVkJyk7XHJcbiAgICAgICAgICAgIG5leHQuY2xhc3NMaXN0LnRvZ2dsZSgnbmV4dCcpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnBlcmlvZHMgLnBlcicsIChlKSA9PiB0aGlzLnNlbGVjdFBlcmlvZChlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0WzFdLCBlLmN1cnJlbnRUYXJnZXQpKTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5wZXJjZW50LTEyMycsIChlKSA9PiB0aGlzLkNoYW5nZVBlcmNlbnQxMjMoZS5jdXJyZW50VGFyZ2V0KSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuZ2VuZGVyLWFnZS1jaGFydC0yLXdyYXAgdGQsIC5nZW5kZXItYWdlLWNoYXJ0LXdyYXAgdGQsIC5waWUtcmVnaXN0ZXJzLXdyYXAgLnJvdywgLnBpZS1ib29rLWdpdmluZy13cmFwIC5yb3csIC5waWUtdmlzaXRvcnMtd3JhcCAucm93JywgKGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldC5kYXRhc2V0Wyd0eXBlJ10pIHtcclxuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ3R5cGUnXS5zcGxpdCgnLScpO1xyXG4gICAgICAgICAgICAgICAgZGF0YVsxXSA9IHBhcnNlSW50KGRhdGFbMV0pO1xyXG4gICAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ3Nlcmllcy1oaWRlJyk7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGRhdGFbMF0pIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICd2JzogIHRoaXMuQ2hhcnRWaXNpdG9ycy5TZXJpZVN3aXRjaCgwLCBkYXRhWzFdKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnYmcnOiB0aGlzLkNoYXJ0Qm9va0dpdmluZy5TZXJpZVN3aXRjaCgwLCBkYXRhWzFdKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnc2cnOiB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzLlNlcmllU3dpdGNoKDAsIGRhdGFbMV0pOyBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdnYSc6IHRoaXMuQ2hhcnRHZW5kZXJBZ2UuU2VyaWVTd2l0Y2goMCwgZGF0YVsxXSk7IGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2FnJzogdGhpcy5DaGFydEFnZUdlbmRlci5TZXJpZVN3aXRjaCgwLCBkYXRhWzFdKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvL3RoaXMuU2VsZWN0TGlicmFyeS5vbmNoYW5nZSA9ICgpID0+IHRoaXMuQ2hhcnRzVXBkYXRlKCk7XHJcbiAgICB9XHJcbn0pO1xyXG4vLyB3aW5kb3cuRGFzaC5EYXNoTWFpbiA9IERhc2hNYWluO1xyXG4vLyBtb2R1bGUuZXhwb3J0cyA9IERhc2g7XHJcbiIsImNvbnN0IERpY3Rpb25hcnkgPSByZXF1aXJlKFwiLi4vX2NvbW1vbi9kaWN0aW9uYXJ5XCIpO1xyXG5sZXQgRGFzaCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgLy9EaXNhYmxlZDogdHJ1ZSxcclxuICAgIE5hbWU6ICdEYXNoJyxcclxuICAgIFRhcmdldDogJy5ib2R5JyxcclxuICAgIFR5cGU6ICdjb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGFzaCdcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuRGFzaGJvYXJkXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwiZGFzaCBjb250ZW50XCI+PC9kaXY+YCxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlNpeE5LLlJlZnJlc2goKTtcclxuICAgIH1cclxufSk7XHJcbndpbmRvdy5EYXNoID0gRGFzaDtcclxucmVxdWlyZSgnLi9kYXNoLW1haW4vZGFzaC1tYWluLmpzJyk7XHJcbnJlcXVpcmUoJy4vc3VtbWFyeS9kYXNoLXN1bW1hcnkuanMnKTtcclxucmVxdWlyZSgnLi9zaXgtbmsvc2l4LW5rLmpzJyk7XHJcbm1vZHVsZS5leHBvcnRzID0gRGFzaDtcclxuIiwiRGFzaC5TaXhOSy5TaXhOS01haW4gPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdTaXhOS01haW4nLFxyXG4gICAgVGFyZ2V0OiAnJyxcclxuICAgIFR5cGU6ICdTaXhOSy1jb250ZW50JyxcclxuICAgIFBhcmVudDogRGFzaC5TaXhOSyxcclxuICAgIFZpc2libGU6IHRydWUsXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnNpeC1uayAucmVxLXRhYi5tYWluJ1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwiZGF0YS1wYXJ0XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwic3Ryb25nIGNlbnRlciBib3JkZXJcIj7QpNCV0JTQldCg0JDQm9Cs0J3QntCVINCh0KLQkNCi0JjQodCi0JjQp9CV0KHQmtCe0JUg0J3QkNCR0JvQrtCU0JXQndCY0JU8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJjZW50ZXIgYm9yZGVyXCI+0JrQntCd0KTQmNCU0JXQndCm0JjQkNCb0KzQndCe0KHQotCsINCT0JDQoNCQ0J3QotCY0KDQo9CV0KLQodCvINCf0J7Qm9Cj0KfQkNCi0JXQm9CV0Jwg0JjQndCk0J7QoNCc0JDQptCY0Jg8L2Rpdj5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcclxuICAgIDxkaXYgY2xhc3M9XCJncmV5LWJhY2sgY2VudGVyIGJvcmRlclwiPtCd0LDRgNGD0YjQtdC90LjQtSDQv9C+0YDRj9C00LrQsCDQv9GA0LXQtNGB0YLQsNCy0LvQtdC90LjRjyDRgdGC0LDRgtC40YHRgtC40YfQtdGB0LrQvtC5INC40L3RhNC+0YDQvNCw0YbQuNC4LCDQsCDRgNCw0LLQvdC+INC/0YDQtdC00YHRgtCw0LLQu9C10L3QuNC1INC90LXQtNC+0YHRgtC+0LLQtdGA0L3QvtC5INGB0YLQsNGC0LjRgdGC0LjRh9C10YHQutC+0Lkg0LjQvdGE0L7RgNC80LDRhtC40Lg8YnI+XHJcbiAgICDQstC70LXRh9C10YIg0L7RgtCy0LXRgtGB0YLQstC10L3QvdC+0YHRgtGMLCDRg9GB0YLQsNC90L7QstC70LXQvdC90YPRjiDRgdGC0LDRgtGM0LXQuSAxMy4xOSDQmtC+0LTQtdC60YHQsCDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40Lgg0L7QsSDQsNC00LzQuNC90LjRgdGC0YDQsNGC0LjQstC90YvRhSDQv9GA0LDQstC+0L3QsNGA0YPRiNC10L3QuNGP0YU8YnI+XHJcbiAgICDQvtGCIDMwLjEyLjIwMDEg4oSWIDE5NS3QpNCXLCDQsCDRgtCw0LrQttC1INGB0YLQsNGC0YzQtdC5IDMg0JfQsNC60L7QvdCwINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuCDQvtGCIDEzLjA1LjkyIOKEliAyNzYxLTEgXCLQntCxINC+0YLQstC10YLRgdGC0LLQtdC90L3QvtGB0YLQuCDQt9CwINC90LDRgNGD0YjQtdC90LjQtTxicj5cclxuICAgINC/0L7RgNGP0LTQutCwINC/0YDQtdC00YHRgtCw0LLQu9C10L3QuNGPINCz0L7RgdGD0LTQsNGA0YHRgtCy0LXQvdC90L7QuSDRgdGC0LDRgtC40YHRgtC40YfQtdGB0LrQvtC5INC+0YLRh9C10YLQvdC+0YHRgtC4XCI8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJjZW50ZXIgYm9yZGVyXCI+0JLQntCX0JzQntCW0J3QniDQn9Cg0JXQlNCe0KHQotCQ0JLQm9CV0J3QmNCVINCSINCt0JvQldCa0KLQoNCe0J3QndCe0Jwg0JLQmNCU0JU8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJjZW50ZXIgZ3JleS1iYWNrIGJvcmRlclwiPtCh0JLQldCU0JXQndCY0K8g0J7QkSDQntCR0KnQldCU0J7QodCi0KPQn9Cd0J7QmSAo0J/Qo9CR0JvQmNCn0J3QntCZKSDQkdCY0JHQm9CY0J7QotCV0JrQlTxicj7Qt9CwICR7KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpfSDQs9C+0LQ8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJmbGV4XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXg0XCI+XHJcbiAgICAgICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiPtCf0YDQtdC00L7RgdGC0LDQstC70Y/RjtGCOjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD7QodGA0L7QutC4INC/0YDQtdC00L7RgdGC0LDQstC70LXQvdC40Y88L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XCIyXCI+0Y7RgNC40LTQuNGH0LXRgdC60LjQtSDQu9C40YbQsCAtINC+0LHRidC10LTQvtGB0YLRg9C/0L3Ri9C1INCx0LjQsdC70LjQvtGC0LXQutC4LCDQv9C+0LTQstC10LTQvtC80YHRgtCy0LXQvdC90YvQtTog0L7RgNCz0LDQvdGDINC80LXRgdGC0L3QvtCz0L4g0YHQsNC80L7Rg9C/0YDQsNCy0LvQtdC90LjRjywg0L7RgdGD0YnQtdGB0YLQstC70Y/RjtGJ0LXQvNGDINGD0L/RgNCw0LLQu9C10L3QuNC1INCyINGB0YTQtdGA0LUg0LrRg9C70YzRgtGD0YDRizsg0L7RgNCz0LDQvdGDINC40YHQv9C+0LvQvdC40YLQtdC70YzQvdC+0Lkg0LLQu9Cw0YHRgtC4INGB0YPQsdGK0LXQutGC0LAg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4LCDQvtGB0YPRidC10YHRgtCy0LvRj9GO0YnQtdC80YMg0YPQv9GA0LDQstC70LXQvdC40LUg0LIg0YHRhNC10YDQtSDQutGD0LvRjNGC0YPRgNGLOyDQnNC40L3QuNGB0YLQtdGA0YHRgtCy0YMg0LrRg9C70YzRgtGD0YDRiyDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40Lg6PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTUg0Y/QvdCy0LDRgNGPPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8L3RyPiBcclxuICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMlwiPi0g0YHQvtC+0YLQstC10YLRgdGC0LLRg9GO0YnQtdC80YMg0L7RgNCz0LDQvdGDINGD0L/RgNCw0LLQu9C10L3QuNGPINCyINGB0YTQtdGA0LUg0LrRg9C70YzRgtGD0YDRiyAo0L/QviDQv9GA0LjQvdCw0LTQu9C10LbQvdC+0YHRgtC4KTsg0Y7RgNC40LTQuNGH0LXRgdC60LjQtSDQu9C40YbQsCAtINC+0LHRidC10LTQvtGB0YLRg9C/0L3Ri9C1INCx0LjQsdC70LjQvtGC0LXQutC4LCDQutGA0L7QvNC1INC/0L7QtNCy0LXQtNC+0LzRgdGC0LLQtdC90L3Ri9GFOiDQvtGA0LPQsNC90YMg0LzQtdGB0YLQvdC+0LPQviDRgdCw0LzQvtGD0L/RgNCw0LLQu9C10L3QuNGPLCDQvtGB0YPRidC10YHRgtCy0LvRj9GO0YnQtdC80YMg0YPQv9GA0LDQstC70LXQvdC40LUg0LIg0YHRhNC10YDQtSDQutGD0LvRjNGC0YPRgNGLOyDQvtGA0LPQsNC90YMg0LjRgdC/0L7Qu9C90LjRgtC10LvRjNC90L7QuSDQstC70LDRgdGC0Lgg0YHRg9Cx0YrQtdC60YLQsCDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40LgsINC+0YHRg9GJ0LXRgdGC0LLQu9GP0Y7RidC10LzRgyDRg9C/0YDQsNCy0LvQtdC90LjQtSDQsiDRgdGE0LXRgNC1INC60YPQu9GM0YLRg9GA0Ys7INCc0LjQvdC40YHRgtC10YDRgdGC0LLRgyDQutGD0LvRjNGC0YPRgNGLINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuDo8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xNSDRj9C90LLQsNGA0Y88L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cIjJcIj4t0YLQtdGA0YDQuNGC0L7RgNC40LDQu9GM0L3QvtC80YMg0L7RgNCz0LDQvdGDINCg0L7RgdGB0YLQsNGC0LAg0LIg0YHRg9Cx0YrQtdC60YLQtSDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40Lgg0L/QviDRg9GB0YLQsNC90L7QstC70LXQvdC90L7QvNGDINC40Lwg0LDQtNGA0LXRgdGDOyDQvtGA0LPQsNC9INC80LXRgdGC0L3QvtCz0L4g0YHQsNC80L7Rg9C/0YDQsNCy0LvQtdC90LjRjywg0L7RgdGD0YnQtdGB0YLQstC70Y/RjtGJ0LjQuSDRg9C/0YDQsNCy0LvQtdC90LjQtSDQsiDRgdGE0LXRgNC1INC60YPQu9GM0YLRg9GA0YssINGB0LLQvtC00L3Ri9C1INC+0YLRh9C10YLRiyDQv9C+INC/0L7QtNCy0LXQtNC+0LzRgdGC0LLQtdC90L3Ri9C8INGD0YfRgNC10LbQtNC10L3QuNGP0Lw6PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MjAg0YTQtdCy0YDQsNC70Y88L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cIjJcIj4t0L7RgNCz0LDQvdGDINC40YHQv9C+0LvQvdC40YLQtdC70YzQvdC+0Lkg0LLQu9Cw0YHRgtC4INGB0YPQsdGK0LXQutGC0LAg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4LCDQvtGB0YPRidC10YHRgtCy0LvRj9GO0YnQtdC80YMg0YPQv9GA0LDQstC70LXQvdC40LUg0LIg0YHRhNC10YDQtSDQutGD0LvRjNGC0YPRgNGLOyDQvtGA0LPQsNC90Ysg0LjRgdC/0L7Qu9C90LjRgtC10LvRjNC90L7QuSDQstC70LDRgdGC0Lgg0YHRg9Cx0YrQtdC60YLQsCDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40LgsINC+0YHRg9GJ0LXRgdGC0LLQu9GP0Y7RidC40LUg0YPQv9GA0LDQstC70LXQvdC40LUg0LIg0YHRhNC10YDQtSDQutGD0LvRjNGC0YPRgNGLLCDRgdCy0L7QtNC90YvQtSDQvtGC0YfQtdGC0Ysg0L/QviDRgdGD0LHRitC10LrRgtGDINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuDogLdCc0LjQvdC40YHRgtC10YDRgdGC0LLRgyDQutGD0LvRjNGC0YPRgNGLINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuDs8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xMCDQvNCw0YDRgtCwPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8L3RyPiBcclxuICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMlwiPtCg0L7RgdGB0YLQsNGCLCDRgdCy0L7QtNC90YvQtSDQvtGC0YfQtdGC0Ysg0L/QviDQvtGB0L3QvtCy0L3Ri9C8INC/0L7QutCw0LfQsNGC0LXQu9GP0Lwg0LTQtdGP0YLQtdC70YzQvdC+0YHRgtC4INC+0LHRidC10LTQvtGB0YLRg9C/0L3Ri9GFICDQsdC40LHQu9C40L7RgtC10LosINC90LUg0L7RgtC90L7RgdGP0YnQuNGF0YHRjyDQuiDRgdGE0LXRgNC1INCy0LXQtNC10L3QuNGPINCc0LjQvdC40YHRgtC10YDRgdGC0LLQsCDQutGD0LvRjNGC0YPRgNGLINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuDogLdCc0LjQvdC40YHRgtC10YDRgdGC0LLRgyDQutGD0LvRjNGC0YPRgNGLINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjMwINCw0L/RgNC10LvRjzwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgxIG1hci03LWFsbFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyIHN0cm9uZyBncmV5LWJhY2sgYm9yZGVyXCI+0KTQvtGA0LzQsCDihJYgNi3QndCaPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZW50ZXJcIj7Qn9GA0LjQutCw0Lcg0KDQvtGB0YHRgtCw0YLQsDo8YnI+0J7QsSDRg9GC0LLQtdGA0LbQtNC10L3QuNC4INGE0L7RgNC80Ys8YnI+0L7RgiAwOC4xMC4yMDE1IOKEliA0NjQ8YnI+0J4g0LLQvdC10YHQtdC90LjQuCDQuNC30LzQtdC90LXQvdC40LkgKNC/0YDQuCDQvdCw0LvQuNGH0LjQuCk8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPtC+0YIgX19fX19fX19fIOKEliBfX19fPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZW50ZXJcIj7QvtGCIF9fX19fX19fXyDihJYgX19fXzwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyIGJvcmRlciBncmV5LWJhY2tcIiBzdHlsZT1cInBhZGRpbmc6IDdweDtcIj57e0RhdGVSYW5nZX19PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJmbGV4LXJvdyB3aWQtMTAwXCI+PGRpdj7QndCw0LjQvNC10L3QvtCy0LDQvdC40LUg0L7RgtGH0LjRgtGL0LLQsNGO0YnQtdC50YHRjyDQvtGA0LPQsNC90LjQt9Cw0YbQuNC4PC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MVwiPjwvZGl2PjwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImZsZXgtcm93IHdpZC0xMDBcIj48ZGl2PtCf0L7Rh9GC0L7QstGL0Lkg0LDQtNGA0LXRgTwvZGl2PjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgZmxleDFcIj48L2Rpdj48L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0JrQvtC0INGE0L7RgNC80Ysg0L/QviDQntCa0KPQlDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0JrQvtC0PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC+0YLRh9C40YLRi9Cy0LDRjtGJ0LXQudGB0Y8g0L7RgNCz0LDQvdC40LfQsNGG0LjQuCDQv9C+INCe0JrQn9CePC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPjE8L3RoPjx0aD4yPC90aD48dGg+MzwvdGg+PHRoPjQ8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjA2MDk1MjE8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICA8L3RhYmxlPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXJvd1wiPjxkaXYgY2xhc3M9XCJmbGV4MVwiPtCd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDRg9GH0YDQtdC00LjRgtC10LvRjzwvZGl2PjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgZmxleDFcIj7QlNC10L/QsNGA0YLQsNC80LXQvdGCINC60YPQu9GM0YLRg9GA0Ysg0LPQvtGA0L7QtNCwINCc0L7RgdC60LLRizwvZGl2PjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXJvd1wiPjxkaXYgY2xhc3M9XCJmbGV4MVwiPtCd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDRhtC10L3RgtGA0LDQu9C40LfQvtCy0LDQvdC90L7QuSDRgdC40YHRgtC10LzRiywg0LIg0LrQvtGC0L7RgNGD0Y4g0LLRhdC+0LTQuNGCINCx0LjQsdC70LjQvtGC0LXQutCwPC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MVwiPtCT0L7RgdGD0LTQsNGA0YHRgtCy0LXQvdC90L4g0LHRjtC00LbQtdGC0L3QvtC1INGD0YfRgNC10LbQtNC10L3QuNC1INC60YPQu9GM0YLRg9GA0Ysg0LPQvtGA0L7QtNCwINCc0L7RgdC60LLRiyBcItCm0LXQvdGC0YDQsNC70LjQt9C+0LLQsNC90L3QsNGPINCx0LjQsdC70LjQvtGC0LXRh9C90LDRjyDRgdC40YHRgtC10LzQsCDQptC10L3RgtGA0LDQu9GM0L3QvtCz0L4g0LDQtNC80LjQvdC40YHRgtGA0LDRgtC40LLQvdC+0LPQviDQvtC60YDRg9Cz0LBcIjwvZGl2PjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXJvd1wiPjxkaXYgY2xhc3M9XCJmbGV4MVwiPtCd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDQuCDRgtC40L8g0LHQuNCx0LvQuNC+0YLQtdC60LggKNCx0LjQsdC70LjQvtGC0LXQutC4LdGE0LjQu9C40LDQu9CwKTwvZGl2PjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgZmxleDFcIj48L2Rpdj48L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1yb3dcIj48ZGl2IGNsYXNzPVwiZmxleDFcIj7QndCw0L/RgNCw0LLQu9C10L3QuNC1INC+0YHQvdC+0LLQvdC+0Lkg0LTQtdGP0YLQtdC70YzQvdC+0YHRgtC4INCz0L7Qu9C+0LLQvdC+0Lkg0L7RgNCz0LDQvdC40LfQsNGG0LjQuDwvZGl2PjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgZmxleDFcIj7QntCa0JLQrdCUIDkyLjUxPC9kaXY+PC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YCxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgRGF0ZVJhbmdlOiAoezE6ICcxINCa0LLQsNGA0YLQsNC7JywgMjogJzIg0JrQstCw0YDRgtCw0LsnLCAzOiAnMyDQmtCy0LDRgNGC0LDQuycsIDQ6ICc0INCa0LLQsNGA0YLQsNC7JywgfSlbTWF0aC5mbG9vcigoKG5ldyBEYXRlKS5nZXRNb250aCgpKSAvIDMpICsgMV1cclxuICAgIH0vKixcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBEYXRlUmFuZ2U6IGZ1bmN0aW9uICh4KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlBhcmVudC5Qcm90by5EYXRhLkRhdGVzUmVzdWx0O1xyXG4gICAgICAgIH1cclxuICAgIH0qL1xyXG59KTtcclxuIiwiRGFzaC5TaXhOSy5TaXhOS1BhcnQxID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TktQYXJ0MScsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ1NpeE5LLWNvbnRlbnQnLFxyXG4gICAgUGFyZW50OiBEYXNoLlNpeE5LLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJy5zaXgtbmsgLnJlcS10YWIucDEnXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuYDxkaXYgY2xhc3M9XCJkYXRhLXBhcnRcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJjZW50ZXIgYm9yZGVyIHN0cm9uZ1wiPjEuINCc0LDRgtC10YDQuNCw0LvRjNC90L4t0YLQtdGF0L3QuNGH0LXRgdC60LDRjyDQsdCw0LfQsDwvZGl2PlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicmlnaHRcIj7QmtC+0LTRiyDQv9C+INCe0JrQldCYOiDQtdC00LjQvdC40YbQsCAtIDY0Mjsg0LrQstCw0LTRgNCw0YLQvdGL0Lkg0LzQtdGC0YAgLSAwNTU8L2Rpdj5cclxuICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7ihJYg0YHRgtGA0L7QutC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIj7QntCx0YrQtdC60YLRiyDQutGD0LvRjNGC0YPRgNC90L7Qs9C+INC90LDRgdC70LXQtNC40Y88L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiPtCX0LTQsNC90LjRjyAo0L/QvtC80LXRidC10L3QuNGPKSDQtNC+0YHRgtGD0L/QvdGLINC00LvRjyDQu9C40YYg0YEg0L3QsNGA0YPRiNC10L3QuNGP0LzQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0J/Qu9C+0YnQsNC00Ywg0L/QvtC80LXRidC10L3QuNC5LDxicj4g0LrQsi4g0Lw8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiPtCf0LvQvtGJ0LDQtNGMINC/0L7QvNC10YnQtdC90LjQuSDQv9C+INGE0L7RgNC80LUgPGJyPiDQv9C+0LvRjNC30L7QstCw0L3QuNGPICjQuNC3INCz0YAuIDcpLCDQutCyLiDQvDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0KLQtdGF0L3QuNGH0LXRgdC60L7QtSDRgdC+0YHRgtC+0Y/QvdC40LUg0L/QvtC80LXRidC10L3QuNC5ICjQuNC3INCz0YAuIDEwKSwg0LrQsi4g0Lw8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0YTQtdC00LXRgNCw0LvRjNC90L7Qs9C+INC30L3QsNGH0LXQvdC40Y8gKNC00LAgLSAxLCDQvdC10YIgLSAwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtGA0LXQs9C40L7QvdCw0LvRjNC90L7Qs9C+INC30L3QsNGH0LXQvdC40Y8gKNC00LAgLSAxLCAgICAg0L3QtdGCIC0gMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7Qt9GA0LXQvdC40Y8gKNC00LAgLSAxLCDQvdC10YIgLSAwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtGB0LvRg9GF0LAgICAo0LTQsCAtIDEsINC90LXRgiAtIDApPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L7Qv9C+0YDQvdC+0LTQstC40LPQsNGC0LXQu9GM0L3QvtCz0L4g0LDQv9C/0LDRgNCw0YLQsCAo0LTQsCAtMSwg0L3QtdGCIC0gMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LTQu9GPINGF0YDQsNC90LXQvdC40Y8g0YTQvtC90LTQvtCyICjQuNC3INCz0YAuIDcpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LTQu9GPINC+0LHRgdC70YPQttC40LLQsNC90LjRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuSAo0LjQtyDQs9GALiA3KTwvdGg+XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCyINC+0L/QtdGA0LDRgtC40LLQvdC+0Lwg0YPQv9GA0LDQstC70LXQvdC40Lg8L3RoPlx0XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC/0L4g0LTQvtCz0L7QstC+0YDRgyDQsNGA0LXQvdC00Ys8L3RoPlx0XHRcdFx0XHRcdFx0XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC/0YDQvtGH0LjQtTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtGC0YDQtdCx0YPQtdGCINC60LDQv9C40YLQsNC70YzQvdC+0LPQviDRgNC10LzQvtC90YLQsDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCw0LLQsNGA0LjQudC90L7QtTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MjwvdGg+PHRoPjM8L3RoPjx0aD40PC90aD48dGg+NTwvdGg+PHRoPjY8L3RoPjx0aD43PC90aD48dGg+ODwvdGg+PHRoPjk8L3RoPjx0aD4xMDwvdGg+PHRoPjExPC90aD48dGg+MTI8L3RoPjx0aD4xMzwvdGg+PHRoPjE0PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4wMTwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0KfQuNGB0LvQviDQv9GD0L3QutGC0L7QsiDQstC90LUg0YHRgtCw0YbQuNC+0L3QsNGA0L3QvtCz0L4g0L7QsdGB0LvRg9C20LjQstCw0L3QuNGPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5INCx0LjQsdC70LjQvtGC0LXQutC4LDxicj7QtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiPtCn0LjRgdC70L4g0L/QvtGB0LDQtNC+0YfQvdGL0YUg0LzQtdGB0YIg0LTQu9GPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5LCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNFwiPtCd0LDQu9C40YfQuNC1INCw0LLRgtC+0LzQsNGC0LjQt9C40YDQvtCy0LDQvdC90YvRhSDRgtC10YXQvdC+0LvQvtCz0LjQuSAo0LTQsCAtIDEsINC90LXRgiAtIDApPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCy0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSAo0LjQtyDQs9GALjE2KSDQutC+0LzQv9GM0Y7RgtC10YDQuNC30L7QstCw0L3QvdGL0YUsINGBINCy0L7Qt9C80L7QttC90L7RgdGC0YzRjiDQtNC+0YHRgtGD0L/QsCA8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSAo0LjQtyDQs9GALjE2KSA8YnI+0YEg0LLQvtC30LzQvtC20L3QvtGB0YLRjNGOINCy0YvRhdC+0LTQsCDQsiDQmNC90YLQtdGA0L3QtdGCPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L7QsdGA0LDQsdC+0YLQutC4INC/0L7RgdGC0YPQv9C70LXQvdC40LkgPGJyPtC4INCy0LXQtNC10L3QuNGPINGN0LvQtdC60YLRgNC+0L3QvdC+0LPQviDQutCw0YLQsNC70L7Qs9CwICjQutCw0YLQsNC70L7Qs9C40LfQsNGG0LjRjyDQuCDQvdCw0YPRh9C90LDRjyDQvtCx0YDQsNCx0L7RgtC60LApPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L7RgNCz0LDQvdC40LfQsNGG0LjQuCDQuCDRg9GH0LXRgtCwINCy0YvQtNCw0YfQuCDRhNC+0L3QtNC+0LIgKNC60L3QuNCz0L7QstGL0LTQsNGH0LApPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L7RgNCz0LDQvdC40LfQsNGG0LjQuCDQuCDRg9GH0LXRgtCwINC00L7RgdGC0YPQv9CwINC/0L7RgdC10YLQuNGC0LXQu9C10LkgKNC+0LHRgdC70YPQttC40LLQsNC90LjQtSk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7Rg9GH0LXRgtCwINC00L7QutGD0LzQtdC90YLQvtCyINCx0LjQsdC70LjQvtGC0LXRh9C90L7Qs9C+INGE0L7QvdC00LAgKNGD0YfQtdGCINGE0L7QvdC00L7Qsik8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+MTwvdGg+PHRoPjE1PC90aD48dGg+MTY8L3RoPjx0aD4xNzwvdGg+PHRoPjE4PC90aD48dGg+MTk8L3RoPjx0aD4yMDwvdGg+PHRoPjIxPC90aD48dGg+MjI8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjAxPC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG4gICAgXHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPuKEliDRgdGC0YDQvtC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtCn0LjRgdC70L4g0LXQtNC40L3QuNGGINGB0L/QtdGG0LjQsNC70LjQt9C40YDQvtCy0LDQvdC90L7Qs9C+INC+0LHQvtGA0YPQtNC+0LLQsNC90LjRjyDQtNC70Y8g0LjQvdCy0LDQu9C40LTQvtCyPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7Rh9C40YHQu9C+INC10LTQuNC90LjRhiDQutC+0L/QuNGA0L7QstCw0LvRjNC90L4t0LzQvdC+0LbQuNGC0LXQu9GM0L3QvtC5INGC0LXRhdC90LjQutC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIj7Rh9C40YHQu9C+INGC0YDQsNC90YHQv9C+0YDRgtC90YvRhSDRgdGA0LXQtNGB0YLQsiwg0LXQtNC40L3QuNGGPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCy0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQtNC70Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10Lkg0LHQuNCx0LvQuNC+0YLQtdC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQtNC70Y8g0L7RhtC40YTRgNC+0LLQutC4INGE0L7QvdC00LA8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0YfQuNGB0LvQviDRgdC/0LXRhtC40LDQu9C40LfQuNGA0L7QstCw0L3QvdGL0YUg0YLRgNCw0L3RgdC/0L7RgNGC0L3Ri9GFINGB0YDQtdC00YHRgtCyPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPjE8L3RoPjx0aD4yMzwvdGg+PHRoPjI0PC90aD48dGg+MjU8L3RoPjx0aD4yNjwvdGg+PHRoPjI3PC90aD48dGg+Mjg8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjAxPC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gXHJcbn0pOyIsIkRhc2guU2l4TksuU2l4TktQYXJ0MiA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ1NpeE5LUGFydDInLFxyXG4gICAgVGFyZ2V0OiAnJyxcclxuICAgIFR5cGU6ICdTaXhOSy1jb250ZW50JyxcclxuICAgIFBhcmVudDogRGFzaC5TaXhOSyxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcuc2l4LW5rIC5yZXEtdGFiLnAyJ1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwiZGF0YS1wYXJ0XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwic3Ryb25nIGJvcmRlclwiPjIuINCk0L7RgNC80LjRgNC+0LLQsNC90LjQtSDQuCDQuNGB0L/QvtC70YzQt9C+0LLQsNC90LjQtSDQsdC40LHQu9C40L7RgtC10YfQvdC+0LPQviDRhNC+0L3QtNCwINC90LAg0YTQuNC30LjRh9C10YHQutC40YUgKNC80LDRgtC10YDQuNCw0LvRjNC90YvRhSkg0L3QvtGB0LjRgtC10LvRj9GFPC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyaWdodFwiPtCa0L7QtCDQv9C+INCe0JrQldCYOiDQtdC00LjQvdC40YbQsCAtIDY0MjwvZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtCd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDQv9C+0LrQsNC30LDRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7ihJYg0YHRgtGA0L7QutC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QktGB0LXQs9C+ICjRgdGD0LzQvNCwINCz0YAuIDQgLSA3KSDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNFwiPtCSINGC0L7QvCDRh9C40YHQu9C1ICjQuNC3INCz0YAuIDMpLCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtCU0L7QutGD0LzQtdC90YLRiyDQsiDRgdC/0LXRhtC40LDQu9GM0L3Ri9GFINGE0L7RgNC80LDRgtCw0YUg0LTQu9GPINGB0LvQtdC/0YvRhSDQuCDRgdC70LDQsdC+0LLQuNC00Y/RidC40YUsINC10LTQuNC90LjRhiAo0LjQtyDQs9GALiAzKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0JjQtyDQvtCx0YnQtdCz0L4g0L7QsdGK0LXQvNCwINGE0L7QvdC00LAgKNC40Lcg0LPRgC4gMyksINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7Qv9C10YfQsNGC0L3Ri9C1ICDQuNC30LTQsNC90LjRjyDQuCDQvdC10L7Qv9GD0LHQu9C40LrQvtCy0LDQvS3QvdGL0LUg0LTQvtC60YPQvNC10L3RgtGLPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0Y3Qu9C10LrRgtGA0L7QvdC90YvQtSDQtNC+0LrRg9C80LXQvdGC0Ysg0L3QsCDRgdGK0LXQvNC90YvRhSDQvdC+0YHQuNGC0LXQu9GP0YU8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QtNC+0LrRg9C80LXQvdGC0Ysg0L3QsCDQvNC40LrRgNC+0YTQvtGA0LzQsNGFPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LTQvtC60YPQvNC10L3RgtGLINC90LAg0LTRgNGD0LPQuNGFINCy0LjQtNCw0YUg0L3QvtGB0LjRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L3QsCDRj9C30YvQutCw0YUg0L3QsNGA0L7QtNC+0LIg0KDQvtGB0YHQuNC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L3QsCDQuNC90L7RgdGC0YDQsNC90L3Ri9GFINGP0LfRi9C60LDRhTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MjwvdGg+PHRoPjM8L3RoPjx0aD40PC90aD48dGg+NTwvdGg+PHRoPjY8L3RoPjx0aD43PC90aD48dGg+ODwvdGg+PHRoPjwvdGg+PHRoPjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcblxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZD7Qn9C+0YHRgtGD0L/QuNC70L4g0LTQvtC60YPQvNC10L3RgtC+0LIg0LfQsCDQvtGC0YfQtdGC0L3Ri9C5INCz0L7QtCwg0LXQtNC40L3QuNGGPC90ZD48dGQgIGNsYXNzPVwiY2VudGVyXCI+MDI8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0JLRi9Cx0YvQu9C+INC00L7QutGD0LzQtdC90YLQvtCyINC30LAg0L7RgtGH0LXRgtC90YvQuSDQs9C+0LQsINC10LTQuNC90LjRhjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+MDM8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0KHQvtGB0YLQvtC40YIg0LTQvtC60YPQvNC10L3RgtC+0LIg0L3QsCDQutC+0L3QtdGGINC+0YLRh9C10YLQvdC+0LPQviDQs9C+0LTQsCwg0LXQtNC40L3QuNGGPC90ZD48dGQgY2xhc3M9XCJjZW50ZXJcIj4wNDwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZD7Qn9C10YDQtdCy0LXQtNC10L3QviDQsiDRjdC70LXQutGC0YDQvtC90L3Rg9GOINGE0L7RgNC80YMg0LfQsCDQvtGC0YfQtdGC0L3Ri9C5INCz0L7QtCwg0LXQtNC40L3QuNGGPC90ZD48dGQgY2xhc3M9XCJjZW50ZXJcIj4wNTwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+PHRkPjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YFxyXG59KTsiLCJEYXNoLlNpeE5LLlNpeE5LUGFydDMgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdTaXhOS1BhcnQzJyxcclxuICAgIFRhcmdldDogJycsXHJcbiAgICBUeXBlOiAnU2l4TkstY29udGVudCcsXHJcbiAgICBQYXJlbnQ6IERhc2guU2l4TkssXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnNpeC1uayAucmVxLXRhYi5wMydcclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdiBjbGFzcz1cImRhdGEtcGFydFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cInN0cm9uZyBib3JkZXJcIj4zLiDQrdC70LXQutGC0YDQvtC90L3Ri9C1ICjRgdC10YLQtdCy0YvQtSkg0YDQtdGB0YPRgNGB0Ys8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+0JrQvtC0INC/0L4g0J7QmtCV0Jg6INC10LTQuNC90LjRhtCwIC0gNjQyPC9kaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0J3QsNC40LzQtdC90L7QstCw0L3QuNC1INC/0L7QutCw0LfQsNGC0LXQu9C10Lk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPuKEliDRgdGC0YDQvtC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiPtCe0LHRitC10Lwg0Y3Qu9C10LrRgtGA0L7QvdC90L7Qs9C+INC60LDRgtCw0LvQvtCz0LA8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiPtCe0LHRitC10Lwg0Y3Qu9C10LrRgtGA0L7QvdC90L7QuSAo0YbQuNGE0YDQvtCy0L7QuSkg0LHQuNCx0LvQuNC+0YLQtdC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiPtCY0L3RgdGC0LDQu9C70LjRgNC+0LLQsNC90L3Ri9C1INC00L7QutGD0LzQtdC90YLRizwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0KHQtdGC0LXQstGL0LUg0YPQtNCw0LvQtdC90L3Ri9C1INC70LjRhtC10L3Qt9C40L7QvdC90YvQtSDQtNC+0LrRg9C80LXQvdGC0Ys8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L7QsdGJ0LXQtSDRh9C40YHQu9C+INC30LDQv9C40YHQtdC5LCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSAo0LjQtyDQs9GALiAzKSDRh9C40YHQu9C+INC30LDQv9C40YHQtdC5LCDQtNC+0YHRgtGD0L/QvdGL0YUg0LIg0JjQvdGC0LXRgNC90LXRgtC1LCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QvtCx0YnQtdC1INGH0LjRgdC70L4g0YHQtdGC0LXQstGL0YUg0LvQvtC60LDQu9GM0L3Ri9GFINC00L7QutGD0LzQtdC90YLQvtCyLCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSAo0LjQtyDQs9GALiA1KSDRh9C40YHQu9C+INC00L7QutGD0LzQtdC90YLQvtCyINCyINC+0YLQutGA0YvRgtC+0Lwg0LTQvtGB0YLRg9C/0LUsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtGH0LjRgdC70L4g0LHQsNC3INC00LDQvdC90YvRhSwg0LXQtNC40L3QuNGGPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LIg0L3QuNGFINC/0L7Qu9GC0L3QvtGC0LXQutGB0YLQvtCy0YvRhSDQtNC+0LrRg9C80LXQvdGC0L7Qsiwg0LXQtNC40L3QuNGGPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0YfQuNGB0LvQviDQsdCw0Lcg0LTQsNC90L3Ri9GFLCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QsiDQvdC40YUg0L/QvtC70YLQvdC+0YLQtdC60YHRgtC+0LLRi9GFINC00L7QutGD0LzQtdC90YLQvtCyLCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+MTwvdGg+PHRoPjI8L3RoPjx0aD4zPC90aD48dGg+NDwvdGg+PHRoPjU8L3RoPjx0aD42PC90aD48dGg+NzwvdGg+PHRoPjg8L3RoPjx0aD45PC90aD48dGg+MTA8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZD7QodC+0LfQtNCw0L3Qviwg0L/RgNC40L7QsdGA0LXRgtC10L3QviDQt9CwINC+0YLRh9C10YLQvdGL0Lkg0LPQvtC0LCDQtdC00LjQvdC40YY8L3RkPjx0ZCBjbGFzcz1cImNlbnRlclwiPjA2PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkPtCS0YvQsdGL0LvQviDQt9CwINC+0YLRh9C10YLQvdGL0Lkg0LPQvtC0LCDQtdC00LjQvdC40YY8L3RkPjx0ZCBjbGFzcz1cImNlbnRlclwiPjA3PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkPtCe0LHRitC10Lwg0L3QsCDQutC+0L3QtdGGINC+0YLRh9C10YLQvdC+0LPQviDQs9C+0LTQsCwg0LXQtNC40L3QuNGGPC90ZD48dGQgY2xhc3M9XCJjZW50ZXJcIj4wODwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJ3aWQtMTAwXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtcm93XCI+PGRpdj7QndCw0LvQuNGH0LjQtSDQtNC+0YHRgtGD0L/QsCDQsiDQmNC90YLQtdGA0L3QtdGCICjQtNCwIC0gMSwg0L3QtdGCIC0gMCkgKDA5KTwvZGl2PjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgZmxleDEgY2VudGVyXCI+MTwvZGl2PjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXJvd1wiPjxkaXY+0J3QsNC70LjRh9C40LUg0LLQvtC30LzQvtC20L3QvtGB0YLQuCDQtNC+0YHRgtGD0L/QsCDQsiDQmNC90YLQtdGA0L3QtdGCINC00LvRjyDQv9C+0YHQtdGC0LjRgtC10LvQtdC5ICjQtNCwIC0gMSwg0L3QtdGCIC0gMCkgKDEwKTwvZGl2PjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgZmxleDEgY2VudGVyXCI+MTwvZGl2PjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXJvd1wiPjxkaXY+0J3QsNC70LjRh9C40LUg0YHQvtCx0YHRgtCy0LXQvdC90L7Qs9C+INCY0L3RgtC10YDQvdC10YIt0YHQsNC50YLQsCDQuNC70Lgg0JjQvdGC0LXRgNC90LXRgi3RgdGC0YDQsNC90LjRhtGLINCx0LjQsdC70LjQvtGC0LXQutC4ICjQtNCwIC0gMSwg0L3QtdGCIC0gMCkgKDExKTwvZGl2PjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgZmxleDEgY2VudGVyXCI+MDwvZGl2PjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXJvd1wiPjxkaXY+0J3QsNC70LjRh9C40LUg0JjQvdGC0LXRgNC90LXRgi3RgdCw0LnRgtCwINC40LvQuCDQmNC90YLQtdGA0L3QtdGCLdGB0YLRgNCw0L3QuNGG0YssINC00L7RgdGC0YPQv9C90L7Qs9C+INC00LvRjyDRgdC70LXQv9GL0YUg0Lgg0YHQu9Cw0LHQvtCy0LjQtNGP0YnQuNGFICjQtNCwIC0gMSwg0L3QtdGCIC0gMCkgKDEyKTwvZGl2PjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgZmxleDEgY2VudGVyXCI+MDwvZGl2PjwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PmBcclxufSk7IiwiRGFzaC5TaXhOSy5TaXhOS1BhcnQ0ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TktQYXJ0NCcsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ1NpeE5LLWNvbnRlbnQnLFxyXG4gICAgUGFyZW50OiBEYXNoLlNpeE5LLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJy5zaXgtbmsgLnJlcS10YWIucDQnXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuYDxkaXYgY2xhc3M9XCJkYXRhLXBhcnRcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJzdHJvbmcgYm9yZGVyXCI+NC4g0KfQuNGB0LvQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuSDQuCDQv9C+0YHQtdGJ0LXQvdC40Lkg0LHQuNCx0LvQuNC+0YLQtdC60Lg8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI1XCI+0KfQuNGB0LvQviDQt9Cw0YDQtdCz0LjRgdGC0YDQuNGA0L7QstCw0L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10Lkg0LHQuNCx0LvQuNC+0YLQtdC60LgsINGH0LXQu9C+0LLQtdC6PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7Qp9C40YHQu9C+INC/0L7RgdC10YnQtdC90LjQuSDQsdC40LHQu9C40L7RgtC10LrQuCwg0L/QvtGB0LXRidC10L3QuNC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIj7Qp9C40YHQu9C+INC+0LHRgNCw0YnQtdC90LjQuSA8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7QsiDRgtC+0Lwg0YfQuNGB0LvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuSwg0L7QsdGB0LvRg9C20LXQvdC90YvRhSDQsiDRgdGC0LXQvdCw0YUg0LHQuNCx0LvQuNC+0YLQtdC60LggKNC40Lcg0LPRgC4gMik8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtCyINGC0L7QvCDRh9C40YHQu9C1INGD0LTQsNC70LXQvdC90YvRhSDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuSAo0LjQtyDQs9GALiAyKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0LjQtyDQvdC40YUg0LTQu9GPINC/0L7Qu9GD0YfQtdC90LjRjyDQsdC40LHQu9C40L7RgtC10YfQvdC+LdC40L3RhNC+0YDQvNCw0YbQuNC+0L3QvdGL0YUg0YPRgdC70YPQsyAo0LjQtyDQs9GALiA3KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0YfQuNGB0LvQviDQv9C+0YHQtdGJ0LXQvdC40Lkg0LzQsNGB0YHQvtCy0YvRhSDQvNC10YDQvtC/0YDQuNGP0YLQuNC5ICjQuNC3INCz0YAuIDcpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QuNC3INC90LjRhSDQvtCx0YDQsNGJ0LXQvdC40Lkg0Log0LLQtdCxLdGB0LDQudGC0YMgKNC40Lcg0LPRgC4gMTApPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCy0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSAo0LjQtyDQs9GALiAzKSDQtNC10YLQuCDQtNC+IDE0INC70LXRgiDQstC60LvRjtGH0LjRgtC10LvRjNC90L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSAo0LjQtyDQs9GALiAzKSDQvNC+0LvQvtC00LXQttGMIDE1IC0gMzAg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPjE8L3RoPjx0aD4yPC90aD48dGg+MzwvdGg+PHRoPjQ8L3RoPjx0aD41PC90aD48dGg+NjwvdGg+PHRoPjc8L3RoPjx0aD44PC90aD48dGg+OTwvdGg+PHRoPjEwPC90aD48dGg+MTE8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjEyPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A0TDEyVjJ9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNEwxMlYzfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDRMMTJWNH19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A0TDEyVjV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNEwxMlY2fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDRMMTJWN319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A0TDEyVjh9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNEwxMlY5fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDRMMTJWMTB9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNEwxMlYxMX19PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBQNEwxMlYyOiAwLFxyXG4gICAgICAgIFA0TDEyVjM6IDAsXHJcbiAgICAgICAgUDRMMTJWNDogMCxcclxuICAgICAgICBQNEwxMlY1OiAwLFxyXG4gICAgICAgIFA0TDEyVjY6IDAsXHJcbiAgICAgICAgUDRMMTJWNzogMCxcclxuICAgICAgICBQNEwxMlY4OiAwLFxyXG4gICAgICAgIFA0TDEyVjk6IDAsXHJcbiAgICAgICAgUDRMMTJWMTA6IDAsXHJcbiAgICAgICAgUDRMMTJWMTE6IDAsXHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5QYXJlbnQuVXBkYXRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLlBhcmVudC5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgICAgICB0aGlzLlBhcmVudC5VcGRhdGVkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgTG9hZDogJ3RhYmxlJyxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2hEYXRhID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMuUHJvdG8uRGF0YSlcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGFba2V5XSA9IGRhdGFba2V5XTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTsiLCJEYXNoLlNpeE5LLlNpeE5LUGFydDUgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdTaXhOS1BhcnQ1JyxcclxuICAgIFRhcmdldDogJycsXHJcbiAgICBUeXBlOiAnU2l4TkstY29udGVudCcsXHJcbiAgICBQYXJlbnQ6IERhc2guU2l4TkssXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnNpeC1uayAucmVxLXRhYi5wNSdcclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdiBjbGFzcz1cImRhdGEtcGFydFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cInN0cm9uZyBib3JkZXJcIj41LiDQkdC40LHQu9C40L7RgtC10YfQvdC+LdC40L3RhNC+0YDQvNCw0YbQuNC+0L3QvdC+0LUg0L7QsdGB0LvRg9C20LjQstCw0L3QuNC1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5PC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyaWdodFwiPtCa0L7QtCDQv9C+INCe0JrQldCYOiDQtdC00LjQvdC40YbQsCAtIDY0MjwvZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtCa0LDRgtC10LPQvtGA0LjQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI1XCI+0JLRi9C00LDQvdC+ICjQv9GA0L7RgdC80L7RgtGA0LXQvdC+KSDQtNC+0LrRg9C80LXQvdGC0L7QsiDQuNC3INGE0L7QvdC00L7QsiDQtNCw0L3QvdC+0Lkg0LHQuNCx0LvQuNC+0YLQtdC60LgsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0JLRi9C00LDQvdC+ICjQv9GA0L7RgdC80L7RgtGA0LXQvdC+KSDQtNC+0LrRg9C80LXQvdGC0L7QsiDQuNC3INGE0L7QvdC00L7QsiDQtNGA0YPQs9C40YUg0LHQuNCx0LvQuNC+0YLQtdC6LCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtCY0LfQs9C+0YLQvtCy0LvQtdC90L4g0LTQu9GPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7QktGL0L/QvtC70L3QtdC90L4g0YHQv9GA0LDQstC+0Log0Lgg0LrQvtC90YHRg9C70YzRgtCw0YbQuNC5LCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjRcIj7QsiDRgtC+0Lwg0YfQuNGB0LvQtSAo0LjQtyDQs9GALiAzKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0LIg0YLQvtC8INGH0LjRgdC70LUgKNC40Lcg0LPRgC4gOCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDRhNC+0L3QtNCwINC90LAg0YTQuNC30LjRh9C10YHQutC40YUg0L3QvtGB0LjRgtC10LvRj9GFPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5ICjRhtC40YTRgNC+0LLQvtC5KSDQsdC40LHQu9C40L7RgtC10LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40L3RgdGC0LDQu9C70LjRgNC+0LLQsNC90L3Ri9GFINC00L7QutGD0LzQtdC90YLQvtCyPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0YHQtdGC0LXQstGL0YUg0YPQtNCw0LvQtdC90L3Ri9GFINC70LjRhtC10L3Qt9C40L7QvdC90YvRhSDQtNC+0LrRg9C80LXQvdGC0L7QsjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC/0L7Qu9GD0YfQtdC90L3Ri9GFINC/0L4g0YHQuNGB0YLQtdC80LUg0JzQkdCQINC4INCc0JzQkdCQPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LTQvtGB0YLRg9C/0L3Ri9GFINCyINCy0LjRgNGC0YPQsNC70YzQvdGL0YUg0YfQuNGC0LDQu9GM0L3Ri9GFINC30LDQu9Cw0YU8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+MTwvdGg+PHRoPjI8L3RoPjx0aD4zPC90aD48dGg+NDwvdGg+PHRoPjU8L3RoPjx0aD42PC90aD48dGg+NzwvdGg+PHRoPjg8L3RoPjx0aD45PC90aD48dGg+MTA8L3RoPjx0aD4xMTwvdGg+PHRoPjEyPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0JIg0YHRgtCw0YbQuNC+0L3QsNGA0L3QvtC8INGA0LXQttC40LzQtTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTM8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTNWM319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDEzVjR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxM1Y1fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTNWNn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDEzVjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxM1Y4fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTNWOX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDEzVjEwfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTNWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxM1YxMn19PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkPtCyINGC0L7QvCDRh9C40YHQu9C1INC00LXRgtC4INC00L4gMTQg0LvQtdGCPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xNDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNFYzfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTRWNH19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE0VjV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNFY2fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTRWN319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE0Vjh9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNFY5fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTRWMTB9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNFYxMX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE0VjEyfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0LIg0YLQvtC8INGH0LjRgdC70LUg0LzQvtC70L7QtNC10LbRjCAxNCAtIDMwINC70LXRgjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTU8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTVWM319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE1VjR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNVY1fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTVWNn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE1Vjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNVY4fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTVWOX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE1VjEwfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTVWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNVYxMn19PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkPtCj0LTQsNC70LXQvdC90YvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Lg8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjE2PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE2VjN9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNlY0fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTZWNX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj5YPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE2Vjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNlYxMX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE2VjEyfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0JLRgdC10LPQviAo0YHRg9C80LzQsCDRgdGC0YDQvtC6IDEzINC4IDE2KTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTc8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTdWM319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE3VjR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxN1Y1fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTdWNn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE3Vjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxN1Y4fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTdWOX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE3VjEwfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTdWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxN1YxMn19PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBQNUwxM1YzOiAwLFxyXG4gICAgICAgIFA1TDEzVjQ6IDAsXHJcbiAgICAgICAgUDVMMTNWNTogMCxcclxuICAgICAgICBQNUwxM1Y2OiAwLFxyXG4gICAgICAgIFA1TDEzVjc6IDAsXHJcbiAgICAgICAgUDVMMTNWODogMCxcclxuICAgICAgICBQNUwxM1Y5OiAwLFxyXG4gICAgICAgIFA1TDEzVjEwOiAwLFxyXG4gICAgICAgIFA1TDEzVjExOiAwLFxyXG4gICAgICAgIFA1TDEzVjEyOiAwLFxyXG5cclxuICAgICAgICBQNUwxNFYzOiAwLFxyXG4gICAgICAgIFA1TDE0VjQ6IDAsXHJcbiAgICAgICAgUDVMMTRWNTogMCxcclxuICAgICAgICBQNUwxNFY2OiAwLFxyXG4gICAgICAgIFA1TDE0Vjc6IDAsXHJcbiAgICAgICAgUDVMMTRWODogMCxcclxuICAgICAgICBQNUwxNFY5OiAwLFxyXG4gICAgICAgIFA1TDE0VjEwOiAwLFxyXG4gICAgICAgIFA1TDE0VjExOiAwLFxyXG4gICAgICAgIFA1TDE0VjEyOiAwLFxyXG5cclxuICAgICAgICBQNUwxNVYzOiAwLFxyXG4gICAgICAgIFA1TDE1VjQ6IDAsXHJcbiAgICAgICAgUDVMMTVWNTogMCxcclxuICAgICAgICBQNUwxNVY2OiAwLFxyXG4gICAgICAgIFA1TDE1Vjc6IDAsXHJcbiAgICAgICAgUDVMMTVWODogMCxcclxuICAgICAgICBQNUwxNVY5OiAwLFxyXG4gICAgICAgIFA1TDE1VjEwOiAwLFxyXG4gICAgICAgIFA1TDE1VjExOiAwLFxyXG4gICAgICAgIFA1TDE1VjEyOiAwLFxyXG5cclxuICAgICAgICBQNUwxNlYzOiAwLFxyXG4gICAgICAgIFA1TDE2VjQ6IDAsXHJcbiAgICAgICAgUDVMMTZWNTogMCxcclxuICAgICAgICBQNUwxNlY2OiAwLFxyXG4gICAgICAgIFA1TDE2Vjc6IDAsXHJcbiAgICAgICAgUDVMMTZWODogMCxcclxuICAgICAgICBQNUwxNlY5OiAwLFxyXG4gICAgICAgIFA1TDE2VjEwOiAwLFxyXG4gICAgICAgIFA1TDE2VjExOiAwLFxyXG4gICAgICAgIFA1TDE2VjEyOiAwLFxyXG5cclxuICAgICAgICBQNUwxN1YzOiAwLFxyXG4gICAgICAgIFA1TDE3VjQ6IDAsXHJcbiAgICAgICAgUDVMMTdWNTogMCxcclxuICAgICAgICBQNUwxN1Y2OiAwLFxyXG4gICAgICAgIFA1TDE3Vjc6IDAsXHJcbiAgICAgICAgUDVMMTdWODogMCxcclxuICAgICAgICBQNUwxN1Y5OiAwLFxyXG4gICAgICAgIFA1TDE3VjEwOiAwLFxyXG4gICAgICAgIFA1TDE3VjExOiAwLFxyXG4gICAgICAgIFA1TDE3VjEyOiAwXHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5QYXJlbnQuVXBkYXRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLlBhcmVudC5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgICAgICB0aGlzLlBhcmVudC5VcGRhdGVkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgTG9hZDogJ3RhYmxlJyxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2hEYXRhID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMuUHJvdG8uRGF0YSlcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGFba2V5XSA9IGRhdGFba2V5XTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTsiLCJEYXNoLlNpeE5LLlNpeE5LUGFydDYgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdTaXhOS1BhcnQ2JyxcclxuICAgIFRhcmdldDogJycsXHJcbiAgICBUeXBlOiAnU2l4TkstY29udGVudCcsXHJcbiAgICBQYXJlbnQ6IERhc2guU2l4TkssXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnNpeC1uayAucmVxLXRhYi5wNidcclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdiBjbGFzcz1cImRhdGEtcGFydFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cInN0cm9uZyBib3JkZXJcIj42LiDQn9C10YDRgdC+0L3QsNC7INCx0LjQsdC70LjQvtGC0LXQutC4PC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyaWdodFwiPtCa0L7QtCDQv9C+INCe0JrQldCYOiDQtdC00LjQvdC40YbQsCAtIDY0MjwvZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiNVwiPuKEliDRgdGC0YDQvtC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiNVwiPtCo0YLQsNGCINCx0LjQsdC70LjQvtGC0LXQutC4INC90LAg0LrQvtC90LXRhiDQvtGC0YfQtdGC0L3QvtCz0L4g0LPQvtC00LAsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxNFwiPtCn0LjRgdC70LXQvdC90L7RgdGC0Ywg0YDQsNCx0L7RgtC90LjQutC+0LIsINGH0LXQu9C+0LLQtdC6PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCI0XCI+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCI0XCI+0LjQtyDQvdC40YUg0LjQvNC10Y7RgiDQuNC90LLQsNC70LjQtC3QvdC+0YHRgtGMPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjZcIj7QuNC3INC90LjRhSAo0LjQtyDQs9GALiAzKSDQvtGB0L3QvtCy0L3QvtC5INC/0LXRgNGB0L7QvdCw0Lsg0LHQuNCx0LvQuNC+0YLQtdC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiPtCyINGC0L7QvCDRh9C40YHQu9C1INGB0L4g0YHRgtCw0LbQtdC8INGA0LDQsdC+0YLRiyDQsiDQsdC40LHQu9C40L7RgtC10LrQsNGFICjQuNC3INCz0YAuIDUpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7QsiDRgtC+0Lwg0YfQuNGB0LvQtSDQv9C+INCy0L7Qt9GA0LDRgdGC0YMgKNC40Lcg0LPRgC4gNSk8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7QmNC3INC90LjRhSDQv9GA0L7RiNC70Lgg0L7QsdGD0YfQtdC90LjQtSAo0LjQvdGB0YLRgNGD0LrRgtC40YDQvi3QstCw0L3QuNC1KSDQv9C+INCy0L7Qv9GA0L7RgdCw0LwsINGB0LLRj9C30LDQvdC90YvQvCDRgSDQv9GA0LXQtNC+0YHRgtCw0LLQu9C1LdC90LjQtdC8INGD0YHQu9GD0LMg0LjQvdCy0LDQu9C40LTQsNC8ICjQuNC3INCz0YAuIDMpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjRcIj7QuNC3INC90LjRhSDQuNC80LXRjtGCINC+0LHRgNCw0LfQvtCy0LDQvdC40LUgKNC40Lcg0LPRgC4gNSk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtC+0YIgMCDQtNC+IDMg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7QvtGCIDMg0LTQviAxMCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtGB0LLRi9GI0LUgMTAg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7QtNC+IDMwINC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+0L7RgiAzMCDQtNC+IDU1INC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+NTUg0LvQtdGCINC4INGB0YLQsNGA0YjQtTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiPtCy0YvRgdGI0LXQtTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0YHRgNC10LTQvdC10LUg0L/RgNC+0YTQtdGB0YHQuNC+0L3QsNC70YzQvdC+0LU8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40Lcg0L3QuNGFINCx0LjQsdC70LjQvi3RgtC10YfQvdC+0LUgKNC40Lcg0LPRgC4gNyk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LHQuNCx0LvQuNC+LdGC0LXRh9C90L7QtSAo0LjQtyDQs9GALiA5KTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MjwvdGg+PHRoPjM8L3RoPjx0aD40PC90aD48dGg+NTwvdGg+PHRoPjY8L3RoPjx0aD43PC90aD48dGg+ODwvdGg+PHRoPjk8L3RoPjx0aD4xMDwvdGg+PHRoPjExPC90aD48dGg+MTI8L3RoPjx0aD4xMzwvdGg+PHRoPjE0PC90aD48dGg+MTU8L3RoPjx0aD4xNjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTg8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuXHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gXHJcbn0pOyIsIkRhc2guU2l4TksuU2l4TktQYXJ0NyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ1NpeE5LUGFydDcnLFxyXG4gICAgVGFyZ2V0OiAnJyxcclxuICAgIFR5cGU6ICdTaXhOSy1jb250ZW50JyxcclxuICAgIFBhcmVudDogRGFzaC5TaXhOSyxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcuc2l4LW5rIC5yZXEtdGFiLnA3J1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwiZGF0YS1wYXJ0XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwic3Ryb25nIGJvcmRlclwiPjcuINCf0L7RgdGC0YPQv9C70LXQvdC40LUg0Lgg0LjRgdC/0L7Qu9GM0LfQvtCy0LDQvdC40LUg0YTQuNC90LDQvdGB0L7QstGL0YUg0YHRgNC10LTRgdGC0LI8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+0JrQvtC0INC/0L4g0J7QmtCV0Jg6INGC0YvRgdGP0YfQsCDRgNGD0LHQu9C10LkgLSAzODQ8L2Rpdj5cclxuICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7ihJYg0YHRgtGA0L7QutC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7Qn9C+0YHRgtGD0L/QuNC70L4g0LfQsCDQs9C+0LQg0LLRgdC10LPQviAo0YHRg9C80LzQsCDQs9GA0LDRhCAzLCA0LCA1LCA5KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI3XCI+0LjQtyDQvdC40YUgKNC40Lcg0LPRgC4gMik8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QsdGO0LTQttC10YLQvdGL0LUg0LDRgdGB0LjQs9C90L7QstCw0L3QuNGPICDRg9GH0YDQtdC00LjRgtC10LvRjzwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0YTQuNC90LDQvdGB0LjRgNC+0LLQsNC90LjQtSDQuNC3INCx0Y7QtNC20LXRgtC+0LIg0LTRgNGD0LPQuNGFINGD0YDQvtCy0L3QtdC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QvtGCINC/0YDQuNC90L7RgdGP0YnQtdC5INC00L7RhdC+0LQg0LTQtdGP0YLQtdC70YzQvdC+0YHRgtC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7QuNC3INC90LjRhSAo0LjQtyDQs9GALjUpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QvtGCINGB0LTQsNGH0Lgg0LjQvNGD0YnQtdGB0YLQstCwINCyINCw0YDQtdC90LTRgzwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QvtGCINC+0YHQvdC+0LLQvdGL0YUg0LLQuNC00L7QsiDRg9GB0YLQsNCy0L3QvtC5INC00LXRj9GC0LXQu9GM0L3QvtGB0YLQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCx0LvQsNCz0L7RgtCy0L7RgNC40YLQtdC70YzQvdGL0LUg0Lgg0YHQv9C+0L3RgdC+0YDRgdC60LjQtSDQstC60LvQsNC00Ys8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QvtGCINC40L3QvtC5INC/0YDQuNC90L7RgdGP0YnQtdC5INC00L7RhdC+0LQg0LTQtdGP0YLQtdC70YzQvdC+0YHRgtC4PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPjE8L3RoPjx0aD4yPC90aD48dGg+MzwvdGg+PHRoPjQ8L3RoPjx0aD41PC90aD48dGg+NjwvdGg+PHRoPjc8L3RoPjx0aD44PC90aD48dGg+OTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTk8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuXHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7ihJYg0YHRgtGA0L7QutC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7QmNC30YDQsNGB0YXQvtC00L7QstCw0L3Qviwg0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI2XCI+0LjQtyDQvdC40YUgKNC40Lcg0LPRgC4gMTApPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0YDQsNGB0YXQvtC00Ysg0L3QsCDQvtC/0LvQsNGC0YMg0YLRgNGD0LTQsDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0L3QsCDQutC+0LzQv9C70LXQutGC0L7QstCw0L3QuNC1INGE0L7QvdC00LA8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40Lcg0L7QsdGJ0LjRhSDRgNCw0YHRhdC+0LTQvtCyINC90LAg0L7Qv9C70LDRgtGDINGC0YDRg9C00LAgKNC40Lcg0LPRgC4gMTEpINC+0YHQvdC+0LLQvdC+0LzRgyDQv9C10YDRgdC+0L3QsNC70YM8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQt9CwINGB0YfQtdGCINGB0L7QsdGB0YLQstC10L3QvdGL0YUg0YHRgNC10LTRgdGC0LIgKNC40Lcg0LPRgC4gMTIpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQviAo0LjQtyDQs9GALiAxMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQvdCwINC/0L7QtNC/0LjRgdC60YMg0L3QsCDQtNC+0YHRgtGD0L8g0Log0YPQtNCw0LvQtdC90L3Ri9C8INGB0LXRgtC10LLRi9C8INGA0LXRgdGD0YDRgdCw0LwgKNC40Lcg0LPRgC4gMTQpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LfQsCDRgdGH0LXRgiDRgdC+0LHRgdGC0LLQtdC90L3Ri9GFINGB0YDQtdC00YHRgtCyICjQuNC3INCz0YAuIDE1KTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MTA8L3RoPjx0aD4xMTwvdGg+PHRoPjEyPC90aD48dGg+MTM8L3RoPjx0aD4xNDwvdGg+PHRoPjE1PC90aD48dGg+MTY8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjE5PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcblxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI5XCI+0LjQtyDQvdC40YU8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIj7RgNCw0YHRhdC+0LTRiyDQvdCwINC60LDQv9C40YLQsNC70YzQvdGL0Lkg0YDQtdC80L7QvdGCINC4INGA0LXQutC+0L3RgdGC0YDRg9C60YbQuNGOPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7RgNCw0YHRhdC+0LTRiyDQvdCwINC/0YDQuNC+0LHRgNC10YLQtdC90LjQtSAo0LfQsNC80LXQvdGDKSDQvtCx0L7RgNGD0LTQvtCy0LDQvdC40Y88L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiPtC90LAg0L7RgNCz0LDQvdC40LfQsNGG0LjRjiDQuCDQv9GA0L7QstC10LTQtdC90LjQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIj7QvdCwINC40L3RhNC+0YDQvNCw0YLQuNC30LDRhtC40Y4g0LHQuNCx0LvQuNC+0YLQtdGH0L3QvtC5INC00LXRj9GC0LXQu9GM0L3QvtGB0YLQuCwg0LIg0YIu0YcuINGB0L7Qt9C00LDQvdC40LUg0Y3Qu9C10LrRgtGA0L7QvdC90YvRhSDQutCw0YLQsNC70L7Qs9C+0LIg0Lgg0L7RhtC40YTRgNC+0LLQutGDINCx0LjQsdC70LjQvtGC0LXRh9C90L7Qs9C+INGE0L7QvdC00LA8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQviAo0LjQtyDQs9GALiAxMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQt9CwINGB0YfQtdGCINGB0L7QsdGB0YLQstC10L3QvdGL0YUg0YHRgNC10LTRgdGC0LI8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+ICjQuNC3INCz0YAuIDEwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40Lcg0L3QuNGFINC00LvRjyDRg9C70YPRh9GI0LXQvdC40Y8g0YPRgdC70L7QstC40Lkg0LTQvtGB0YLRg9C/0L3QvtGB0YLQuCDQtNC70Y8g0LjQvdCy0LDQu9C40LTQvtCyINC4INC70LjRhiDRgSDQntCS0Jc8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQt9CwINGB0YfQtdGCINGB0L7QsdGB0YLQstC10L3QvdGL0YUg0YHRgNC10LTRgdGC0LIgKNC40Lcg0LPRgC4gMTkpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQviAo0LjQtyDQs9GALiAxMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQt9CwINGB0YfQtdGCINGB0L7QsdGB0YLQstC10L3QvdGL0YUg0YHRgNC10LTRgdGC0LI8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+ICjQuNC3INCz0YAuIDEwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40Lcg0L3QuNGFINC30LAg0YHRh9C10YIg0YHQvtCx0YHRgtCy0LXQvdC90YvRhSDRgdGA0LXQtNGB0YLQsjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MTc8L3RoPjx0aD4xODwvdGg+PHRoPjE5PC90aD48dGg+MjA8L3RoPjx0aD4yMTwvdGg+PHRoPjIyPC90aD48dGg+MjM8L3RoPjx0aD4yNDwvdGg+PHRoPjI1PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xOTwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG5cclxuICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICA8L3RhYmxlPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZmxleC1yb3cgd2lkLTEwMFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4MVwiPtCU0L7Qu9C20L3QvtGB0YLQvdC+0LUg0LvQuNGG0L4sINC+0YLQstC10YLRgdGC0LLQtdC90L3QvtC1INC30LAg0L/RgNC10LTQvtGB0YLQsNCy0LvQtdC90LjQtSDRgdGC0LDRgtC40YHRgtC40YfQtdGB0LrQvtC5INC40L3RhNC+0YDQvNCw0YbQuNC4ICjQu9C40YbQviwg0YPQv9C+0LvQvdC+0LzQvtGH0LXQvdC90L7QtSDQv9GA0LXQtNC+0YHRgtCw0LLQu9GP0YLRjCDRgdGC0LDRgtC40YHRgtC40YfQtdGB0LrRg9GOINC40L3RhNC+0YDQvNCw0YbQuNGOINC+0YIg0LjQvNC10L3QuCDRjtGA0LjQtNC40YfQtdGB0LrQvtCz0L4g0LvQuNGG0LApPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImRpdmlkZSBtYXItNyBmbGV4MVwiPjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmUgY2VudGVyXCI+0JfQsNCy0LXQtNGD0Y7RidC40Lkg0LHQuNCx0LvQuNC+0YLQtdC60L7QuTwvZGl2PjxkaXYgY2xhc3M9XCJkaXZpZGUtc3ViXCI+KNC00L7Qu9C20L3QvtGB0YLRjCk8L2Rpdj48L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZGl2aWRlIG1hci03IGZsZXgxXCI+PGRpdiBjbGFzcz1cInVuZGVybGluZVwiPjwvZGl2PjxkaXYgY2xhc3M9XCJkaXZpZGUtc3ViXCI+KNCkLtCYLtCeLik8L2Rpdj48L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZGl2aWRlIG1hci03IGZsZXgxXCI+PGRpdiBjbGFzcz1cInVuZGVybGluZVwiPjwvZGl2PjxkaXYgY2xhc3M9XCJkaXZpZGUtc3ViXCI+KNC/0L7QtNC/0LjRgdGMKTwvZGl2PjwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZmxleC1yb3cgd2lkLTEwMFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4MVwiPjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJkaXZpZGUgbWFyLTcgZmxleDFcIj48ZGl2IGNsYXNzPVwidW5kZXJsaW5lXCI+PC9kaXY+PGRpdiBjbGFzcz1cImRpdmlkZS1zdWJcIj4o0L3QvtC80LXRgCDQutC+0L3RgtCw0LrRgtC90L7Qs9C+INGC0LXQu9C10YTQvtC90LApPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImRpdmlkZSBtYXItNyBmbGV4MVwiPjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmVcIj48L2Rpdj48ZGl2IGNsYXNzPVwiZGl2aWRlLXN1YlwiPihFLW1haWwpPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImRpdmlkZSBtYXItNyBmbGV4MVwiPjxkaXYgY2xhc3M9XCJjZW50ZXIgdW5kZXJsaW5lXCI+wqtfX19fX1/CuyBfX19fX19fX19fX19fX19fIDIwX19fX18g0LPQvtC0PC9kaXY+PGRpdiBjbGFzcz1cImRpdmlkZS1zdWJcIj4o0LTQsNGC0LAg0YHQvtGB0YLQsNCy0LvQtdC90LjRjyDQtNC+0LrRg9C80LXQvdGC0LApPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgXHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YFxyXG5cclxufSk7IiwibGV0IENoZWNrQm94U2VsZWN0b3IgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2ZpbHRlci1zZWxlY3Rvci9maWx0ZXItc2VsZWN0b3IuanMnKTtcclxubGV0IFNpeE5LID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TksnLFxyXG4gICAgVGFyZ2V0OiAnJyxcclxuICAgIFR5cGU6ICdkYXNoLWNvbnRlbnQnLFxyXG4gICAgUGFyZW50OiBEYXNoLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtc2l4LW5rJ1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwic2l4LW5rXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZGlhcnktYnJlYWQgbC1yb3dcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibGkgZGF0ZS1yYW5nZVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FsZW5kYXItaWNvblwiPiYjMTI4MTk4OzwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZXNcIj48L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVzLXJlc3VsdFwiPlxyXG4gICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cInNlbGVjdC1zaXgtbmstcmFuZ2VcIj5cclxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMFwiPtCT0L7QtDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIxXCIge3tTZWxlY3RlZFExfX0+MSDQmtCy0LDRgNGC0LDQuzwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIyXCIge3tTZWxlY3RlZFEyfX0+MiDQmtCy0LDRgNGC0LDQuzwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIzXCIge3tTZWxlY3RlZFEzfX0+MyDQmtCy0LDRgNGC0LDQuzwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCI0XCIge3tTZWxlY3RlZFE0fX0+NCDQmtCy0LDRgNGC0LDQuzwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJsaSBsLXJvdyBsLWZsZXhhLWNlbnRlciBmbGV4LTEwMFwiPlxyXG4gICAgICAgICAgICA8ZGl2PtCf0L7QtNGA0LDQt9C00LXQu9C10L3QuNC1OiAmbmJzcDsmbmJzcDs8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtMTAwIGxpYnJhcnktdHJlZS1jb250cm9sIHN0cm9uZ1wiPl9fPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImxpIGJ1dHRvbi1ob2xkZXIgbC1yb3dcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGJ1dHRvbiBidG4tcmVmcmVzaFwiPtCe0LHQvdC+0LLQuNGC0Yw8L2J1dHRvbj4gXHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImxpIGJ1dHRvbi1ob2xkZXIgbC1yb3dcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGJ1dHRvbiBidXR0b24tZ2V0LXhsc1wiPtCt0LrRgdC/0L7RgNGCPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+IFxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwicGFydC1oZWFkZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBhY3RpdmUgbWFpblwiPtCT0JvQkNCS0J3QkNCvPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDFcIj7QnNCQ0KLQldCg0JjQkNCb0KzQndCeLdCi0JXQpdCd0JjQp9CV0KHQmtCQ0K8g0JHQkNCX0JA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBwMlwiPtCk0J7QoNCc0JjQoNCe0JLQkNCd0JjQlSDQpNCe0J3QlNCQINCd0JAg0KTQmNCX0JjQp9CV0KHQmtCY0KUg0J3QntCh0JjQotCV0JvQr9ClPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDNcIj7QrdCb0JXQmtCi0KDQntCd0J3Qq9CVINCg0JXQodCj0KDQodCrPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDRcIj7Qn9Ce0KHQldCp0JXQndCY0K8g0JHQmNCR0JvQmNCe0KLQldCa0Jg8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBwNVwiPtCY0J3QpNCe0KDQnNCQ0KbQmNCe0J3QndCe0JUg0J7QkdCh0JvQo9CW0JjQktCQ0J3QmNCVPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDZcIj7Qn9CV0KDQodCe0J3QkNCbPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDdcIj7QpNCY0J3QkNCd0KHQqzwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZGF0YS10YWJsZXNcIj5cclxuICAgICAgICBcclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gLFxyXG4gICAgR2V0U2V0OiB7XHJcbiAgICAgICAgZ2V0IEN1cnJlbnRMaWJyYXJpZXMoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUlETGlzdFNlbGVjdGVkO1xyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBEYXRlc1Jlc3VsdDogKHsxOiAnMSDQmtCy0LDRgNGC0LDQuycsIDI6ICcyINCa0LLQsNGA0YLQsNC7JywgMzogJzMg0JrQstCw0YDRgtCw0LsnLCA0OiAnNCDQmtCy0LDRgNGC0LDQuycsIH0pW01hdGguZmxvb3IoKChuZXcgRGF0ZSkuZ2V0TW9udGgoKSkgLyAzKSArIDFdLFxyXG4gICAgICAgIFNlbGVjdGVkUTE6IE1hdGguZmxvb3IoKChuZXcgRGF0ZSkuZ2V0TW9udGgoKSkgLyAzKSArIDEgPT09IDEgPyAnc2VsZWN0ZWQnIDogJycsXHJcbiAgICAgICAgU2VsZWN0ZWRRMjogTWF0aC5mbG9vcigoKG5ldyBEYXRlKS5nZXRNb250aCgpKSAvIDMpICsgMSA9PT0gMiA/ICdzZWxlY3RlZCcgOiAnJyxcclxuICAgICAgICBTZWxlY3RlZFEzOiBNYXRoLmZsb29yKCgobmV3IERhdGUpLmdldE1vbnRoKCkpIC8gMykgKyAxID09PSAzID8gJ3NlbGVjdGVkJyA6ICcnLFxyXG4gICAgICAgIFNlbGVjdGVkUTQ6IE1hdGguZmxvb3IoKChuZXcgRGF0ZSkuZ2V0TW9udGgoKSkgLyAzKSArIDEgPT09IDQgPyAnc2VsZWN0ZWQnIDogJydcclxuICAgIH0sXHJcbiAgICBTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoRGF0YSgpO1xyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuQnV0dG9uR2V0WExTID0gdGhpcy5TZWxlY3QoJy5idXR0b24tZ2V0LXhscycpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uUmVmcmVzaCA9IHRoaXMuU2VsZWN0KCcuYnRuLXJlZnJlc2gnKTtcclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNWaXNpYmxlKVxyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4vKiAgICAgICAgdGhpcy5EYXRlQ2hhbmdlZCA9IGZ1bmN0aW9uICh2YWwpIHtcclxuICAgICAgICAgICBjb25zb2xlLmxvZyh2YWwpO1xyXG4gICAgICAgIH07Ki9cclxuICAgICAgICB0aGlzLlJlZnJlc2hEYXRhID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyB0aGlzLlByb3RvLkRhdGEuRGF0ZXNSZXN1bHQgPSAoezE6ICcxINCa0LLQsNGA0YLQsNC7JywgMjogJzIg0JrQstCw0YDRgtCw0LsnLCAzOiAnMyDQmtCy0LDRgNGC0LDQuycsIDQ6ICc0INCa0LLQsNGA0YLQsNC7JywgfSlbcGFyc2VJbnQodGhpcy5SYW5nZVNlbGVjdG9yLnZhbHVlKV07XHJcbiAgICAgICAgICAgIHRoaXMuU2l4TktNYWluLlByb3RvLlNldFByb3BlcnR5KCdEYXRlUmFuZ2UnLCAgKHswOiAn0JPQvtC00L7QstCw0Y8nLCAxOiAnMSDQmtCy0LDRgNGC0LDQuycsIDI6ICcyINCa0LLQsNGA0YLQsNC7JywgMzogJzMg0JrQstCw0YDRgtCw0LsnLCA0OiAnNCDQmtCy0LDRgNGC0LDQuycsIH0pW3BhcnNlSW50KHRoaXMuUmFuZ2VTZWxlY3Rvci52YWx1ZSldKTtcclxuICAgICAgICAgICAgdGhpcy5TaXhOS1BhcnQ0LkxvYWQuU2hvdygpO1xyXG4gICAgICAgICAgICB0aGlzLlNpeE5LUGFydDUuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9TdW1tYXJ5XzZOS19HZXQodGhpcy5DdXJyZW50TGlicmFyaWVzLCAobmV3IERhdGUpLmdldEZ1bGxZZWFyKCksIHRoaXMuUmFuZ2VTZWxlY3Rvci52YWx1ZSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TaXhOS1BhcnQ0LlJlZnJlc2hEYXRhKHJbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2l4TktQYXJ0NS5SZWZyZXNoRGF0YShyWzBdKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TaXhOS1BhcnQ0LkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2l4TktQYXJ0NS5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuVXBkYXRlZCA9IHRydWU7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkdldFhMUyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy9JbnB1dEJveC5IaWRlKCk7XHJcbiAgICAgICAgICAgIC8vdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayh0aGlzLkJ1dHRvbkdldFhMUyk7XHJcbiAgICAgICAgICAgIGxldCBEdCA9IEx1cmUuRGF0ZSgpO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfU3VtbWFyeV82TktfR2V0WExTKHRoaXMuQ3VycmVudExpYnJhcmllcywgRHQuWWVhciwgdGhpcy5SYW5nZVNlbGVjdG9yLnZhbHVlLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAoQmxvYik9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLlNhdmVCbG9iKEJsb2IsIGA2LdCd0JogJHtEdC5Gb3JtYXQoJ1lZWVknKX0ueGxzeGApO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIENhdGNoOiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLkVycm9yKCfQndC10LLQvtC30LzQvtC20L3QviDQv9C+0LvRg9GH0LjRgtGMINC+0YLRh9C10YInKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UodGhpcy5CdXR0b25HZXRYTFMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIG5ldyBMaWJyYXJ5VHJlZSh0aGlzLCB0aGlzLlNlbGVjdCgnLmxpYnJhcnktdHJlZS1jb250cm9sJyksIHtNdWx0aVNlbGVjdDogdHJ1ZX0pO1xyXG4gICAgICAgIC8vIHRoaXMuU2l4TktNYWluLlByb3RvLlNldFByb3BlcnR5KCdEYXRlUmFuZ2UnLCAgKHswOiAn0JPQvtC00L7QstCw0Y8nLCAxOiAnMSDQmtCy0LDRgNGC0LDQuycsIDI6ICcyINCa0LLQsNGA0YLQsNC7JywgMzogJzMg0JrQstCw0YDRgtCw0LsnLCA0OiAnNCDQmtCy0LDRgNGC0LDQuycsIH0pW3RoaXMuUHJvdG8uRGF0YS5EYXRlc1Jlc3VsdF0pO1xyXG5cclxuICAgICAgICB0aGlzLlJhbmdlU2VsZWN0b3IgPSB0aGlzLlNlbGVjdCgnLnNlbGVjdC1zaXgtbmstcmFuZ2UnKTtcclxuICAgICAgICB0aGlzLlJhbmdlU2VsZWN0b3Iub25jaGFuZ2UgPSAoKSA9PiB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25HZXRYTFMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLkdldFhMUyk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25SZWZyZXNoLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5SZWZyZXNoRGF0YSk7XHJcbiAgICB9XHJcbn0pO1xyXG53aW5kb3cuRGFzaC5TaXhOSyA9IFNpeE5LO1xyXG5yZXF1aXJlKCcuL3BhcnRzL21haW4tcGFydC5qcycpO1xyXG5yZXF1aXJlKCcuL3BhcnRzL3BhcnQxLmpzJyk7XHJcbnJlcXVpcmUoJy4vcGFydHMvcGFydDIuanMnKTtcclxucmVxdWlyZSgnLi9wYXJ0cy9wYXJ0My5qcycpO1xyXG5yZXF1aXJlKCcuL3BhcnRzL3BhcnQ0LmpzJyk7XHJcbnJlcXVpcmUoJy4vcGFydHMvcGFydDUuanMnKTtcclxucmVxdWlyZSgnLi9wYXJ0cy9wYXJ0Ni5qcycpO1xyXG5yZXF1aXJlKCcuL3BhcnRzL3BhcnQ3LmpzJyk7XHJcbiIsImxldCBDaGVja0JveFNlbGVjdG9yID0gcmVxdWlyZSgnLi4vLi4vX2NvbW1vbi9maWx0ZXItc2VsZWN0b3IvZmlsdGVyLXNlbGVjdG9yLmpzJyk7XHJcbkRhc2guRGFzaFN1bW1hcnkgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIC8vRGlzYWJsZWQ6IHRydWUsXHJcbiAgICBOYW1lOiAnRGFzaFN1bW1hcnknLFxyXG4gICAgVGFyZ2V0OiAnJyxcclxuICAgIFR5cGU6ICdkYXNoLWNvbnRlbnQnLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGFzaC1zdW1tYXJ5J1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0RpY3Rpb25hcnkuUm9sZS5EYXNoYm9hcmRdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuICAgICAgICBgPGRpdiBjbGFzcz1cImRhc2gtc3VtbWFyeVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlhcnktYnJlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaSBkYXRlLXJhbmdlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhbGVuZGFyLWljb25cIj4mIzEyODE5ODs8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZXNcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZXMtcmVzdWx0XCI+e3tEYXRlc1Jlc3VsdH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaSBsLXJvdyBsLWZsZXhhLWNlbnRlciBmbGV4LTEwMFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+0J/QvtC00YDQsNC30LTQtdC70LXQvdC40LU6ICZuYnNwOyZuYnNwOzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTEwMCBsaWJyYXJ5LXRyZWUtY29udHJvbCBzdHJvbmdcIj5fXzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGkgYnV0dG9uLWhvbGRlciBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnRuLXJlZnJlc2hcIj7QntCx0L3QvtCy0LjRgtGMPC9idXR0b24+IFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGkgYnV0dG9uLWhvbGRlciBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnV0dG9uLWdldC14bHNcIj7QrdC60YHQv9C+0YDRgjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1bW1hcnktY29udGVudFwiPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PmAsXHJcbiAgICBQcm90bzoge1xyXG4gICAgICAgIC8vIE1vbnRoczogKG5ldyBBcnJheSgobmV3IERhdGUpLmdldE1vbnRoKCkgKyAxKSkuU2VsZWN0KCh4LCBpKSA9PiAoe01OdW06IGkgKyAxLCBOYW1lOiBMdXJlLkRhdGUoTHVyZS5EYXRlKCkuTW9udGhTdGFydC5zZXRNb250aChpKSkuRm9ybWF0KCdNTU1NIFlZWVknKSwgTm93OiAobmV3IERhdGUpLmdldE1vbnRoKCkgPT09IGkgPyAnc2VsZWN0ZWQnIDogJyd9KSksXHJcbiAgICAgICAgUGFydDEyMzY6IFtdLFxyXG4gICAgICAgIFBhcnQ0OiBbXSxcclxuICAgICAgICBQYXJ0NTogW10sXHJcbiAgICAgICAgRGF0ZXNSZXN1bHQ6IFsobmV3IERhdGUpLmdldE1vbnRoKCkgKyAxXVxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBEYXRlc1Jlc3VsdDogKHgpID0+IHgubGVuZ3RoID4gMCA/IHgubWFwKG0gPT4gTHVyZS5EYXRlKEx1cmUuRGF0ZSgpLk1vbnRoU3RhcnQuc2V0TW9udGgobSAtIDEpKS5Gb3JtYXQoJ01NTU0nKSkuam9pbignLCAnKSA6ICfQndC1INCy0YvQsdGA0LDQvdC+J1xyXG4gICAgfSxcclxuICAgIEdldFNldDoge1xyXG4gICAgICAgIGdldCBDdXJyZW50TGlicmFyaWVzKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5Qcm90by5EYXRhLkxpYnJhcnlJRExpc3RTZWxlY3RlZDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIGdldCBDdXJEYXRlcygpIHtcclxuICAgICAgICAvLyAvLyAgICAgbGV0IG0gPSB0aGlzLkRhdGVTZWxlY3Rvci52YWx1ZTtcclxuICAgICAgICAvLyAvLyAgICAgbGV0IGQgPSBMdXJlLkRhdGUoKS5Nb250aFN0YXJ0O1xyXG4gICAgICAgIC8vIC8vICAgICBkLnNldE1vbnRoKG0gLSAxKTtcclxuICAgICAgICAvLyAvLyAgICAgcmV0dXJuIFtkLCBMdXJlLkRhdGUoZCkuTW9udGhFbmRdO1xyXG4gICAgICAgIC8vICAgICByZXR1cm4gW25ldyBEYXRlKCksIG5ldyBEYXRlKCldXHJcbiAgICAgICAgLy8gfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnUkVGUkVTSCcpO1xyXG4gICAgICAgIGlmICh0aGlzLmlzVmlzaWJsZSkge1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcbiAgICAgICAgICAgIHRoaXMuaXNSZWZyZXNoZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ1NIT1cnKTtcclxuICAgICAgICBpZiAoIXRoaXMuaXNSZWZyZXNoZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIHRoaXMuaXNSZWZyZXNoZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IG0gPSAobmV3IERhdGUoKSkuZ2V0TW9udGgoKTtcclxuICAgICAgICB0aGlzLkRhdGVTZWxlY3RvciA9IHRoaXMuU2VsZWN0KCcuZGF0ZXMtc2VsZWN0b3InKTtcclxuICAgICAgICB0aGlzLkN1ckRhdGVzID0gWygobmV3IERhdGUpLmdldE1vbnRoKCkgKyAxKSArICcnXTtcclxuXHJcbiAgICAgICAgdGhpcy5CdXR0b25FeHBvcnQgPSB0aGlzLlNlbGVjdCgnLmJ1dHRvbi1nZXQteGxzJyk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25SZWZyZXNoID0gdGhpcy5TZWxlY3QoJy5idG4tcmVmcmVzaCcpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2hEYXRhID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5DdXJyZW50TGlicmFyaWVzLmxlbmd0aCA8IDEpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIGxldCBbZGF0ZVN0YXJ0LCBkYXRlRW5kXSA9IFtMdXJlLkRhdGUoTHVyZS5EYXRlKCkuTW9udGhTdGFydC5zZXRNb250aCh0aGlzLkN1ckRhdGVzWzBdIC0gMSkpLkRhdGUsIEx1cmUuRGF0ZShMdXJlLkRhdGUoKS5Nb250aFN0YXJ0LnNldE1vbnRoKHRoaXMuQ3VyRGF0ZXMuTGFzdCgpIC0gMSkpLk1vbnRoRW5kXTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coW2RhdGVTdGFydCwgZGF0ZUVuZF0pO1xyXG5cclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1N1bW1hcnlfUGFydDEyMzZWaWV3X0dldCh0aGlzLkN1cnJlbnRMaWJyYXJpZXMsIChuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSwgdGhpcy5DdXJEYXRlcywge30pXHJcbiAgICAgICAgICAgICAgICAudGhlbihkYXRhID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzID0ge3AxMTogW10sIHAxMjogW10sIHAyMTogW10sIHAyMjogW10sIHAyMzogW10sIHAzOiBbXSwgcDYxOiBbXSwgcDYyOiBbXX07XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgciBvZiBkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoci5EYXRlVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgLTE6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgci5EYXRlVmFsdWUgPSAn0KDQsNC90LXQtSc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgci5RUVEgPSAtMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIuRGF0ZVZhbHVlID0gJ9Cc0LXRgdGP0YYnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIuUVFRID0gLTI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEwMTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByLkRhdGVWYWx1ZSA9ICfQodGD0LzQvNCwJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByLlFRUSA9IC0yO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBbcDExLCBwMTIsIHAyMSwgcDIyLCBwMjMsIHAzLCBwNjEsIHA2Ml0gPSAobmV3IEFycmF5KDgpKS5TZWxlY3QoeCA9PiAoe0RhdGVWYWx1ZTogci5EYXRlVmFsdWUsIFFRUTogci5RUVEsIElzRGF5T2ZmOiByLklzRGF5T2ZmfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBrIGluIHIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoci5oYXNPd25Qcm9wZXJ0eShrKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGtbMV0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnMSc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUludChrLnN1YnN0cigzKSkgPj0gMjEgPyBwMTJba10gPSByW2tdIDogcDExW2tdID0gcltrXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICcyJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChrLnN1YnN0cigzKSkgPj0gMzQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcDIzW2tdID0gcltrXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChrLnN1YnN0cigzKSkgPD0gMTgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAyMVtrXSA9IHJba107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBwMjJba10gPSByW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJzMnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcDNba10gPSByW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJzYnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGtbMl0gPT09ICcxJykgcDYxW2tdID0gcltrXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChrWzJdID09PSAnMicpIHA2MltrXSA9IHJba107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucDExLnB1c2gocDExKTsgIC8vIFAxVjIgLi4gUDFWMjAgLSBwMTFcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnAxMi5wdXNoKHAxMik7ICAvLyBQMVYyMSAuLiBQMVYzNiAtIHAxMlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucDIxLnB1c2gocDIxKTsgIC8vIFAyVjIgLi4gUDJWMTggLSBwMjFcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnAyMi5wdXNoKHAyMik7ICAvLyBQMlYxOSAuLiBQMlYzMyAtIHAyMlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucDIzLnB1c2gocDIzKTsgIC8vIFAyVjM0IC4uIFAyVjQ0IC0gcDIzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5wMy5wdXNoKHAzKTsgICAgLy8gUDNWMiAuLiBQM1Y2IC0gcDNcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnA2MS5wdXNoKHA2MSk7ICAvLyBQNjFWMiAuLiBQNjFWNyAtIHA2MVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucDYyLnB1c2gocDYyKTsgIC8vIFA2MlYyIC4uIFA2MlYxNyAtIHA2MlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0MS5Qcm90by5EYXRhLnAxMSA9IHJlcy5wMTE7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0MS5Qcm90by5EYXRhLnAxMiA9IHJlcy5wMTI7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0MS5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0Mi5Qcm90by5EYXRhLnAyMSA9IHJlcy5wMjE7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0Mi5Qcm90by5EYXRhLnAyMiA9IHJlcy5wMjI7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0Mi5Qcm90by5EYXRhLnAyMyA9IHJlcy5wMjM7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0Mi5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0My5Qcm90by5EYXRhLnAzID0gcmVzLnAzO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFydDMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFydDYuUHJvdG8uRGF0YS5wNjEgPSByZXMucDYxO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFydDYuUHJvdG8uRGF0YS5wNjIgPSByZXMucDYyO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFydDYuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IGFwaS5EaWFyeV9TdW1tYXJ5UGFydDRfR2V0KHRoaXMuQ3VycmVudExpYnJhcmllcywgZGF0ZVN0YXJ0LCBkYXRlRW5kKSlcclxuICAgICAgICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFydDQuUHJvdG8uRGF0YS5QYXJ0NCA9IGRhdGEuZmlsdGVyKHggPT4gdGhpcy5DdXJEYXRlcy5pbmRleE9mKChMdXJlLkRhdGUoeC5EYXRlU3RhcnQpLk1vbnRoICsgMSkgKyAnJykgIT09IC0xIHx8IHRoaXMuQ3VyRGF0ZXMuaW5kZXhPZigoTHVyZS5EYXRlKHguRGF0ZUZpbmlzaCkuTW9udGggKyAxKSArICcnKSAhPT0gLTEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFydDQuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IGFwaS5EaWFyeV9TdW1tYXJ5UGFydDVfR2V0KHRoaXMuQ3VycmVudExpYnJhcmllcywgZGF0ZVN0YXJ0LCBkYXRlRW5kKSlcclxuICAgICAgICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFydDUuUHJvdG8uRGF0YS5QYXJ0NSA9IGRhdGEuZmlsdGVyKHggPT4gdGhpcy5DdXJEYXRlcy5pbmRleE9mKChMdXJlLkRhdGUoeC5EYXRlU3RhcnQpLk1vbnRoICsgMSkgKyAnJykgIT09IC0xIHx8IHRoaXMuQ3VyRGF0ZXMuaW5kZXhPZigoTHVyZS5EYXRlKHguRGF0ZUZpbmlzaCkuTW9udGggKyAxKSArICcnKSAhPT0gLTEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFydDUuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHRoaXMuTG9hZC5IaWRlKCkpXHJcbiAgICAgICAgICAgICAgICAuY2F0Y2goZSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkdldFhMUyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgbGV0IER0ID0gTHVyZS5EYXRlKHRoaXMuQ3VycmVudERhdGUpO1xyXG4gICAgICAgICAgICAvLyBsZXQgW2RhdGVTdGFydCwgZGF0ZUVuZF0gPSB0aGlzLkN1ckRhdGVzO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfU3VtbWFyeV9HZXRYTFModGhpcy5DdXJyZW50TGlicmFyaWVzLCAobmV3IERhdGUpLmdldEZ1bGxZZWFyKCksIHRoaXMuQ3VyRGF0ZXMsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChCbG9iKSA9PiBMdXJlLlNhdmVCbG9iKEJsb2IsIGDQodCy0L7QtNC90LDRjyDRgtCw0LHQu9C40YbQsCAke0R0LkZvcm1hdCgnTU1NTSBZWVlZJyl9Lnhsc3hgKSxcclxuICAgICAgICAgICAgICAgIENhdGNoOiAoKSA9PiBMdXJlLlN5c3RlbS5FcnJvcign0J3QtdCy0L7Qt9C80L7QttC90L4g0L/QvtC70YPRh9C40YLRjCDQvtGC0YfQtdGCJyksXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKSA9PiB0aGlzLkxvYWQuSGlkZSgpLFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5EYXRlQ2hhbmdlZCA9IGZ1bmN0aW9uIChtb250aHMpIHtcclxuICAgICAgICAgICAgaWYgKG1vbnRocy5sZW5ndGggPT09IDApIHJldHVybjtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnRGF0ZXNSZXN1bHQnLCBtb250aHMpO1xyXG4gICAgICAgICAgICB0aGlzLkN1ckRhdGVzID0gbW9udGhzO1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbigpIHtcclxuICAgICAgICBuZXcgTGlicmFyeVRyZWUodGhpcywgdGhpcy5TZWxlY3QoJy5saWJyYXJ5LXRyZWUtY29udHJvbCcpLCB7TXVsdGlTZWxlY3Q6IHRydWV9KTtcclxuICAgICAgICB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUlETGlzdFNlbGVjdGVkID0gW0x1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5MYXN0KCkuSURdO1xyXG4gICAgICAgIC8vIHRoaXMuRGF0ZVNlbGVjdG9yLm9uY2hhbmdlID0gKCkgPT4gdGhpcy5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uRXhwb3J0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5HZXRYTFMoKSk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25SZWZyZXNoLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5SZWZyZXNoKCkpO1xyXG5cclxuICAgICAgICB0aGlzLkRhdGVzU2VsZWN0b3IgPSBDaGVja0JveFNlbGVjdG9yKHtcclxuICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLlNlbGVjdCgnLmRhdGVzJyksXHJcbiAgICAgICAgICAgIERhdGE6ICgpID0+IChuZXcgQXJyYXkoKG5ldyBEYXRlKS5nZXRNb250aCgpICsgMSkpLlNlbGVjdCgoeCwgaSkgPT4gKHtNTnVtOiBpICsgMSwgTmFtZTogTHVyZS5EYXRlKEx1cmUuRGF0ZSgpLk1vbnRoU3RhcnQuc2V0TW9udGgoaSkpLkZvcm1hdCgnTU1NTSBZWVlZJyksIENoZWNrOiBpID09PSAobmV3IERhdGUpLmdldE1vbnRoKCl9KSksXHJcbiAgICAgICAgICAgIEtleTogJ01OdW0nLFxyXG4gICAgICAgICAgICBWYWx1ZTogJ05hbWUnLFxyXG4gICAgICAgICAgICBDb250cm9sOiB0aGlzLlNlbGVjdCgnLmRhdGUtcmFuZ2UgLmRhdGVzLXJlc3VsdCcpLFxyXG4gICAgICAgICAgICBvbk9LOiByID0+IHRoaXMuRGF0ZUNoYW5nZWQociksXHJcbiAgICAgICAgICAgIGNoZWNrZWQ6ICdrZXknXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxucmVxdWlyZShcIi4vcGFydHMvcGFydDEuanNcIik7XHJcbnJlcXVpcmUoXCIuL3BhcnRzL3BhcnQyLmpzXCIpO1xyXG5yZXF1aXJlKFwiLi9wYXJ0cy9wYXJ0My5qc1wiKTtcclxucmVxdWlyZShcIi4vcGFydHMvcGFydDQuanNcIik7XHJcbnJlcXVpcmUoXCIuL3BhcnRzL3BhcnQ1LmpzXCIpO1xyXG5yZXF1aXJlKFwiLi9wYXJ0cy9wYXJ0Ni5qc1wiKTtcclxuIiwiRGFzaC5EYXNoU3VtbWFyeS5QYXJ0MSA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0Rhc2hQYXJ0MScsXHJcbiAgICBUYXJnZXQ6ICcuc3VtbWFyeS1jb250ZW50JyxcclxuICAgIFR5cGU6ICdkYXNoLXN1bW1hcnktY29udGVudCcsXHJcbiAgICBWaXNpYmxlOiB0cnVlLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1kYXNoLXN1bW0tcDEnXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLkRhc2hib2FyZF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdj5cclxuICAgPGRpdiBjbGFzcz1cInBhcnQtaGVhZGVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHNlbGVjdGVkIHAxMVwiPtCX0JDQn9CY0KHQrCDQmCDQn9Ce0KHQldCp0JXQndCY0K88L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDEyXCI+0JzQldCg0J7Qn9Cg0JjQr9Ci0JjQryDQmCDQmtCb0KPQkdCrPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlIHAxMSBmaXhlZC1oZWlnaHRcIj5cclxuICAgICAgPHRoZWFkIGNsYXNzPVwidGhlYWRcIj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTFcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JTQsNGC0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLQvdC+0LLRjCDQt9Cw0L/QuNGB0LDQstGI0LjRhdGB0Y88L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+INGB0YLQsNGG0LjQvtC90LDRgDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiIHJvd3NwYW49XCIxXCIgPtCS0L7Qt9GA0LDRgdGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0KPQtNCw0LvQtdC90L3Ri9C1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNVwiIHJvd3NwYW49XCIxXCIgPtCo0LrQvtC70YzQvdC40LrQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNFwiIHJvd3NwYW49XCIxXCIgPtCe0YLQtNC10LvRjNC90YvQtSDQs9GA0YPQv9C/0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+INC/0L7RgdC10YnQtdC90LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiIHJvd3NwYW49XCIxXCIgPtCSINGC0L7QvCDRh9C40YHQu9C1PC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0LTQviAxNCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID4xNC0zMCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QtC/RiDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPjctMTAg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+MTEtMTQg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHRgtCw0YDRiNC10LrQu9Cw0YHRgdC90LjQutC4PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KDQlNCnPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/QtdC90YHQuNC+0L3QtdGA0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QodC70YPQttCw0YnQuNC1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHRgtGD0LTQtdC90YLRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0YDQvtGH0LjQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCh0YLQsNGG0LjQvtC90LDRgDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCS0L3QtdGB0YLQsNGG0LjQvtC90LDRgDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0L3RgtC10YDQvdC10YI8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICA8L3RoZWFkPlxyXG4gICAgICA8dGJvZHk+XHJcbiAgICAgICAgIHt7I2VhY2ggcDExfX1cclxuICAgICAgICAgPHRyIGNsYXNzPVwie3sjaWYgKCR0aGlzLlFRUT09PS0yKSA/ICdzcGVjaWFsLWRheScgOiAnJ319IHt7I2lmICgkdGhpcy5Jc0RheU9mZikgPyAnZGF5LW9mZicgOiAnJ319XCI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJEVlwiPnt7RGF0ZVZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMlwiPnt7UDFWMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAxVjNcIj57e1AxVjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVY0XCI+e3tQMVY0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWNVwiPnt7UDFWNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAxVjZcIj57e1AxVjZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVY3XCI+e3tQMVY3fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWOFwiPnt7UDFWOH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAxVjlcIj57e1AxVjl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxMFwiPnt7UDFWMTB9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxMVwiPnt7UDFWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxMlwiPnt7UDFWMTJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxM1wiPnt7UDFWMTN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxNFwiPnt7UDFWMTR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxNVwiPnt7UDFWMTV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxNlwiPnt7UDFWMTZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxN1wiPnt7UDFWMTd9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxOFwiPnt7UDFWMTh9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxOVwiPnt7UDFWMTl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYyMFwiPnt7UDFWMjB9fTwvdGQ+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICA8L3RhYmxlPlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlIHAxMiBmaXhlZC1oZWlnaHQgbm9uZVwiPlxyXG4gICAgICA8dGhlYWQgY2xhc3M9XCJ0aGVhZFwiPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMVwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QlNCw0YLQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCS0YHQtdCz0L4g0L/QvtGB0LXRidC10L3QuNC5INC80LXRgNC+0L/RgNC40Y/RgtC40Y8g0YHRgtCw0YbQuNC+0L3QsNGAPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCIgcm93c3Bhbj1cIjFcIiA+0J/QvtGB0LXRidC10L3QuNGPINC80LXRgNC+0L/RgNC40Y/RgtC40Lk8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+INC80LXRgNC+0L/RgNC40Y/RgtC40Lk8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7QmtC+0LvQuNGH0LXRgdGC0LLQviDQvNC10YDQvtC/0YDQuNGP0YLQuNC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLRgdC10LPQviDQv9C+0YHQtdGJ0LXQvdC40Lkg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjyDQstC90LXRgdGC0LDRhtC40L7QvdCw0YA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7Qn9C+0YHQtdGJ0LXQvdC40Y8g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCS0YHQtdCz0L4g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuSDQstC90LXRgdGC0LDRhtC40L7QvdCw0YA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7Qn9C+0YHQtdGJ0LXQvdC40Y8g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiIHJvd3NwYW49XCIxXCIgPtCR0LXRgdC/0LvQsNGC0L3Ri9C1INC60LvRg9Cx0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7Qn9C70LDRgtC90YvQtSDQutC70YPQsdGLPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JHQtdGB0L/Qu9Cw0YLQvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9C70LDRgtC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCR0LXRgdC/0LvQsNGC0L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/Qu9Cw0YLQvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QkdC10YHQv9C70LDRgtC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0LvQsNGC0L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JHQtdGB0L/Qu9Cw0YLQvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9C70LDRgtC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCa0L7Qu9C40YfQtdGB0YLQstC+INC30LDRgdC10LTQsNC90LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCn0LjRgdC70L4g0L/QvtGB0LXRidC10L3QuNC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JrQvtC70LjRh9C10YHRgtCy0L4g0LfQsNGB0LXQtNCw0L3QuNC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KfQuNGB0LvQviDQv9C+0YHQtdGJ0LXQvdC40Lk8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICA8L3RoZWFkPlxyXG4gICAgICA8dGJvZHk+XHJcbiAgICAgICAgIHt7I2VhY2ggcDEyfX1cclxuICAgICAgICAgPHRyIGNsYXNzPVwie3sjaWYgKCR0aGlzLlFRUT09PS0yKSA/ICdzcGVjaWFsLWRheScgOiAnJ319IHt7I2lmICgkdGhpcy5Jc0RheU9mZikgPyAnZGF5LW9mZicgOiAnJ319XCI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJEVlwiPnt7RGF0ZVZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjFcIj57e1AxVjIxfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjJcIj57e1AxVjIyfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjNcIj57e1AxVjIzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjRcIj57e1AxVjI0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjVcIj57e1AxVjI1fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjZcIj57e1AxVjI2fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjdcIj57e1AxVjI3fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjhcIj57e1AxVjI4fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjlcIj57e1AxVjI5fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzBcIj57e1AxVjMwfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzFcIj57e1AxVjMxfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzJcIj57e1AxVjMyfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzNcIj57e1AxVjMzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzRcIj57e1AxVjM0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzVcIj57e1AxVjM1fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzZcIj57e1AxVjM2fX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuPC9kaXY+YCxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKVxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5TZWxlY3RlZFRhYiA9IHRoaXMuU2VsZWN0KCcucmVxLXRhYi5zZWxlY3RlZCcpO1xyXG4gICAgICAgIHRoaXMuVF9wMTEgPSB0aGlzLlNlbGVjdCgndGFibGUucDExJyk7XHJcbiAgICAgICAgdGhpcy5UX3AxMiA9IHRoaXMuU2VsZWN0KCd0YWJsZS5wMTInKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcucGFydC1oZWFkZXIgLnJlcS10YWInLCBlID0+IHtcclxuICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldCA9PT0gdGhpcy5TZWxlY3RlZFRhYikgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdGVkVGFiLmNsYXNzTGlzdC5yZW1vdmUoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWRUYWIgPSBlLmN1cnJlbnRUYXJnZXQ7XHJcbiAgICAgICAgICAgIGxldCBjbCA9IGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgICAgICAgICAgIGNsLmFkZCgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgaWYgKGNsLmNvbnRhaW5zKCdwMTEnKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3AxMS5jbGFzc0xpc3QucmVtb3ZlKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDEyLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY2wuY29udGFpbnMoJ3AxMicpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDExLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wMTIuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pOyIsIkRhc2guRGFzaFN1bW1hcnkuUGFydDIgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdEYXNoUGFydDInLFxyXG4gICAgVGFyZ2V0OiAnLnN1bW1hcnktY29udGVudCcsXHJcbiAgICBUeXBlOiAnZGFzaC1zdW1tYXJ5LWNvbnRlbnQnLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1kYXNoLXN1bW0tcDInXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLkRhc2hib2FyZF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdj5cclxuICAgPGRpdiBjbGFzcz1cInBhcnQtaGVhZGVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHNlbGVjdGVkIHAyMVwiPtCa0J3QmNCT0Jgg0Jgg0JHQoNCe0KjQrtCg0Ks8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDIyXCI+0JTQntCa0KPQnNCV0J3QotCrINCYINCa0J7Qn9CY0Jg8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDIzXCI+0KHQn9Cg0JDQktCa0Jgg0Jgg0JrQntCd0KHQo9Cb0KzQotCQ0KbQmNCYPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlIGZpeGVkLWhlaWdodCBwMjFcIj5cclxuICAgICAgPHRoZWFkIGNsYXNzPVwidGhlYWRcIj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTFcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JTQsNGC0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+INCy0YvQtNCw0L3QvjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNVwiIHJvd3NwYW49XCIxXCIgPtCf0L4g0YLQuNC/0YMg0L3QvtGB0LjRgtC10LvRjzwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMTFcIiByb3dzcGFuPVwiMVwiID7Qn9C+INGB0L7QtNC10YDQttCw0L3QuNGOPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J3QsCDRhNC40Lcg0L3QvtGB0LjRgtC10LvRj9GFPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JLQvdC10YHRgtCw0YbQuNC+0L3QsNGAINC4INC90LAg0LTQvtC80YMgKDYuMSwgNi4yKTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0Lcg0Y3Qu9C10LrRgtGA0L7QvdC90L7QuSDQsdC40LHQu9C40L7RgtC10LrQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0L3RgdGC0LDQu9C40YDQvtCy0LDQvdC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCj0LTQsNC70LXQvdC90YvQtSDQu9C40YbQtdC90LfQuNC+0L3QvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QntCf0Js8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QlS/Qt9C9PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KLQtdGF0L3QuNC60LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QoS/RhTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0YHQutGD0YHRgdGC0LLQvjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCh0L/QvtGA0YI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID44MS44MzwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCh0L/RgNCw0LLQvtGH0L3QuNC60Lg8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QlNC10YIuINC70LjRgi3RgNCwPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KXRg9C0LiDQu9C40YIt0YDQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCU0L7Qv9C+0LvQvdC40YIuPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgICB7eyNlYWNoIHAyMX19XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInt7I2lmICgkdGhpcy5RUVE9PT0tMikgPyAnc3BlY2lhbC1kYXknIDogJyd9fSB7eyNpZiAoJHRoaXMuSXNEYXlPZmYpID8gJ2RheS1vZmYnIDogJyd9fVwiPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiRFZcIj57e0RhdGVWYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjJcIj57e1AyVjJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzXCI+e3tQMlYzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWNFwiPnt7UDJWNH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjVcIj57e1AyVjV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY2XCI+e3tQMlY2fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWN1wiPnt7UDJWN319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjhcIj57e1AyVjh9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY5XCI+e3tQMlY5fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMTBcIj57e1AyVjEwfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMTFcIj57e1AyVjExfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMTJcIj57e1AyVjEyfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMTNcIj57e1AyVjEzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMTRcIj57e1AyVjE0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMTVcIj57e1AyVjE1fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMTZcIj57e1AyVjE2fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMTdcIj57e1AyVjE3fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMThcIj57e1AyVjE4fX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuICAgPHRhYmxlIGNsYXNzPVwiZGF0YS10YWJsZSBwMjIgZml4ZWQtaGVpZ2h0IG5vbmVcIj5cclxuICAgICAgPHRoZWFkIGNsYXNzPVwidGhlYWRcIj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTFcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JTQsNGC0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjZcIiByb3dzcGFuPVwiMVwiID7QktGL0LTQsNC90L4g0LTQvtC60YPQvNC10L3RgtC+0LIg0LTQtdGC0Y/QvCDQtNC+IDE0INC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNlwiIHJvd3NwYW49XCIxXCIgPtCS0YvQtNCw0L3QviDQtNC+0LrRg9C80LXQvdGC0L7QsiDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y/QvCAxNC0zMCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIiByb3dzcGFuPVwiMVwiID7QmNC30LPQvtGC0L7QstC70LXQvdC+INC4INCy0YvQtNCw0L3QviDQutC+0L/QuNC5PC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JLRgdC10LPQviDQstGL0LTQsNC90L48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QndCwINGE0LjQtyDQvdC+0YHQuNGC0LXQu9GP0YU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QktC90LXRgdGC0LDRhtC40L7QvdCw0YAg0Lgg0L3QsCDQtNC+0LzRgyAoNi4xLCA2LjIpPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5INCx0LjQsdC70LjQvtGC0LXQutC4PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQvdGB0YLQsNC70LjRgNC+0LLQsNC90L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KPQtNCw0LvQtdC90L3Ri9C1INC70LjRhtC10L3Qt9C40L7QvdC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCS0YHQtdCz0L4g0LLRi9C00LDQvdC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J3QsCDRhNC40Lcg0L3QvtGB0LjRgtC10LvRj9GFPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JLQvdC10YHRgtCw0YbQuNC+0L3QsNGAINC4INC90LAg0LTQvtC80YMgKDYuMSwgNi4yKTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0Lcg0Y3Qu9C10LrRgtGA0L7QvdC90L7QuSDQsdC40LHQu9C40L7RgtC10LrQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0L3RgdGC0LDQu9C40YDQvtCy0LDQvdC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCj0LTQsNC70LXQvdC90YvQtSDQu9C40YbQtdC90LfQuNC+0L3QvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QktGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JTQtdGC0Y/QvCDQtNC+IDE0INC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0L7Qu9GM0LfQvtCy0LDRgtC10LvRj9C8IDE0LTMwINC70LXRgjwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgIDwvdGhlYWQ+XHJcbiAgICAgIDx0Ym9keT5cclxuICAgICAgICAge3sjZWFjaCBwMjJ9fVxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ7eyNpZiAoJHRoaXMuUVFRPT09LTIpID8gJ3NwZWNpYWwtZGF5JyA6ICcnfX0ge3sjaWYgKCR0aGlzLklzRGF5T2ZmKSA/ICdkYXktb2ZmJyA6ICcnfX1cIj5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIkRWXCI+e3tEYXRlVmFsdWV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxOVwiPnt7UDJWMTl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyMFwiPnt7UDJWMjB9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyMVwiPnt7UDJWMjF9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyMlwiPnt7UDJWMjJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyM1wiPnt7UDJWMjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyNFwiPnt7UDJWMjR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyNVwiPnt7UDJWMjV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyNlwiPnt7UDJWMjZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyN1wiPnt7UDJWMjd9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyOFwiPnt7UDJWMjh9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYyOVwiPnt7UDJWMjl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzMFwiPnt7UDJWMzB9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzMVwiPnt7UDJWMzF9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzMlwiPnt7UDJWMzJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzM1wiPnt7UDJWMzN9fTwvdGQ+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICA8L3RhYmxlPlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlIHAyMyBmaXhlZC1oZWlnaHQgbm9uZVwiPlxyXG4gICAgICA8dGhlYWQgY2xhc3M9XCJ0aGVhZFwiPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMVwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QlNCw0YLQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCS0YHQtdCz0L4g0LLRi9C00LDQvdC+INC40Lcg0YTQvtC90LTQvtCyINC00YDRg9Cz0LjRhSDQsdC40LHQu9C40L7RgtC10Lo8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7QktGL0LTQsNC90L4gKNC/0YDQvtGB0LzQvtGC0YDQtdC90L4pINC00L7Qui3QvtCyINC40Lcg0YTQvtC90LTQvtCyINC00YDRg9Cz0LjRhSDQsdC40LHQu9C40L7RgtC10LosINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCS0YHQtdCz0L4g0LLRi9C/0L7Qu9C90LXQvdC+INGB0L/RgNCw0LLQvtC6INC4INC60L7QvdGB0YPQu9GM0YLQsNGG0LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiIHJvd3NwYW49XCIxXCIgPtCf0L4g0LLQvtC30YDQsNGB0YLRgzwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNVwiIHJvd3NwYW49XCIxXCIgPtCf0L4g0YLQuNC/0YM8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMlwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9C+INGB0LjRgdGC0LXQvNC1INCc0JHQkCDQuCDQnNCc0JHQkDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCS0LjRgNGC0YPQsNC70YzQvdGL0LUg0YfQuNGC0LDQu9GM0L3Ri9C1INC30LDQu9GLPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0LTQviAxNCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID4xNC0zMCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QotC10LzQsNGC0LjRh9C10YHQutC40LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QpNCw0LrRgtC+0LPRgNCw0YTQuNGHLjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCR0LjQsdC70LjQvtCz0YDQsNGE0LjRhy48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmtC+0L3RgdGD0LvRjNGC0LDRhtC40Lg8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qo9C00LDQu9C10L3QvdGL0LUg0YHQv9GA0LDQstC60Lg8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICA8L3RoZWFkPlxyXG4gICAgICA8dGJvZHk+XHJcbiAgICAgICAgIHt7I2VhY2ggcDIzfX1cclxuICAgICAgICAgPHRyIGNsYXNzPVwie3sjaWYgKCR0aGlzLlFRUT09PS0yKSA/ICdzcGVjaWFsLWRheScgOiAnJ319IHt7I2lmICgkdGhpcy5Jc0RheU9mZikgPyAnZGF5LW9mZicgOiAnJ319XCI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJEVlwiPnt7RGF0ZVZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMzRcIj57e1AyVjM0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMzVcIj57e1AyVjM1fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMzZcIj57e1AyVjM2fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMzdcIj57e1AyVjM3fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMzhcIj57e1AyVjM4fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMzlcIj57e1AyVjM5fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWNDBcIj57e1AyVjQwfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWNDFcIj57e1AyVjQxfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWNDJcIj57e1AyVjQyfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWNDNcIj57e1AyVjQzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWNDRcIj57e1AyVjQ0fX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuPC9kaXY+YCxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlNlbGVjdGVkVGFiID0gdGhpcy5TZWxlY3QoJy5yZXEtdGFiLnNlbGVjdGVkJyk7XHJcbiAgICAgICAgdGhpcy5UX3AyMSA9IHRoaXMuU2VsZWN0KCd0YWJsZS5wMjEnKTtcclxuICAgICAgICB0aGlzLlRfcDIyID0gdGhpcy5TZWxlY3QoJ3RhYmxlLnAyMicpO1xyXG4gICAgICAgIHRoaXMuVF9wMjMgPSB0aGlzLlNlbGVjdCgndGFibGUucDIzJyk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnBhcnQtaGVhZGVyIC5yZXEtdGFiJywgZSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlLmN1cnJlbnRUYXJnZXQgPT09IHRoaXMuU2VsZWN0ZWRUYWIpIHJldHVybjtcclxuICAgICAgICAgICAgdGhpcy5TZWxlY3RlZFRhYi5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdGVkVGFiID0gZS5jdXJyZW50VGFyZ2V0O1xyXG4gICAgICAgICAgICBsZXQgY2wgPSBlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0O1xyXG4gICAgICAgICAgICBjbC5hZGQoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIGlmIChjbC5jb250YWlucygncDIxJykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wMjEuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3AyMi5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDIzLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY2wuY29udGFpbnMoJ3AyMicpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDIxLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wMjIuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3AyMy5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGNsLmNvbnRhaW5zKCdwMjMnKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3AyMS5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDIyLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wMjMuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pOyIsIkRhc2guRGFzaFN1bW1hcnkuUGFydDMgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdEYXNoUGFydDMnLFxyXG4gICAgVGFyZ2V0OiAnLnN1bW1hcnktY29udGVudCcsXHJcbiAgICBUeXBlOiAnZGFzaC1zdW1tYXJ5LWNvbnRlbnQnLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1kYXNoLXN1bW0tcDMnXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLkRhc2hib2FyZF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdj5cclxuICAgPGRpdiBjbGFzcz1cInBhcnQtaGVhZGVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHNlbGVjdGVkXCI+0KPQp9CV0KIg0JLQq9CU0JDQp9CYINCt0JvQldCa0KLQoNCe0J3QndCr0KUg0KDQldCh0KPQoNCh0J7QkjwvZGl2PlxyXG4gICA8L2Rpdj5cclxuICAgPHRhYmxlIGNsYXNzPVwiZGF0YS10YWJsZSBmaXhlZC1oZWlnaHRcIj5cclxuICAgICAgPHRoZWFkIGNsYXNzPVwidGhlYWRcIj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTFcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JTQsNGC0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+INCy0YvQtNCw0L3QvjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNFwiIHJvd3NwYW49XCIxXCIgPtCf0L4g0YLQuNC/0YMg0L3QvtGB0LjRgtC10LvRjzwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0yXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0L3RgdGC0LDQu9C70LjRgNC+0LLQsNC90L3Ri9C1INC00L7QutGD0LzQtdC90YLRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCh0LXRgtC10LLRi9C1INGD0LTQsNC70LXQvdC90YvQtSDQu9C40YbQtdC90LfQuNC+0L3QvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmNC3INGN0LvQtdC60YLRgNC+0L3QvdC+0LkgKNGG0LjRhNGA0L7QstC+0LkpINCx0LjQsdC70LjQvtGC0LXQutC4PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+RFZEIC8gQ0QtUk9NPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgICB7eyNlYWNoIHAzfX1cclxuICAgICAgICAgPHRyIGNsYXNzPVwie3sjaWYgKCR0aGlzLlFRUT09PS0yKSA/ICdzcGVjaWFsLWRheScgOiAnJ319IHt7I2lmICgkdGhpcy5Jc0RheU9mZikgPyAnZGF5LW9mZicgOiAnJ319XCI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJEVlwiPnt7RGF0ZVZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDNWMlwiPnt7UDNWMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAzVjNcIj57e1AzVjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQM1Y0XCI+e3tQM1Y0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDNWNVwiPnt7UDNWNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAzVjZcIj57e1AzVjZ9fTwvdGQ+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICA8L3RhYmxlPlxyXG48L2Rpdj5gLFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH1cclxufSk7IiwiRGFzaC5EYXNoU3VtbWFyeS5QYXJ0NCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0Rhc2hQYXJ0NCcsXHJcbiAgICBUYXJnZXQ6ICcuc3VtbWFyeS1jb250ZW50JyxcclxuICAgIFR5cGU6ICdkYXNoLXN1bW1hcnktY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWRhc2gtc3VtbS1wNCdcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuRGFzaGJvYXJkXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2PlxyXG4gICA8ZGl2IGNsYXNzPVwicGFydC1oZWFkZXJcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgc2VsZWN0ZWRcIj7QmtCj0JvQrNCi0KPQoNCd0J4t0JzQkNCh0KHQntCS0JDQryDQoNCQ0JHQntCi0JA8L2Rpdj5cclxuICAgPC9kaXY+XHJcbiAgIDx0YWJsZSBjbGFzcz1cImRhdGEtdGFibGVcIj5cclxuICAgICAgPHRoZWFkIGNsYXNzPVwidGhlYWRcIj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTFcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JTQsNGC0Ysg0L/RgNC+0LLQtdC00LXQvdC40Y88L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QndCw0LfQstCw0L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40Y88L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QpNC+0YDQvNCwINC/0YDQvtCy0LXQtNC10L3QuNGPPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI1XCIgcm93c3Bhbj1cIjFcIiA+0KHRgtCw0YbQuNC+0L3QsNGAPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI1XCIgcm93c3Bhbj1cIjFcIiA+0JLQvdC10YHRgtCw0YbQuNC+0L3QsNGAPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCIgcm93c3Bhbj1cIjFcIiA+0JHQtdGB0L/Qu9Cw0YLQvdGL0LUg0LrQu9GD0LHRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiIHJvd3NwYW49XCIxXCIgPtCf0LvQsNGC0L3Ri9C1INC60LvRg9Cx0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGL0LXQt9C00L3QvtC1ICjQvdCw0LfQstCw0L3QuNC1KTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCe0YLQstC10YLRgdGC0LLQtdC90L3Ri9C5PC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JHQtdGB0L/Qu9Cw0YLQvdC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/Qu9Cw0YLQvdC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQvdCy0LDQu9C40LTRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCc0LjQs9GA0LDQvdGC0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9GA0L7RhC4g0YHQtdC80LjQvdCw0YDRiywg0LvQtdC60YbQuNC4LCDQuCDRgi7Qvy48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QkdC10YHQv9C70LDRgtC90L48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9C70LDRgtC90L48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmNC90LLQsNC70LjQtNGLPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JzQuNCz0YDQsNC90YLRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0YDQvtGELiDRgdC10LzQuNC90LDRgNGLLCDQu9C10LrRhtC40LgsINC4INGCLtC/LjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0L7RgdC10YnQtdC90LjRjzwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0L3QstCw0LvQuNC00Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QnNC40LPRgNCw0L3RgtGLPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/QvtGB0LXRidC10L3QuNGPPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQvdCy0LDQu9C40LTRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCc0LjQs9GA0LDQvdGC0Ys8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICA8L3RoZWFkPlxyXG4gICAgICA8dGJvZHk+XHJcbiAgICAgICAgIHt7SXNFbXB0eX19XHJcbiAgICAgICAgIHt7I2VhY2ggUGFydDR9fVxyXG4gICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxXCI+e3tEYXRlU3RhcnR9fTxicj57e0RhdGVGaW5pc2h9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYyXCIgc3R5bGU9XCJ3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XCI+e3tQNFYyfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDRWM1wiPnt7UDRWM319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjRcIj57e1A0VjR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFY1XCI+e3tQNFY1fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDRWNlwiPnt7UDRWNn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjdcIj57e1A0Vjd9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFY4XCI+e3tQNFY4fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDRWOVwiPnt7UDRWOX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjEwXCI+e3tQNFYxMH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjExXCI+e3tQNFYxMX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjEyXCI+e3tQNFYxMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjEzXCI+e3tQNFYxM319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjE0XCI+e3tQNFYxNH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjE1XCI+e3tQNFYxNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjE2XCI+e3tQNFYxNn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjE3XCI+e3tQNFYxN319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjE4XCI+e3tQNFYxOH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjE5XCI+e3tQNFYxOX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjIwXCIgdGl0bGU9J3t7UDRWMjB9fScgY2xhc3M9XCJjdXQtY2VsbFwiPnt7UDRWMjB9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYyMVwiIHRpdGxlPSd7e1A0VjIxfX0nIGNsYXNzPVwiY3V0LWNlbGxcIj57e1A0VjIxfX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuPC9kaXY+YCxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgSXNFbXB0eTogJydcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OiB7XHJcbiAgICAgICAgRGF0ZVN0YXJ0OiB4ID0+IEx1cmUuRGF0ZSh4KS5Gb3JtYXQoJ0RELk1NLllZWVknKSxcclxuICAgICAgICBEYXRlRmluaXNoOiB4ID0+IEx1cmUuRGF0ZSh4KS5Gb3JtYXQoJ0RELk1NLllZWVknKSxcclxuICAgICAgICBQNFYzOiB4ID0+IERpY3Rpb25hcnkuRXZlbnRUeXBlRGljdFt4XSB8fCB4LFxyXG4gICAgICAgICdJc0VtcHR5JzogKHgsIHApID0+IChwLlBhcnQ0IHx8IFtdKS5sZW5ndGggPiAwID8gJycgOiBgPHRyPjx0ZCBjbGFzcz1cImVtcHR5LXJvd1wiIGNvbHNwYW49XCIyMVwiPtCd0LXRgiDQtNCw0L3QvdGL0YU8L3RkPjwvdHI+YCxcclxuICAgICAgICAnUDRWMjEnOiAoVXNlcklEKT0+e1xyXG4gICAgICAgICAgICBsZXQgVXNlciA9IEx1cmUuVXNlci5DYWNoZS5Vc2VyTGlzdC5XaGVyZSh4PT54LklEID09PSBVc2VySUQpLkZpcnN0T3JEZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGlmIChVc2VyID09PSBudWxsKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICfQndC1INC30LDQtNCw0L0gKic7XHJcbiAgICAgICAgICAgIHJldHVybiBVc2VyLk5hbWVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH1cclxufSk7IiwiRGFzaC5EYXNoU3VtbWFyeS5QYXJ0NSA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0Rhc2hQYXJ0NScsXHJcbiAgICBUYXJnZXQ6ICcuc3VtbWFyeS1jb250ZW50JyxcclxuICAgIFR5cGU6ICdkYXNoLXN1bW1hcnktY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWRhc2gtc3VtbS1wNSdcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuRGFzaGJvYXJkXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2PlxyXG4gICA8ZGl2IGNsYXNzPVwicGFydC1oZWFkZXJcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgc2VsZWN0ZWRcIj7QktCr0KHQotCQ0JLQmtCYPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlXCI+XHJcbiAgICAgIDx0aGVhZD5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTFcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JTQsNGC0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QndCw0LfQstCw0L3QuNC1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JrQvtC70LjRh9C10YHRgtCy0L4g0L/RgNC10LTRgdGC0LDQstC70LXQvdC90YvRhSDQtNC+0LrRg9C80LXQvdGC0L7QsjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCa0L7Qu9C40YfQtdGB0YLQstC+INCy0YvQtNCw0L3QvdGL0YUg0LTQvtC60YPQvNC10L3RgtC+0LI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QntGC0LLQtdGC0YHRgtCy0LXQvdC90YvQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0YDQuNC80LXRh9Cw0L3QuNGPPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgICB7e0lzRW1wdHl9fVxyXG4gICAgICAgICB7eyNlYWNoIFBhcnQ1fX1cclxuICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiREFURVNcIj57e0RhdGVTdGFydH19IC0ge3tEYXRlRmluaXNofX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDVWMlwiPnt7UDVWMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA1VjNcIj57e1A1VjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNVY0XCI+e3tQNVY0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDVWNVwiPnt7UDVWNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA1VjZcIj57e1A1VjZ9fTwvdGQ+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICA8L3RhYmxlPlxyXG48L2Rpdj5gLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBJc0VtcHR5OiAnJ1xyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBJc0VtcHR5OiAoeCwgcCkgPT4gKHAuUGFydDUgfHwgW10pLmxlbmd0aCA+IDAgPyAnJyA6IGA8dHI+PHRkIGNsYXNzPVwiZW1wdHktcm93XCIgY29sc3Bhbj1cIjZcIj7QndC10YIg0LTQsNC90L3Ri9GFPC90ZD48L3RyPmAsXHJcbiAgICAgICAgRGF0ZVN0YXJ0OiAoZCk9Pkx1cmUuRGF0ZShkKS5Gb3JtYXQoJ0RELk1NLllZWVknKSxcclxuICAgICAgICBEYXRlRmluaXNoOiAoZCk9Pkx1cmUuRGF0ZShkKS5Gb3JtYXQoJ0RELk1NLllZWVknKSxcclxuICAgICAgICAnUDVWNSc6IChVc2VySUQpPT57XHJcbiAgICAgICAgICAgIGxldCBVc2VyID0gTHVyZS5Vc2VyLkNhY2hlLlVzZXJMaXN0LldoZXJlKHg9PnguSUQgPT09IFVzZXJJRCkuRmlyc3RPckRlZmF1bHQoKTtcclxuICAgICAgICAgICAgaWYgKFVzZXIgPT09IG51bGwpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ9Cd0LUg0LfQsNC00LDQvSAqJztcclxuICAgICAgICAgICAgcmV0dXJuIFVzZXIuTmFtZVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBTaG93OiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgfVxyXG59KTsiLCJEYXNoLkRhc2hTdW1tYXJ5LlBhcnQ2ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnRGFzaFBhcnQ2JyxcclxuICAgIFRhcmdldDogJy5zdW1tYXJ5LWNvbnRlbnQnLFxyXG4gICAgVHlwZTogJ2Rhc2gtc3VtbWFyeS1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGFzaC1zdW1tLXA2J1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0RpY3Rpb25hcnkuUm9sZS5EYXNoYm9hcmRdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuYDxkaXY+XHJcbiAgIDxkaXYgY2xhc3M9XCJwYXJ0LWhlYWRlclwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBzZWxlY3RlZCBwNjFcIj7Qn9Ce0JvQrNCX0J7QktCQ0KLQldCb0Jgg0J3QkCDQlNCe0JzQozwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBwNjJcIj7QoNCQ0JHQntCi0JAg0J/QldCg0JXQlNCS0JjQltCV0Jo8L2Rpdj5cclxuICAgPC9kaXY+XHJcbiAgIDx0YWJsZSBjbGFzcz1cImRhdGEtdGFibGUgcDYxIGZpeGVkLWhlaWdodFwiPlxyXG4gICAgICA8dGhlYWQ+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0xXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCU0LDRgtCwPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JfQsNGA0LXQs9C10YHRgtGA0LjRgNC+0LLQsNC90L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10Lk8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QmNC3INC90LjRhSDQuNC90LLQsNC70LjQtNC+0LI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGL0LTQsNC90L4g0LrQvdC40LMg0L3QsCDQtNC+0Lw8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIiByb3dzcGFuPVwiMVwiID7QoNCw0LHQvtGC0LAg0YEg0L/QtdGA0LXQtNCy0LjQttC60LDQvNC4PC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/QvtGB0LXRidC10L3QuNC1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JrQvtC90YHRg9C70YzRgtCw0YbQuNGPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHQtdC80LjQvdCw0YAg0L/QtdGA0LXQtNCy0LjQttC90LjQutC+0LI8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICA8L3RoZWFkPlxyXG4gICAgICA8dGJvZHk+XHJcbiAgICAgICAgIHt7I2VhY2ggcDYxfX1cclxuICAgICAgICAgPHRyIGNsYXNzPVwie3sjaWYgKCR0aGlzLlFRUT09PS0yKSA/ICdzcGVjaWFsLWRheScgOiAnJ319IHt7I2lmICgkdGhpcy5Jc0RheU9mZikgPyAnZGF5LW9mZicgOiAnJ319XCI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJEVlwiPnt7RGF0ZVZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDZWMlwiPnt7UDYxVjJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNlYzXCI+e3tQNjFWM319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2VjRcIj57e1A2MVY0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDZWNVwiPnt7UDYxVjV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNlY2XCI+e3tQNjFWNn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2VjdcIj57e1A2MVY3fX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuICAgPHRhYmxlIGNsYXNzPVwiZGF0YS10YWJsZSBwNjIgZml4ZWQtaGVpZ2h0IG5vbmVcIj5cclxuICAgICAgPHRoZWFkPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMVwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QlNCw0YLQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCa0L7Qu9C40YfQtdGB0YLQstC+INC/0LXRgNC10LTQstC40LbQtdC6PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0KfQuNGB0LvQviDRh9C40YLQsNGC0LXQu9C10Lkg0LIg0L3QuNGFPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLRgdC10LPQviDQstGL0LTQsNC90L4g0LrQvdC40LM8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjExXCIgcm93c3Bhbj1cIjFcIiA+0J/QviDRgtC10LzQsNGC0LjQutC1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCIgcm93c3Bhbj1cIjFcIiA+0JzQsNGB0YHQvtCy0YvQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNGPPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J7Qn9CbPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JUv0LfQvTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCi0LXRhdC90LjQutCwPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KEv0YU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmNGB0LrRg9GB0YHRgtCy0L48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QodC/0L7RgNGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+ODEuODM8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QodC/0YDQsNCy0L7Rh9C90LjQutC4PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JTQtdGCLiDQu9C40YIt0YDQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCl0YPQtC4g0LvQuNGCLdGA0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QlNC+0L/QvtC70L3QuNGCLjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCa0L7Qu9C40YfQtdGB0YLQstC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KfQuNGB0LvQviDQvtCx0YHQu9GD0LbQtdC90L3Ri9GFPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgICB7eyNlYWNoIHA2Mn19XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInt7I2lmICgkdGhpcy5RUVE9PT0tMikgPyAnc3BlY2lhbC1kYXknIDogJyd9fSB7eyNpZiAoJHRoaXMuSXNEYXlPZmYpID8gJ2RheS1vZmYnIDogJyd9fVwiPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiRFZcIj57e0RhdGVWYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlYyXCI+e3tQNjJWMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlYzXCI+e3tQNjJWM319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlY0XCI+e3tQNjJWNH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlY1XCI+e3tQNjJWNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlY2XCI+e3tQNjJWNn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlY3XCI+e3tQNjJWN319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlY4XCI+e3tQNjJWOH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlY5XCI+e3tQNjJWOX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlYxMFwiPnt7UDYyVjEwfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDYyVjExXCI+e3tQNjJWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWMTJcIj57e1A2MlYxMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlYxM1wiPnt7UDYyVjEzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDYyVjE0XCI+e3tQNjJWMTR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWMTVcIj57e1A2MlYxNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlYxNlwiPnt7UDYyVjE2fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDYyVjE3XCI+e3tQNjJWMTd9fTwvdGQ+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICA8L3RhYmxlPlxyXG48L2Rpdj5gLFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuU2VsZWN0ZWRUYWIgPSB0aGlzLlNlbGVjdCgnLnJlcS10YWIuc2VsZWN0ZWQnKTtcclxuICAgICAgICB0aGlzLlRfcDYxID0gdGhpcy5TZWxlY3QoJ3RhYmxlLnA2MScpO1xyXG4gICAgICAgIHRoaXMuVF9wNjIgPSB0aGlzLlNlbGVjdCgndGFibGUucDYyJyk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnBhcnQtaGVhZGVyIC5yZXEtdGFiJywgZSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlLmN1cnJlbnRUYXJnZXQgPT09IHRoaXMuU2VsZWN0ZWRUYWIpIHJldHVybjtcclxuICAgICAgICAgICAgdGhpcy5TZWxlY3RlZFRhYi5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdGVkVGFiID0gZS5jdXJyZW50VGFyZ2V0O1xyXG4gICAgICAgICAgICBsZXQgY2wgPSBlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0O1xyXG4gICAgICAgICAgICBjbC5hZGQoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIGlmIChjbC5jb250YWlucygncDYxJykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wNjEuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3A2Mi5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGNsLmNvbnRhaW5zKCdwNjInKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3A2MS5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDYyLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59KTsiLCJjb25zdCBEID0gcmVxdWlyZSgnLi4vLi4vX2NvbW1vbi9kaWN0aW9uYXJ5Jyk7XHJcblxyXG5EYXRhSW5wdXQuRGF0YUFmZmljaGVJbnB1dCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEYXRhSW5wdXQsXHJcbiAgICBOYW1lOiAnRGF0YUlucHV0JyxcclxuICAgIFRhcmdldDogJy5kYXRhLWFmZmljaGUtaW5wdXQnLFxyXG4gICAgVHlwZTogJ2RhdGEtaW5wdXQtY29udGVudCcsXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1kYXRhLWlucHV0LWFmZmljaGUnXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRC5Sb2xlLlNldHVwRXZlbnRdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuICAgICAgICBgPGRpdiBjbGFzcz1cImRhdGEtaW5wdXQgYWZmaWNoZS1pbnB1dFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlhcnktYnJlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaSBkYXRlLXJhbmdlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhbGVuZGFyLWljb25cIj4mIzEyODE5ODs8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZS1hZmZpY2hlLWludGVydmFsXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaVwiPlxyXG4gICAgICAgICAgICAgICAgICAgINCf0L7QtNGA0LDQt9C00LXQu9C10L3QuNC1OiBcclxuICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwibC1zZWxlY3Qgc2VsZWN0IGxpYi1saXN0XCI+PC9zZWxlY3Q+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJhZGQtbmV3LWV2ZW50IGwtYnV0dG9uXCI+0JTQntCR0JDQktCY0KLQrCDQnNCV0KDQntCf0KDQmNCv0KLQmNCVPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuPCEtLSAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGlcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwid2l6YXJkLW9wZW4gbC1idXR0b25cIj5XSVpBUkQhPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj4tLT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhZmZpY2hlLXRhYmxlXCI+XHJcbiAgICAgICAgICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoZWFkPjx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwiZXYtY2hlY2tzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid3JhcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwibWFzcy1hY3Rpb25zXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOnJlbGF0aXZlO1wiIGNsYXNzPVwiYWxsLWNoZWNrLWNoZWNrYm94IHt7Tm9uZU1hc3NBY3Rpb25zfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cIm1hc3MtYWN0aW9ucyBsLWJ1dHRvblwiPk08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFjdGlvbi1saXN0IG5vbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhY3Rpb24tdHlwZVwiIGRhdGEtYWN0dHlwZT1cImRlbGV0ZS1zZWxcIj7Qo9C00LDQu9C40YLRjCDQstGL0LHRgNCw0L3QvdGL0LU8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhY3Rpb24tdHlwZVwiIGRhdGEtYWN0dHlwZT1cIm1vZGVyYXRlLXNlbFwiPtCf0L7QtNGC0LLQtdGA0LTQuNGC0Ywg0L/RgNCw0LLQuNC70YzQvdC+0YHRgtGMPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tPGRpdiBjbGFzcz1cImFjdGlvbi10eXBlXCIgZGF0YS1hY3R0eXBlPVwiXCI+0KfRgtC+LdGC0L4g0LXRidC1PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWN0aW9uLXR5cGVcIiBkYXRhLWFjdHR5cGU9XCJcIj7Qn9C+0YHQu9C10LTQvdC40Lkg0LLQsNGA0LjQsNC90YI8L2Rpdj4tLT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoPuKEljwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD7Qn9C+0LTRgtCy0LXRgNC20LTQtdC90L4g0LzQvtC00LXRgNCw0YLQvtGA0L7QvDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD7QndCw0LjQvNC10L3QvtCy0LDQvdC40LUg0L/QvtC00YDQsNC30LTQtdC70LXQvdC40LU8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGg+0J3QsNC40LzQtdC90L7QstCw0L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40Y88L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJkYXRlLXN0YXJ0LWZpbmlzaFwiPtCU0LDRgtCwINC90LDRh9Cw0LvQsCDQuCDQvtC60L7QvdGH0LDQvdC40Y8gINC80LXRgNC+0L/RgNC40Y/RgtC40Y88L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGg+0JfQsNC/0LvQsNC90LjRgNC+0LLQsNC90L3QvtC1INGH0LjRgdC70L4g0L/QvtGB0LXRgtC40YLQtdC70LXQuTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD7QptC10L3QsDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD7QpNCY0J4sINC00L7Qu9C20L3QvtGB0YLRjCwg0YLQtdC70LXRhNC+0L0sIGUtbWFpbCDQvtGC0LLQtdGC0YHRgtCy0LXQvdC90L7Qs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoPtCf0YDQvtCy0L7QtNC40YLRgdGPINCyINGA0LDQvNC60LDRhTog0LPQvtGBLiDQt9Cw0LTQsNC90LjQtSAo0JPQlyksPGJyPtCy0L3QtdCx0Y7QtNC20LXRgtC90LDRjyDQtNC10Y/RgtC10LvRjNC90L7RgdGC0YwgKNCSKSw8YnI+0LjQvdGL0LUg0L7RgdC90L7QstCw0L3QuNGPICjQmCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdHI+PC90aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG48ZGl2IGNsYXNzPVwid2l6YXJkLXdyYXBcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJ3aXphcmRcIj48L2Rpdj5cclxuPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+YCxcclxuICAgIFNvcnQ6IHtcclxuICAgICAgICBEYXRlU3RhcnQ6ICcuZGF0ZS1zdGFydC1maW5pc2gnXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy5hZmZpY2hlLXRhYmxlIHRib2R5JyxcclxuICAgICAgICBEYXRhOiBbXSxcclxuICAgICAgICBMaXN0RWxlbWVudDogYFxyXG4gICAgICAgICAgICA8dHIgY2xhc3M9XCJzaW5nbGUtZXZlbnQtbGluZSBldi1saW5lLXt7SUQgfX1cIj5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cIm1hc3MtY2hlY2tcIj48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJtYXNzLWFjdGlvbnNcIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tJRH19PC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7SXNNb2RlcmF0ZWR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQ+e3tMaWJyYXJ5SUR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQ+e3tOYW1lfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+PHNwYW4+e3tEYXRlU3RhcnR9fTwvc3Bhbj4gLSA8c3Bhbj57e0RhdGVGaW5pc2h9fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQbGFuQ291bnR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1ByaWNlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkPnt7Q3VyYXRvcn19PC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7SW5pdGlhdG9yIHx8ICcnfX08L3RkPlxyXG4gICAgICAgICAgICA8L3RyPmAsXHJcbiAgICAgICAgRW1wdHlNZXNzYWdlOlxyXG4gICAgICAgICAgICBgPHRkIGNvbHNwYW49MTUgc3R5bGU9XCJ0ZXh0LWFsaWduOiBjZW50ZXI7XCI+0JzQtdGA0L7Qv9GA0LjRj9GC0LjRjyDQvtGC0YHRg9GC0YHRgtCy0YPRjtGCPC90ZD5gXHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgIERhdGVTdGFydDogeCA9PiBMdXJlLkRhdGUoeCkuRm9ybWF0KFwiREQuTU0uWVlZWVwiKSxcclxuICAgICAgICBEYXRlRmluaXNoOiB4ID0+IEx1cmUuRGF0ZSh4KS5Gb3JtYXQoXCJERC5NTS5ZWVlZXCIpLFxyXG4gICAgICAgIExpYnJhcnlJRDogKGlkLCBwLCByKSA9PiAociA9IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5maWx0ZXIoKHgpID0+IHguSUQgPT09IGlkKVswXSwgciA/IHIuTmFtZSA6ICcnKSxcclxuICAgICAgICBDdXJhdG9yOiAoYykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoYyA8IDApIHJldHVybiAn0J3QtSDQvdCw0LfQvdCw0YfQtdC9JztcclxuICAgICAgICAgICAgY29uc3QgeCA9IEx1cmUuVXNlci5DYWNoZS5Vc2VyRGljdFtjXTtcclxuICAgICAgICAgICAgLy8gaWYgKCF1KSByZXR1cm4gJ9Cd0LXQuNC30LLQtdGB0YLQvdGL0Lkg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMJztcclxuICAgICAgICAgICAgcmV0dXJuIHggPyBbeC5OYW1lLCB4LkVtYWlsLCB4LlBob25lLCB4LlBvc2l0aW9uXS5qb2luKCcsICcpIDogJ9Cd0LUg0L3QsNC30L3QsNGH0LXQvSc7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBJc01vZGVyYXRlZDogeCA9PiB4ID8gJ9CU0LAnIDogJ9Cd0LXRgidcclxuICAgIH0sXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5MaWJDb250cmwgPSBuZXcgTHVyZS5Db250cm9sbGVyLlRlbXBsYXRvcih7XHJcbiAgICAgICAgICAgIFRhcmdldDogJy5hZmZpY2hlLWlucHV0IC5saWItbGlzdCcsXHJcbiAgICAgICAgICAgIERhdGE6IFtdLFxyXG4gICAgICAgICAgICBMaXN0RWxlbWVudDogYDxvcHRpb24gdmFsdWU9XCJ7e0lEfX1cIj57e05hbWV9fTwvb3B0aW9uPmBcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkRhdGVQaWNrZXIgPSBuZXcgTHVyZS5QZXJpb2RQaWNrZXIoe1xyXG4gICAgICAgICAgICBUYXJnZXQ6ICcuZGF0ZS1hZmZpY2hlLWludGVydmFsJyxcclxuICAgICAgICAgICAgRGF0ZVJhbmdlOiBbTHVyZS5EYXRlKCkuTW9udGhTdGFydCwgTHVyZS5EYXRlKCkuTW9udGhFbmRdLFxyXG4gICAgICAgICAgICBPbkNvbmZpcm06ICgpID0+IHRoaXMuUmVmcmVzaERhdGEoKVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuTGliU2VsZWN0ID0gdGhpcy5TZWxlY3QoJy5hZmZpY2hlLWlucHV0IC5saWItbGlzdCcpO1xyXG4gICAgICAgIHRoaXMuRXZlbnRMaXN0ID0gW107XHJcbiAgICB9LFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBOb25lTWFzc0FjdGlvbnM6ICdub25lJ1xyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaERhdGEoKVxyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2hEYXRhID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgICAgICB0aGlzLkV2ZW50c0VkaXRvci5IaWRlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuRXZlbnRzRWRpdG9yLkVkaXRpbmdOZXdFdiA9IGZhbHNlO1xyXG4gICAgICAgICAgICBsZXQgZHRTdGFydCA9IEx1cmUuRGF0ZSh0aGlzLkRhdGVQaWNrZXIuRGF0ZVswXSkuRGF0ZUNzO1xyXG4gICAgICAgICAgICBsZXQgZHRFbmQgPSBMdXJlLkRhdGUodGhpcy5EYXRlUGlja2VyLkRhdGVbMV0pLkRhdGVDcztcclxuICAgICAgICAgICAgLy8gRGF0YUlucHV0X0V2ZW50X0dldChMaWJyYXJ5SUQsIEV2ZW50SUQsIERhdGVTdGFydCwgRGF0ZUZpbmlzaCwgSGFuZGxlcnMpXHJcbiAgICAgICAgICAgIGFwaS5EYXRhSW5wdXRfRXZlbnRfR2V0KHRoaXMuTGliU2VsZWN0LnZhbHVlLCAtMSwgZHRTdGFydCwgZHRFbmQsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IHIgPT4ge1xyXG4vKiAgICAgICAgICAgICAgICAgICAgciA9IHIuc29ydCgoYSwgYikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgYV9kcyA9ICtMdXJlLkRhdGUoYS5EYXRlU3RhcnQpLkRhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhX2RmID0gK0x1cmUuRGF0ZShhLkRhdGVGaW5pc2gpLkRhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBiX2RzID0gK0x1cmUuRGF0ZShiLkRhdGVTdGFydCkuRGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGJfZGYgPSArTHVyZS5EYXRlKGIuRGF0ZUZpbmlzaCkuRGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChhX2RzID4gYl9kcykgPyAxIDogKChhX2RzID09PSBiX2RzKSA/ICgoYV9kZiA+IGJfZGYpID8gMSA6IC0xKSA6IC0xKVxyXG4gICAgICAgICAgICAgICAgICAgIH0pOyovXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5FdmVudExpc3QgPSByO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKHIpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEVycm9yOiBjb25zb2xlLmVycm9yLFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogciA9PiB0aGlzLkxvYWQuSGlkZSgpXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Ub2dnbGVTZWxlY3RlZEV2ZW50Um93ID0gZnVuY3Rpb24gKGVsZW0sIG1vZGUgPSB0cnVlKSB7XHJcbiAgICAgICAgICAgIGxldCBvbGRTZWwgPSB0aGlzLlNlbGVjdCgnLnNpbmdsZS1ldmVudC1saW5lLnNlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIGlmIChvbGRTZWwpIG9sZFNlbC5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICBpZiAobW9kZSkgZWxlbS5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGxldCBhbGxDaGVjayA9IHRoaXMuU2VsZWN0KCdpbnB1dC5tYXNzLWFjdGlvbnMnKTtcclxuICAgICAgICB0aGlzLkNoYW5nZU1hc3NDaGVjayA9IGZ1bmN0aW9uIChsaW5lLCBjaGVja2VkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5EYXRhW2xpbmVdLk1hc3NTZWxlY3QgPSBjaGVja2VkO1xyXG4gICAgICAgICAgICBpZiAoIWNoZWNrZWQpIGFsbENoZWNrLmNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgbGV0IGxpc3QgPSB0aGlzLkNvbnRyb2xsZXIuRGF0YS5maWx0ZXIoeCA9PiB4Lk1hc3NTZWxlY3QpO1xyXG4gICAgICAgICAgICBpZiAobGlzdC5sZW5ndGggPiAwIClcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ05vbmVNYXNzQWN0aW9ucycsICcnKTtcclxuICAgICAgICAgICAgZWxzZSB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdOb25lTWFzc0FjdGlvbnMnLCAnbm9uZScpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Eb01hc3NBY3Rpb24gPSBmdW5jdGlvbiAodHlwZSwgZWxlbSkge1xyXG4gICAgICAgICAgICBsZXQgbGlzdCA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuQ29udHJvbGxlci5EYXRhLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuQ29udHJvbGxlci5EYXRhW2ldLk1hc3NTZWxlY3QpXHJcbiAgICAgICAgICAgICAgICAgICAgbGlzdC5wdXNoKHtJRDogdGhpcy5Db250cm9sbGVyLkRhdGFbaV0uSUQsIExpbmU6IGl9KTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0eXBlID09PSAnZGVsZXRlLXNlbCcpXHJcbiAgICAgICAgICAgICAgICBMdXJlLkNvbmZpcm0oXCLQo9CU0JDQm9CV0J3QmNCVINCc0JXQoNCe0J/QoNCY0K/QotCY0JlcIiwgJ9Cj0LTQsNC70LjRgtGMINCy0YvQsdGA0LDQvdC90YvQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNGPPycsIHtcclxuICAgICAgICAgICAgICAgICAgICBPbkFncmVlOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IHggb2YgbGlzdClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhd2FpdCBhcGkuRGF0YUlucHV0X0V2ZW50X1JlbW92ZSh0aGlzLkNvbnRyb2xsZXIuRGF0YVt4LkxpbmVdLkxpYnJhcnlJRCwgdGhpcy5Db250cm9sbGVyLkRhdGFbeC5MaW5lXS5JRCkgIT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLkRhdGFbeC5MaW5lXS5NYXNzU2VsZWN0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goeC5MaW5lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlNlbGVjdCgnaW5wdXQnLCB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRCh4LkxpbmUpLkRPTSkuY2hlY2tlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuQ29udHJvbGxlci5EYXRhLmZpbHRlcih4ID0+IHguTWFzc1NlbGVjdCkubGVuZ3RoID09PSAwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnTm9uZU1hc3NBY3Rpb25zJywgJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5TZWxlY3QoJy5hY3Rpb24tbGlzdCcpLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIE9uQ2FuY2VsOiAoKSA9PiB7fVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ21vZGVyYXRlLXNlbCcpXHJcbiAgICAgICAgICAgICAgICBMdXJlLkNvbmZpcm0oXCLQnNCe0JTQldCg0JjQoNCe0JLQkNCd0JjQlSDQnNCV0KDQntCf0KDQmNCv0KLQmNCZXCIsICfQn9C+0LTRgtCy0LXRgNC00LjRgtGMINC/0YDQsNCy0LjQu9GM0L3QvtGB0YLRjCDQstGL0LHRgNCw0L3QvdGL0YUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuT8nLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgT25BZ3JlZTogYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXdhaXQgYXBpLkRhdGFJbnB1dF9FdmVudF9Nb2RlcmF0ZSh0aGlzLkxpYlNlbGVjdC52YWx1ZSwgbGlzdC5tYXAoeCA9PiB4LklEKSkgIT09IC0xKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgeCBvZiBsaXN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLkRhdGFbeC5MaW5lXS5NYXNzU2VsZWN0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goeC5MaW5lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlNlbGVjdCgnaW5wdXQnLCB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRCh4LkxpbmUpLkRPTSkuY2hlY2tlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEuZmlsdGVyKHggPT4geC5NYXNzU2VsZWN0KS5sZW5ndGggPT09IDApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdOb25lTWFzc0FjdGlvbnMnLCAnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdCgnLmFjdGlvbi1saXN0JykuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgT25DYW5jZWw6ICgpID0+IHt9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU2VsZWN0RGVzZWxlY3RBbGwgPSBmdW5jdGlvbiAoY2hlY2tlZCkge1xyXG4gICAgICAgICAgICBsZXQgYyA9IHRoaXMuQ29udHJvbGxlci5EYXRhSXRlbXM7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGUgb2YgYykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNoZWNrZWQpXHJcbiAgICAgICAgICAgICAgICAgICAgZS5ET00uY2xhc3NMaXN0LmFkZCgnbWFzcy1zZWxlY3QnKTtcclxuICAgICAgICAgICAgICAgIGVsc2UgZS5ET00uY2xhc3NMaXN0LnJlbW92ZSgnbWFzcy1zZWxlY3QnKTtcclxuICAgICAgICAgICAgICAgIEx1cmUuU2VsZWN0KCdpbnB1dCcsIGUuRE9NKS5jaGVja2VkID0gY2hlY2tlZDtcclxuICAgICAgICAgICAgICAgIGUuRGF0YS5NYXNzU2VsZWN0ID0gY2hlY2tlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgbGlzdCA9IGMuZmlsdGVyKHggPT4geC5EYXRhLk1hc3NTZWxlY3QpO1xyXG4gICAgICAgICAgICBpZiAobGlzdC5sZW5ndGggPiAwIClcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ05vbmVNYXNzQWN0aW9ucycsICcnKTtcclxuICAgICAgICAgICAgZWxzZSB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdOb25lTWFzc0FjdGlvbnMnLCAnbm9uZScpO1xyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnNpbmdsZS1ldmVudC1saW5lIHRkOm5vdCgubWFzcy1jaGVjayknLCBlID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuRXZlbnRzRWRpdG9yLlNob3dFdmVudCh0aGlzLkV2ZW50TGlzdFtwYXJzZUludChlLmN1cnJlbnRUYXJnZXQucGFyZW50RWxlbWVudC5kYXRhc2V0WydsaW5lJ10pXSkgIT09IGZhbHNlKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5Ub2dnbGVTZWxlY3RlZEV2ZW50Um93KGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnYnV0dG9uLmFkZC1uZXctZXZlbnQnKS5vbmNsaWNrID0gKCkgPT4gdGhpcy5FdmVudHNFZGl0b3IuQ3JlYXRlTmV3RXZlbnQoKTtcclxuICAgICAgICB0aGlzLkxpYkNvbnRybC5SZWZyZXNoKEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdCk7XHJcbiAgICAgICAgdGhpcy5MaWJTZWxlY3Qub25jaGFuZ2UgPSAoKSA9PiB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcblxyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5zaW5nbGUtZXZlbnQtbGluZSAubWFzcy1jaGVjayAubWFzcy1hY3Rpb25zJywgZSA9PiB7XHJcbiAgICAgICAgICAgIGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnbWFzcy1zZWxlY3QnKTtcclxuICAgICAgICAgICAgdGhpcy5DaGFuZ2VNYXNzQ2hlY2soZS5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5kYXRhc2V0WydsaW5lJ10sIGUuY3VycmVudFRhcmdldC5jaGVja2VkKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBsZXQgbGlzdCA9IHRoaXMuU2VsZWN0KCcuYWN0aW9uLWxpc3QnKTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnYnV0dG9uLm1hc3MtYWN0aW9ucycpLm9uY2xpY2sgPSBlID0+IHtsaXN0LmNsYXNzTGlzdC50b2dnbGUoJ25vbmUnKTsgZS5zdG9wUHJvcGFnYXRpb24oKX07XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuYWN0aW9uLWxpc3QgLmFjdGlvbi10eXBlJywgZSA9PiB0aGlzLkRvTWFzc0FjdGlvbihlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsnYWN0dHlwZSddLCBlLmN1cnJlbnRUYXJnZXQpKTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnLmV2LWNoZWNrcyBpbnB1dC5tYXNzLWFjdGlvbnMnKS5vbmNoYW5nZSA9IGUgPT4gdGhpcy5TZWxlY3REZXNlbGVjdEFsbChlLmN1cnJlbnRUYXJnZXQuY2hlY2tlZCk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcqOm5vdCguZXYtY2hlY2tzKScsIGUgPT4gIWxpc3QuY2xhc3NMaXN0LmNvbnRhaW5zKCdub25lJykgPyBsaXN0LmNsYXNzTGlzdC5hZGQoJ25vbmUnKSA6ICcnKTtcclxuICAgICAgICAvLyB0aGlzLlNlbGVjdCgnYnV0dG9uLndpemFyZC1vcGVuJykub25jbGljayA9ICgpID0+IHRoaXMuRXZlbnRXaXphcmQuU2hvdygpO1xyXG4gICAgfVxyXG59KTtcclxuXHJcbnJlcXVpcmUoJy4vZXZlbnQtZWRpdG9yL2V2ZW50LWVkaXRvci5qcycpO1xyXG4vLyByZXF1aXJlKCcuL2V2ZW50LXdpemFyZC9ldmVudC13aXphcmQuanMnKTtcclxuIiwiY29uc3QgSW5wdXRCb3ggPSByZXF1aXJlKFwiLi4vLi4vLi4vX2NvbW1vbi9pbnB1dC1ib3gvaW5wdXQtYm94XCIpO1xyXG5jb25zdCBEID0gcmVxdWlyZShcIi4uLy4uLy4uL19jb21tb24vZGljdGlvbmFyeVwiKTtcclxuXHJcbi8qKlxyXG4gKlxyXG4gKiBAY2xhc3MgQWZmaWNoZUVkaXRvclxyXG4gKi9cclxuY29uc3QgQWZmaWNoZUVkaXRvciA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEYXRhSW5wdXQuRGF0YUFmZmljaGVJbnB1dCxcclxuICAgIFR5cGU6ICdzaWRlLWV2ZW50cy1lZGl0b3InLFxyXG4gICAgUm91dGU6IGZhbHNlLFxyXG4gICAgQ29udGVudDpcclxuICAgICAgICBgPGRpdiBjbGFzcz1cImV2ZW50cy1lZGl0b3IgbC1jb2xcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRcIj5cclxuICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cImgyXCI+PHNwYW4+e3tIZWFkZXJFZGl0T3JBZGR9fTwvc3Bhbj4g0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjzwvaDI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2lkZS1ldmVudC1lZGl0b3IgbGlzdFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbmNyLWxpc3RcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29uY3ItbGlzdCBsLXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLklEPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuSUQ/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0IFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7ihJY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJJRFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSBcIj57e0V2ZW50LklEfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZS1pdGVtIGwtcm93IGwtZmxleC1iZXR3ZWVuIHt7SW52YWxpZC5MaWJyYXJ5SUQ/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5MaWJyYXJ5SUQ/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDQv9C+0LTRgNCw0LfQtNC10LvQtdC90LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuTGlicmFyeUlEIHx8ICcnfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJMaWJyYXJ5SURcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgXCI+e3tFdmVudC5MaWJyYXJ5SUR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLk5hbWU/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5OYW1lPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7QndCw0LjQvNC10L3QvtCy0LDQvdC40LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuTmFtZSB8fCAnJ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiTmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tFdmVudC5OYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZS1pdGVtIGwtcm93IGwtZmxleC1iZXR3ZWVuIHt7SW52YWxpZC5Jbml0aWF0b3I/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5Jbml0aWF0b3I/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCc0LXRgNC+0L/RgNC40Y/RgtC40LUg0L/RgNC+0LLQvtC00LjRgtGB0Y8g0LIg0YDQsNC80LrQsNGFPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5Jbml0aWF0b3IgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIkluaXRpYXRvclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tFdmVudC5Jbml0aWF0b3J9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLkV2ZW50VHlwZUlEPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuRXZlbnRUeXBlSUQ/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCi0LjQvyDQvNC10YDQvtC/0YDQuNGP0YLQuNGPPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5FdmVudFR5cGVJRCB8fCAnJ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiRXZlbnRUeXBlSURcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7RXZlbnQuRXZlbnRUeXBlSUR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLkV2ZW50S2luZElEPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuRXZlbnRLaW5kSUQ/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCS0LjQtCDQvNC10YDQvtC/0YDQuNGP0YLQuNGPPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5FdmVudEtpbmRJRCB8fCAnJ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiRXZlbnRLaW5kSURcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7RXZlbnQuRXZlbnRLaW5kSUR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLkludm9sdmVkU3RhdHVzPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuSW52b2x2ZWRTdGF0dXM/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCh0YLQsNGC0YPRgSDRg9GH0LDRgdGC0LjRjyAo0L7RgNCz0LDQvdC40LfQsNGC0L7RgCAvINGD0YfQsNGB0YLQvdC40LopPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5JbnZvbHZlZFN0YXR1cyB8fCAnJ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiSW52b2x2ZWRTdGF0dXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7RXZlbnQuSW52b2x2ZWRTdGF0dXN9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLlByaWNlPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuUHJpY2U/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0IFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7QkdC10YHQv9C70LDRgtC90L7QtSAvINC/0LvQsNGC0L3QvtC1IC8g0YHRgtC+0LjQvNC+0YHRgtGMINC/0L7RgdC10YnQtdC90LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuUHJpY2UgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIlByaWNlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50LlByaWNlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZS1pdGVtIGwtcm93IGwtZmxleC1iZXR3ZWVuIHt7SW52YWxpZC5FdmVudFBsYWNlVHlwZUlEPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuRXZlbnRQbGFjZVR5cGVJRD8nZGlzYWJsZWQnOicnfX0gbC1pbnZlcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0KHRgtCw0YbQuNC+0L3QsNGAIC8g0LLQvdC10YHRgtCw0YbQuNC+0L3QsNGAPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5FdmVudFBsYWNlVHlwZUlEIHx8ICcnfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJFdmVudFBsYWNlVHlwZUlEXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50LkV2ZW50UGxhY2VUeXBlSUR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLkV2ZW50VHJlbmQ/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5FdmVudFRyZW5kPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7QndCw0L/RgNCw0LLQu9C10L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGV4dFwiPnt7RXJyb3JUZXh0LkV2ZW50VHJlbmQgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIkV2ZW50VHJlbmRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7RXZlbnQuRXZlbnRUcmVuZH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUtaXRlbSBsLXJvdyBsLWZsZXgtYmV0d2VlbiB7e0ludmFsaWQuRXZlbnRDZWxlYnJhdGlvbj8naW52YWxpZCc6Jyd9fSB7e0Rpc2FibGVkLkV2ZW50Q2VsZWJyYXRpb24/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCa0LDQutC+0Lkg0LTQsNGC0LUg0L/QvtGB0LLRj9GJ0LXQvdC+INC80LXRgNC+0L/RgNC40Y/RgtC40LU8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGV4dFwiPnt7RXJyb3JUZXh0LkV2ZW50Q2VsZWJyYXRpb24gfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIkV2ZW50Q2VsZWJyYXRpb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7RXZlbnQuRXZlbnRDZWxlYnJhdGlvbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUtaXRlbSBsLXJvdyBsLWZsZXgtYmV0d2VlbiB7e0ludmFsaWQuVGFncz8naW52YWxpZCc6Jyd9fSB7e0Rpc2FibGVkLlRhZ3M/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCi0LXQs9C4PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5UYWdzIHx8ICcnfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJUYWdzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50LlRhZ3N9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLkRlc2NyaXB0aW9uPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuRGVzY3JpcHRpb24/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCa0YDQsNGC0LrQvtC1INC+0L/QuNGB0LDQvdC40LUgKNC00L4gMzAwINC30L3QsNC60L7Qsik8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGV4dFwiPnt7RXJyb3JUZXh0LkRlc2NyaXB0aW9uIHx8ICcnfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJEZXNjcmlwdGlvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tFdmVudC5EZXNjcmlwdGlvbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUtaXRlbSBsLXJvdyBsLWZsZXgtYmV0d2VlbiB7e0ludmFsaWQuUGxhbkNvdW50PydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuUGxhbkNvdW50PydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7Ql9Cw0L/Qu9Cw0L3QuNGA0L7QstCw0L3QvdC+0LUg0YfQuNGB0LvQviDQv9C+0YHQtdGC0LjRgtC10LvQtdC5PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5QbGFuQ291bnQgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIlBsYW5Db3VudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tFdmVudC5QbGFuQ291bnR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLkN1cmF0b3I/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5DdXJhdG9yPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7QpNCY0J4g0L7RgtCy0LXRgtGB0YLQstC10L3QvdC+0LPQviwgZS1tYWlsLCDRgtC10LvQtdGE0L7QvSwg0LTQvtC70LbQvdC+0YHRgtGMPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5DdXJhdG9yIHx8ICcnfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJDdXJhdG9yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50LkN1cmF0b3J9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLlRhcmdldEF1ZGllbmNlPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuVGFyZ2V0QXVkaWVuY2U/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCm0LXQu9C10LLQsNGPINCw0YPQtNC40YLQvtGA0LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuVGFyZ2V0QXVkaWVuY2UgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIlRhcmdldEF1ZGllbmNlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50LlRhcmdldEF1ZGllbmNlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZS1pdGVtIGwtcm93IGwtZmxleC1iZXR3ZWVuIHt7SW52YWxpZC5UYXJnZXRBZ2VSYW5nZT8naW52YWxpZCc6Jyd9fSB7e0Rpc2FibGVkLlRhcmdldEFnZVJhbmdlPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7QktC+0LfRgNCw0YHRgtC90LDRjyDQutCw0YLQtdCz0L7RgNC40Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGV4dFwiPnt7RXJyb3JUZXh0LlRhcmdldEFnZVJhbmdlIHx8ICcnfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJUYXJnZXRBZ2VSYW5nZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tFdmVudC5UYXJnZXRBZ2VSYW5nZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUtaXRlbSBsLXJvdyBsLWZsZXgtYmV0d2VlbiB7e0ludmFsaWQuQWdlTGltaXQ/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5BZ2VMaW1pdD8nZGlzYWJsZWQnOicnfX0gbC1pbnZlcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0JLQvtC30YDQsNGB0YLQvdC+0Lkg0YbQtdC90Lc8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGV4dFwiPnt7RXJyb3JUZXh0LkFnZUxpbWl0IHx8ICcnfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJBZ2VMaW1pdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tFdmVudC5BZ2VMaW1pdH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUtaXRlbSBsLXJvdyBsLWZsZXgtYmV0d2VlbiB7e0ludmFsaWQuR3Vlc3RzPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuR3Vlc3RzPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7QoNCw0LnQvtC90L3Ri9C1INCh0JzQmCwg0KLQki3QutCw0L3QsNC70Ys8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGV4dFwiPnt7RXJyb3JUZXh0Lkd1ZXN0cyB8fCAnJ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiR3Vlc3RzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50Lkd1ZXN0c319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUtaXRlbSBsLXJvdyBsLWZsZXgtYmV0d2VlbiB7e0ludmFsaWQuQWxsb3dfQmxpbmQ/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5BbGxvd19CbGluZD8nZGlzYWJsZWQnOicnfX0gbC1pbnZlcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0JTQvtGB0YLRg9C/0L3QvtGB0YLRjCDQtNC70Y8g0LvQuNGGINGBINCe0JLQlyDQv9C+INC30YDQtdC90LjRjjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuQWxsb3dfQmxpbmQgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIkFsbG93X0JsaW5kXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50LkFsbG93X0JsaW5kfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZS1pdGVtIGwtcm93IGwtZmxleC1iZXR3ZWVuIHt7SW52YWxpZC5BbGxvd19EZWFmPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuQWxsb3dfRGVhZj8nZGlzYWJsZWQnOicnfX0gbC1pbnZlcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0JTQvtGB0YLRg9C/0L3QvtGB0YLRjCDQtNC70Y8g0LvQuNGGINGBINCe0JLQlyDQv9C+INGB0LvRg9GF0YM8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGV4dFwiPnt7RXJyb3JUZXh0LkFsbG93X0RlYWYgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIkFsbG93X0RlYWZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7RXZlbnQuQWxsb3dfRGVhZn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUtaXRlbSBsLXJvdyBsLWZsZXgtYmV0d2VlbiB7e0ludmFsaWQuQWxsb3dfRGlzYWJsZWQ/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5BbGxvd19EaXNhYmxlZD8nZGlzYWJsZWQnOicnfX0gbC1pbnZlcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0JTQvtGB0YLRg9C/0L3QvtGB0YLRjCDQtNC70Y8g0LvQuNGGINGBINCe0JLQlyDQvtC/0L7RgNC90L4t0LTQstC40LPQsNGC0LXQu9GM0L3QvtCz0L4g0LDQv9C/0LDRgNCw0YLQsDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuQWxsb3dfRGlzYWJsZWQgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIkFsbG93X0Rpc2FibGVkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50LkFsbG93X0Rpc2FibGVkfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZS1pdGVtIGwtcm93IGwtZmxleC1iZXR3ZWVuIHt7SW52YWxpZC5EYXRlU3RhcnQ/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5EYXRlU3RhcnQ/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCU0LDRgtCwINC90LDRh9Cw0LvQsDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuRGF0ZVN0YXJ0IHx8ICcnfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIiBkYXRhLXR5cGU9XCJEYXRlU3RhcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgXCI+e3tFdmVudC5EYXRlU3RhcnR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLkRhdGVGaW5pc2g/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5EYXRlRmluaXNoPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7QlNCw0YLQsCDQvtC60L7QvdGH0LDQvdC40Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGV4dFwiPnt7RXJyb3JUZXh0LkRhdGVGaW5pc2ggfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIkRhdGVGaW5pc2hcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgXCI+e3tFdmVudC5EYXRlRmluaXNofX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZS1pdGVtIGwtcm93IGwtZmxleC1iZXR3ZWVuIHt7SW52YWxpZC5UaXNlcj8naW52YWxpZCc6Jyd9fSB7e0Rpc2FibGVkLlRpc2VyPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7QotC40LfQtdGAPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5UaXNlciB8fCAnJ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiVGlzZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiIHN0eWxlPVwianVzdGlmeS1jb250ZW50OmNlbnRlclwiPjxidXR0b24gY2xhc3M9XCJsLWJ1dHRvblwiPtCY0JfQnNCV0J3QmNCi0Kw8L2J1dHRvbj4gPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPCEtLTxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLklzTW9kZXJhdGVkPydpbnZhbGlkJzonJ319IHt7RGlzYWJsZWQuSXNNb2RlcmF0ZWQ/J2Rpc2FibGVkJzonJ319IGwtaW52ZXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCf0L7QtNGC0LLQtdGA0LbQtNC10L3QviDQvNC+0LTQtdGA0LDRgtC+0YDQvtC8PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLXRleHRcIj57e0Vycm9yVGV4dC5Jc01vZGVyYXRlZCB8fCAnJ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiSXNNb2RlcmF0ZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtdmFsdWUgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7RXZlbnQuSXNNb2RlcmF0ZWR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pi0tPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLkFmZmljaGVJbWFnZT8naW52YWxpZCc6Jyd9fSB7e0Rpc2FibGVkLkFmZmljaGVJbWFnZT8nZGlzYWJsZWQnOicnfX0gbC1pbnZlcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0JDRhNC40YjQsDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiQWZmaWNoZUltYWdlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0V2ZW50LkFmZmljaGVJbWFnZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbnRlci1pbWdcIj48aW1nIGNsYXNzPVwiYWZmaWNoZS1pbWcgbm9uZVwiIHNyYz1cIlwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PGlucHV0IHR5cGU9XCJmaWxlXCIgY2xhc3M9XCJhZmZpY2hlLWltYWdlLWZpbGUgbm9uZVwiIGFjY2VwdD1cImltYWdlLypcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZS1pdGVtIGwtcm93IGwtZmxleC1iZXR3ZWVuIHt7SW52YWxpZC5Jc01vZGVyYXRlZD8naW52YWxpZCc6Jyd9fSB7e0Rpc2FibGVkLklzTW9kZXJhdGVkPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7Qn9C+0LTRgtCy0LXRgNC20LTQtdC90L4g0LzQvtC00LXRgNCw0YLQvtGA0L7QvDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuSXNNb2RlcmF0ZWQgfHwgJyd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiIGRhdGEtdHlwZT1cIklzTW9kZXJhdGVkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLXZhbHVlXCI+e3tFdmVudC5Jc01vZGVyYXRlZH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cInRleHQtYWxpZ246Y2VudGVyXCIgY2xhc3M9XCJ7e05vbmVJZk5vTW9kZXJ9fVwiPjxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBjb25maXJtLW1vZGVyXCI+0J/QntCU0KLQktCV0KDQlNCY0KLQrDwvYnV0dG9uPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lLWl0ZW0gbC1yb3cgbC1mbGV4LWJldHdlZW4ge3tJbnZhbGlkLk11bHRpcGxlRGF0ZXM/J2ludmFsaWQnOicnfX0ge3tEaXNhYmxlZC5NdWx0aXBsZURhdGVzPydkaXNhYmxlZCc6Jyd9fSBsLWludmVydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7Qn9C+0LLRgtC+0YDQtdC90LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvci10ZXh0XCI+e3tFcnJvclRleHQuTXVsdGlwbGVEYXRlcyB8fCAnJ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCIgZGF0YS10eXBlPVwiTXVsdGlwbGVEYXRlc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSBlZGl0YWJsZS1ub25lXCI+e3tFdmVudC5NdWx0aXBsZURhdGVzfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFkZC1jb21wc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBkZWxldGUtZXZlbnQge3tOb25lT25BZGR9fVwiPtCj0JTQkNCb0JjQotCsINCc0JXQoNCe0J/QoNCY0K/QotCY0JU8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1idXR0b24gcmVwZWF0LXNldHRpbmdzLWJ1dHRvbiB7e05vdE5vbmVPbkFkZH19XCI+0JfQkNCU0JDQotCsINCf0JXQoNCY0J7QlNCY0KfQndCe0KHQotCsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXBlYXQtc2V0dGluZ3NcIj5cclxuICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJvbmUtZGF5XCIgZGF0YS1kYXk9XCIxXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleDFcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiY2hlY2stZGF5XCIgZGF0YS1kYXk9XCIxXCI+INCf0J08L2xhYmVsPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdj48aW5wdXQgZGlzYWJsZWQ9XCJcIiBjbGFzcz1cInRpbWUtc3RhcnRcIiB0eXBlPVwidGltZVwiIHZhbHVlPVwiMTA6MDBcIj46PGlucHV0IGRpc2FibGVkPVwiXCIgdHlwZT1cInRpbWVcIiBjbGFzcz1cInRpbWUtZmluaXNoXCIgdmFsdWU9XCIxODowMFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJlYWNoLXdlZWtcIiBkaXNhYmxlZD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjBcIj7QmtCw0LbQtNGD0Y4g0L3QtdC00LXQu9GOPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMVwiPtCg0LDQtyDQsiAyINC90LXQtNC10LvQuDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjJcIj7QoNCw0Lcg0LIgMyDQvdC10LTQtdC70Lg8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIzXCI+0KDQsNC3INCyIDQg0L3QtdC00LXQu9C4PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwib25lLWRheVwiIGRhdGEtZGF5PVwiMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgxXCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBjbGFzcz1cImNoZWNrLWRheVwiIGRhdGEtZGF5PVwiMlwiPiDQktCiPC9sYWJlbD48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PGlucHV0IGRpc2FibGVkPVwiXCIgY2xhc3M9XCJ0aW1lLXN0YXJ0XCIgdHlwZT1cInRpbWVcIiB2YWx1ZT1cIjEwOjAwXCI+OjxpbnB1dCBkaXNhYmxlZD1cIlwiIHR5cGU9XCJ0aW1lXCIgY2xhc3M9XCJ0aW1lLWZpbmlzaFwiIHZhbHVlPVwiMTg6MDBcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwiZWFjaC13ZWVrXCIgZGlzYWJsZWQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIwXCI+0JrQsNC20LTRg9GOINC90LXQtNC10LvRjjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjFcIj7QoNCw0Lcg0LIgMiDQvdC10LTQtdC70Lg8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIyXCI+0KDQsNC3INCyIDMg0L3QtdC00LXQu9C4PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiM1wiPtCg0LDQtyDQsiA0INC90LXQtNC10LvQuDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm9uZS1kYXlcIiBkYXRhLWRheT1cIjNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4MVwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJjaGVjay1kYXlcIiBkYXRhLWRheT1cIjNcIj4g0KHQoDwvbGFiZWw+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2PjxpbnB1dCBkaXNhYmxlZD1cIlwiIGNsYXNzPVwidGltZS1zdGFydFwiIHR5cGU9XCJ0aW1lXCIgdmFsdWU9XCIxMDowMFwiPjo8aW5wdXQgZGlzYWJsZWQ9XCJcIiB0eXBlPVwidGltZVwiIGNsYXNzPVwidGltZS1maW5pc2hcIiB2YWx1ZT1cIjE4OjAwXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cImVhY2gtd2Vla1wiIGRpc2FibGVkPVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMFwiPtCa0LDQttC00YPRjiDQvdC10LTQtdC70Y48L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIxXCI+0KDQsNC3INCyIDIg0L3QtdC00LXQu9C4PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMlwiPtCg0LDQtyDQsiAzINC90LXQtNC10LvQuDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjNcIj7QoNCw0Lcg0LIgNCDQvdC10LTQtdC70Lg8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJvbmUtZGF5XCIgZGF0YS1kYXk9XCI0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleDFcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiY2hlY2stZGF5XCIgZGF0YS1kYXk9XCI0XCI+INCn0KI8L2xhYmVsPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdj48aW5wdXQgZGlzYWJsZWQ9XCJcIiBjbGFzcz1cInRpbWUtc3RhcnRcIiB0eXBlPVwidGltZVwiIHZhbHVlPVwiMTA6MDBcIj46PGlucHV0IGRpc2FibGVkPVwiXCIgdHlwZT1cInRpbWVcIiBjbGFzcz1cInRpbWUtZmluaXNoXCIgdmFsdWU9XCIxODowMFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJlYWNoLXdlZWtcIiBkaXNhYmxlZD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjBcIj7QmtCw0LbQtNGD0Y4g0L3QtdC00LXQu9GOPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMVwiPtCg0LDQtyDQsiAyINC90LXQtNC10LvQuDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjJcIj7QoNCw0Lcg0LIgMyDQvdC10LTQtdC70Lg8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIzXCI+0KDQsNC3INCyIDQg0L3QtdC00LXQu9C4PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwib25lLWRheVwiIGRhdGEtZGF5PVwiNVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgxXCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBjbGFzcz1cImNoZWNrLWRheVwiIGRhdGEtZGF5PVwiNVwiPiDQn9CiPC9sYWJlbD48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PGlucHV0IGRpc2FibGVkPVwiXCIgY2xhc3M9XCJ0aW1lLXN0YXJ0XCIgdHlwZT1cInRpbWVcIiB2YWx1ZT1cIjEwOjAwXCI+OjxpbnB1dCBkaXNhYmxlZD1cIlwiIHR5cGU9XCJ0aW1lXCIgY2xhc3M9XCJ0aW1lLWZpbmlzaFwiIHZhbHVlPVwiMTg6MDBcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwiZWFjaC13ZWVrXCIgZGlzYWJsZWQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIwXCI+0JrQsNC20LTRg9GOINC90LXQtNC10LvRjjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjFcIj7QoNCw0Lcg0LIgMiDQvdC10LTQtdC70Lg8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIyXCI+0KDQsNC3INCyIDMg0L3QtdC00LXQu9C4PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiM1wiPtCg0LDQtyDQsiA0INC90LXQtNC10LvQuDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm9uZS1kYXlcIiBkYXRhLWRheT1cIjZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4MVwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJjaGVjay1kYXlcIiBkYXRhLWRheT1cIjZcIj4g0KHQkTwvbGFiZWw+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2PjxpbnB1dCBkaXNhYmxlZD1cIlwiIGNsYXNzPVwidGltZS1zdGFydFwiIHR5cGU9XCJ0aW1lXCIgdmFsdWU9XCIxMDowMFwiPjo8aW5wdXQgZGlzYWJsZWQ9XCJcIiB0eXBlPVwidGltZVwiIGNsYXNzPVwidGltZS1maW5pc2hcIiB2YWx1ZT1cIjE4OjAwXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cImVhY2gtd2Vla1wiIGRpc2FibGVkPVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMFwiPtCa0LDQttC00YPRjiDQvdC10LTQtdC70Y48L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIxXCI+0KDQsNC3INCyIDIg0L3QtdC00LXQu9C4PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMlwiPtCg0LDQtyDQsiAzINC90LXQtNC10LvQuDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjNcIj7QoNCw0Lcg0LIgNCDQvdC10LTQtdC70Lg8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJvbmUtZGF5XCIgZGF0YS1kYXk9XCI3XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleDFcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiY2hlY2stZGF5XCIgZGF0YS1kYXk9XCI3XCI+INCS0KE8L2xhYmVsPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdj48aW5wdXQgZGlzYWJsZWQ9XCJcIiBjbGFzcz1cInRpbWUtc3RhcnRcIiB0eXBlPVwidGltZVwiIHZhbHVlPVwiMTA6MDBcIj46PGlucHV0IGRpc2FibGVkPVwiXCIgdHlwZT1cInRpbWVcIiBjbGFzcz1cInRpbWUtZmluaXNoXCIgdmFsdWU9XCIxODowMFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJlYWNoLXdlZWtcIiBkaXNhYmxlZD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjBcIj7QmtCw0LbQtNGD0Y4g0L3QtdC00LXQu9GOPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMVwiPtCg0LDQtyDQsiAyINC90LXQtNC10LvQuDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjJcIj7QoNCw0Lcg0LIgMyDQvdC10LTQtdC70Lg8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIzXCI+0KDQsNC3INCyIDQg0L3QtdC00LXQu9C4PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZS1yYW5nZS1ibG9ja1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLWxzbWFydGk9XCIzMDg3XCI+0JjQvdGC0LXRgNCy0LDQuyDRgdC+0LHRi9GC0LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlcGVhdC1kYXRlLXJhbmdlXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24tY2VudGVyXCI+PGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGNhbGN1bGF0ZS1yYW5nZVwiPtCg0JDQodCh0KfQmNCi0JDQotCsPC9idXR0b24+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb290IGwtcm93IGwtZmxleC1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnV0dG9uMiBidG4tY2FuY2VsXCI+0J7QotCc0JXQndCQPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1idXR0b24gYnV0dG9uIGJ0bi1jb25maXJtXCI+0KHQntCl0KDQkNCd0JjQotCsPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PmAsXHJcbiAgICBBbmltYXRpb246IHtcclxuICAgICAgICBTaG93OiAnYW5pbWF0aW9uLXNob3cnLFxyXG4gICAgICAgIEhpZGU6ICdhbmltYXRpb24taGlkZSdcclxuICAgIH0sXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgSGVhZGVyRWRpdE9yQWRkOiAnZWRpdCcsXHJcbiAgICAgICAgRGF5c09mV2VlazogW1xyXG4gICAgICAgICAgICB7TnVtOiAxLCBOYW1lOiAn0J/QnScsIERpc2FibGU6IGZhbHNlfSxcclxuICAgICAgICAgICAge051bTogMiwgTmFtZTogJ9CS0KInLCBEaXNhYmxlOiBmYWxzZX0sXHJcbiAgICAgICAgICAgIHtOdW06IDMsIE5hbWU6ICfQodCgJywgRGlzYWJsZTogZmFsc2V9LFxyXG4gICAgICAgICAgICB7TnVtOiA0LCBOYW1lOiAn0KfQoicsIERpc2FibGU6IGZhbHNlfSxcclxuICAgICAgICAgICAge051bTogNSwgTmFtZTogJ9Cf0KInLCBEaXNhYmxlOiBmYWxzZX0sXHJcbiAgICAgICAgICAgIHtOdW06IDYsIE5hbWU6ICfQodCRJywgRGlzYWJsZTogZmFsc2V9LFxyXG4gICAgICAgICAgICB7TnVtOiA3LCBOYW1lOiAn0JLQoScsIERpc2FibGU6IGZhbHNlfVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgRXZlbnQ6IHtcclxuICAgICAgICAgICAgQWdlTGltaXQ6IDAsXHJcbiAgICAgICAgICAgIEFsbG93X0JsaW5kOiBmYWxzZSxcclxuICAgICAgICAgICAgQWxsb3dfRGVhZjogZmFsc2UsXHJcbiAgICAgICAgICAgIEFsbG93X0Rpc2FibGVkOiBmYWxzZSxcclxuICAgICAgICAgICAgQ3VyYXRvcjogTHVyZS5Vc2VyLklELFxyXG4gICAgICAgICAgICBEYXRlRmluaXNoOiBMdXJlLkRhdGUoKS5EYXRlQ3MsXHJcbiAgICAgICAgICAgIERhdGVTdGFydDogTHVyZS5EYXRlKCkuRGF0ZUNzLFxyXG4gICAgICAgICAgICBEZXNjcmlwdGlvbjogXCJcIixcclxuICAgICAgICAgICAgRXZlbnRDZWxlYnJhdGlvbjogMCxcclxuICAgICAgICAgICAgRXZlbnRLaW5kSUQ6IDEsXHJcbiAgICAgICAgICAgIEV2ZW50VHJlbmQ6IDEyLFxyXG4gICAgICAgICAgICBFdmVudFR5cGVJRDogMSxcclxuICAgICAgICAgICAgR3Vlc3RzOiBcItCd0LXRglwiLFxyXG4gICAgICAgICAgICBJRDogMCxcclxuICAgICAgICAgICAgSW5pdGlhdG9yOiAn0JPQlycsXHJcbiAgICAgICAgICAgIEludm9sdmVkU3RhdHVzOiAn0L7RgNCz0LDQvdC40LfQsNGC0L7RgCcsXHJcbiAgICAgICAgICAgIExpYnJhcnlJRDogMCxcclxuICAgICAgICAgICAgTmFtZTogXCJcIixcclxuICAgICAgICAgICAgUGxhbkNvdW50OiAwLFxyXG4gICAgICAgICAgICBQcmljZTogMCxcclxuICAgICAgICAgICAgVGFnczogXCJcIixcclxuICAgICAgICAgICAgVGFyZ2V0QWdlUmFuZ2U6IFwiMCtcIixcclxuICAgICAgICAgICAgVGFyZ2V0QXVkaWVuY2U6IFwiMC0xMDBcIixcclxuICAgICAgICAgICAgRXZlbnRQbGFjZVR5cGVJRDogMSxcclxuICAgICAgICAgICAgTXVsdGlwbGVEYXRlczogW10sXHJcbiAgICAgICAgICAgIFRpc2VyOiAnJyxcclxuICAgICAgICAgICAgSXNNb2RlcmF0ZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICBBZmZpY2hlSW1hZ2U6ICcnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBEaXNhYmxlZDogey8qIEFnZUxpbWl0OiBmYWxzZSwgLi4uLiAqL30sXHJcbiAgICAgICAgSW52YWxpZDoge30sXHJcbiAgICAgICAgRXJyb3JUZXh0OiB7fVxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBJbnZhbGlkOiAoeCwgcCkgPT4gIXAuSW52YWxpZCA/ICcnIDogJ2ludmFsaWQnLFxyXG4gICAgICAgIERpc2FibGVkOiB4ID0+IHggPyAnZGlzYWJsZWQnIDogJycsXHJcbiAgICAgICAgJ0V2ZW50LkV2ZW50VHlwZUlEJzogeCA9PiBELkxpYnJhcnlFdmVudFR5cGVEaWN0W3hdIHx8ICcnLCAvLyAxOiBcItCR0LXRgdC/0LvQsNGC0L3QvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LVcIiwgMjogXCLQn9C70LDRgtC90L7QtSDQvNC10YAuLi5cclxuICAgICAgICAnRXZlbnQuRXZlbnRLaW5kSUQnOiB4ID0+IEQuRXZlbnRUeXBlRGljdFt4XSB8fCAnJywgLy8gMDogXCLQsNC60YbQuNGPXCIsIDE6IFwi0LHQsNC7XCIsIDI6IFwi0LHQtdGB0LXQtNCwXCIsIC4uLlxyXG4gICAgICAgICdFdmVudC5FdmVudENlbGVicmF0aW9uJzogeCA9PiBELkNlbGVicmF0aW9uRGljdFt4XSB8fCAnJywgLy8gMDogXCLQndC10YJcIiwgMTogXCLQkdC40LHQu9C40L7QvdC+0YfRjCAo0L7QsdGJ0LXQs9C+0YDQvtC00YHQutC+0LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjQtSlcIiwgMjogXCLQkdC40YJcclxuICAgICAgICAnRXZlbnQuTGlicmFyeUlEJzogeCA9PiAoTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0LmZpbHRlcihsaWIgPT4gbGliLklEID09PSB4KVswXSB8fCB7TmFtZTogJyd9KS5OYW1lLFxyXG4gICAgICAgICdFdmVudC5EYXRlU3RhcnQnOiB4ID0+IEx1cmUuRGF0ZSh4KS5Gb3JtYXQoTHVyZS5DdWx0dXJlLkRhdGVGb3JtYXQpLFxyXG4gICAgICAgICdFdmVudC5EYXRlRmluaXNoJzogeCA9PiBMdXJlLkRhdGUoeCkuRm9ybWF0KEx1cmUuQ3VsdHVyZS5EYXRlRm9ybWF0KSxcclxuICAgICAgICAnRXZlbnQuRXZlbnRQbGFjZVR5cGVJRCc6IHggPT4gRC5FdmVudFBsYWNlVHlwZURpY3RbeF0sXHJcbiAgICAgICAgJ0V2ZW50LkFnZUxpbWl0JzogeCA9PiB4ICsgJysnLFxyXG4gICAgICAgICdFdmVudC5QcmljZSc6IHggPT4geCA9PT0gMCA/ICfQsdC10YHQv9C70LDRgtC90L4nIDogKHggKyAnICcgKyAoeCAlIDEwID09PSAxICYmIHggJSAxMDAgIT09IDExID8gJ9GA0YPQsdC70YwnIDogKHggJSAxMCA+PSAyICYmIHggJSAxMCA8PSA0ICYmICh4ICUgMTAwIDwgMTEgfHwgeCAlIDEwMCA+IDE5KSkgPyAn0YDRg9Cx0LvRjycgOiAnINGA0YPQsdC70LXQuScpKSxcclxuICAgICAgICAnRXZlbnQuQWxsb3dfQmxpbmQnOiB4ID0+IHggPyAn0LTQvtGB0YLRg9C/0L3QvicgOiAn0L3QtdC00L7RgdGC0YPQv9C90L4nLFxyXG4gICAgICAgICdFdmVudC5BbGxvd19EZWFmJzogeCA9PiB4ID8gJ9C00L7RgdGC0YPQv9C90L4nIDogJ9C90LXQtNC+0YHRgtGD0L/QvdC+JyxcclxuICAgICAgICAnRXZlbnQuQWxsb3dfRGlzYWJsZWQnOiB4ID0+IHggPyAn0LTQvtGB0YLRg9C/0L3QvicgOiAn0L3QtdC00L7RgdGC0YPQv9C90L4nLFxyXG4gICAgICAgICdFdmVudC5DdXJhdG9yJzogeCA9PiB7XHJcbiAgICAgICAgICAgIGxldCBkID0gTHVyZS5Vc2VyLkNhY2hlLlVzZXJEaWN0W3hdO1xyXG4gICAgICAgICAgICByZXR1cm4gZCA/IFtkLk5hbWUsIGQuRW1haWwsIGQuUGhvbmUsIGQuUG9zaXRpb25dLmpvaW4oJywgJykgOiAn0J3QtSDQvdCw0LfQvdCw0YfQtdC9J1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgJ0V2ZW50Lk11bHRpcGxlRGF0ZXMnOiB4ID0+IHgubWFwKGQgPT4gJzxkaXY+JyArIEx1cmUuRGF0ZShkWzBdKS5Gb3JtYXQoJ0REIE1NTU0gWVlZWSBISDptbScsIHRydWUpICsgJyAtICcgKyBMdXJlLkRhdGUoZFsxXSkuRm9ybWF0KCdISDptbScpICsgJzwvZGl2PicpLmpvaW4oJycpIHx8ICfQndC10YIg0L/QvtCy0YLQvtGA0LXQvdC40LknLFxyXG4gICAgICAgICdFdmVudC5FdmVudFRyZW5kJzogeCA9PiBELkV2ZW50VHJlbmRzRGljdFtwYXJzZUludCh4KV0gfHwgeCxcclxuICAgICAgICAnRXZlbnQuQWZmaWNoZUltYWdlJzogeCA9PiAn0JjQt9C80LXQvdC40YLRjCcsXHJcbiAgICAgICAgJ0V2ZW50LklzTW9kZXJhdGVkJzogeCA9PiB4ID8gJ9CU0LAnIDogJ9Cd0LXRgicsXHJcbiAgICAgICAgSGVhZGVyRWRpdE9yQWRkOiB4ID0+IHggPT09ICdlZGl0JyA/ICfQoNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNC1INC00LDQvdC90YvRhScgOiAn0JTQvtCx0LDQstC70LXQvdC40LUnLFxyXG4gICAgICAgIE5vbmVPbkFkZDogKHgsIHApID0+IHAuSGVhZGVyRWRpdE9yQWRkID09PSAnZWRpdCcgPyAnJyA6ICdub25lJyxcclxuICAgICAgICBOb3ROb25lT25BZGQ6ICh4LCBwKSA9PiBwLkhlYWRlckVkaXRPckFkZCA9PT0gJ2VkaXQnID8gJ25vbmUnIDogJycsXHJcbiAgICAgICAgRXJyb3JUZXh0OiB4ID0+IHggfHwgJycsXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHRoaXMgQWZmaWNoZUVkaXRvclxyXG4gICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgTm9uZUlmTm9Nb2RlcjogZnVuY3Rpb24gKCkge3JldHVybiB0aGlzLkVkaXRpbmdOZXdFdiA/ICAnbm9uZScgOiAoIEx1cmUuVXNlci5Sb2xlcy5pbmRleE9mKEQuUm9sZS5Nb2RlcmF0b3IpICE9PSAtMSA/ICcnIDogJ25vbmUnKX1cclxuICAgIH0sXHJcbiAgICBQcm9wVHlwZXM6IHtcclxuICAgICAgICAnRXZlbnQuRGF0ZVN0YXJ0JzogTHVyZS5Qcm9wVHlwZXMuRGF0ZSxcclxuICAgICAgICAnRXZlbnQuRGF0ZUZpbmlzaCc6IEx1cmUuUHJvcFR5cGVzLkRhdGUsXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkJ1dHRvbkNvbmZpcm0gPSB0aGlzLlNlbGVjdCgnLmJ0bi1jb25maXJtJyk7XHJcbiAgICAgICAgdGhpcy5FZGl0aW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5FZGl0aW5nTmV3RXYgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLlBlcmlvZFBpY2tlcnMgPSBbXTtcclxuICAgICAgICB0aGlzLkFmZmljaGVGaWxlSW5wdXQgPSB0aGlzLlNlbGVjdCgnLmFmZmljaGUtaW1hZ2UtZmlsZScpO1xyXG4gICAgICAgIHRoaXMuQWZmSW1hZ2UgPSB0aGlzLlNlbGVjdCgnLmFmZmljaGUtaW1nJyk7XHJcbiAgICAgICAgdGhpcy5Mb2FkQWZmSW1hZ2UgPSBuZXcgTHVyZS5Mb2FkKHtUYXJnZXQ6IHRoaXMuQWZmSW1hZ2UucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50fSk7XHJcblxyXG4gICAgICAgIGxldCBFQ29udmVydCA9IHggPT4gT2JqZWN0LmVudHJpZXMoeCkubWFwKChbaywgdl0pID0+ICh7S2V5OiBrLCBWYWx1ZTogdn0pKTtcclxuXHJcbiAgICAgICAgdGhpcy5FdmVudFR5cGVzID0gRUNvbnZlcnQoRC5MaWJyYXJ5RXZlbnRUeXBlRGljdCk7XHJcbiAgICAgICAgdGhpcy5FdmVudEtpbmRzID0gRUNvbnZlcnQoRC5FdmVudFR5cGVEaWN0KS5maWx0ZXIoeCA9PiB4LktleSA+IDApO1xyXG4gICAgICAgIHRoaXMuRXZlbnRDZWxlYnJhdGlvbnMgPSBFQ29udmVydChELkNlbGVicmF0aW9uRGljdCk7XHJcbiAgICAgICAgdGhpcy5FdmVudFRyZW5kcyA9IEVDb252ZXJ0KEQuRXZlbnRUcmVuZHNEaWN0KTtcclxuICAgICAgICB0aGlzLlVzZXJMaXN0ID0gTHVyZS5Vc2VyLkNhY2hlLlVzZXJMaXN0Lm1hcCh4ID0+ICh7S2V5OiB4LklELCBWYWx1ZTogW3guTmFtZSwgeC5FbWFpbCwgeC5QaG9uZSwgeC5Qb3NpdGlvbl0uam9pbignLCAnKX0pKTtcclxuICAgIH0sXHJcbiAgICBIaWRlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5FZGl0aW5nID0gZmFsc2U7XHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcucmVwZWF0LXNldHRpbmdzJykuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgIGlmICh0aGlzLkRheXNFbGVtcylcclxuICAgICAgICAgICAgZm9yIChsZXQgZCBvZiB0aGlzLkRheXNFbGVtcylcclxuICAgICAgICAgICAgICAgIGlmIChkLmNoZWNrLmNoZWNrZWQpIGQuY2hlY2suY2xpY2soKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5DYW5jZWxFZGl0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBJbnB1dEJveC5IaWRlKCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLlBhcmVudC5Ub2dnbGVTZWxlY3RlZEV2ZW50Um93KG51bGwsIGZhbHNlKTtcclxuICAgICAgICAgICAgZm9yIChsZXQgcHAgb2YgdGhpcy5QZXJpb2RQaWNrZXJzKVxyXG4gICAgICAgICAgICAgICAgcHAuSGlkZSgpO1xyXG4gICAgICAgICAgICB0aGlzLlBlcmlvZFBpY2tlcnMgPSBbXTtcclxuICAgICAgICAgICAgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5FZGl0aW5nTmV3RXYgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5DYW5jZWxFZGl0KCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNvbmZpcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLkNoZWNrV3JvbmcoKSkgeyAvLyB0cnVlIC0g0YfRgtC+LdGC0L4g0L3QtdCy0LXRgNC90L5cclxuICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dFcnJvcign0J/RgNC+0LLQtdGA0YzRgtC1INC/0YDQsNCy0LjQu9GM0L3QvtGB0YLRjCDQt9Cw0L/QvtC70L3QtdC90LjRjyDQv9C+0LvQtdC5Jyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuU2F2ZUV2ZW50SW5mbyh0aGlzLlByb3RvLkRhdGEuRXZlbnQpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5FZGl0aW5nTmV3RXYgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2FuY2VsRWRpdCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hlY2tXcm9uZyA9IGZ1bmN0aW9uIChzaW5nbGUpIHtcclxuICAgICAgICAgICAgbGV0IGludmFsaWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgbGV0IHRvQ2hlY2s7XHJcbiAgICAgICAgICAgIGlmIChzaW5nbGUpXHJcbiAgICAgICAgICAgICAgICB0b0NoZWNrID0gW3NpbmdsZV07XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRvQ2hlY2sgPSBbJ0RhdGVTdGFydCcsICdEYXRlRmluaXNoJywgJ0Rlc2NyaXB0aW9uJywgJ05hbWUnLCAnSW52b2x2ZWRTdGF0dXMnLCAnRXZlbnRUeXBlSUQnLCAnRXZlbnRLaW5kSUQnLCAnUHJpY2UnLCAnVGFyZ2V0QXVkaWVuY2UnLCAnVGFyZ2V0QWdlUmFuZ2UnLCAnUGxhbkNvdW50JywgJ0V2ZW50VHJlbmQnLCAnR3Vlc3RzJ107XHJcbiAgICAgICAgICAgIGxldCBldiA9IHRoaXMuUHJvdG8uRGF0YS5FdmVudCwgZXIgPSB0aGlzLlByb3RvLkRhdGEuRXJyb3JUZXh0LCBpbnYgPSB0aGlzLlByb3RvLkRhdGEuSW52YWxpZDtcclxuICAgICAgICAgICAgZm9yIChsZXQga2V5IG9mIHRvQ2hlY2spXHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ1ByaWNlJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZGVidWdnZXJcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2W2tleV0gPiAwICYmIChldlsnSW5pdGlhdG9yJ10gPT09ICfQk9CXJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludltrZXldID0gdHJ1ZTsgaW52YWxpZCA9IHRydWU7IGVyW2tleV0gPSAnKtCc0LXRgNC+0L/RgNC40Y/RgtC40LUg0LIg0YDQsNC80LrQsNGFINCT0Jcg0L3QtSDQvNC+0LbQtdGCINCx0YvRgtGMINC/0LvQsNGC0L3Ri9C8JztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChldltrZXldID4gMCAmJiAoWycxJywgJzMnLCAnNSddLmluZGV4T2YoZXZbJ0V2ZW50VHlwZUlEJ10gKyAnJykgPiAtMSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludltrZXldID0gdHJ1ZTsgaW52YWxpZCA9IHRydWU7IGVyW2tleV0gPSAnKtCR0LXRgdC/0LvQsNGC0L3QvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUg0L3QtSDQvNC+0LbQtdGCINC40LzQtdGC0Ywg0YbQtdC90YMnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYoZXZba2V5XSA9PT0gMCAmJiBbJzInLCAnNCddLmluZGV4T2YoZXZbJ0V2ZW50VHlwZUlEJ10pID4gLTEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludltrZXldID0gdHJ1ZTsgaW52YWxpZCA9IHRydWU7IGVyW2tleV0gPSAnKtCj0LrQsNC20LjRgtC1INGG0LXQvdGDINC00LvRjyDQv9C70LDRgtC90L7Qs9C+INC80LXRgNC+0L/RgNC40Y/RgtC40Y8nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge2ludltrZXldID0gZmFsc2U7IGVyW2tleV0gPSAnJzt9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ0V2ZW50VHlwZUlEJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChbJzInLCAnNCddLmluZGV4T2YoZXZba2V5XSArICcnKSA+IC0xKSAmJiBldlsnSW5pdGlhdG9yJ10gPT09ICfQk9CXJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52W2tleV0gPSB0cnVlOyBpbnZhbGlkID0gdHJ1ZTsgZXJba2V5XSA9ICcq0JzQtdGA0L7Qv9GA0LjRj9GC0LjQtSDQsiDRgNCw0LzQutCw0YUg0JPQlyDQvdC1INC80L7QttC10YIg0LHRi9GC0Ywg0L/Qu9Cw0YLQvdGL0LwnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge2ludltrZXldID0gZmFsc2U7IGVyW2tleV0gPSAnJzt9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ0V2ZW50S2luZElEJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2W2tleV0gKyAnJyA9PT0gJzE0JyAmJiAoWyczJywgJzQnXS5pbmRleE9mKGV2WydFdmVudFR5cGVJRCddICsgJycpID4gLTEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnZba2V5XSA9IHRydWU7IGludmFsaWQgPSB0cnVlOyBlcltrZXldID0gJyrQo9C60LDQt9Cw0L0g0LrQu9GD0LEsINGD0LrQsNC20LjRgtC1INCyINGC0LjQv9C1INC60LvRg9CxJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtpbnZba2V5XSA9IGZhbHNlOyBlcltrZXldID0gJyc7fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZba2V5XSA9PT0gbnVsbCB8fCBldltrZXldID09PSAwIHx8IGV2W2tleV0gPT09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnZba2V5XSA9IHRydWU7IGludmFsaWQgPSB0cnVlOyBlcltrZXldID0gJyrQn9C+0LvQtSDQvdC1INC80L7QttC10YIg0LHRi9GC0Ywg0L/Rg9GB0YLRi9C8LCDQstCy0LXQtNC40YLQtSDQt9C90LDRh9C10L3QuNC1JztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtpbnZba2V5XSA9IGZhbHNlOyBlcltrZXldID0gJyc7fVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgcmV0dXJuIGludmFsaWQ7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlNhdmVFdmVudEluZm8gPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgZGF0YS5EYXRlU3RhcnQgPSBMdXJlLkRhdGUoZGF0YS5EYXRlU3RhcnQpLkRhdGVDcztcclxuICAgICAgICAgICAgZGF0YS5EYXRlRmluaXNoID0gTHVyZS5EYXRlKGRhdGEuRGF0ZUZpbmlzaCkuRGF0ZUNzO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5FZGl0aW5nTmV3RXYgPT09IHRydWUpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLkRhdGFJbnB1dF9FdmVudF9BZGQoZGF0YS5MaWJyYXJ5SUQsIGRhdGEsIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzIDwgMClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5FcnJvcign0J3QtSDRg9C00LDQu9C+0YHRjCDQt9Cw0YDQtdCz0LjRgdGC0YDQuNGA0L7QstCw0YLRjCDRgdC+0LHRi9GC0LjQtScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5BZmZpY2hlRmlsZUlucHV0LmZpbGVzWzBdKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5EYXRhSW5wdXRfRXZlbnRfQWRkRmlsZSh0aGlzLkFmZmljaGVGaWxlSW5wdXQuZmlsZXNbMF0sIHtMaWJyYXJ5RXZlbnRJRDogcmVzfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKSA9PiB0aGlzLkxvYWQuSGlkZSgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5EYXRhSW5wdXRfRXZlbnRfRWRpdChkYXRhLkxpYnJhcnlJRCwgZGF0YS5JRCwgZGF0YSwge1xyXG4gICAgICAgICAgICAgICAgICAgIFRoZW46ICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJlbnQuUmVmcmVzaERhdGEoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuQWZmaWNoZUZpbGVJbnB1dC5maWxlc1swXSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcGkuRGF0YUlucHV0X0V2ZW50X0FkZEZpbGUodGhpcy5BZmZpY2hlRmlsZUlucHV0LmZpbGVzWzBdLCB7TGlicmFyeUV2ZW50SUQ6IGRhdGEuSUR9KTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpID0+IHRoaXMuTG9hZC5IaWRlKClcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuQ3JlYXRlTmV3RXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuRWRpdGluZ05ld0V2ID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5TaG93RXZlbnQoKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU2hvd0V2ZW50ID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLkVkaXRpbmcpIHtcclxuICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLk5vdGljZSgn0JLRiyDRg9C20LUg0YDQtdC00LDQutGC0LjRgNGD0LXRgtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUuPGJyPtCX0LDQutGA0L7QudGC0LUg0LXQs9C+INC40LvQuCDRgdC+0YXRgNCw0L3QuNGC0LUsINGH0YLQvtCx0Ysg0YDQtdC00LDQutGC0LjRgNC+0LLQsNGC0Ywg0LTRgNGD0LPQvtC1Jyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5FZGl0aW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLkVkaXRpbmdOZXdFdilcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0hlYWRlckVkaXRPckFkZCcsICdlZGl0Jyk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0hlYWRlckVkaXRPckFkZCcsICdhZGQnKTtcclxuICAgICAgICAgICAgbGV0IHN0YXJ0RGlzYWJsZWQgPSB7fTtcclxuICAgICAgICAgICAgaWYgKCFldmVudCkge1xyXG4gICAgICAgICAgICAgICAgZXZlbnQgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgQWdlTGltaXQ6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgQWxsb3dfQmxpbmQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIEFsbG93X0RlYWY6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIEFsbG93X0Rpc2FibGVkOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBDdXJhdG9yOiBMdXJlLlVzZXIuSUQsXHJcbiAgICAgICAgICAgICAgICAgICAgRGF0ZUZpbmlzaDogTHVyZS5EYXRlKCkuRGF0ZUNzLFxyXG4gICAgICAgICAgICAgICAgICAgIERhdGVTdGFydDogTHVyZS5EYXRlKCkuRGF0ZUNzLFxyXG4gICAgICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50Q2VsZWJyYXRpb246IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRLaW5kSUQ6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRUcmVuZDogMTIsXHJcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRUeXBlSUQ6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgR3Vlc3RzOiBcItCd0LXRglwiLFxyXG4gICAgICAgICAgICAgICAgICAgIElEOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIEluaXRpYXRvcjogJ9CT0JcnLFxyXG4gICAgICAgICAgICAgICAgICAgIEludm9sdmVkU3RhdHVzOiAn0L7RgNCz0LDQvdC40LfQsNGC0L7RgCcsXHJcbiAgICAgICAgICAgICAgICAgICAgTGlicmFyeUlEOiBwYXJzZUludCh0aGlzLlBhcmVudC5MaWJTZWxlY3QudmFsdWUpLFxyXG4gICAgICAgICAgICAgICAgICAgIE5hbWU6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgUGxhbkNvdW50OiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIFByaWNlOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIFRhZ3M6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgVGFyZ2V0QWdlUmFuZ2U6IFwiMCtcIixcclxuICAgICAgICAgICAgICAgICAgICBUYXJnZXRBdWRpZW5jZTogXCIwLTEwMFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UGxhY2VUeXBlSUQ6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgTXVsdGlwbGVEYXRlczogW10sXHJcbiAgICAgICAgICAgICAgICAgICAgVGlzZXI6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgIEFmZmljaGVJbWFnZTogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgSXNNb2RlcmF0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgc3RhcnREaXNhYmxlZCA9IHtQcmljZTogdHJ1ZX07XHJcbiAgICAgICAgICAgIH1cclxuLyogICAgICAgICAgICBsZXQgZmllbGRMb2NhbGUgPSB7XHJcbiAgICAgICAgICAgICAgICBBZ2VMaW1pdDogJ9CS0L7Qt9GA0LDRgdGC0L3QvtC5INGG0LXQvdC3JyxcclxuICAgICAgICAgICAgICAgIEFsbG93X0JsaW5kOiAn0JTQvtGB0YLRg9C/0L3QvtGB0YLRjCDQtNC70Y8g0LvQuNGGINGBINCe0JLQlyDQv9C+INC30YDQtdC90LjRjicsXHJcbiAgICAgICAgICAgICAgICBBbGxvd19EZWFmOiAn0JTQvtGB0YLRg9C/0L3QvtGB0YLRjCDQtNC70Y8g0LvQuNGGINGBINCe0JLQlyDQv9C+INGB0LvRg9GF0YMnLFxyXG4gICAgICAgICAgICAgICAgQWxsb3dfRGlzYWJsZWQ6ICfQlNC+0YHRgtGD0L/QvdC+0YHRgtGMINC00LvRjyDQu9C40YYg0YEg0J7QktCXINC+0L/QvtGA0L3Qvi3QtNCy0LjQs9Cw0YLQtdC70YzQvdC+0LPQviDQsNC/0L/QsNGA0LDRgtCwJyxcclxuICAgICAgICAgICAgICAgIEN1cmF0b3I6ICfQpNCY0J4g0L7RgtCy0LXRgtGB0YLQstC10L3QvdC+0LPQviwgZS1tYWlsLCDRgtC10LvQtdGE0L7QvSwg0LTQvtC70LbQvdC+0YHRgtGMJyxcclxuICAgICAgICAgICAgICAgIERhdGVTdGFydDogJ9CU0LDRgtCwINC90LDRh9Cw0LvQsCcsXHJcbiAgICAgICAgICAgICAgICBEYXRlRmluaXNoOiAn0JTQsNGC0LAg0L7QutC+0L3Rh9Cw0L3QuNGPJyxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAn0JrRgNCw0YLQutC+0LUg0L7Qv9C40YHQsNC90LjQtSAo0LTQviAzMDAg0LfQvdCw0LrQvtCyKScsXHJcbiAgICAgICAgICAgICAgICBFdmVudENlbGVicmF0aW9uOiAn0JrQsNC60L7QuSDQtNCw0YLQtSDQv9C+0YHQstGP0YnQtdC90L4g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQtScsIC8vIENlbGVicmF0aW9uRGljdFxyXG4gICAgICAgICAgICAgICAgRXZlbnRLaW5kSUQ6ICfQktC40LQg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjycsXHJcbiAgICAgICAgICAgICAgICBFdmVudFRyZW5kOiAn0J3QsNC/0YDQsNCy0LvQtdC90LjQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNGPJyxcclxuICAgICAgICAgICAgICAgIEV2ZW50VHlwZUlEOiAn0KLQuNC/INC80LXRgNC+0L/RgNC40Y/RgtC40Y8nLFxyXG4gICAgICAgICAgICAgICAgR3Vlc3RzOiBcItCg0LDQudC+0L3QvdGL0LUg0KHQnNCYLCDQotCSLdC60LDQvdCw0LvRi1wiLFxyXG4gICAgICAgICAgICAgICAgSUQ6ICfihJYnLFxyXG4gICAgICAgICAgICAgICAgSW52b2x2ZWRTdGF0dXM6ICfQodGC0LDRgtGD0YEg0YPRh9Cw0YHRgtC40Y8gKNC+0YDQs9Cw0L3QuNC30LDRgtC+0YAgLyDRg9GH0LDRgdGC0L3QuNC6KScsXHJcbiAgICAgICAgICAgICAgICBMaWJyYXJ5SUQ6ICfQndCw0LjQvNC10L3QvtCy0LDQvdC40LUg0L/QvtC00YDQsNC30LTQtdC70LXQvdC40Y8nLFxyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNGPJyxcclxuICAgICAgICAgICAgICAgIFBsYW5Db3VudDogJ9CX0LDQv9C70LDQvdC40YDQvtCy0LDQvdC90L7QtSDRh9C40YHQu9C+INC/0L7RgdC10YLQuNGC0LXQu9C10LknLFxyXG4gICAgICAgICAgICAgICAgUHJpY2U6ICfQkdC10YHQv9C70LDRgtC90L7QtSAvINC/0LvQsNGC0L3QvtC1IC8g0YHRgtC+0LjQvNC+0YHRgtGMINC/0L7RgdC10YnQtdC90LjRjycsXHJcbiAgICAgICAgICAgICAgICBUYXJnZXRBZ2VNYXg6ICfQktC+0LfRgNCw0YHRgtC90LDRjyDQutCw0YLQtdCz0L7RgNC40Y8gKNC80LDQutGBKScsXHJcbiAgICAgICAgICAgICAgICBUYXJnZXRBZ2VNaW46ICfQktC+0LfRgNCw0YHRgtC90LDRjyDQutCw0YLQtdCz0L7RgNC40Y8gKNC80LjQvSknLFxyXG4gICAgICAgICAgICAgICAgVGFyZ2V0QWdlUmFuZ2U6ICfQktC+0LfRgNCw0YHRgtC90LDRjyDQutCw0YLQtdCz0L7RgNC40Y8nLFxyXG4gICAgICAgICAgICAgICAgVGFyZ2V0QXVkaWVuY2U6ICfQptC10LvQtdCy0LDRjyDQsNGD0LTQuNGC0L7RgNC40Y8nLFxyXG4gICAgICAgICAgICAgICAgVGFnczogJ9Ci0LXQs9C4JyxcclxuICAgICAgICAgICAgICAgIEluaXRpYXRvcjogJ9Cc0LXRgNC+0L/RgNC40Y/RgtC40LUg0L/RgNC+0LLQvtC00LjRgtGB0Y8g0LIg0YDQsNC80LrQsNGFJyxcclxuICAgICAgICAgICAgICAgIEV2ZW50UGxhY2VUeXBlSUQ6ICfQodGC0LDRhtC40L7QvdCw0YAgLyDQstC90LXRgdGC0LDRhtC40L7QvdCw0YAnLFxyXG4gICAgICAgICAgICAgICAgTXVsdGlwbGVEYXRlczogJ9Cf0L7QstGC0L7RgNC10L3QuNGPJyxcclxuICAgICAgICAgICAgICAgIFRpc2VyOiAn0KLQuNC30LXRgCcsXHJcbiAgICAgICAgICAgICAgICBJc01vZGVyYXRlZDogJ9Cf0L7QtNGC0LLQtdGA0LbQtNC10L3QviDQvNC+0LTQtdGA0LDRgtC+0YDQvtC8JyxcclxuICAgICAgICAgICAgICAgIEFmZmljaGVJbWFnZTogJ9CQ0YTQuNGI0LAnXHJcbiAgICAgICAgICAgIH07Ki9cclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkV2ZW50ID0gZXZlbnQ7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5EaXNhYmxlZCA9IHN0YXJ0RGlzYWJsZWQ7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5FcnJvclRleHQgPSB7fTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkludmFsaWQgPSB7fTtcclxuICAgICAgICAgICAgdGhpcy5BZmZpY2hlRmlsZUlucHV0LnZhbHVlID0gJyc7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICB0aGlzLkFmZkltYWdlLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLkVkaXRpbmdOZXdFdikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Mb2FkQWZmSW1hZ2UuU2hvdygpO1xyXG4gICAgICAgICAgICAgICAgYXBpLkRhdGFJbnB1dF9FdmVudF9HZXRGaWxlKGV2ZW50LkxpYnJhcnlJRCwgZXZlbnQuSUQsIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiByID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHIuc2l6ZSA9PT0gMCkgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZGVyLm9ubG9hZGVuZCA9ICgpID0+IHt0aGlzLkFmZkltYWdlLnNyYyA9IHJlYWRlci5yZXN1bHQ7IHRoaXMuQWZmSW1hZ2UuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO307XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKHIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRmluYWxseTogKCkgPT4gdGhpcy5Mb2FkQWZmSW1hZ2UuSGlkZSgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHRoaXMuQWZmSW1hZ2UuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgICAgICB0aGlzLlNob3coKTtcclxuICAgICAgICAgICAgcmV0dXJuIGV2ZW50O1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5IYW5kbGVFZGl0ID0gZnVuY3Rpb24gKGVsZW0sIHR5cGUsIGxpbmUpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuUHJvdG8uRGF0YS5EaXNhYmxlZFt0eXBlXSkgcmV0dXJuO1xyXG4gICAgICAgICAgICBsZXQgcnVuSW5wRGlhbG9nID0gdHJ1ZTtcclxuICAgICAgICAgICAgbGV0IHJ1bk51bVBhZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBsZXQgZGF0YSwgY2FwdGlvbiwgY3VzdG9tRnVuID0gKCkgPT4ge307XHJcbiAgICAgICAgICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICAgICAgICAgICAgLyogY2FzZSAnTGlicmFyeUlEJzpcclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uID0gJ9Cd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDQv9C+0LTRgNCw0LfQtNC10LvQtdC90LjRjyc7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IEx1cmUuVXNlckNhY2hlLkxpYnJhcnlMaXN0Lm1hcCh4ID0+ICh7S2V5OiB4LklELCBWYWx1ZTogeC5OYW1lfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrOyovXHJcbiAgICAgICAgICAgICAgICBjYXNlICdBZmZpY2hlSW1hZ2UnOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQWZmaWNoZUZpbGVJbnB1dC5jbGljaygpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQWZmaWNoZUZpbGVJbnB1dC5vbmNoYW5nZSA9IGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZmlsZSA9IHRoaXMuQWZmaWNoZUZpbGVJbnB1dC5maWxlc1swXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnRXZlbnQuQWZmaWNoZUltYWdlJywgZmlsZS5uYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWRlbmQgPSAoKSA9PiB7dGhpcy5BZmZJbWFnZS5zcmMgPSByZWFkZXIucmVzdWx0OyB0aGlzLkFmZkltYWdlLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIGNhc2UgJ1Rpc2VyJzpcclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uID0gJ9Ci0LjQt9C10YAnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnR3Vlc3RzJzpcclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uID0gJ9Cg0LDQudC+0L3QvdGL0LUg0KHQnNCYLCDQotCSLdC60LDQvdCw0LvRiyc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdOYW1lJzpcclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uID0gJ9Cd0LDQt9Cy0LDQvdC40LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjyc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdJbnZvbHZlZFN0YXR1cyc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQodGC0LDRgtGD0YEg0YPRh9Cw0YHRgtC40Y8nO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSBbe0tleTogJ9GD0YfQsNGB0YLQvdC40LonLCBWYWx1ZTogJ9GD0YfQsNGB0YLQvdC40LonfSwge0tleTogJ9C+0YDQs9Cw0L3QuNC30LDRgtC+0YAnLCBWYWx1ZTogJ9C+0YDQs9Cw0L3QuNC30LDRgtC+0YAnfV07XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdFdmVudEtpbmRJRCc6XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHRoaXMuRXZlbnRLaW5kcztcclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uID0gJ9CS0LjQtCDQvNC10YDQvtC/0YDQuNGP0YLQuNGPJztcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ0V2ZW50VHlwZUlEJzpcclxuICAgICAgICAgICAgICAgICAgICBkYXRhID0gdGhpcy5FdmVudFR5cGVzO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb24gPSAn0KLQuNC/INC80LXRgNC+0L/RgNC40Y/RgtC40Y8nO1xyXG4gICAgICAgICAgICAgICAgICAgIGN1c3RvbUZ1biA9IChsaW5lKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwID0gdGhpcy5Qcm90by5EYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwLkV2ZW50WydFdmVudFR5cGVJRCddID0gcGFyc2VJbnQocC5FdmVudFsnRXZlbnRUeXBlSUQnXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwLkV2ZW50WydFdmVudFR5cGVJRCddID09PSA1KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLkV2ZW50WydFdmVudEtpbmRJRCddID0gODtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAuRGlzYWJsZWRbJ0V2ZW50S2luZElEJ10gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHAuRXZlbnRbJ0V2ZW50VHlwZUlEJ10gPT09IDMgfHwgcC5FdmVudFsnRXZlbnRUeXBlSUQnXSA9PT0gNCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcC5FdmVudFsnRXZlbnRLaW5kSUQnXSA9IDE0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcC5EaXNhYmxlZFsnRXZlbnRLaW5kSUQnXSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBwLkRpc2FibGVkWydFdmVudEtpbmRJRCddID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocC5FdmVudFsnRXZlbnRUeXBlSUQnXSA9PT0gMSB8fCBwLkV2ZW50WydFdmVudFR5cGVJRCddID09PSAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLkV2ZW50WydQcmljZSddID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAuRGlzYWJsZWRbJ1ByaWNlJ10gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgcC5EaXNhYmxlZFsnUHJpY2UnXSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnRXZlbnRQbGFjZVR5cGVJRCc6XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IFt7S2V5OiBELkV2ZW50UGxhY2VUeXBlLlN0YXRpb25hcnksIFZhbHVlOiAn0KHRgtCw0YbQuNC+0L3QsNGAJ30sIHtLZXk6IEQuRXZlbnRQbGFjZVR5cGUuTm9uU3RhdGlvbmFyeSwgVmFsdWU6ICfQktC90LXRgdGC0LDRhtC40L7QvdCw0YAnfV07XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQodGC0LDRhtC40L7QvdCw0YAgLyDQstC90LXRgdGC0LDRhtC40L7QvdCw0YAnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnRXZlbnRUcmVuZCc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQndCw0L/RgNCw0LLQu9C10L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40Y8nO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSB0aGlzLkV2ZW50VHJlbmRzO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnRXZlbnRDZWxlYnJhdGlvbic6XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHRoaXMuRXZlbnRDZWxlYnJhdGlvbnM7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQmtCw0LrQvtC5INC00LDRgtC1INC/0L7RgdCy0Y/RidC10L3QviDQvNC10YDQvtC/0YDQuNGP0YLQuNC1JztcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ1RhZ3MnOlxyXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb24gPSAn0KLQtdCz0LgnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnRGVzY3JpcHRpb24nOlxyXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb24gPSAn0JrRgNCw0YLQutC+0LUg0L7Qv9C40YHQsNC90LjQtSc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAvKmNhc2UgJ0RhdGVTdGFydCc6XHJcbiAgICAgICAgICAgICAgICBjYXNlICdEYXRlRmluaXNoJzpcclxuICAgICAgICAgICAgICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBwO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghZWxlbS5wcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcCA9IG5ldyBMdXJlLlBlcmlvZFBpY2tlcih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUYXJnZXQ6IGVsZW0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb1JhbmdlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0ZVRhcmdldDogTHVyZS5EYXRlKHNlbGYuUHJvdG8uRGF0YS5FdmVudFt0eXBlXSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdXRvQ29uZmlybTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9uQ29uZmlybTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuUHJvdG8uU2V0UHJvcGVydHkoJ0V2ZW50LicrIHR5cGUsIEx1cmUuRGF0ZSh0aGlzLkRhdGUpLkRhdGVDcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbS5wcCA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbS5wcCA9IHBwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlBlcmlvZFBpY2tlcnMucHVzaChwcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBwID0gZWxlbS5wcDtcclxuICAgICAgICAgICAgICAgICAgICBwcC5TaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcnVuSW5wRGlhbG9nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7Ki9cclxuICAgICAgICAgICAgICAgIGNhc2UgJ1BsYW5Db3VudCc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQl9Cw0L/Qu9Cw0L3QuNGA0L7QstCw0L3QvdC+0LUg0YfQuNGB0LvQviDQv9C+0YHQtdGC0LjRgtC10LvQtdC5JztcclxuICAgICAgICAgICAgICAgICAgICBydW5OdW1QYWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJ1bklucERpYWxvZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnQ3VyYXRvcic6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQpNCY0J4g0L7RgtCy0LXRgtGB0YLQstC10L3QvdC+0LPQvic7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHRoaXMuVXNlckxpc3Q7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdUYXJnZXRBdWRpZW5jZSc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQptC10LvQtdCy0LDRjyDQsNGD0LTQuNGC0L7RgNC40Y8nO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBzcGxpdCA9IHRoaXMuUHJvdG8uRGF0YS5FdmVudFsnVGFyZ2V0QXVkaWVuY2UnXS5zcGxpdCgnLScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghc3BsaXRbMV0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwbGl0ID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgSW5wdXRCb3guUnVuKGVsZW0sICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB4ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5FdmVudFsnVGFyZ2V0QXVkaWVuY2UnXSA9IHguam9pbignLScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkludmFsaWRbJ1RhcmdldEF1ZGllbmNlJ10gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDYXB0aW9uOiBjYXB0aW9uLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVHlwZTogJ3JhbmdlJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1pblZhbHVlOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTWF4VmFsdWU6IDEwMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZhbHVlOiBzcGxpdFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICBjYXNlICdBZ2VMaW1pdCc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQktC+0LfRgC4g0YbQtdC90LcnO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSAobmV3IEFycmF5KDEwKSkuU2VsZWN0KCh4LCBpKSA9PiAoe0tleTogaSAqIDIsIFZhbHVlOiBpICogMiArICcrJ30pKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ1RhcmdldEFnZVJhbmdlJzpcclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uID0gJ9CS0L7Qt9GALiDQutCw0YLQtdCz0L7RgNC40Y8nO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnQWxsb3dfQmxpbmQnOlxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSBbe0tleTogdHJ1ZSwgVmFsdWU6ICfQtNC+0YHRgtGD0L/QvdC+J30sIHtLZXk6IGZhbHNlLCBWYWx1ZTogJ9C90LXQtNC+0YHRgtGD0L/QvdC+J31dO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb24gPSAn0J7QktCXINC/0L4g0LfRgNC10L3QuNGOJztcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ0FsbG93X0RlYWYnOlxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSBbe0tleTogdHJ1ZSwgVmFsdWU6ICfQtNC+0YHRgtGD0L/QvdC+J30sIHtLZXk6IGZhbHNlLCBWYWx1ZTogJ9C90LXQtNC+0YHRgtGD0L/QvdC+J31dO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb24gPSAn0J7QktCXINC/0L4g0YHQu9GD0YXRgyc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdBbGxvd19EaXNhYmxlZCc6XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IFt7S2V5OiB0cnVlLCBWYWx1ZTogJ9C00L7RgdGC0YPQv9C90L4nfSwge0tleTogZmFsc2UsIFZhbHVlOiAn0L3QtdC00L7RgdGC0YPQv9C90L4nfV07XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQntCS0Jcg0L/QviDQvtC/0L7RgNC90L4t0LTQstC40LPQsNGC0LXQu9GM0L3QvtC80YMg0LDQv9C/0LDRgNCw0YLRgyc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdQcmljZSc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQodGC0L7QuNC80L7RgdGC0Ywg0L/QvtGB0LXRidC10L3QuNGPJztcclxuICAgICAgICAgICAgICAgICAgICBydW5OdW1QYWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJ1bklucERpYWxvZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnSW5pdGlhdG9yJzpcclxuICAgICAgICAgICAgICAgICAgICBkYXRhID0gW3tLZXk6ICfQk9CXJywgVmFsdWU6ICfQk9CXJ30sIHtLZXk6ICfQkicsIFZhbHVlOiAn0JInfSwge0tleTogJ9CYJywgVmFsdWU6ICfQmCd9XTtcclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uID0gJ9Cf0YDQvtCy0L7QtNC40YLRgdGPINCyINGA0LDQvNC60LDRhSc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgbmVlZEh1Z2UgPSBbJ05hbWUnLCAnQ3VyYXRvcicsICdEZXNjcmlwdGlvbicsICdUaXNlciddO1xyXG4gICAgICAgICAgICBpZiAocnVuSW5wRGlhbG9nKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgQ3VzdG9tV2lkdGggPSBuZWVkSHVnZS5pbmRleE9mKHR5cGUpID4gLTEgPyAzMDAgOiAwO1xyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdUaXNlcicpXHJcbiAgICAgICAgICAgICAgICAgICAgQ3VzdG9tV2lkdGggPSA2MDA7XHJcblxyXG4gICAgICAgICAgICAgICAgSW5wdXRCb3guUnVuKGVsZW0sIHRoaXMuUHJvdG8uRGF0YS5FdmVudFt0eXBlXSxcclxuICAgICAgICAgICAgICAgICAgICB4ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGQgPSB0aGlzLlByb3RvLkRhdGEuRXZlbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh4ID09PSAndHJ1ZScpIGRbdHlwZV0gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh4ID09PSAnZmFsc2UnKSBkW3R5cGVdID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHBhcnNlSW50KHgpICsgJycgPT09IHggKyAnJykgZFt0eXBlXSA9IHBhcnNlSW50KHgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGRbdHlwZV0gPSB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBkLkVkaXRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5JbnZhbGlkW3R5cGVdID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5FcnJvclRleHRbdHlwZV0gPSAnJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tRnVuKGxpbmUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGVja1dyb25nKC8qdHlwZSovKTtcclxuICAgICAgICAgICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENhcHRpb246IGNhcHRpb24sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEtleVZhbHVlOiAnS2V5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgS2V5VmlldzogJ1ZhbHVlJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YTogZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGV4dEFyZWE6IG5lZWRIdWdlLmluZGV4T2YodHlwZSkgPiAtMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgVHlwZTogdHlwZSA9PT0gJ1Rpc2VyJyA/ICdlZGl0b3InIDogKG5lZWRIdWdlLmluZGV4T2YodHlwZSkgPiAtMSA/ICd0ZXh0JyA6ICdhdXRvJyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEN1c3RvbVdpZHRoOiBDdXN0b21XaWR0aCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ3VzdG9tSGVpZ2h0OiBuZWVkSHVnZS5pbmRleE9mKHR5cGUpID4gLTEgPyAxMjAgOiAwXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHJ1bk51bVBhZClcclxuICAgICAgICAgICAgICAgIElucHV0Qm94LlJ1bihlbGVtLCB0aGlzLlByb3RvLkRhdGEuRXZlbnRbdHlwZV0sXHJcbiAgICAgICAgICAgICAgICAgICAgeCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkID0gdGhpcy5Qcm90by5EYXRhLkV2ZW50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkW3R5cGVdID0gcGFyc2VJbnQoeCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5JbnZhbGlkW3R5cGVdID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5FcnJvclRleHRbdHlwZV0gPSAnJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hlY2tXcm9uZygvKnR5cGUqLyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwge0NhcHRpb246IGNhcHRpb259KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2FsY3VsYXRlRGF0ZVJhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgZGF0ZVN0YXJ0ID0gKChuZXcgRGF0ZSkgPiB0aGlzLlJlcGVhdERhdGVSYW5nZS5EYXRlWzBdID8gbmV3IERhdGUgOiB0aGlzLlJlcGVhdERhdGVSYW5nZS5EYXRlWzBdKSxcclxuICAgICAgICAgICAgICAgIGRhdGVFbmQgPSB0aGlzLlJlcGVhdERhdGVSYW5nZS5EYXRlWzFdLFxyXG4gICAgICAgICAgICAgICAgYXJyID0gdGhpcy5EYXlzRWxlbXMsXHJcbiAgICAgICAgICAgICAgICByZXMgPSBbXSxcclxuICAgICAgICAgICAgICAgIHNraXAgPSBbMCwgMCwgMCwgMCwgMCwgMCwgMF07XHJcblxyXG4gICAgICAgICAgICBmb3IgKGxldCBkID0gbmV3IERhdGUoZGF0ZVN0YXJ0KTsgZCA8PSBkYXRlRW5kOyBkLnNldERhdGUoZC5nZXREYXRlKCkgKyAxKSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHcgPSBkLmdldERheSgpID09PSAwID8gNiA6IGQuZ2V0RGF5KCkgLSAxO1xyXG4gICAgICAgICAgICAgICAgaWYgKGFyclt3XS5jaGVjay5jaGVja2VkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFhcnJbd10udGltZVN0YXJ0LnZhbHVlIHx8ICFhcnJbd10udGltZUZpbmlzaC52YWx1ZSkge0x1cmUuU3lzdGVtLkVycm9yKCfQktGA0LXQvNGPINC90LUg0LfQsNC00LDQvdC+LCDQv9GA0L7QstC10YDRjNGC0LUg0L/RgNCw0LLQuNC70YzQvdC+0YHRgtGMJyk7IHJldHVybn1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2tpcFt3XSA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucHVzaChbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLkRhdGUobmV3IERhdGUoZC5nZXRGdWxsWWVhcigpLCBkLmdldE1vbnRoKCksIGQuZ2V0RGF0ZSgpLCBhcnJbd10udGltZVN0YXJ0LnZhbHVlLnNwbGl0KCc6JylbMF0sIGFyclt3XS50aW1lU3RhcnQudmFsdWUuc3BsaXQoJzonKVsxXSkpLkRhdGVDcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuRGF0ZShuZXcgRGF0ZShkLmdldEZ1bGxZZWFyKCksIGQuZ2V0TW9udGgoKSwgZC5nZXREYXRlKCksIGFyclt3XS50aW1lRmluaXNoLnZhbHVlLnNwbGl0KCc6JylbMF0sIGFyclt3XS50aW1lRmluaXNoLnZhbHVlLnNwbGl0KCc6JylbMV0pKS5EYXRlQ3NcclxuICAgICAgICAgICAgICAgICAgICAgICAgXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNraXBbd10gPSBwYXJzZUludChhcnJbd10uZWFjaFdlZWsudmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNraXBbd10tLTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLnJlcGVhdC1zZXR0aW5ncycpLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnRXZlbnQuTXVsdGlwbGVEYXRlcycsIHJlcyk7XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db25maXJtLm9uY2xpY2sgPSAoKSA9PiB0aGlzLkNvbmZpcm0oKTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnLmJ0bi1jYW5jZWwnKS5vbmNsaWNrID0gKCkgPT4gdGhpcy5DYW5jZWwoKTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5saW5lLWl0ZW0gLnZhbHVlJywgZSA9PiB0aGlzLkhhbmRsZUVkaXQoZS5jdXJyZW50VGFyZ2V0LCBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndHlwZSddLCBlLmN1cnJlbnRUYXJnZXQucGFyZW50RWxlbWVudC5kYXRhc2V0WydsaW5lJ10pKTtcclxuXHJcbiAgICAgICAgbGV0IGIgPSB0aGlzLlNlbGVjdCgnLnJlcGVhdC1zZXR0aW5ncy1idXR0b24nKTtcclxuICAgICAgICBiLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5SZXBlYXREYXRlUmFuZ2UpXHJcbiAgICAgICAgICAgICAgICB0aGlzLlJlcGVhdERhdGVSYW5nZSA9IG5ldyBMdXJlLlBlcmlvZFBpY2tlcih7XHJcbiAgICAgICAgICAgICAgICAgICAgVGFyZ2V0OiB0aGlzLlNlbGVjdCgnLnJlcGVhdC1zZXR0aW5ncyAucmVwZWF0LWRhdGUtcmFuZ2UnKSxcclxuICAgICAgICAgICAgICAgICAgICBNaW46IEx1cmUuRGF0ZSgpLkRheVN0YXJ0LFxyXG4gICAgICAgICAgICAgICAgICAgIE9uQ29uZmlybTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuRGF5c0VsZW1zKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkRheXNFbGVtcyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNzsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSB0aGlzLlNlbGVjdCgnLm9uZS1kYXlbZGF0YS1kYXk9XCInICsgaSArICdcIl0nKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkRheXNFbGVtcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF5OiBpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVjazogTHVyZS5TZWxlY3QoJy5jaGVjay1kYXknLCBwKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGltZVN0YXJ0OiBMdXJlLlNlbGVjdCgnLnRpbWUtc3RhcnQnLCBwKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGltZUZpbmlzaDogTHVyZS5TZWxlY3QoJy50aW1lLWZpbmlzaCcsIHApLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlYWNoV2VlazogTHVyZS5TZWxlY3QoJy5lYWNoLXdlZWsnLCBwKSxcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLnJlcGVhdC1zZXR0aW5ncycpLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTtcclxuICAgICAgICAgICAgYi5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuYWRkLWNvbXBzIC5kZWxldGUtZXZlbnQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIEx1cmUuQ29uZmlybShcItCj0JTQkNCb0JXQndCY0JUg0JzQldCg0J7Qn9Cg0JjQr9Ci0JjQmVwiLCAn0KPQtNCw0LvQuNGC0Ywg0Y3RgtC+INC80LXRgNC+0L/RgNC40Y/RgtC40LU/Jywge1xyXG4gICAgICAgICAgICAgICAgT25BZ3JlZTogKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGFwaS5EYXRhSW5wdXRfRXZlbnRfUmVtb3ZlKHRoaXMuUHJvdG8uRGF0YS5FdmVudFsnTGlicmFyeUlEJ10sIHRoaXMuUHJvdG8uRGF0YS5FdmVudFsnSUQnXSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBUaGVuOiByID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2FuY2VsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9LCBPbkNhbmNlbDogKCkgPT4ge31cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmNhbGN1bGF0ZS1yYW5nZScsIGUgPT4gdGhpcy5DYWxjdWxhdGVEYXRlUmFuZ2UoKSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29uZmlybS1tb2RlcicsIGUgPT4ge1xyXG4gICAgICAgICAgICBMdXJlLkNvbmZpcm0oXCLQnNCe0JTQldCg0JjQoNCe0JLQkNCd0JjQlSDQnNCV0KDQntCf0KDQmNCv0KLQmNCZXCIsICfQn9C+0LTRgtCy0LXRgNC00LjRgtGMINC/0YDQsNCy0LjQu9GM0L3QvtGB0YLRjCDQstGL0LHRgNCw0L3QvdGL0YUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuT8nLCB7XHJcbiAgICAgICAgICAgICAgICBPbkFncmVlOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgYXBpLkRhdGFJbnB1dF9FdmVudF9Nb2RlcmF0ZSh0aGlzLlByb3RvLkRhdGEuRXZlbnQuTGlicmFyeUlELCBbdGhpcy5Qcm90by5EYXRhLkV2ZW50LklEXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IFBMaW5lID0gdGhpcy5QYXJlbnQuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5RGVsZWdhdGUoeCA9PiB4LklEID09PSB0aGlzLlByb3RvLkRhdGEuRXZlbnQuSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgIFBMaW5lLkRhdGEuSXNNb2RlcmF0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFyZW50LkNvbnRyb2xsZXIuUmVmcmVzaChQTGluZS5MaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0V2ZW50LklzTW9kZXJhdGVkJywgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgfSwgT25DYW5jZWw6ICgpID0+IHt9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICcuY2hlY2stZGF5JywgZSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBuID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ2RheSddIC0gMTtcclxuICAgICAgICAgICAgdGhpcy5EYXlzRWxlbXNbbl0udGltZVN0YXJ0LmRpc2FibGVkID0gIWUuY3VycmVudFRhcmdldC5jaGVja2VkO1xyXG4gICAgICAgICAgICB0aGlzLkRheXNFbGVtc1tuXS50aW1lRmluaXNoLmRpc2FibGVkID0gIWUuY3VycmVudFRhcmdldC5jaGVja2VkO1xyXG4gICAgICAgICAgICB0aGlzLkRheXNFbGVtc1tuXS5lYWNoV2Vlay5kaXNhYmxlZCA9ICFlLmN1cnJlbnRUYXJnZXQuY2hlY2tlZDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcbkRhdGFJbnB1dC5EYXRhQWZmaWNoZUlucHV0LkV2ZW50c0VkaXRvciA9IEFmZmljaGVFZGl0b3I7IiwiLy9sZXQgRGF0YVBsYW5JbnB1dENvbnRlbnQgPSByZXF1aXJlKCcuL2RhdGEtcGxhbi1pbnB1dC9kYXRhLXBsYW4taW5wdXQuanMnKTtcclxuXHJcbmxldCBEYXRhSW5wdXQgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdEYXRhSW5wdXQnLFxyXG4gICAgVGFyZ2V0OiAnLmJvZHknLFxyXG4gICAgVHlwZTogJ2NvbnRlbnQnLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGF0YS1pbnB1dCdcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuU2V0dXBFdmVudCwgRGljdGlvbmFyeS5Sb2xlLlNldHVwUGxhbl1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cImRhdGEtaW5wdXQgbC1jb2xcIj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtcGxhbi1pbnB1dFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1hZmZpY2hlLWlucHV0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICAvKlN1YkNvbnRlbnQ6IGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIC8vdGhpcy5EYXRhUGxhbklucHV0ID0gcmVxdWlyZSgnLi9kYXRhLXBsYW4taW5wdXQvZGF0YS1wbGFuLWlucHV0LmpzJyk7XHJcbiAgICB9LCovXHJcbiAgICBTaG93OiBmdW5jdGlvbiAoKXtcclxuICAgICAgICB0aGlzLlNob3dTdWJDb250ZW50KCk7XHJcbiAgICAgICAgLy90aGlzLkRhdGFQbGFuSW5wdXQuUmVmcmVzaE9uU2hvdygpO1xyXG4gICAgICAgIC8vIHRoaXMuRGF0YUFmZmljaGVJbnB1dC5TaG93KCk7XHJcbiAgICB9LyosXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgfSovXHJcbn0pO1xyXG53aW5kb3cuRGF0YUlucHV0ID0gRGF0YUlucHV0O1xyXG5cclxucmVxdWlyZSgnLi9kYXRhLXBsYW4taW5wdXQvZGF0YS1wbGFuLWlucHV0LmpzJyk7XHJcbnJlcXVpcmUoJy4vZGF0YS1hZmZpY2hlLWlucHV0L2RhdGEtYWZmaWNoZS1pbnB1dC5qcycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBEYXRhSW5wdXQ7XHJcbiIsImNvbnN0IElucHV0Qm94ID0gcmVxdWlyZShcIi4uLy4uLy4uL19jb21tb24vaW5wdXQtYm94L2lucHV0LWJveFwiKTtcclxuXHJcbkRhdGFJbnB1dC5EYXRhUGxhbklucHV0LkNhbGVuZGFyID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERhdGFJbnB1dC5EYXRhUGxhbklucHV0LFxyXG4gICAgTmFtZTogJ0NhbGVuZGFyJyxcclxuICAgIFRhcmdldDogJy5kYXRhLXBsYW4tY29udGFpbmVyJyxcclxuICAgIFZpc2libGU6IHRydWUsXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUnVsZXM6IHtcclxuICAgICAgICAgICAgRWRpdDoge1xyXG4gICAgICAgICAgICAgICAgUm9sZXM6ICBbRC5Sb2xlLlNldHVwUGxhbkVkaXRdXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuYDxkaXYgY2xhc3M9XCJwbGFuLWNhbGVuZGFyIHdpZGdldC1jb250YWluZXJcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItaGVhZGVyIHN0cm9uZ1wiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXItbW9udGgteWVhclwiPiDQoNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNC1INC80LXRgdGP0YbQsDogPHNwYW4gY2xhc3M9XCJsZXNzXCI+PC9zcGFuPjxzcGFuPiB7e0N1cnJlbnRNb250aH19IDwvc3Bhbj48c3BhbiBjbGFzcz1cIm1vcmVcIj48L3NwYW4+IDxzcGFuPnt7Q3VycmVudFllYXJ9fTwvc3Bhbj4gPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRlci1jb3VudHNcIj57e2ZpbGxlZENvdW50fX0gLyB7e2Z1bGxDb3VudH19PC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItYm9keVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ3ZWVrLWRheXMtbmFtZXNcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRheS1uYW1lXCI+0L/QvtC90LXQtNC10LvRjNC90LjQujwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF5LW5hbWVcIj7QstGC0L7RgNC90LjQujwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF5LW5hbWVcIj7RgdGA0LXQtNCwPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXktbmFtZVwiPtGH0LXRgtCy0LXRgNCzPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXktbmFtZVwiPtC/0Y/RgtC90LjRhtCwPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXktbmFtZVwiPtGB0YPQsdCx0L7RgtCwPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXktbmFtZVwiPtCy0L7RgdC60YDQtdGB0LXQvdGM0LU8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImJvdHRvbS1idXR0b25zXCIgZGF0YS1wZXJtaXNzaW9uPVwiRWRpdFwiPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBjYW5jZWwtYnV0dG9uXCI+0J7QotCc0JXQndCQPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGRpc3RyaWJ1dGUtZXZlbmx5LWJ1dHRvblwiPtCg0JDQodCf0KDQldCU0JXQm9CY0KLQrCDQoNCQ0JLQndCe0JzQldCg0J3QnjwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBzYXZlLWJ1dHRvblwiPtCh0J7QpdCg0JDQndCY0KLQrDwvYnV0dG9uPlxyXG4gICAgPC9kaXY+IFxyXG48L2Rpdj5gLFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy5jb250YWluZXItYm9keScsXHJcbiAgICAgICAgRGF0YTogW10sXHJcbiAgICAgICAgRW1wdHlNZXNzYWdlOiBgPGRpdiBjbGFzcz1cImVtcHR5LWNhbGVuZGFyXCI+0JLRi9Cx0LXRgNC40YLQtSDQvNC10YHRj9GGPC9kaXY+YCxcclxuICAgICAgICBMaXN0RWxlbWVudDpcclxuICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJkYXkge3tEYXlJbldlZWt9fSB7e0N1cnJlbnR9fSBcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXktZGF0ZVwiPiBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZS1kYXktbnVtYmVyXCI+e3tEYXlOdW1iZXJ9fSA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGUtbW9udGgtbmFtZVwiPnt7TW9udGh9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFyYW0taWNvbiBob2xpZGF5LWljb24ge3sjaWYgKCRpdGVtLkhvbGlkYXkgPT0gMCk/J25vdC1sb2NrZWQnIDogJ2xvY2tlZCd9fVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtLWljb24gbG9ja2VkLWljb24ge3sjaWYgKCRpdGVtLkxvY2tlZCA9PSAwKT8nbm90LWxvY2tlZCcgOiAnbG9ja2VkJ319XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF5LXBhcmFtZXRlcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFyYW0gdmlzaXRvcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtLWljb24gcGVvcGxlLWljb25cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXR5cGU9XCJWaXNpdG9yc1wiIGNsYXNzPVwicGFyYW0tdmFsdWVcIiBkYXRhLWhpbnQ9XCLQn9C+0YHQtdGJ0LXQvdC40Y8gLSB7e0RheU51bWJlcn19IHt7TW9udGh9fVwiPnt7VmlzaXRvcnN9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbSByZWdpc3RlcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtLWljb24gY2FyZC1pY29uXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS10eXBlPVwiUmVnaXN0ZXJzXCIgY2xhc3M9XCJwYXJhbS12YWx1ZVwiIGRhdGEtaGludD1cItCX0LDQv9C40YHRjCAtIHt7RGF5TnVtYmVyfX0ge3tNb250aH19XCI+e3tSZWdpc3RlcnN9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFyYW0gYm9vay1naXZpbmdcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtLWljb24gYm9va3MtaWNvblwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtdHlwZT1cIkJvb2tHaXZpbmdcIiBjbGFzcz1cInBhcmFtLXZhbHVlXCIgZGF0YS1oaW50PVwi0JrQvdC40LPQvtCy0YvQtNCw0YfQsCAtIHt7RGF5TnVtYmVyfX0ge3tNb250aH19XCI+e3tCb29rR2l2aW5nfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5gXHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgIE1vbnRoOiBmdW5jdGlvbiAoeCkgeyByZXR1cm4gIEx1cmUuRGF0ZShuZXcgRGF0ZSh0aGlzLlBhcmVudC5DdXJyZW50WWVhciwgeCAtIDEpKS5Gb3JtYXQoJ01NTU0nLCB0cnVlKSB9LFxyXG4gICAgICAgIERheUluV2VlazogKHgpID0+IHggPiA1ID8gJyB3ZWVrZW5kJyA6ICcnLFxyXG4gICAgICAgIEN1cnJlbnQ6IGZ1bmN0aW9uKHgsIHApeyByZXR1cm4gdGhpcy5Qcm90by5EYXRhLkN1cnJlbnRNb250aCAhPT0gcC5Nb250aCA/JyBvdGhlci1tb250aCAnOicnIH0sXHJcbiAgICAgICAgQ3VycmVudE1vbnRoOiAoeCkgPT4gTHVyZS5EYXRlKG5ldyBEYXRlKG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSwgeCAtIDEpKS5Gb3JtYXQoJ01NTU0nKSxcclxuICAgICAgICBmaWxsZWRDb3VudDogKHgpID0+IHgudG9Mb2NhbGVTdHJpbmcoKSxcclxuICAgICAgICBmdWxsQ291bnQ6ICh4KSA9PiB4LnRvTG9jYWxlU3RyaW5nKCksXHJcbiAgICAgICAgQ3VycmVudFllYXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuUGFyZW50LkN1cnJlbnRZZWFyIH1cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuU2F2ZUJ1dHRvbiA9IHRoaXMuU2VsZWN0KCcuc2F2ZS1idXR0b24nKTtcclxuICAgICAgICB0aGlzLkNhbENyZWF0ZWQgPSBmYWxzZTtcclxuICAgIH0sXHJcbiAgICBQcm90bzoge1xyXG4gICAgICAgIEN1cnJlbnRNb250aDogKG5ldyBEYXRlKCkpLmdldE1vbnRoKCkgKyAxLFxyXG4gICAgICAgIGZpbGxlZENvdW50OiAwLFxyXG4gICAgICAgIGZ1bGxDb3VudDogMFxyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLk1ha2VDYWxlbmRhciA9IGZ1bmN0aW9uIChtb250aCwgdmFsdWUgPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0N1cnJlbnRNb250aCcsIG1vbnRoKTtcclxuICAgICAgICAgICAgLy8gbW9udGgtLTtcclxuICAgICAgICAgICAgdmFsdWUgPSB7VjogMCwgUjogMCwgQjogMH07XHJcbiAgICAgICAgICAgIGxldCBDWSA9IHRoaXMuUGFyZW50LkFsbE1vbnRoc0RhdGFbdGhpcy5QYXJlbnQuQ3VycmVudFllYXJdO1xyXG4gICAgICAgICAgICBpZiAoIUNZW21vbnRoIC0gMV0pIENZW21vbnRoIC0gMV0gPSBbXTtcclxuICAgICAgICAgICAgaWYgKCFDWVttb250aF0pIENZW21vbnRoXSA9IFtdO1xyXG4gICAgICAgICAgICBpZiAoIUNZW21vbnRoICsgMV0pIENZW21vbnRoICsgMV0gPSBbXTtcclxuICAgICAgICAgICAgbGV0IGRheSA9IChkbiwgZHcsIG0sIGJ2LCBiciwgYmcsIGgsIGwpID0+ICh7RGF5TnVtYmVyOiBkbiwgRGF5SW5XZWVrOiBkdywgTW9udGg6IG0sIFZpc2l0b3JzOiBidiwgUmVnaXN0ZXJzOiBiciwgQm9va0dpdmluZzogYmcsIEhvbGlkYXk6IGgsIExvY2tlZDogbCB9KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBkYXlOdW1iZXIgPSBuZXcgRGF0ZSh0aGlzLlBhcmVudC5DdXJyZW50WWVhciwgbW9udGggLSAxLCAxKS5nZXREYXkoKTsgLy8g0J3QvtC80LXRgCDQv9C10YDQstC+0LPQviDQtNC90Y8g0LIg0LzQtdGB0Y/RhtC1XHJcbiAgICAgICAgICAgIGlmIChkYXlOdW1iZXIgPT09IDApIGRheU51bWJlciA9IDc7XHJcbiAgICAgICAgICAgIGxldCBvbGREYXkgPSBuZXcgRGF0ZSh0aGlzLlBhcmVudC5DdXJyZW50WWVhciwgbW9udGggLSAxLCAxIC0gZGF5TnVtYmVyKS5nZXREYXRlKCkgKyAxOyAvLyDRh9C40YHQu9C+INC/0LXRgNCy0L7Qs9C+INC00L3RjyDQvdC10LTQtdC70LhcclxuXHJcbiAgICAgICAgICAgIGxldCBmdWxsQ291bnQgPSAwO1xyXG4gICAgICAgICAgICBsZXQgZGF0YSA9IFtdO1xyXG4gICAgICAgICAgICBsZXQgZG4gPSAxO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gb2xkRGF5OyBpIDw9IG5ldyBEYXRlKG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSwgbW9udGggLSAxLCAwKS5nZXREYXRlKCk7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKENZW21vbnRoIC0gMV1baSAtIDFdKVxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEucHVzaChDWVttb250aCAtIDFdW2kgLSAxXSk7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGRhdGEucHVzaChkYXkoaSwgZG4sIG1vbnRoIC0gMSwgMCwgMCwgMCwgMCwgMCkpO1xyXG4gICAgICAgICAgICAgICAgZG4rKztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgd2VlayA9IDE7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IG5ldyBEYXRlKHRoaXMuUGFyZW50LkN1cnJlbnRZZWFyLCBtb250aCwgMCkuZ2V0RGF0ZSgpOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGxldCBpbmRleDtcclxuICAgICAgICAgICAgICAgIGlmIChDWVttb250aF1baSAtIDFdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBkYXRhLnB1c2goQ1lbbW9udGhdW2kgLSAxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUuViArPSBDWVttb250aF1baSAtIDFdLlZpc2l0b3JzO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlLlIgKz0gQ1lbbW9udGhdW2kgLSAxXS5SZWdpc3RlcnM7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUuQiArPSBDWVttb250aF1baSAtIDFdLkJvb2tHaXZpbmc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgbmV3RGF5ID0gZGF5KGksIGRheU51bWJlciwgbW9udGgsIDAsIDAsIDAsIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAvIDEuNDUpLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGRhdGEucHVzaChuZXdEYXkpO1xyXG4gICAgICAgICAgICAgICAgICAgIENZW21vbnRoXS5wdXNoKG5ld0RheSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpbmRleC0tO1xyXG4gICAgICAgICAgICAgICAgLy8gZnVsbENvdW50ICs9IGRhdGFbaW5kZXhdLlZpc2l0b3JzICsgZGF0YVtpbmRleF0uUmVnaXN0ZXJzICsgZGF0YVtpbmRleF0uQm9va0dpdmluZztcclxuICAgICAgICAgICAgICAgIGlmIChkYXlOdW1iZXIgPT09IDcpIHtcclxuICAgICAgICAgICAgICAgICAgICBkYXlOdW1iZXIgPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgIHdlZWsrKztcclxuICAgICAgICAgICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIGRheU51bWJlcisrO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgYWRkRGF5cyA9IDcgLSBkYXlOdW1iZXI7XHJcbiAgICAgICAgICAgIGlmICh3ZWVrIDw9IDQpIGFkZERheXMgKz0gNztcclxuICAgICAgICAgICAgaWYgKGRheU51bWJlciAhPT0gMSlcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IGFkZERheXM7IGkrKylcclxuICAgICAgICAgICAgICAgICAgICBpZiAoQ1lbbW9udGggKyAxXVtpXSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5wdXNoKENZW21vbnRoICsgMV1baV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgZGF0YS5wdXNoKGRheShpICsgMSwgKGkgKyBkYXlOdW1iZXIpICUgNyA9PT0gMCA/IDcgOiAoaSArIGRheU51bWJlcikgJSA3LCBtb250aCArIDEsIDAsIDAsIDAsIDAsIDApKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKGRhdGEpO1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2hGaWxsZWQoKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnZnVsbENvdW50JywgZnVsbENvdW50KTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnZnVsbENvdW50JywgdmFsdWUuViArIHZhbHVlLlIgKyB2YWx1ZS5CICk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5EaXN0cmlidXRlRXZlbmx5U2ltcGxlID0gZnVuY3Rpb24gKE1vbnRoSUQsIE1vbnRoU3VtVmFsdWUpIHtcclxuXHJcbiAgICAgICAgICAgIGxldCBEYXRlQ3Vyc29yID0gTHVyZS5EYXRlKG5ldyBEYXRlKHRoaXMuUGFyZW50LkN1cnJlbnRZZWFyLCBNb250aElELCAxKSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgRGFpbHkgPSBNYXRoLmZsb29yKE1vbnRoU3VtVmFsdWUgLyBEYXRlQ3Vyc29yLkNvdW50RGF5cyk7XHJcbiAgICAgICAgICAgIGxldCBSZW1haW5lZCA9IE1vbnRoU3VtVmFsdWUgJSBEYXRlQ3Vyc29yLkNvdW50RGF5cztcclxuICAgICAgICAgICAgbGV0IE1vbnRoRGF0YSA9IChuZXcgQXJyYXkoRGF0ZUN1cnNvci5Db3VudERheXMpKS5TZWxlY3QoKCk9PkRhaWx5KTtcclxuICAgICAgICAgICAgbGV0IGkgPSAwO1xyXG4gICAgICAgICAgICB3aGlsZSAoUmVtYWluZWQgPiAwKXtcclxuICAgICAgICAgICAgICAgIE1vbnRoRGF0YVtpXSsrO1xyXG4gICAgICAgICAgICAgICAgUmVtYWluZWQtLTtcclxuICAgICAgICAgICAgICAgIGkrKztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gTW9udGhEYXRhO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5EaXN0ckV2ZW5DbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IGEgPSB0aGlzLlBhcmVudC5ZZWFyRGF0YVt0aGlzLlBhcmVudC5DdXJyZW50WWVhcl1bTWF0aC5mbG9vcigodGhpcy5Qcm90by5EYXRhLkN1cnJlbnRNb250aCAtIDEpIC8gMyldLk1vbnRoc1sodGhpcy5Qcm90by5EYXRhLkN1cnJlbnRNb250aCAtIDEpICUgM107XHJcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IFthLnZpc2l0b3JzLCBhLnJlZ2lzdHJhdGlvbiwgYS5ib29rc107XHJcbiAgICAgICAgICAgIC8vIEx1cmUuU3lzdGVtLlNob3dOb3RpY2UodmFsdWUpO1xyXG4gICAgICAgICAgICB0aGlzLkRpc3RyaWJ1dGVFdmVubHkodmFsdWUpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuRGlzdHJpYnV0ZUV2ZW5seSA9IGZ1bmN0aW9uICh4LCBjdXJNb250aCA9IC0xKSB7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ2Z1bGxDb3VudCcsIHgucmVkdWNlKChhLGIpID0+IGEgKyBiKSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoY3VyTW9udGggPT09IC0xKVxyXG4gICAgICAgICAgICAgICAgY3VyTW9udGggPSB0aGlzLlByb3RvLkRhdGEuQ3VycmVudE1vbnRoO1xyXG5cclxuICAgICAgICAgICAgbGV0IHJlcyA9IHRoaXMuRGlzdHJpYnV0ZUV2ZW5seU1ldGhvZCh4LCB0aGlzLkNvbnRyb2xsZXIuRGF0YSwgY3VyTW9udGgpO1xyXG4gICAgICAgICAgICBpZiAocmVzLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChyZXMpO1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2hGaWxsZWQoKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLkRpc3RyaWJ1dGVFdmVubHlNZXRob2QgPSBmdW5jdGlvbiAoeCwgYXJyLCBtb250aCkge1xyXG4gICAgICAgICAgICBsZXQgdW5sb2NrZWRDb3VudCA9IDA7XHJcblxyXG4gICAgICAgICAgICBmb3IgKGxldCBkIG9mIGFycilcclxuICAgICAgICAgICAgICAgIGlmIChkLk1vbnRoID09PSBtb250aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkLkhvbGlkYXkgPT09IDApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkLkxvY2tlZCA9PT0gMClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVubG9ja2VkQ291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4WzBdIC09IGQuVmlzaXRvcnM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4WzFdIC09IGQuUmVnaXN0ZXJzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeFsyXSAtPSBkLkJvb2tHaXZpbmc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHhbMF0gPCAwIHx8IHhbMl0gPCAwIHx8IHhbMV0gPCAwKSB7XHJcbiAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcign0J7RgtGA0LjRhtCw0YLQtdC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtScpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgeFJlbSA9IFt4WzBdICUgdW5sb2NrZWRDb3VudCwgeFsxXSAlIHVubG9ja2VkQ291bnQsIHhbMl0gJSB1bmxvY2tlZENvdW50XTtcclxuICAgICAgICAgICAgeCA9IFtNYXRoLmZsb29yKHhbMF0gLyB1bmxvY2tlZENvdW50KSwgTWF0aC5mbG9vcih4WzFdIC8gdW5sb2NrZWRDb3VudCksIE1hdGguZmxvb3IoeFsyXSAvIHVubG9ja2VkQ291bnQpXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgZCBvZiBhcnIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChkLkxvY2tlZCA9PT0gMSB8fCBtb250aCAhPT0gZC5Nb250aCkgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICBpZiAoZC5Ib2xpZGF5ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZC5WaXNpdG9ycyA9IHhSZW1bMF0gPiAwID8gKHhSZW1bMF0tLSwgeFswXSArIDEpIDogeFswXTtcclxuICAgICAgICAgICAgICAgICAgICBkLlJlZ2lzdGVycyA9IHhSZW1bMV0gPiAwID8gKHhSZW1bMV0tLSwgeFsxXSArIDEpIDogeFsxXTtcclxuICAgICAgICAgICAgICAgICAgICBkLkJvb2tHaXZpbmcgPSB4UmVtWzJdID4gMCA/ICh4UmVtWzJdLS0sIHhbMl0gKyAxKSA6IHhbMl07XHJcbiAgICAgICAgICAgICAgICB9IGVsc2VcclxuICAgICAgICAgICAgICAgICAgICBbZC5WaXNpdG9ycywgZC5SZWdpc3RlcnMsIGQuQm9va0dpdmluZ10gPSBbMCwwLDBdO1xyXG4gICAgICAgICAgICAgICAgZC5DaGFuZ2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gYXJyO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuVG9nZ2xlTG9ja2VkID0gZnVuY3Rpb24gKHgpIHtcclxuICAgICAgICAgICAgeC5jbGFzc0xpc3QudG9nZ2xlKCdsb2NrZWQnKTtcclxuICAgICAgICAgICAgeC5jbGFzc0xpc3QudG9nZ2xlKCdub3QtbG9ja2VkJyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlJlZnJlc2hGaWxsZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBzdW0gPSAwO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBkIG9mIHRoaXMuQ29udHJvbGxlci5EYXRhKVxyXG4gICAgICAgICAgICAgICAgaWYgKGQuTW9udGggPT09IHRoaXMuUHJvdG8uRGF0YS5DdXJyZW50TW9udGgpXHJcbiAgICAgICAgICAgICAgICAgICAgc3VtICs9IHBhcnNlSW50KGQuVmlzaXRvcnMpICsgcGFyc2VJbnQoZC5SZWdpc3RlcnMpICsgcGFyc2VJbnQoZC5Cb29rR2l2aW5nKTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnZmlsbGVkQ291bnQnLCBzdW0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5OdW1QYWRTZXRWYWx1ZSA9IGZ1bmN0aW9uICh2LCBsaW5lSUQsIHBhcmFtTmFtZSkge1xyXG4gICAgICAgICAgICAvLyBsZXQgZGljdCA9IHsndmlzaXRvcnMnOiAnVmlzaXRvcnMnLCAncmVnaXN0ZXJzJzogJ1JlZ2lzdGVycycsICdib29rLWdpdmluZyc6ICdCb29rR2l2aW5nJ307XHJcbiAgICAgICAgICAgIGxldCBlbGVtRGF0YSA9IHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKGxpbmVJRCkuRGF0YTtcclxuICAgICAgICAgICAgZWxlbURhdGFbcGFyYW1OYW1lXSA9IHBhcnNlSW50KHYpO1xyXG4gICAgICAgICAgICBlbGVtRGF0YS5DaGFuZ2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2gobGluZUlEKTtcclxuICAgICAgICAgICAgdGhpcy5SZWZyZXNoRmlsbGVkKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlNhdmVEYXRhID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKHRoaXMuU2F2ZUJ1dHRvbik7XHJcbiAgICAgICAgICAgIC8vIHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuUHJvdG8uRGF0YS5maWxsZWRDb3VudCA9PT0gdGhpcy5Qcm90by5EYXRhLmZ1bGxDb3VudCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuUGFyZW50LlNhdmVNb250aERhdGEodGhpcy5TYXZlQnV0dG9uKSlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5SZWZyZXNoQmlnQ2hhcnQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGxldCB4ID0gdGhpcy5TZWxlY3QoJy5oZWFkZXItY291bnRzJyk7XHJcbiAgICAgICAgICAgICAgICB4LmNsYXNzTGlzdC5hZGQoJ2FsZXJ0Jyk7XHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHguY2xhc3NMaXN0LnJlbW92ZSgnYWxlcnQnKSwgMzAwMCk7XHJcbiAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcign0J/Qu9Cw0L3QvtCy0YvQtSDQuCDRg9GB0YLQsNC90L7QstC70LXQvdC90YvQtSDQstGA0YPRh9C90YPRjiDQt9C90LDRh9C10L3QuNGPINC90LUg0YHQvtCy0L/QsNC00LDRjtGCJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIH0sIDIwMDAgKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlTW9udGggPSBmdW5jdGlvbiAoeCkge1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ3VycmVudE1vbnRoICs9IHg7XHJcbiAgICAgICAgICAgIGxldCBuZXh0X21vbnRoID0gdGhpcy5Qcm90by5EYXRhLkN1cnJlbnRNb250aDtcclxuICAgICAgICAgICAgaWYgKG5leHRfbW9udGggPiAxMiB8fCBuZXh0X21vbnRoIDwgMSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5leHRfbW9udGggPiAxMikgeyBuZXh0X21vbnRoID0gMTsgdGhpcy5QYXJlbnQuQ3VycmVudFllYXIrKzsgfVxyXG4gICAgICAgICAgICAgICAgaWYgKG5leHRfbW9udGggPCAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuUGFyZW50LkN1cnJlbnRZZWFyIC0gMSA8IDIwMTcpIHsgbmV4dF9tb250aCA9IDE7IHJldHVybjsgfVxyXG4gICAgICAgICAgICAgICAgICAgIG5leHRfbW9udGggPSAxMjsgdGhpcy5QYXJlbnQuQ3VycmVudFllYXItLTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuUGFyZW50LkRhdGFQbGFuTG9hZCgpLnRoZW4oKCkgPT4gdGhpcy5QYXJlbnQuQ2hhcnRzLlNlbGVjdE1vbnRoTnVtKG5leHRfbW9udGgpKTtcclxuICAgICAgICAgICAgfSBlbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5DaGFydHMuU2VsZWN0TW9udGhOdW0obmV4dF9tb250aCk7XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gdGhpcy5NYWtlQ2FsZW5kYXIoKG5ldyBEYXRlKS5nZXRNb250aCgpICsgMSk7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5kaXN0cmlidXRlLWV2ZW5seS1idXR0b24nKS5vbmNsaWNrID0gKCkgPT4gdGhpcy5EaXN0ckV2ZW5DbGljaygpO1xyXG4gICAgICAgIHRoaXMuU2F2ZUJ1dHRvbi5vbmNsaWNrID0gKCkgPT4gdGhpcy5TYXZlRGF0YSgpO1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcuY2FuY2VsLWJ1dHRvbicpLm9uY2xpY2sgPSAoKSA9PiBMdXJlLlN5c3RlbS5TaG93Tm90aWNlKFwi0J7RgtC80LXQvdCwXCIpO1xyXG5cclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5kYXk6bm90KC5vdGhlci1tb250aCkgLmhvbGlkYXktaWNvbiwgLmRheTpub3QoLm90aGVyLW1vbnRoKSAubG9ja2VkLWljb24nLCAoZSwgcCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgZWxlbURhdGEgPSB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRChwLkxpbmVJRCkuRGF0YTtcclxuICAgICAgICAgICAgdGhpcy5Ub2dnbGVMb2NrZWQoZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2xvY2tlZC1pY29uJykpIGVsZW1EYXRhLkxvY2tlZCA9IDEgLSBlbGVtRGF0YS5Mb2NrZWQ7XHJcbiAgICAgICAgICAgIGlmIChlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdob2xpZGF5LWljb24nKSkgeyBlbGVtRGF0YS5Ib2xpZGF5ID0gMSAtIGVsZW1EYXRhLkhvbGlkYXk7IGVsZW1EYXRhLkNoYW5nZWQgPSB0cnVlOyB0aGlzLkRpc3RyRXZlbkNsaWNrKCk7IH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5kYXk6bm90KC5vdGhlci1tb250aCkgLnBhcmFtIC5wYXJhbS12YWx1ZScsXHJcbiAgICAgICAgICAgIChlLCBwKSA9PiBJbnB1dEJveC5SdW4oZS5jdXJyZW50VGFyZ2V0LCBlLmN1cnJlbnRUYXJnZXQuaW5uZXJIVE1MLCAodikgPT4gdGhpcy5OdW1QYWRTZXRWYWx1ZSh2LCBwYXJzZUludChwLkxpbmVJRCksIGUuY3VycmVudFRhcmdldC5kYXRhc2V0Wyd0eXBlJ10pLCB7Q2FwdGlvbjogZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ2hpbnQnXX0pXHJcbiAgICAgICAgKTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnLmxlc3MnKS5vbmNsaWNrID0gKCkgPT4gdGhpcy5DaGFuZ2VNb250aCgtMSk7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5tb3JlJykub25jbGljayA9ICgpID0+IHRoaXMuQ2hhbmdlTW9udGgoMSk7XHJcbiAgICB9XHJcbn0pO1xyXG4iLCJjb25zdCBJbnB1dEJveCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9fY29tbW9uL2lucHV0LWJveC9pbnB1dC1ib3hcIik7XHJcblxyXG5EYXRhSW5wdXQuRGF0YVBsYW5JbnB1dC5DaGFydHMgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGF0YUlucHV0LkRhdGFQbGFuSW5wdXQsXHJcbiAgICBOYW1lOiAnQ2hhcnRzJyxcclxuICAgIFRhcmdldDogJy5kYXRhLXBsYW4tY29udGFpbmVyJyxcclxuICAgIFZpc2libGU6IHRydWUsXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUnVsZXM6IHtcclxuICAgICAgICAgICAgRWRpdDoge1xyXG4gICAgICAgICAgICAgICAgUm9sZXM6ICBbRC5Sb2xlLlNldHVwUGxhbkVkaXRdXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuYDxkaXYgY2xhc3M9XCJwbGFuLWNoYXJ0cyB3aWRnZXQtY29udGFpbmVyXCI+IFxyXG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lci1oZWFkZXIgc3Ryb25nXCI+0J/Qu9Cw0L0g0L3QsCAyMDE4INCz0L7QtDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lci1ib2R5XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0c1wiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQtY29udGFpbmVyIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQgZmxleC0xMDBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGVmdC1jaGFydC1jb250YWluZXJcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQtc3Vic2NyaXB0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWItaWNvbiBwYXJhbS1pY29uIHBlb3BsZS1pY29uXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWItY2FwdGlvblwiIGRhdGEtdHlwZT1cInllYXIueWVhcl9zdW1fdmlzaXRvcnNcIiBkYXRhLWhpbnQ9XCLQn9C+0YHQtdGJ0LXQvdC40Y8gLSDQs9C+0LRcIj57e3llYXJfc3VtX3Zpc2l0b3JzfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0IGZsZXgtMTAwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbnRlci1jaGFydC1jb250YWluZXJcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQtc3Vic2NyaXB0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWItaWNvbiBwYXJhbS1pY29uIGNhcmQtaWNvblwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ViLWNhcHRpb25cIiBkYXRhLXR5cGU9XCJ5ZWFyLnllYXJfc3VtX3JlZ2lzdHJhdGlvblwiIGRhdGEtaGludD1cItCX0LDQv9C40YHRjCAtINCz0L7QtFwiPnt7eWVhcl9zdW1fcmVnaXN0cmF0aW9ufX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0IGZsZXgtMTAwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJpZ2h0LWNoYXJ0LWNvbnRhaW5lclwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaGFydC1zdWJzY3JpcHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Yi1pY29uIHBhcmFtLWljb24gYm9va3MtaWNvblwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ViLWNhcHRpb25cIiBkYXRhLXR5cGU9XCJ5ZWFyLnllYXJfc3VtX2Jvb2tzXCIgZGF0YS1oaW50PVwi0JrQvdC40LPQvtCy0YvQtNCw0YfQsCAtINCz0L7QtFwiPnt7eWVhcl9zdW1fYm9va3N9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbmRleC10YWJsZVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFibGUtaGVhZGVyLWRhdGEgXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uLW5hbWUgY29sdW1uLXBlcmlvZC1oZWFkZXJcIj48ZGl2IGNsYXNzPVwicGVyaW9kLW5hbWVcIj7Qn9C10YDQuNC+0LQ8L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tbmFtZSBjb2x1bW4tdmlzaXRvcnMtaGVhZGVyXCI+PHNwYW4gY2xhc3M9XCJwYXJhbS1pY29uIHBlb3BsZS1pY29uXCI+PC9zcGFuPiDQn9C+0YHQtdGJ0LXQvdC40Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tbmFtZSBjb2x1bW4tcmVnaXN0cmF0aW9uLWhlYWRlclwiPjxzcGFuIGNsYXNzPVwicGFyYW0taWNvbiBjYXJkLWljb25cIj48L3NwYW4+INCX0LDQv9C40YHRjDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbi1uYW1lIGNvbHVtbi1ib29rcy1oZWFkZXJcIj48c3BhbiBjbGFzcz1cInBhcmFtLWljb24gYm9va3MtaWNvblwiPjwvc3Bhbj4g0JrQvdC40LPQvtCy0YvQtNCw0YfQsDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYmxlLWhvbGRlclwiPjwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZnVsbC15ZWFyXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwieWVhciBjb2x1bW4tcGVyaW9kXCI+PGRpdiBjbGFzcz1cInBlcmlvZC1uYW1lXCI+0JPQvtC0PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwieWVhciBjb2x1bW4tdmlzaXRvcnNcIiBkYXRhLXR5cGU9XCJ5ZWFyLnllYXJfc3VtX3Zpc2l0b3JzXCIgZGF0YS1oaW50PVwi0J/QvtGB0LXRidC10L3QuNGPIC0g0LPQvtC0XCI+e3t5ZWFyX3N1bV92aXNpdG9yc319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwieWVhciBjb2x1bW4tcmVnaXN0cmF0aW9uXCIgZGF0YS10eXBlPVwieWVhci55ZWFyX3N1bV9yZWdpc3RyYXRpb25cIiBkYXRhLWhpbnQ9XCLQl9Cw0L/QuNGB0YwgLSDQs9C+0LRcIj57e3llYXJfc3VtX3JlZ2lzdHJhdGlvbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwieWVhciBjb2x1bW4tYm9va3NcIiBkYXRhLXR5cGU9XCJ5ZWFyLnllYXJfc3VtX2Jvb2tzXCIgZGF0YS1oaW50PVwi0JrQvdC40LPQvtCy0YvQtNCw0YfQsCAtINCz0L7QtFwiPnt7eWVhcl9zdW1fYm9va3N9fTwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImJvdHRvbS1idXR0b25zXCIgZGF0YS1wZXJtaXNzaW9uPVwiRWRpdFwiPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBjYW5jZWwtYnV0dG9uXCI+0J7QotCc0JXQndCQPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGRpc3RyaWJ1dGUtZXZlbmx5LWJ1dHRvblwiPtCg0JDQodCf0KDQldCU0JXQm9CY0KLQrCDQoNCQ0JLQndCe0JzQldCg0J3QnjwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBzYXZlLWJ1dHRvblwiPtCh0J7QpdCg0JDQndCY0KLQrDwvYnV0dG9uPlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PmAsXHJcbiAgICBDb250cm9sbGVyOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnRhYmxlLWhvbGRlcicsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6XHJcbiAgICAgICAgICAgIGA8ZGl2IGNsYXNzPVwicXVhcnRlci17e1F1YXJ0ZXJOdW19fSBxdWFydGVyXCI+XHJcbiAgICAgICAgICAgICAgICB7eyNlYWNoIE1vbnRoc319XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vbnRoIHt7bW9udGh9fSB7e25vbmV9fVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uLWhvbGRlciBwZXJpb2RcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsb2NrIHBhcmFtLWljb24gbG9ja2VkLWljb24ge3tsb2NrZWRfbW9ufX1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tcGVyaW9kIHt7Z3JleV9tb250aH19XCIgZGF0YS10eXBlPVwibW9udGgue3skdGhpcy5tb250aH19LmZ1bGxcIj57e21vbnRoUlV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbi1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsb2NrIHBhcmFtLWljb24gbG9ja2VkLWljb24ge3tsb2NrZWRfdmlzfX1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tdmlzaXRvcnNcIiBkYXRhLXR5cGU9XCJtb250aC57eyR0aGlzLm1vbnRofX0udmlzaXRvcnNcIiBkYXRhLWhpbnQ9XCLQn9C+0YHQtdGJ0LXQvdC40Y8gLSB7e21vbnRoUlV9fVwiPnt7dmlzaXRvcnN9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbi1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsb2NrIHBhcmFtLWljb24gbG9ja2VkLWljb24ge3tsb2NrZWRfcmVnfX1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tcmVnaXN0cmF0aW9uXCIgZGF0YS10eXBlPVwibW9udGgue3skdGhpcy5tb250aH19LnJlZ2lzdHJhdGlvblwiIGRhdGEtaGludD1cItCX0LDQv9C40YHRjCAtIHt7bW9udGhSVX19XCI+e3tyZWdpc3RyYXRpb259fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbi1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsb2NrIHBhcmFtLWljb24gbG9ja2VkLWljb24ge3tsb2NrZWRfYm9rfX1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tYm9va3NcIiBkYXRhLXR5cGU9XCJtb250aC57eyR0aGlzLm1vbnRofX0uYm9va3NcIiBkYXRhLWhpbnQ9XCLQmtC90LjQs9C+0LLRi9C00LDRh9CwIC0ge3ttb250aFJVfX1cIj57e2Jvb2tzfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJxdWFydGVyLXN1bWFyeS17e1F1YXJ0ZXJOdW19fSBxdWFydGVyLW1vbnRoIHt7Z3JleV9iYWNrfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uLWhvbGRlciBmaXJzdC1jb2x1bW5cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxvY2sgcGFyYW0taWNvbiBsb2NrZWQtaWNvbiB7e2xvY2tlZF9tb259fVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uLXBlcmlvZFwiIGRhdGEtdHlwZT1cInF1YXJ0ZXIue3skdGhpcy5RdWFydGVyfX0uZnVsbFwiPnt7UXVhcnRlclJVfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uLWhvbGRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibG9jayBwYXJhbS1pY29uIGxvY2tlZC1pY29uIHt7bG9ja2VkX3Zpc319XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tdmlzaXRvcnNcIiBkYXRhLXR5cGU9XCJxdWFydGVyLnt7JHRoaXMuUXVhcnRlcn19LnZpc2l0b3JzXCIgZGF0YS1oaW50PVwi0J/QvtGB0LXRidC10L3QuNGPIC0ge3tRdWFydGVyUlV9fVwiPnt7dmlzaXRvcnN9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4taG9sZGVyXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibG9jayBwYXJhbS1pY29uIGxvY2tlZC1pY29uIHt7bG9ja2VkX3JlZ319XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tcmVnaXN0cmF0aW9uXCIgZGF0YS10eXBlPVwicXVhcnRlci57eyR0aGlzLlF1YXJ0ZXJ9fS5yZWdpc3RyYXRpb25cIiBkYXRhLWhpbnQ9XCLQl9Cw0L/QuNGB0YwgLSB7e1F1YXJ0ZXJSVX19XCI+e3tyZWdpc3RyYXRpb259fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4taG9sZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsb2NrIHBhcmFtLWljb24gbG9ja2VkLWljb24ge3tsb2NrZWRfYm9rfX1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbi1ib29rc1wiIGRhdGEtdHlwZT1cInF1YXJ0ZXIue3skdGhpcy5RdWFydGVyfX0uYm9va3NcIiBkYXRhLWhpbnQ9XCLQmtC90LjQs9C+0LLRi9C00LDRh9CwIC0ge3tRdWFydGVyUlV9fVwiPnt7Ym9va3N9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICAgICAgRGF0YTogWyBdLFxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICAvLyBtb250aDogKHgpID0+ICh7MTogICdqYW51YXJ5JywgMjogICdmZWJydWFyeScsIDM6ICAnbWFyY2gnLCA0OiAgJ2FwcmlsJywgNTogICdtYXknLCA2OiAgJ2p1bmUnLCA3OiAgJ2p1bHknLCA4OiAgJ2F1Z3VzdCcsIDk6ICAnc2VwdGVtYmVyJywgMTA6ICAnb2N0b2JlcicsIDExOiAgJ25vdmVtYmVyJywgMTI6ICAnZGVjZW1iZXInfSlbeF0sXHJcbiAgICAgICAgbW9udGg6IGZ1bmN0aW9uICh4KSB7cmV0dXJuIHRoaXMuTW9udGhzKHgpfSxcclxuICAgICAgICBtb250aFJVOiBmdW5jdGlvbiAoeCwgcCkge3JldHVybiBwLm1vbnRoID8gTHVyZS5EYXRlKG5ldyBEYXRlKHRoaXMuUGFyZW50LkN1cnJlbnRZZWFyLCBwLm1vbnRoIC0gMSwgMSkpLkZvcm1hdCgnTU1NTScpIDogJyd9LFxyXG4gICAgICAgIFF1YXJ0ZXJOdW06ICh4LCBwKSA9PiAoezE6ICdvbmUnLCAyOiAndHdvJywgMzogJ3RocmVlJywgNDogJ2ZvdXInfSlbcC5RdWFydGVyXSxcclxuICAgICAgICBRdWFydGVyUlU6ICh4LCBwKSA9PiAoezE6ICdJINCa0LLQsNGA0YLQsNC7JywgMjogJ0lJINCa0LLQsNGA0YLQsNC7JywgMzogJ0lJSSDQmtCy0LDRgNGC0LDQuycsIDQ6ICdJViDQmtCy0LDRgNGC0LDQuyd9KVtwLlF1YXJ0ZXJdLFxyXG4gICAgICAgIG5vbmU6IGZ1bmN0aW9uICh4LCBwKSB7cmV0dXJuIHRoaXMuT3BlbmVkTW9udGhzLmluZGV4T2YocC5tb250aCkgPT09IC0xID8gJ25vbmUnIDogJyc7fSxcclxuICAgICAgICBncmV5X21vbnRoOiBmdW5jdGlvbiAoeCwgcCkge3JldHVybiB0aGlzLlNlbGVjdGVkTW9udGggPT09IHAubW9udGggPyAnIGdyZXktbW9udGggJyA6ICcnfSxcclxuICAgICAgICBncmV5X2JhY2s6IGZ1bmN0aW9uICh4LCBwKSB7cmV0dXJuIHAuUXVhcnRlciA9PT0gdGhpcy5PcGVuZWRRdWFydGVyID8gJ2dyZXktYmFjaycgOiAnJzt9LFxyXG4gICAgICAgIGxvY2tlZF9tb246ICh4LCBwKSA9PiAocC5Mb2NrZWQgJiA4KSA9PT0gMCA/ICdub3QtbG9ja2VkJyA6ICdsb2NrZWQnLFxyXG4gICAgICAgIGxvY2tlZF92aXM6ICh4LCBwKSA9PiAocC5Mb2NrZWQgJiA0KSA9PT0gMCA/ICdub3QtbG9ja2VkJyA6ICdsb2NrZWQnLFxyXG4gICAgICAgIGxvY2tlZF9yZWc6ICh4LCBwKSA9PiAocC5Mb2NrZWQgJiAyKSA9PT0gMCA/ICdub3QtbG9ja2VkJyA6ICdsb2NrZWQnLFxyXG4gICAgICAgIGxvY2tlZF9ib2s6ICh4LCBwKSA9PiAocC5Mb2NrZWQgJiAxKSA9PT0gMCA/ICdub3QtbG9ja2VkJyA6ICdsb2NrZWQnLFxyXG4gICAgICAgIHllYXJfc3VtX3Zpc2l0b3JzOiAoeCkgPT4geC50b0xvY2FsZVN0cmluZygpLFxyXG4gICAgICAgIHllYXJfc3VtX3JlZ2lzdHJhdGlvbjogKHgpID0+IHgudG9Mb2NhbGVTdHJpbmcoKSxcclxuICAgICAgICB5ZWFyX3N1bV9ib29rczogKHgpID0+IHgudG9Mb2NhbGVTdHJpbmcoKSxcclxuICAgICAgICB2aXNpdG9yczogKHgpID0+IHgudG9Mb2NhbGVTdHJpbmcoKSxcclxuICAgICAgICByZWdpc3RyYXRpb246ICh4KSA9PiB4LnRvTG9jYWxlU3RyaW5nKCksXHJcbiAgICAgICAgYm9va3M6ICh4KSA9PiB4LnRvTG9jYWxlU3RyaW5nKCksXHJcbiAgICB9LFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICB5ZWFyX3N1bV92aXNpdG9yczogMCxcclxuICAgICAgICB5ZWFyX3N1bV9yZWdpc3RyYXRpb246IDAsXHJcbiAgICAgICAgeWVhcl9zdW1fYm9va3M6IDBcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLy8gdGhpcy5FZGl0aW5nQ2VsbCA9ICcnO1xyXG4gICAgICAgIHRoaXMuRG91YmxlQ2xpY2tUaW1lciA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5PcGVuZWRRdWFydGVyID0gTWF0aC5mbG9vcigobmV3IERhdGUoKSkuZ2V0TW9udGgoKSAvIDMpICsgMTtcclxuICAgICAgICB0aGlzLlNlbGVjdGVkTW9udGggPSAobmV3IERhdGUoKSkuZ2V0TW9udGgoKSArIDE7XHJcbiAgICAgICAgdGhpcy5PcGVuZWRNb250aHMgPSBbdGhpcy5PcGVuZWRRdWFydGVyICogMyAtIDIsIHRoaXMuT3BlbmVkUXVhcnRlciAqIDMgLSAxLCB0aGlzLk9wZW5lZFF1YXJ0ZXIgKiAzXTtcclxuICAgICAgICB0aGlzLlByb3BzTG9naWMgPSB7ZnVsbDogOCwgdmlzaXRvcnM6IDQsIHJlZ2lzdHJhdGlvbjogMiwgYm9va3M6IDF9O1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkdldENoYXJ0T3B0aW9ucyA9IGZ1bmN0aW9uIChUYXJnZXRFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBUYXJnZXQ6IFRhcmdldEVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICBUeXBlOiAncGllJyxcclxuICAgICAgICAgICAgICAgIExlZ2VuZDoge1xyXG4gICAgICAgICAgICAgICAgICAgIFZpc2libGU6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgU2VyaWVzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMYWJlbHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERhdGE6IEx1cmUuQ3VsdHVyZS5Nb250aE5hbWVzLlNlbGVjdChtID0+IG0gKyAnICcgKyB0aGlzLlBhcmVudC5DdXJyZW50WWVhciksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL0RhdGE6IFtcItCv0L3QstCw0YDRjCAyMDE4XCIsIFwi0KTQtdCy0YDQsNC70YwgMjAxOFwiLCBcItCc0LDRgNGCIDIwMThcIiwgXCLQkNC/0YDQtdC70YwgMjAxOFwiLCBcItCc0LDQuSAyMDE4XCIsIFwi0JjRjtC90YwgMjAxOFwiLCBcItCY0Y7Qu9GMIDIwMThcIiwgXCLQkNCy0LPRg9GB0YIgMjAxOFwiLCBcItCh0LXQvdGC0Y/QsdGA0YwgMjAxOFwiLCBcItCe0LrRgtGP0LHRgNGMIDIwMThcIiwgXCLQndC+0Y/QsdGA0YwgMjAxOFwiLCBcItCU0LXQutCw0LHRgNGMIDIwMThcIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGE6IFs1LCAyLCAzLCAxLCA0LCA1LCA3LCAxLCAyLCAzLCAzLCA0XSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sb3JzOiBbXCIjNkZBRDgxXCIsIFwiIzdBRDA5NlwiLCBcIiM4MkUyOUZcIiwgXCIjQUQ3NzZFXCIsIFwiI0QwODg3RFwiLCBcIiNFMjkyODRcIiwgXCIjQURBNjZFXCIsIFwiI0QwQzk4QVwiLCBcIiNFMkQ5ODRcIiwgXCIjN0RCMEQwXCIsIFwiIzg1QzJFMlwiLCBcIiM4QUNCRjRcIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFR5cGU6ICdyaW5nJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkdGg6IDMyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBBbmdsZVN0YXJ0OiAtOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIExhYmVsczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0YTogW1wiSSDQmtCy0LDRgNGC0LDQuyAyMDE4XCIsIFwiSUkg0JrQstCw0YDRgtCw0LsgMjAxOFwiLCBcIklJSSDQmtCy0LDRgNGC0LDQuyAyMDE4XCIsIFwiSVYg0JrQstCw0YDRgtCw0LsgMjAxOFwiXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YTogWzEwLCAxMCwgMTAsIDEwXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sb3JzOiBbXCIjNjFBODc4XCIsIFwiI0E1NkM2MFwiLCBcIiM5RTk5NjBcIiwgXCIjNjA4QUFCXCJdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBUeXBlOiAncmluZycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpZHRoOiAyMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgQW5nbGVTdGFydDogLTkwLFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLk1vbnRocyA9ICh4KSA9PiAoezE6ICAnamFudWFyeScsIDI6ICAnZmVicnVhcnknLCAzOiAgJ21hcmNoJywgNDogICdhcHJpbCcsIDU6ICAnbWF5JywgNjogICdqdW5lJywgNzogICdqdWx5JywgODogICdhdWd1c3QnLCA5OiAgJ3NlcHRlbWJlcicsIDEwOiAgJ29jdG9iZXInLCAxMTogICdub3ZlbWJlcicsIDEyOiAgJ2RlY2VtYmVyJ30pW3hdO1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaENoYXJ0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5SZWZyZXNoQ2hhcnRzUGFyYW1zKCd2aXNpdG9ycycpO1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2hDaGFydHNQYXJhbXMoJ3JlZ2lzdHJhdGlvbicpO1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2hDaGFydHNQYXJhbXMoJ2Jvb2tzJyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlJlZnJlc2hDaGFydHNQYXJhbXMgPSBmdW5jdGlvbihwKSB7XHJcbiAgICAgICAgICAgIGxldCBjO1xyXG4gICAgICAgICAgICBpZiAocCA9PT0gJ3Zpc2l0b3JzJylcclxuICAgICAgICAgICAgICAgIGMgPSB0aGlzLkNoYXJ0VmlzaXRzO1xyXG4gICAgICAgICAgICBpZiAocCA9PT0gJ3JlZ2lzdHJhdGlvbicpXHJcbiAgICAgICAgICAgICAgICBjID0gdGhpcy5DaGFydFJlZ2lzdGVyO1xyXG4gICAgICAgICAgICBpZiAocCA9PT0gJ2Jvb2tzJylcclxuICAgICAgICAgICAgICAgIGMgPSB0aGlzLkNoYXJ0Qm9va3M7XHJcbiAgICAgICAgICAgIC8vIHAgPT09ICd2aXNpdG9ycycgPyBjID0gdGhpcy5DaGFydFZpc2l0cyA6IHAgPT09ICdyZWdpc3RyYXRpb24nID8gYyA9IHRoaXMuQ2hhcnRSZWdpc3RlciA6IHAgPT09ICdib29rcycgPyBjID0gdGhpcy5DaGFydEJvb2tzIDogYyA9IG51bGw7XHJcbiAgICAgICAgICAgIGlmICghYykgcmV0dXJuO1xyXG4gICAgICAgICAgICBsZXQgY19kYXRhID0gdGhpcy5Db250cm9sbGVyLkRhdGE7XHJcbiAgICAgICAgICAgIGlmIChjX2RhdGFbMF0pIHtcclxuICAgICAgICAgICAgICAgIGMuT3B0aW9ucy5TZXJpZXNbMV0uRGF0YSA9IFtcclxuICAgICAgICAgICAgICAgICAgICBjX2RhdGFbMF1bcF0sXHJcbiAgICAgICAgICAgICAgICAgICAgY19kYXRhWzFdW3BdLFxyXG4gICAgICAgICAgICAgICAgICAgIGNfZGF0YVsyXVtwXSxcclxuICAgICAgICAgICAgICAgICAgICBjX2RhdGFbM11bcF1cclxuICAgICAgICAgICAgICAgIF07IC8vINCa0LLQsNGA0YLQsNC70YtcclxuICAgICAgICAgICAgICAgIGMuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YSA9IFtcclxuICAgICAgICAgICAgICAgICAgICBjX2RhdGFbMF0uTW9udGhzWzBdW3BdLFxyXG4gICAgICAgICAgICAgICAgICAgIGNfZGF0YVswXS5Nb250aHNbMV1bcF0sXHJcbiAgICAgICAgICAgICAgICAgICAgY19kYXRhWzBdLk1vbnRoc1syXVtwXSxcclxuICAgICAgICAgICAgICAgICAgICBjX2RhdGFbMV0uTW9udGhzWzBdW3BdLFxyXG4gICAgICAgICAgICAgICAgICAgIGNfZGF0YVsxXS5Nb250aHNbMV1bcF0sXHJcbiAgICAgICAgICAgICAgICAgICAgY19kYXRhWzFdLk1vbnRoc1syXVtwXSxcclxuICAgICAgICAgICAgICAgICAgICBjX2RhdGFbMl0uTW9udGhzWzBdW3BdLFxyXG4gICAgICAgICAgICAgICAgICAgIGNfZGF0YVsyXS5Nb250aHNbMV1bcF0sXHJcbiAgICAgICAgICAgICAgICAgICAgY19kYXRhWzJdLk1vbnRoc1syXVtwXSxcclxuICAgICAgICAgICAgICAgICAgICBjX2RhdGFbM10uTW9udGhzWzBdW3BdLFxyXG4gICAgICAgICAgICAgICAgICAgIGNfZGF0YVszXS5Nb250aHNbMV1bcF0sXHJcbiAgICAgICAgICAgICAgICAgICAgY19kYXRhWzNdLk1vbnRoc1syXVtwXVxyXG4gICAgICAgICAgICAgICAgXTsgLy8g0JzQtdGB0Y/RhtGLXHJcbiAgICAgICAgICAgICAgICBjLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5SZWNvdW50U3VtcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IHByb3RvID0gdGhpcy5Qcm90by5EYXRhO1xyXG4gICAgICAgICAgICBbcHJvdG8ueWVhcl9zdW1fdmlzaXRvcnMsIHByb3RvLnllYXJfc3VtX3JlZ2lzdHJhdGlvbiwgcHJvdG8ueWVhcl9zdW1fYm9va3NdID0gWzAsIDAsIDBdO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEpXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBxIG9mIHRoaXMuQ29udHJvbGxlci5EYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgW3EudmlzaXRvcnMsIHEucmVnaXN0cmF0aW9uLCBxLmJvb2tzXSA9IFswLCAwLCAwXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocS5Nb250aHMpIGZvciAobGV0IG1vbnRoIG9mIHEuTW9udGhzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3RvLnllYXJfc3VtX3Zpc2l0b3JzICs9IG1vbnRoLnZpc2l0b3JzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm90by55ZWFyX3N1bV9yZWdpc3RyYXRpb24gKz0gbW9udGgucmVnaXN0cmF0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm90by55ZWFyX3N1bV9ib29rcyArPSBtb250aC5ib29rcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgcS52aXNpdG9ycyArPSBtb250aC52aXNpdG9ycztcclxuICAgICAgICAgICAgICAgICAgICAgICAgcS5yZWdpc3RyYXRpb24gKz0gbW9udGgucmVnaXN0cmF0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBxLmJvb2tzICs9IG1vbnRoLmJvb2tzO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLk9wZW5RdWFydGVyID0gZnVuY3Rpb24gKGVsZW0pIHtcclxuICAgICAgICAgICAgbGV0IHggPSBwYXJzZUludChlbGVtLmRhdGFzZXRbJ3R5cGUnXS5zcGxpdCgnLicpWzFdKTtcclxuICAgICAgICAgICAgdGhpcy5PcGVuZWRRdWFydGVyID0geDtcclxuICAgICAgICAgICAgbGV0IG9sZFNlbGVjdGlvbiA9IHRoaXMuU2VsZWN0KCcuZ3JleS1iYWNrJyk7XHJcbiAgICAgICAgICAgIGlmIChvbGRTZWxlY3Rpb24pXHJcbiAgICAgICAgICAgICAgICBvbGRTZWxlY3Rpb24uY2xhc3NMaXN0LnJlbW92ZSgnZ3JleS1iYWNrJyk7XHJcbiAgICAgICAgICAgIGVsZW0ucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2dyZXktYmFjaycpO1xyXG5cclxuICAgICAgICAgICAgbGV0IG1vbnRocyA9IFt0aGlzLk1vbnRocyh4ICogMyAtIDIpLCB0aGlzLk1vbnRocyh4ICogMyAtIDEpLCB0aGlzLk1vbnRocyh4ICogMyldO1xyXG4gICAgICAgICAgICB0aGlzLk9wZW5lZE1vbnRocyA9IFsoeCAqIDMgLSAyKSwgKHggKiAzIC0gMSksICh4ICogMyldO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBkIG9mIHRoaXMuU2VsZWN0QWxsKCcubW9udGgnKSlcclxuICAgICAgICAgICAgICAgIGlmIChkLmNsYXNzTGlzdC5jb250YWlucyhtb250aHNbMF0pIHx8IGQuY2xhc3NMaXN0LmNvbnRhaW5zKG1vbnRoc1sxXSkgfHwgZC5jbGFzc0xpc3QuY29udGFpbnMobW9udGhzWzJdKSlcclxuICAgICAgICAgICAgICAgICAgICBkLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIGVsc2UgZC5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlNldFBhcmFtc1ZhbHVlID0gZnVuY3Rpb24oZWxlbSwgdmFsdWUsIHVwZGF0ZSA9IHRydWUpeyAvKiBxdWFydGVyLm1vbnRoLnBhcmFtICovXHJcbiAgICAgICAgICAgIGVsZW0gPSBlbGVtLnNwbGl0KCcuJyk7XHJcbiAgICAgICAgICAgIGlmIChlbGVtWzJdID09PSAnTG9ja2VkJykge1xyXG4gICAgICAgICAgICAgICAgbGV0IHBhcmFtTmFtZSA9IGVsZW1bMl07XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGVsZW1bMF0pIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdxdWFydGVyJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1bM10gPT09ICdvbicpIHRoaXMuQ29udHJvbGxlci5EYXRhW3BhcnNlSW50KGVsZW1bMV0pIC0gMV1bcGFyYW1OYW1lXSB8PSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1bM10gPT09ICdvZmYnKSB0aGlzLkNvbnRyb2xsZXIuRGF0YVtwYXJzZUludChlbGVtWzFdKSAtIDFdW3BhcmFtTmFtZV0gJj0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ21vbnRoJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbVsxXSA9IHBhcnNlSW50KGVsZW1bMV0pIC0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG1vbnRoTnVtID0gZWxlbVsxXSAlIDM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBxdWFydGVyTnVtID0gTWF0aC5mbG9vcihlbGVtWzFdIC8gMyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtWzNdID09PSAnb24nKSB0aGlzLkNvbnRyb2xsZXIuRGF0YVtxdWFydGVyTnVtXS5Nb250aHNbbW9udGhOdW1dW3BhcmFtTmFtZV0gfD0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtWzNdID09PSAnb2ZmJykgdGhpcy5Db250cm9sbGVyLkRhdGFbcXVhcnRlck51bV0uTW9udGhzW21vbnRoTnVtXVtwYXJhbU5hbWVdICY9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh1cGRhdGUpIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChlbGVtWzBdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAncXVhcnRlcic6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwYXJhbU5hbWUgPSBlbGVtWzJdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcXVhcnRlck51bSA9IHBhcnNlSW50KGVsZW1bMV0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vINCf0J7QlNCT0J7QotCe0JLQmtCQIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29udHJsID0gdGhpcy5Db250cm9sbGVyLkRhdGE7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHswOiB7IH0sIHN1bTogMH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IDQ7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGl0ZW0gPSB7IHN1bTogMCwgbG9ja1N1bTogMCwgbG9jazogKGNvbnRybFtpIC0gMV0uTG9ja2VkICYgdGhpcy5Qcm9wc0xvZ2ljW3BhcmFtTmFtZV0pICE9PTAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDw9IDI7IGsrKylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtW2tdID0geyB2OiBjb250cmxbaSAtIDFdLk1vbnRoc1trXVtwYXJhbU5hbWVdLCBsb2NrOiAoY29udHJsW2kgLSAxXS5Nb250aHNba10uTG9ja2VkICYgdGhpcy5Qcm9wc0xvZ2ljW3BhcmFtTmFtZV0pICE9PSAwIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhW2ldID0gaXRlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiBkYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMDogeyB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDA6IHsgdjogY29udHJsWzBdLk1vbnRoc1swXVtwYXJhbU5hbWVdLCBsb2NrOiAoY29udHJsWzBdLk1vbnRoc1swXS5Mb2NrZWQgJiB0aGlzLlByb3BzTG9naWNbcGFyYW1OYW1lXSkgIT09IDAgfSwgMTogey4uLn0sIDI6IHsuLi59XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VtOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2tTdW06IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jazogKGNvbnRybFswXS5Mb2NrZWQgJiB0aGlzLlByb3BzTG9naWNbcGFyYW1OYW1lXSkgIT09MFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSAuLi4gYW5vdGhlciAzIHF1YXJ0ZXJzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH07ICovXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBkID0gMTsgZCA8PSA0OyBkKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFbZF0uc3VtID0gZGF0YVtkXVswXS52ICsgZGF0YVtkXVsxXS52ICsgZGF0YVtkXVsyXS52O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFbZF0ubG9jaylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhW2RdLmxvY2tTdW0gPSBkYXRhW2RdLnN1bTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuc3VtICs9IGRhdGFbZF0uc3VtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyDQn9Ce0JTQk9Ce0KLQntCS0JrQkCBcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxdWFydGVyTnVtID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLnN1bSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVtxdWFydGVyTnVtXS5zdW0gPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhW3F1YXJ0ZXJOdW1dLmxvY2spXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVtxdWFydGVyTnVtXS5sb2NrU3VtID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5sb2NrU3VtID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgZCA9IDE7IGQgPD0gNDsgZCsrKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5sb2NrU3VtICs9IGRhdGFbZF0ubG9ja1N1bTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3RWYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFbcXVhcnRlck51bV0ubG9jaylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3RWYWx1ZSA9IGRhdGEuc3VtIC0gZGF0YS5sb2NrU3VtOyAvLyDQvtGB0YLQsNCy0YjQtdC10YHQtSDQutC+0LvQuNGH0LXRgdGC0LLQviwg0LrQvtGC0L7RgNC+0LUg0L3QsNC00L4g0YDQsNGB0L/RgNC10LTQtdC70LjRgtGMXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzdFZhbHVlID0gZGF0YS5zdW0gLSBkYXRhLmxvY2tTdW0gLSB2YWx1ZTsgLy8g0L7RgdGC0LDQstGI0LXQtdGB0LUg0LrQvtC70LjRh9C10YHRgtCy0L4sINC60L7RgtC+0YDQvtC1INC90LDQtNC+INGA0LDRgdC/0YDQtdC00LXQu9C40YLRjFxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHVubG9ja0NvdW50ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgZCA9IDE7IGQgPD0gNDsgZCsrKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhW2RdLmxvY2sgJiYgZCAhPT0gcXVhcnRlck51bSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmxvY2tDb3VudCsrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3RWYWx1ZSA8IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU2hvd0Vycm9yKCfQo9GB0YLQsNC90LDQstC70LjQstCw0LXQvNC+0LUg0LfQvdCw0YfQtdC90LjQtSDQsdC+0LvRjNGI0LUsINGH0LXQvCDQtNC+0YHRgtGD0L/QvdC+INCyINCz0L7QtNGDJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVubG9ja0NvdW50ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93RXJyb3IoJ9Ce0YHRgtCw0LvRjNC90YvQtSDQutCy0LDRgNGC0LDQu9GLINC30LDQsdC70L7QutC40YDQvtCy0LDQvdGLJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlbWluZCA9IHJlc3RWYWx1ZSAlIHVubG9ja0NvdW50OyAvLyDQvtGB0YLQsNGC0L7QuiDQvtGCINC00LXQu9C10L3QuNGPXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBkID0gMTsgZCA8PSA0OyBkKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZGF0YVtkXS5sb2NrKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkICE9PSBxdWFydGVyTnVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBxVmFsdWUgPSByZW1pbmQgPiAwID8gKHJlbWluZC0tLCBNYXRoLmZsb29yKHJlc3RWYWx1ZSAvIHVubG9ja0NvdW50KSArIDEpIDogTWF0aC5mbG9vcihyZXN0VmFsdWUgLyB1bmxvY2tDb3VudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxVmFsdWUgPj0gZGF0YVtkXS5sb2NrU3VtKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVtkXS5zdW0gPSBxVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFbZF0uc3VtID0gZGF0YVtkXS5sb2NrU3VtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmxvY2tDb3VudC0tO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN0VmFsdWUgLT0gZGF0YVtkXS5zdW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN0VmFsdWUgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93RXJyb3IoJ9CX0LDQsdC70L7QutC40YDQvtCy0LDQvdC+INGB0LvQuNGI0LrQvtC8INC80L3QvtCz0L4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB1bmxvY2tNb250aCA9ICFkYXRhW2RdWzBdLmxvY2sgKyAhZGF0YVtkXVsxXS5sb2NrICsgIWRhdGFbZF1bMl0ubG9jaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB1bmxvY2tWYWx1ZSA9IGRhdGFbZF0uc3VtIC0gKGRhdGFbZF1bMF0ubG9jayAqIGRhdGFbZF1bMF0udiArIGRhdGFbZF1bMV0ubG9jayAqIGRhdGFbZF1bMV0udiArIGRhdGFbZF1bMl0ubG9jayAqIGRhdGFbZF1bMl0udik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodW5sb2NrVmFsdWUgPCAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93Tm90aWNlKCfQkiDQvNC10YHRj9GG0LDRhSAnICsgZCArICct0LPQviDQutCy0LDRgNGC0LDQu9CwINC+0YLRgNC40YbQsNGC0LXQu9GM0L3Ri9C1INC30L3QsNGH0LXQvdC40Y8sPGJyPtC/0L7Qv9GA0L7QsdGD0LnRgtC1INGA0LDQt9Cx0LvQvtC60LjRgNC+0LLQsNGC0Ywg0LjRhScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZW1Nb250aCA9IHVubG9ja1ZhbHVlICUgdW5sb2NrTW9udGg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDM7IGkrKylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWRhdGFbZF1baV0ubG9jaylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVtkXVtpXS52ID0gcmVtTW9udGggPiAwID8gKHJlbU1vbnRoLS0sIE1hdGguZmxvb3IodW5sb2NrVmFsdWUgLyB1bmxvY2tNb250aCkgKyAxKSA6IE1hdGguZmxvb3IodW5sb2NrVmFsdWUgLyB1bmxvY2tNb250aCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyDQodC+0YXRgNCw0L3QtdC90LjQtSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgZCA9IDE7IGQgPD0gNDsgZCsrKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLkRhdGFbZCAtIDFdLk1vbnRoc1tpXVtwYXJhbU5hbWVdID0gZGF0YVtkXVtpXS52O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5EYXRhW2QgLSAxXS5Nb250aHNbaV0uQ2hhbmdlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuRGF0YVtkIC0gMV1bcGFyYW1OYW1lXSA9IGRhdGFbZF0uc3VtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHBhcmFtTmFtZSwgZGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ3llYXJfc3VtXycgKyBwYXJhbU5hbWUsIGRhdGFbMV0uc3VtICsgZGF0YVsyXS5zdW0gKyBkYXRhWzNdLnN1bSArIGRhdGFbNF0uc3VtKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vINCh0L7RhdGA0LDQvdC10L3QuNC1IFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVwZGF0ZSkgeyB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaCgpOyB0aGlzLlJlZnJlc2hDaGFydHNQYXJhbXMocGFyYW1OYW1lKTsgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdtb250aCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1bMV0gPSBwYXJzZUludChlbGVtWzFdKSAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcXVhcnRlck51bSA9IE1hdGguZmxvb3IoZWxlbVsxXSAvIDMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBhcmFtTmFtZSA9IGVsZW1bMl07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgdW5sb2NrQ291bnQgPSAyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHF1YXJ0ZXJWYWwgPSB0aGlzLkNvbnRyb2xsZXIuRGF0YVtxdWFydGVyTnVtXVtwYXJhbU5hbWVdIC0gdmFsdWU7IC8vINGB0LrQvtC70YzQutC+INC+0YHRgtCw0LvQvtGB0Ywg0YDQsNGB0L/RgNC10LTQtdC70LjRgtGMINCyINC60LLQsNGA0YLQsNC70LVcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBkIG9mIHRoaXMuQ29udHJvbGxlci5EYXRhW3F1YXJ0ZXJOdW1dLk1vbnRocylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKGQuTG9ja2VkICYgdGhpcy5Qcm9wc0xvZ2ljW3BhcmFtTmFtZV0pICE9PSAwICYmIChkLm1vbnRoICE9PSBlbGVtWzFdICsgMSkpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVhcnRlclZhbCAtPSBkW3BhcmFtTmFtZV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmxvY2tDb3VudC0tO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodW5sb2NrQ291bnQgPD0gMCkgeyBMdXJlLlN5c3RlbS5FcnJvcign0J7RgdGC0LDQu9GM0L3Ri9C1INGP0YfQtdC50LrQuCDQt9Cw0LHQu9C+0LrQuNGA0L7QstCw0L3RiycpOyByZXR1cm47IH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxdWFydGVyVmFsIDwgMCkgeyBMdXJlLlN5c3RlbS5FcnJvcign0KPRgdGC0LDQvdCw0LLQu9C40LLQsNC10LzQvtC1INC30L3QsNGH0LXQvdC40LUg0LHQvtC70YzRiNC1LCDRh9C10Lwg0LfQvdCw0YfQtdC90LjQtSDQutCy0LDRgNGC0LDQu9CwJyk7IHJldHVybjsgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLkRhdGFbcXVhcnRlck51bV0uTW9udGhzW2VsZW1bMV0gJSAzXVtwYXJhbU5hbWVdID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuRGF0YVtxdWFydGVyTnVtXS5Nb250aHNbZWxlbVsxXSAlIDNdLkNoYW5nZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlbSA9IHF1YXJ0ZXJWYWwgJSB1bmxvY2tDb3VudDsgLy8g0L7RgdGC0LDRgtC+0Log0L7RgiDQtNC10LvQtdC90LjRj1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG1vbnRoVmFsdWUgPSBNYXRoLmZsb29yKHF1YXJ0ZXJWYWwgLyB1bmxvY2tDb3VudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBkIG9mIHRoaXMuQ29udHJvbGxlci5EYXRhW3F1YXJ0ZXJOdW1dLk1vbnRocylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZC5tb250aCAhPT0gZWxlbVsxXSArIDEgJiYgKGQuTG9ja2VkICYgdGhpcy5Qcm9wc0xvZ2ljW3BhcmFtTmFtZV0pID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRbcGFyYW1OYW1lXSA9IHJlbSA+IDAgPyAocmVtLS0sIG1vbnRoVmFsdWUgKyAxKSA6IG1vbnRoVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQuQ2hhbmdlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1cGRhdGUpIHsgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goKTsgdGhpcy5SZWZyZXNoQ2hhcnRzUGFyYW1zKHBhcmFtTmFtZSk7IH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAneWVhcic6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoZWxlbVsxXSwgdmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlNldFBhcmFtc1ZhbHVlKCBbJ3F1YXJ0ZXInLCAnMCcsIGVsZW1bMV0uc3BsaXQoJ18nKVtlbGVtWzFdLnNwbGl0KCdfJykubGVuZ3RoIC0gMV0gXS5qb2luKCcuJyksICB2YWx1ZSwgdXBkYXRlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5Ub2dnbGVMb2NrZWQgPSBmdW5jdGlvbiAoeCwgZG91YmxlQ2xpY2sgPSAnc2luZ2xlJykge1xyXG4gICAgICAgICAgICBsZXQgZGF0YUVsZW0gPSB4LnBhcmVudEVsZW1lbnQuY2hpbGRyZW5bMV0uZGF0YXNldFsndHlwZSddLnNwbGl0KCcuJyk7XHJcbiAgICAgICAgICAgIGxldCBmbGFnID0geC5jbGFzc0xpc3QuY29udGFpbnMoJ2xvY2tlZCcpO1xyXG4gICAgICAgICAgICB0aGlzLnRvZ2dsZUxvY2tlZFBhcmFtcyhkYXRhRWxlbSwgZmxhZywgZG91YmxlQ2xpY2sgPT09ICdkb3VibGUnKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMudG9nZ2xlTG9ja2VkUGFyYW1zID0gZnVuY3Rpb24oZGF0YUVsZW0sIGlzTG9ja2VkLCBkb3VibGVDbGljaykge1xyXG4gICAgICAgICAgICBpZiAoZG91YmxlQ2xpY2spIGlzTG9ja2VkID0gIWlzTG9ja2VkO1xyXG4gICAgICAgICAgICBpc0xvY2tlZCA/IChkYXRhRWxlbVszXSA9ICdvZmYnKSA6IChkYXRhRWxlbVszXSA9ICdvbicpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGxvY2tEYXRhID0gMDtcclxuICAgICAgICAgICAgc3dpdGNoIChkYXRhRWxlbVsyXSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAndmlzaXRvcnMnOlxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFFbGVtWzNdID09PSAnb24nID8gbG9ja0RhdGEgPSA0IDogbG9ja0RhdGEgPSAxMTsgLy8gMDEwMCAxMDExXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdyZWdpc3RyYXRpb24nOlxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFFbGVtWzNdID09PSAnb24nID8gbG9ja0RhdGEgPSAyIDogbG9ja0RhdGEgPSAxMzsgLy8gMDAxMCAxMTAxXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdib29rcyc6XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YUVsZW1bM10gPT09ICdvbicgPyBsb2NrRGF0YSA9IDEgOiBsb2NrRGF0YSA9IDE0OyAvLyAwMDAxIDExMTBcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2Z1bGwnOlxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFFbGVtWzNdID09PSAnb24nID8gbG9ja0RhdGEgPSAxNSA6IGxvY2tEYXRhID0gMDsgLy8gMTExMSAwMDAwXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLkVycm9yKCfQndC10LLQtdGA0L3Ri9C5IElEINC/0LDRgNCw0LzQtdGC0YDQsCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkYXRhRWxlbVsyXSA9ICdMb2NrZWQnOyAvLyBxdWFydGVyLjMudmlzaXRvcnNcclxuICAgICAgICAgICAgaWYgKGRhdGFFbGVtWzBdID09PSAncXVhcnRlcicgJiYgZG91YmxlQ2xpY2spXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gcGFyc2VJbnQoZGF0YUVsZW1bMV0pICogMyAtIDI7IGkgPD0gcGFyc2VJbnQoZGF0YUVsZW1bMV0pICogMzsgaSsrKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2V0UGFyYW1zVmFsdWUoWydtb250aCcsIGksIGRhdGFFbGVtWzJdLCBkYXRhRWxlbVszXV0uam9pbignLicpLCBsb2NrRGF0YSwgZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5TZXRQYXJhbXNWYWx1ZShkYXRhRWxlbS5qb2luKCcuJyksIGxvY2tEYXRhKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLlNlbGVjdE1vbnRoTnVtID0gZnVuY3Rpb24gKG1udW0pIHtcclxuICAgICAgICAgICAgbGV0IG1vbnRoRWxlbSA9IHRoaXMuU2VsZWN0KCcubW9udGguJyArIHRoaXMuTW9udGhzKG1udW0pICsgJyAuY29sdW1uLXBlcmlvZCcpO1xyXG4gICAgICAgICAgICBpZiAobW9udGhFbGVtKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5Nb250aENsaWNrKG1vbnRoRWxlbSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5Nb250aENsaWNrID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgbGV0IGEgPSB0aGlzLlNlbGVjdCgnLmdyZXktbW9udGgnKTtcclxuICAgICAgICAgICAgaWYgKGEpIGEuY2xhc3NMaXN0LnJlbW92ZSgnZ3JleS1tb250aCcpO1xyXG4gICAgICAgICAgICBlLmNsYXNzTGlzdC5hZGQoJ2dyZXktbW9udGgnKTtcclxuICAgICAgICAgICAgbGV0IG1vbnRoID0gcGFyc2VJbnQoZS5kYXRhc2V0Wyd0eXBlJ10uc3BsaXQoJy4nKVsxXSk7XHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWRNb250aCA9IG1vbnRoO1xyXG4gICAgICAgICAgICBsZXQgdmFsID0gdGhpcy5Db250cm9sbGVyLkRhdGFbTWF0aC5mbG9vcigobW9udGggLSAxKSAvIDMpXS5Nb250aHNbKG1vbnRoIC0gMSkgJSAzXTtcclxuICAgICAgICAgICAgbGV0IHZhbHVlID0gW3ZhbC52aXNpdG9ycywgdmFsLnJlZ2lzdHJhdGlvbiwgdmFsLmJvb2tzXTtcclxuICAgICAgICAgICAgdGhpcy5QYXJlbnQuQ2FsZW5kYXIuTWFrZUNhbGVuZGFyKG1vbnRoLCB2YWx1ZSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkxvY2tDbGljayA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGxldCBkYXRhID0gZS5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQuY2hpbGRyZW5bMV0uZGF0YXNldFsndHlwZSddO1xyXG4gICAgICAgICAgICBpZiAoIWRhdGEpIHJldHVybjtcclxuICAgICAgICAgICAgdGhpcy5Ub2dnbGVMb2NrZWQoZS5jdXJyZW50VGFyZ2V0LCAnc2luZ2xlJyk7XHJcbiAgICAgICAgICAgIGlmIChkYXRhLnNwbGl0KCcuJylbMF0gIT09ICdxdWFydGVyJykgcmV0dXJuO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5Eb3VibGVDbGlja1RpbWVyID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuRG91YmxlQ2xpY2tUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4gdGhpcy5Eb3VibGVDbGlja1RpbWVyID0gbnVsbCwgMzAwKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5Eb3VibGVDbGlja1RpbWVyKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuRG91YmxlQ2xpY2tUaW1lciA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRvZ2dsZUxvY2tlZChlLmN1cnJlbnRUYXJnZXQsICdkb3VibGUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2hhcnRWaXNpdHMgPSBuZXcgTHVyZS5DaGFydCh0aGlzLkdldENoYXJ0T3B0aW9ucyh0aGlzLlNlbGVjdCgnLmxlZnQtY2hhcnQtY29udGFpbmVyJykpKTtcclxuICAgICAgICB0aGlzLkNoYXJ0UmVnaXN0ZXIgPSBuZXcgTHVyZS5DaGFydCh0aGlzLkdldENoYXJ0T3B0aW9ucyh0aGlzLlNlbGVjdCgnLmNlbnRlci1jaGFydC1jb250YWluZXInKSkpO1xyXG4gICAgICAgIHRoaXMuQ2hhcnRCb29rcyA9IG5ldyBMdXJlLkNoYXJ0KHRoaXMuR2V0Q2hhcnRPcHRpb25zKHRoaXMuU2VsZWN0KCcucmlnaHQtY2hhcnQtY29udGFpbmVyJykpKTtcclxuXHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29sdW1uLXZpc2l0b3JzLCAuY29sdW1uLXJlZ2lzdHJhdGlvbiwgLmNvbHVtbi1ib29rcywgLmNoYXJ0LWNvbnRhaW5lciAuc3ViLWNhcHRpb24nLCAoZSkgPT5cclxuICAgICAgICAgICAgSW5wdXRCb3guUnVuKFxyXG4gICAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LFxyXG4gICAgICAgICAgICAgICAgcGFyc2VJbnQoZS5jdXJyZW50VGFyZ2V0LmlubmVySFRNTC5yZXBsYWNlKC9bXjAtOV0vZ3UsICcnKSksXHJcbiAgICAgICAgICAgICAgICAodikgPT4gdGhpcy5TZXRQYXJhbXNWYWx1ZShlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndHlwZSddLCBwYXJzZUludCh2KSksXHJcbiAgICAgICAgICAgICAgICB7Q2FwdGlvbjogZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ2hpbnQnXX1cclxuICAgICAgICAgICAgKSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcucXVhcnRlci1tb250aCAuY29sdW1uLXBlcmlvZCcsIChlKSA9PiB0aGlzLk9wZW5RdWFydGVyKGUuY3VycmVudFRhcmdldCkpO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmxvY2snLCAoZSkgPT4gdGhpcy5Mb2NrQ2xpY2soZSkpO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLm1vbnRoIC5jb2x1bW4tcGVyaW9kJywgKGUpID0+IHRoaXMuTW9udGhDbGljayhlLmN1cnJlbnRUYXJnZXQpKTtcclxuICAgICAgICB0aGlzLlNhdmVCdXR0b24gPSB0aGlzLlNlbGVjdCgnLnNhdmUtYnV0dG9uJyk7XHJcbiAgICAgICAgdGhpcy5TYXZlQnV0dG9uLm9uY2xpY2sgPSAoKSA9PiB0aGlzLlBhcmVudC5TYXZlWWVhckRhdGEodGhpcy5TYXZlQnV0dG9uKTtcclxuXHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5jYW5jZWwtYnV0dG9uJykub25jbGljayA9ICgpID0+IEx1cmUuU3lzdGVtLk5vdGljZSgnQ2FuY2VsZWQnKTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnLmRpc3RyaWJ1dGUtZXZlbmx5LWJ1dHRvbicpLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuU2V0UGFyYW1zVmFsdWUoJ3llYXIueWVhcl9zdW1fdmlzaXRvcnMnLCB0aGlzLlByb3RvLkRhdGEueWVhcl9zdW1fdmlzaXRvcnMsIGZhbHNlKTtcclxuICAgICAgICAgICAgdGhpcy5TZXRQYXJhbXNWYWx1ZSgneWVhci55ZWFyX3N1bV9yZWdpc3RyYXRpb24nLCB0aGlzLlByb3RvLkRhdGEueWVhcl9zdW1fcmVnaXN0cmF0aW9uLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIHRoaXMuU2V0UGFyYW1zVmFsdWUoJ3llYXIueWVhcl9zdW1fYm9va3MnLCB0aGlzLlByb3RvLkRhdGEueWVhcl9zdW1fYm9va3MsIGZhbHNlKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5SZWNvdW50U3VtcygpO1xyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2hDaGFydHMoKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBsZXQgRWxlbUlzQ2hpbGRPZiA9IChlbGVtLCBjaGVja0NsYXNzLCBsaW1pdENsYXNzID0gJ2JvZHknKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghZWxlbSkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICBpZiAoIWVsZW0ucGFyZW50RWxlbWVudCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICBpZiAoZWxlbS5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhsaW1pdENsYXNzKSkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICBpZiAoZWxlbS5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhjaGVja0NsYXNzKSlcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBlbHNlIHJldHVybiBFbGVtSXNDaGlsZE9mKGVsZW0ucGFyZW50RWxlbWVudCwgY2hlY2tDbGFzcywgbGltaXRDbGFzcyk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcucmlnaHQtY2hhcnQtY29udGFpbmVyIHBhdGguY2hhcnQtaG92ZXIsIC5jZW50ZXItY2hhcnQtY29udGFpbmVyIHBhdGguY2hhcnQtaG92ZXIsIC5sZWZ0LWNoYXJ0LWNvbnRhaW5lciBwYXRoLmNoYXJ0LWhvdmVyJywgZSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBlbGVtID0gZS5jdXJyZW50VGFyZ2V0O1xyXG4gICAgICAgICAgICBsZXQgcGVyaW9kLCBudW0sIHR5cGUsIHN0YXJ0VmFsID0gMCwgY2FwdGlvbiA9ICcnO1xyXG5cclxuICAgICAgICAgICAgbnVtID0gcGFyc2VJbnQoZWxlbS5kYXRhc2V0WydpdGVtJ10pICsgMTtcclxuICAgICAgICAgICAgc3dpdGNoIChlbGVtLmRhdGFzZXRbJ2xpbmUnXSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnMCc6XHJcbiAgICAgICAgICAgICAgICAgICAgcGVyaW9kID0gJ21vbnRoJztcclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uID0gJyAtICcgKyBMdXJlLkRhdGUobmV3IERhdGUoMjAxOCwgbnVtIC0gMSwgMSkpLkZvcm1hdCgnTU1NTScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnMSc6XHJcbiAgICAgICAgICAgICAgICAgICAgcGVyaW9kID0gJ3F1YXJ0ZXInO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb24gPSAnIC0gJyArIChudW0gPT09IDEgPyAnSScgOiBudW0gPT09IDIgPyAnSUknIDogbnVtID09PSAzID8gJ0lJSScgOiAnSVYnKSArICcg0LrQstCw0YDRgtCw0LsnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoRWxlbUlzQ2hpbGRPZihlbGVtLCAncmlnaHQtY2hhcnQtY29udGFpbmVyJywgJ2NoYXJ0LWNvbnRhaW5lcicpKSB7XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2Jvb2tzJztcclxuICAgICAgICAgICAgICAgIHN0YXJ0VmFsID0gdGhpcy5DaGFydEJvb2tzLk9wdGlvbnMuU2VyaWVzW3BhcnNlSW50KGVsZW0uZGF0YXNldFsnbGluZSddKV0uRGF0YVtudW0gLSAxXTtcclxuICAgICAgICAgICAgICAgIGNhcHRpb24gPSAn0JrQvdC40LPQvtCy0YvQtNCw0YfQsCAnICsgY2FwdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoRWxlbUlzQ2hpbGRPZihlbGVtLCAnY2VudGVyLWNoYXJ0LWNvbnRhaW5lcicsICdjaGFydC1jb250YWluZXInKSkge1xyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdyZWdpc3RyYXRpb24nO1xyXG4gICAgICAgICAgICAgICAgc3RhcnRWYWwgPSB0aGlzLkNoYXJ0UmVnaXN0ZXIuT3B0aW9ucy5TZXJpZXNbcGFyc2VJbnQoZWxlbS5kYXRhc2V0WydsaW5lJ10pXS5EYXRhW251bSAtIDFdO1xyXG4gICAgICAgICAgICAgICAgY2FwdGlvbiA9ICfQl9Cw0L/QuNGB0YwgJyArIGNhcHRpb247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKEVsZW1Jc0NoaWxkT2YoZWxlbSwgJ2xlZnQtY2hhcnQtY29udGFpbmVyJywgJ2NoYXJ0LWNvbnRhaW5lcicpKSB7XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ3Zpc2l0b3JzJztcclxuICAgICAgICAgICAgICAgIHN0YXJ0VmFsID0gdGhpcy5DaGFydFZpc2l0cy5PcHRpb25zLlNlcmllc1twYXJzZUludChlbGVtLmRhdGFzZXRbJ2xpbmUnXSldLkRhdGFbbnVtIC0gMV07XHJcbiAgICAgICAgICAgICAgICBjYXB0aW9uID0gJ9Cf0L7RgdC10YnQtdC90LjRjyAnICsgY2FwdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIXBlcmlvZCB8fCAhbnVtIHx8ICF0eXBlKSByZXR1cm47XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFtwZXJpb2QsIG51bSwgdHlwZV0uam9pbignLicpKTtcclxuICAgICAgICAgICAgSW5wdXRCb3guUnVuKFxyXG4gICAgICAgICAgICAgICAgZWxlbSwgc3RhcnRWYWwsXHJcbiAgICAgICAgICAgICAgICB2ID0+IHRoaXMuU2V0UGFyYW1zVmFsdWUoW3BlcmlvZCwgbnVtLCB0eXBlXS5qb2luKCcuJyksIHBhcnNlSW50KHYpKSxcclxuICAgICAgICAgICAgICAgIHtDYXB0aW9uOiBjYXB0aW9ufVxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coRWxlbUlzQ2hpbGRPZihlbGVtLCAncmlnaHQtY2hhcnQtY29udGFpbmVyJywgJ2NoYXJ0LWNvbnRhaW5lcicpLCBlbGVtLmRhdGFzZXRbJ2xpbmUnXSwgZWxlbS5kYXRhc2V0WydpdGVtJ10pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxufSk7XHJcbiIsIkRhdGFJbnB1dC5EYXRhUGxhbklucHV0ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERhdGFJbnB1dCxcclxuICAgIE5hbWU6ICdEYXRhUGxhbklucHV0JyxcclxuICAgIFRhcmdldDogJy5kYXRhLXBsYW4taW5wdXQnLFxyXG4gICAgLy9UeXBlOiAnZGF0YS1wbGFuLWNvbnRlbnQnLFxyXG4gICAgVHlwZTogJ2RhdGEtaW5wdXQtY29udGVudCcsXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1kYXRhLWlucHV0LXBsYW4nXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLlNldHVwUGxhbl1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG4gICAgICAgIGA8ZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlhcnktYnJlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaVwiPlxyXG4gICAgICAgICAgICAgICAgICAgINCf0L7QtNGA0LDQt9C00LXQu9C10L3QuNC1OiA8c2VsZWN0IGNsYXNzPVwibC1zZWxlY3QgZGF0YS1wbGFuLXNlbGVjdCBzZWxlY3QgbGliLWxpc3RcIj48L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRwLXdyYXAtb3V0XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1wbGFuLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1wbGFuLWNvbnRhaW5lclwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3BzOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB0aGlzLkN1cnJlbnRZZWFyID0gKG5ldyBEYXRlKCkpLmdldEZ1bGxZZWFyKCk7XHJcbiAgICAgICAgdGhpcy5ZZWFyRGF0YSA9IHt9O1xyXG4gICAgICAgIHRoaXMuaXNTaG93biA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuWWVhckRhdGFbdGhpcy5DdXJyZW50WWVhcl0gPSBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFF1YXJ0ZXI6IDEsXHJcbiAgICAgICAgICAgICAgICBNb250aHM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7bW9udGg6IDEsIHZpc2l0b3JzOiAwLCByZWdpc3RyYXRpb246IDAsIGJvb2tzOiAwLCBMb2NrZWQ6IDB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHttb250aDogMiwgdmlzaXRvcnM6IDAsIHJlZ2lzdHJhdGlvbjogMCwgYm9va3M6IDAsIExvY2tlZDogMH0sXHJcbiAgICAgICAgICAgICAgICAgICAge21vbnRoOiAzLCB2aXNpdG9yczogMCwgcmVnaXN0cmF0aW9uOiAwLCBib29rczogMCwgTG9ja2VkOiAwfVxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIHZpc2l0b3JzOiAxMDAzLFxyXG4gICAgICAgICAgICAgICAgcmVnaXN0cmF0aW9uOiAxNTAsXHJcbiAgICAgICAgICAgICAgICBib29rczogMjAwLFxyXG4gICAgICAgICAgICAgICAgTG9ja2VkOiAwXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFF1YXJ0ZXI6IDIsXHJcbiAgICAgICAgICAgICAgICBNb250aHM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7bW9udGg6IDQsIHZpc2l0b3JzOiAwLCByZWdpc3RyYXRpb246IDAsIGJvb2tzOiAwLCBMb2NrZWQ6IDB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHttb250aDogNSwgdmlzaXRvcnM6IDAsIHJlZ2lzdHJhdGlvbjogMCwgYm9va3M6IDAsIExvY2tlZDogMH0sXHJcbiAgICAgICAgICAgICAgICAgICAge21vbnRoOiA2LCB2aXNpdG9yczogMCwgcmVnaXN0cmF0aW9uOiAwLCBib29rczogMCwgTG9ja2VkOiAwfVxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIHZpc2l0b3JzOiAxMDAzLFxyXG4gICAgICAgICAgICAgICAgcmVnaXN0cmF0aW9uOiAxNTAsXHJcbiAgICAgICAgICAgICAgICBib29rczogMjAwLFxyXG4gICAgICAgICAgICAgICAgTG9ja2VkOiAwXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFF1YXJ0ZXI6IDMsXHJcbiAgICAgICAgICAgICAgICBNb250aHM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7bW9udGg6IDcsIHZpc2l0b3JzOiAwLCByZWdpc3RyYXRpb246IDAsIGJvb2tzOiAwLCBMb2NrZWQ6IDB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHttb250aDogOCwgdmlzaXRvcnM6IDAsIHJlZ2lzdHJhdGlvbjogMCwgYm9va3M6IDAsIExvY2tlZDogMH0sXHJcbiAgICAgICAgICAgICAgICAgICAge21vbnRoOiA5LCB2aXNpdG9yczogMCwgcmVnaXN0cmF0aW9uOiAwLCBib29rczogMCwgTG9ja2VkOiAwfVxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIHZpc2l0b3JzOiAxMDAzLFxyXG4gICAgICAgICAgICAgICAgcmVnaXN0cmF0aW9uOiAxNTAsXHJcbiAgICAgICAgICAgICAgICBib29rczogMjAwLFxyXG4gICAgICAgICAgICAgICAgTG9ja2VkOiAwXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFF1YXJ0ZXI6IDQsXHJcbiAgICAgICAgICAgICAgICBNb250aHM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7bW9udGg6IDEwLCB2aXNpdG9yczogMCwgcmVnaXN0cmF0aW9uOiAwLCBib29rczogMCwgTG9ja2VkOiAwfSxcclxuICAgICAgICAgICAgICAgICAgICB7bW9udGg6IDExLCB2aXNpdG9yczogMCwgcmVnaXN0cmF0aW9uOiAwLCBib29rczogMCwgTG9ja2VkOiAwfSxcclxuICAgICAgICAgICAgICAgICAgICB7bW9udGg6IDEyLCB2aXNpdG9yczogMCwgcmVnaXN0cmF0aW9uOiAwLCBib29rczogMCwgTG9ja2VkOiAwfVxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIHZpc2l0b3JzOiAwLFxyXG4gICAgICAgICAgICAgICAgcmVnaXN0cmF0aW9uOiAwLFxyXG4gICAgICAgICAgICAgICAgYm9va3M6IDAsXHJcbiAgICAgICAgICAgICAgICBMb2NrZWQ6IDBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF07XHJcbiAgICAgICAgdGhpcy5BbGxNb250aHNEYXRhID0ge307XHJcbiAgICAgICAgdGhpcy5BbGxNb250aHNEYXRhW3RoaXMuQ3VycmVudFllYXJdID0ge307XHJcblxyXG4gICAgICAgIHRoaXMuTGliU2VsZWN0Q29udHJsID0gbmV3IEx1cmUuQ29udHJvbGxlci5UZW1wbGF0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6ICcuZGF0YS1wbGFuLXNlbGVjdC5zZWxlY3QubGliLWxpc3QnLFxyXG4gICAgICAgICAgICBEYXRhOiBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3QsXHJcbiAgICAgICAgICAgIExpc3RFbGVtZW50OiBgPG9wdGlvbiB2YWx1ZT1cInt7SUR9fVwiPnt7TmFtZX19PC9vcHRpb24+YFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuTGliU2VsZWN0ID0gdGhpcy5TZWxlY3QoJy5kYXRhLXBsYW4tc2VsZWN0LnNlbGVjdC5saWItbGlzdCcpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoQmlnQ2hhcnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlBsYW5DaGFydC5DaGFydFJlZnJlc2goKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU2F2ZU1vbnRoRGF0YSA9IGZ1bmN0aW9uIChidXR0b24pIHtcclxuICAgICAgICAgICAgbGV0IGRhdGEgPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgayBpbiB0aGlzLkFsbE1vbnRoc0RhdGFbdGhpcy5DdXJyZW50WWVhcl0pXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5BbGxNb250aHNEYXRhW3RoaXMuQ3VycmVudFllYXJdLmhhc093blByb3BlcnR5KGspKVxyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGQgb2YgdGhpcy5BbGxNb250aHNEYXRhW3RoaXMuQ3VycmVudFllYXJdW2tdKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZC5DaGFuZ2VkID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEQ6IGFwaS5kdFRvQ3MobmV3IERhdGUodGhpcy5DdXJyZW50WWVhciwgZC5Nb250aCAtIDEsIGQuRGF5TnVtYmVyKSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVjogZC5WaXNpdG9ycyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSOiBkLlJlZ2lzdGVycyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCOiBkLkJvb2tHaXZpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSDogZC5Ib2xpZGF5ID09PSAxXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQuQ2hhbmdlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBhcGkuRGF0YUlucHV0X1BsYW5fU2V0KHRoaXMuU2VsZWN0ZWRMaWJyYXJ5LCBkYXRhLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgRmluYWxseTogKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJ1dHRvbikgTHVyZS5CdXR0b24uUmVsZWFzZShidXR0b24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93U3VjY2Vzcygn0KHQvtGF0YDQsNC90LXQvdC+Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qfSwgMTUwMCkqL1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICAgICAgaWYgKGJ1dHRvbikgTHVyZS5CdXR0b24uUmVsZWFzZShidXR0b24pO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlNhdmVZZWFyRGF0YSA9IGZ1bmN0aW9uIChidXR0b24pIHtcclxuICAgICAgICAgICAgaWYgKGJ1dHRvbikgTHVyZS5CdXR0b24uTG9jayhidXR0b24pO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSAxMjsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZCA9IHRoaXMuWWVhckRhdGFbdGhpcy5DdXJyZW50WWVhcl1bTWF0aC5mbG9vcigoIGkgLSAxKSAvIDMpXS5Nb250aHNbKGkgLSAxKSAlIDNdO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChkLkNoYW5nZWQgPT09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkLCBpKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaSA9PT0gdGhpcy5DYWxlbmRhci5Qcm90by5EYXRhLkN1cnJlbnRNb250aClcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DYWxlbmRhci5EaXN0cmlidXRlRXZlbmx5KFtkLnZpc2l0b3JzLCBkLnJlZ2lzdHJhdGlvbiwgZC5ib29rc10sIGkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgdGhpcy5DYWxlbmRhci5EaXN0cmlidXRlRXZlbmx5TWV0aG9kKFtkLnZpc2l0b3JzLCBkLnJlZ2lzdHJhdGlvbiwgZC5ib29rc10sIHRoaXMuQWxsTW9udGhzRGF0YVt0aGlzLkN1cnJlbnRZZWFyXVtpXSwgaSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5TYXZlTW9udGhEYXRhKGJ1dHRvbik7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkRhdGFQbGFuTG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgcmV0dXJuIGFwaS5EYXRhSW5wdXRfUGxhbl9HZXQodGhpcy5TZWxlY3RlZExpYnJhcnksIHRoaXMuQ3VycmVudFllYXIsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8vIFRPRE8g0JXRgdC70LggciDQv9GD0YHRgtC+LCDRgtC+INC00LXRhNC+0LvRgtC90L7QtSDQt9C90LDRh9C10L3QuNC1INC90LDQtNC+LCDQutC+0YLQvtGA0L7QtSDQuNC3IDAg0YHQvtGB0YLQvtC40YJcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBZZWFyRGF0YSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGQgb2YgcikgeyAvLyB7QjogNDQsIEQ6IFwiL0RhdGUoMTUxNDc1NDAwMDAwMCswMzAwKS9cIiwgSDogZmFsc2UsIFI6IDQzLCBWOiA5OH0gLSDQotCw0Log0L/RgNC40YXQvtC00LjRglxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGF0ZSA9IEx1cmUuRGF0ZShkLkQpLkRhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBxdWFydGVyID0gTWF0aC5mbG9vcigobW9udGggLSAxKSAvIDMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWRhdGFbbW9udGhdKSBkYXRhW21vbnRoXSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGF5RGF0YSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERheUluV2VlazogZGF0ZS5nZXREYXkoKSA9PT0gMCA/IDcgOiBkYXRlLmdldERheSgpLCAvLyDQktChIC0gMCwg0J/QnSAtIDEsINCh0JEgLSA2XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEYXlOdW1iZXI6IGRhdGUuZ2V0RGF0ZSgpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTW9udGg6IG1vbnRoLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlzaXRvcnM6IGQuVixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlZ2lzdGVyczogZC5SLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQm9va0dpdmluZzogZC5CLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSG9saWRheTogZC5IID8gMSA6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2NrZWQ6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaGFuZ2VkOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhW21vbnRoXVtkYXRlLmdldERhdGUoKSAtIDFdID0gZGF5RGF0YTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFZZWFyRGF0YVtxdWFydGVyXSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFllYXJEYXRhW3F1YXJ0ZXJdID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFF1YXJ0ZXI6IHF1YXJ0ZXIgKyAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1vbnRoczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bW9udGg6IHF1YXJ0ZXIgKiAzICsgMSwgdmlzaXRvcnM6IDAsIHJlZ2lzdHJhdGlvbjogMCwgYm9va3M6IDAsIExvY2tlZDogMH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHttb250aDogcXVhcnRlciAqIDMgKyAyLCB2aXNpdG9yczogMCwgcmVnaXN0cmF0aW9uOiAwLCBib29rczogMCwgTG9ja2VkOiAwfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21vbnRoOiBxdWFydGVyICogMyArIDMsIHZpc2l0b3JzOiAwLCByZWdpc3RyYXRpb246IDAsIGJvb2tzOiAwLCBMb2NrZWQ6IDB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpdG9yczogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWdpc3RyYXRpb246IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9va3M6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9ja2VkOiAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgWWVhckRhdGFbcXVhcnRlcl0udmlzaXRvcnMgKz0gZGF5RGF0YS5WaXNpdG9ycztcclxuICAgICAgICAgICAgICAgICAgICAgICAgWWVhckRhdGFbcXVhcnRlcl0ucmVnaXN0cmF0aW9uICs9IGRheURhdGEuUmVnaXN0ZXJzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBZZWFyRGF0YVtxdWFydGVyXS5ib29rcyArPSBkYXlEYXRhLkJvb2tHaXZpbmc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFllYXJEYXRhW3F1YXJ0ZXJdLk1vbnRoc1sobW9udGggLSAxKSAlIDNdLnZpc2l0b3JzICs9IGRheURhdGEuVmlzaXRvcnM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFllYXJEYXRhW3F1YXJ0ZXJdLk1vbnRoc1sobW9udGggLSAxKSAlIDNdLnJlZ2lzdHJhdGlvbiArPSBkYXlEYXRhLlJlZ2lzdGVycztcclxuICAgICAgICAgICAgICAgICAgICAgICAgWWVhckRhdGFbcXVhcnRlcl0uTW9udGhzWyhtb250aCAtIDEpICUgM10uYm9va3MgKz0gZGF5RGF0YS5Cb29rR2l2aW5nO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFsbE1vbnRoc0RhdGFbdGhpcy5DdXJyZW50WWVhcl0gPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuWWVhckRhdGFbdGhpcy5DdXJyZW50WWVhcl0gPSBZZWFyRGF0YTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0cy5Db250cm9sbGVyLlJlZnJlc2godGhpcy5ZZWFyRGF0YVt0aGlzLkN1cnJlbnRZZWFyXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydHMuUmVjb3VudFN1bXMoKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBkZWJ1Z2dlclxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLlJlZnJlc2hCaWdDaGFydCgpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIENhdGNoOiBjb25zb2xlLmVycm9yLFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2FsZW5kYXIuQ2hhbmdlTW9udGgoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydHMuUmVmcmVzaENoYXJ0cygpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaE9uU2hvdyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmlzU2hvd24pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pc1Nob3duID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuTGliU2VsZWN0Q29udHJsLlJlZnJlc2goKVxyXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdGVkTGlicmFyeSA9IHBhcnNlSW50KHRoaXMuTGliU2VsZWN0LnZhbHVlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkRhdGFQbGFuTG9hZCgpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuQ2FsZW5kYXIuQ2FsQ3JlYXRlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2FsZW5kYXIuQ2FsQ3JlYXRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DYWxlbmRhci5NYWtlQ2FsZW5kYXIoKG5ldyBEYXRlKCkpLmdldE1vbnRoKCkgKyAxKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRzLlJlZnJlc2hDaGFydHMoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgICAgIC8vIHRoaXMuQ2hhcnRzLlJlZnJlc2hDaGFydHMoKTtcclxuICAgICAgICAvLyBpZiAoIUx1cmUuT2JqZWN0LmlzRW1wdHkodGhpcy5BbGxNb250aHNEYXRhW3RoaXMuQ3VycmVudFllYXJdKSlcclxuICAgICAgICAvLyAgICAgdGhpcy5QbGFuQ2hhcnQuQ2hhcnQuUmVkcmF3KCk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICB0aGlzLkxpYlNlbGVjdC5vbmNoYW5nZSA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIHNlbGYuU2VsZWN0ZWRMaWJyYXJ5ID0gcGFyc2VJbnQodGhpcy52YWx1ZSk7XHJcbiAgICAgICAgICAgIHNlbGYuRGF0YVBsYW5Mb2FkKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufSk7XHJcblxyXG5yZXF1aXJlKCcuL2NoYXJ0cy9jaGFydHMuanMnKTtcclxucmVxdWlyZSgnLi9jYWxlbmRhci9jYWxlbmRhci5qcycpO1xyXG5yZXF1aXJlKCcuL3BsYW4tY2hhcnQvcGxhbi1jaGFydC5qcycpO1xyXG4iLCJEYXRhSW5wdXQuRGF0YVBsYW5JbnB1dC5QbGFuQ2hhcnQgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGF0YUlucHV0LkRhdGFQbGFuSW5wdXQsXHJcbiAgICBUYXJnZXQ6ICcuZGF0YS1wbGFuLXdyYXBwZXInLFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJwbGFuLWNoYXJ0IGZsZXgtMTAwXCI+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IGxhYmVscyA9ICgoKT0+e1xyXG4gICAgICAgICAgICBsZXQgZCA9IG5ldyBEYXRlKHRoaXMuUGFyZW50LkN1cnJlbnRZZWFyLDAsMSk7XHJcbiAgICAgICAgICAgIGxldCB5ID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwIDsgaSA8IDM2NTsgaSsrKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgeS5wdXNoKGQpO1xyXG4gICAgICAgICAgICAgICAgZCA9IEx1cmUuRGF0ZShkKS5BZGREYXlzKDEpLkRhdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHlcclxuICAgICAgICB9KSgpO1xyXG4gICAgICAgIGxldCBkYXRhID0gKCkgPT4gKG5ldyBBcnJheSgzNjUpKS5TZWxlY3QoKCkgPT4gMCk7XHJcbiAgICAgICAgdGhpcy5DaGFydCA9IG5ldyBMdXJlLkNoYXJ0KHtcclxuICAgICAgICAgICAgRHJhd0FmdGVySW5pdDogZmFsc2UsXHJcbiAgICAgICAgICAgIFRhcmdldDogdGhpcy5Db250ZW50LFxyXG4gICAgICAgICAgICBUeXBlOiAnTGluZScsXHJcbiAgICAgICAgICAgIExlZ2VuZDoge1Bvc2l0aW9uOiAncmlnaHQnLH0sXHJcbiAgICAgICAgICAgIEF4aXNYOiB7XHJcbiAgICAgICAgICAgICAgICBEYXRhOiBsYWJlbHMsXHJcbiAgICAgICAgICAgICAgICBGb3JtYXQ6IChWYWwpID0+IEx1cmUuRGF0ZShWYWwpLkZvcm1hdCgnTU1NTScpLFxyXG4gICAgICAgICAgICAgICAgU2tpcDogKHZhbCkgPT4gdmFsLmdldERhdGUoKSAhPT0gMVxyXG4gICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgU2VyaWVzOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L7RgdC10YnQtdC90LjRjycsXHJcbiAgICAgICAgICAgICAgICAgICAgQ29sb3I6ICcjNjU1OTlFJyxcclxuICAgICAgICAgICAgICAgICAgICBEYXRhOiBkYXRhKCksXHJcbiAgICAgICAgICAgICAgICAgICAgQXhpc1g6IHt9LFxyXG4gICAgICAgICAgICAgICAgICAgIE1hcmtlcjoge1Zpc2libGU6IGZhbHNlfSxcclxuICAgICAgICAgICAgICAgICAgICBBeGlzWTA6IHtQb3NpdGlvbjogJ3JpZ2h0J31cclxuICAgICAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JrQvdC40LPQvtCy0YvQtNCw0YfQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgQ29sb3I6ICcjOUY0OTQ0JyxcclxuICAgICAgICAgICAgICAgICAgICBBeGlzWTM6IHtNYXg6IDQwfSxcclxuICAgICAgICAgICAgICAgICAgICBEYXRhOiBkYXRhKCksXHJcbiAgICAgICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CX0LDQv9C40YHRjCcsXHJcbiAgICAgICAgICAgICAgICAgICAgQ29sb3I6ICcjNTNBQTYyJyxcclxuICAgICAgICAgICAgICAgICAgICBBeGlzWTM6IHt9LFxyXG4gICAgICAgICAgICAgICAgICAgIERhdGE6IGRhdGEoKSxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFNlcmllc09wdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgIE1hcmtlcjoge1Zpc2libGU6IGZhbHNlfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBUb29sdGlwOiB7XHJcbiAgICAgICAgICAgICAgICBGb3JtYXQ6IChUaXApID0+XHJcbiAgICAgICAgICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJ0aXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpcC1iZ1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLXZhbHVlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLWljb25cIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICR7VGlwLkVwaXNvZGUuQ29sb3J9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpcC1sYWJlbFwiPiR7THVyZS5EYXRlKFRpcC5WYWx1ZVgpLkZvcm1hdCgnRCBNTU1NIFlZWVknLCB0cnVlKX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93XCI+JHtUaXAuRXBpc29kZS5OYW1lfTogJHtUaXAuVmFsdWV9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PmBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8qKiBAcmV0dXJuIHtudW1iZXJ9ICovXHJcbiAgICAgICAgdGhpcy5EYXlzSW5Nb250aCA9IGZ1bmN0aW9uIChtb250aCwgeWVhciA9IHRoaXMuUGFyZW50LkN1cnJlbnRZZWFyKSB7XHJcbiAgICAgICAgICAgIGlmIChtb250aCA8IDEgfHwgbW9udGggPiAxMikgcmV0dXJuIDA7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgMCkuZ2V0RGF0ZSgpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgLyoqIEByZXR1cm4ge251bWJlcn0gKi9cclxuICAgICAgICB0aGlzLkRheXNVbnRpbE1vbnRoID0gZnVuY3Rpb24gKG1vbnRoKSB7XHJcbiAgICAgICAgICAgIGlmIChtb250aCA8IDEgfHwgbW9udGggPiAxMikgcmV0dXJuIC0xO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5Nb250aFNpemVzKSByZXR1cm4gdGhpcy5Nb250aFNpemVzW21vbnRoXTtcclxuICAgICAgICAgICAgdGhpcy5Nb250aFNpemVzID0gWzAsIDBdO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMjsgaSA8PSAxMjsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLk1vbnRoU2l6ZXMucHVzaCh0aGlzLkRheXNJbk1vbnRoKGkgLSAxKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5Nb250aFNpemVzLnJlZHVjZSgoeCwgeSwgdCwgbSkgPT4gbVt0XSA9IHggKyB5KTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuTW9udGhTaXplc1ttb250aF07XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNoYXJ0UmVmcmVzaCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5QYXJlbnQuQWxsTW9udGhzRGF0YSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZGF0YSA9IHtcclxuICAgICAgICAgICAgICAgIFZpc2l0b3JzOiAobmV3IEFycmF5KDM2NSkpLlNlbGVjdCgoKSA9PiAwKSxcclxuICAgICAgICAgICAgICAgIFJlZ2lzdGVyczogKG5ldyBBcnJheSgzNjUpKS5TZWxlY3QoKCkgPT4gMCksXHJcbiAgICAgICAgICAgICAgICBCb29rR2l2aW5nOiAobmV3IEFycmF5KDM2NSkpLlNlbGVjdCgoKSA9PiAwKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBsZXQgQ1kgPSB0aGlzLlBhcmVudC5BbGxNb250aHNEYXRhW3RoaXMuUGFyZW50LkN1cnJlbnRZZWFyXTtcclxuXHJcbiAgICAgICAgICAgIGZvciAobGV0IG1vbnRoIGluIENZKVxyXG4gICAgICAgICAgICAgICAgaWYgKENZLmhhc093blByb3BlcnR5KG1vbnRoKSAmJiBDWVttb250aF0ubGVuZ3RoID4gMClcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRGF5c0luTW9udGgobW9udGgpOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5WaXNpdG9yc1tpICsgdGhpcy5EYXlzVW50aWxNb250aChtb250aCldID0gKENZW21vbnRoXVtpXS5WaXNpdG9ycyB8fCAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5SZWdpc3RlcnNbaSArIHRoaXMuRGF5c1VudGlsTW9udGgobW9udGgpXSA9IChDWVttb250aF1baV0uUmVnaXN0ZXJzIHx8IDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhLkJvb2tHaXZpbmdbaSArIHRoaXMuRGF5c1VudGlsTW9udGgobW9udGgpXSA9IChDWVttb250aF1baV0uQm9va0dpdmluZyB8fCAwKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YSA9IGRhdGEuVmlzaXRvcnM7XHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMV0uRGF0YSA9IGRhdGEuQm9va0dpdmluZztcclxuICAgICAgICAgICAgdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1syXS5EYXRhID0gZGF0YS5SZWdpc3RlcnM7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5DaGFydC5SZWRyYXcoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0pOyIsImNvbnN0IEQgPSByZXF1aXJlKFwiLi4vX2NvbW1vbi9kaWN0aW9uYXJ5XCIpO1xyXG4vLyBjb25zdCBEcmFnQW5kRHJvcEl0ZW0gPSByZXF1aXJlKCcuLi9fY29tbW9uL2RyYWdhbmRkcm9waXRlbScpO1xyXG5jb25zdCBEcmFnQW5kRHJvcEl0ZW0gPSByZXF1aXJlKCcuLi9fY29tbW9uL2RyYWdhbmRkcm9waXRlbScpO1xyXG5cclxuXHJcbi8qKlxyXG4gKiBAY2xhc3MgRGlhcnlcclxuICovXHJcbmxldCBEaWFyeSA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0RpYXJ5JyxcclxuICAgIFRhcmdldDogJy5ib2R5JyxcclxuICAgIFR5cGU6ICdjb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGlhcnknXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRC5Sb2xlLkRhaXJ5SW5wdXQsIEQuUm9sZS5EYWlyeVN1bW1hcnldXHJcbiAgICB9LFxyXG5cclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwiZGlhcnkgY29udGVudCB7e0RheVR5cGV9fVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpYXJ5LWJyZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpIGRpYXJ5LWRhdGUgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCU0LDRgtCwINCy0L3QvtGB0LjQvNGL0YUg0LTQsNC90L3Ri9GFOiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwibC1zZWxlY3Qgc2VsZWN0IHdvcmtpbmctZGF0ZXNcIj48L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGkgZGlhcnktbGlicmFyeSBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PtCf0L7QtNGA0LDQt9C00LXQu9C10L3QuNC1OiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cImwtc2VsZWN0IHNlbGVjdCBsaWItbGlzdFwiPjwvc2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgRGF0ZUlucHV0OiAoZnVuY3Rpb24oKXtsZXQgZD0gbmV3IERhdGUoKTsgcmV0dXJuIG5ldyBEYXRlKGQuZ2V0RnVsbFllYXIoKSxkLmdldE1vbnRoKCksZC5nZXREYXRlKCkpfSkoKSxcclxuICAgICAgICBMaWJyYXJ5OiB7fSxcclxuICAgICAgICBEYXRlU2VsZWN0ZWQ6IG51bGwsXHJcbiAgICAgICAgRGF0ZVByZXY6IG51bGxcclxuXHJcbiAgICB9LFxyXG4gICAgTG9hZDonJyxcclxuICAgIENvbnRyb2xsZXI6e1xyXG4gICAgICAgIFRhcmdldDogJy5saWItbGlzdCcsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8b3B0aW9uIHZhbHVlPVwie3tJRH19XCI+e3tOYW1lfX08L29wdGlvbj5gXHJcbiAgICB9LFxyXG4gICAgUHJvcFR5cGVzOntcclxuICAgICAgICBEYXRlSW5wdXQ6IEx1cmUuUHJvcFR5cGVzLkRhdGUsXHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDp7XHJcbiAgICAgICAgRGF5VHlwZTogKCk9PntcclxuICAgICAgICAgICAgcmV0dXJuICFEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCB8fCBMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpLmlzVG9kYXkgPyAnJzonIHByZXZpb3VzJztcclxuICAgICAgICB9LFxyXG4gICAgICAgIERhdGVJbnB1dDogKGQpPT5MdXJlLkRhdGUoZCkuRm9ybWF0KCdERCBNTU1NIFlZWVnQsy4nKVxyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICogQGxlbmRzIERpYXJ5XHJcbiAgICAgKi9cclxuICAgIEdldFNldDp7XHJcbiAgICAgICAgZ2V0IEN1cnJlbnRMaWJyYXJ5SUQoKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5LklEO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0IEN1cnJlbnREYXRlKCl7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQnJlYWQgPSB0aGlzLlNlbGVjdCgnLmRpYXJ5LWJyZWFkJyk7XHJcbiAgICAgICAgdGhpcy5TZWxlY3RMaWJyYXJ5ID0gdGhpcy5TZWxlY3QoJy5saWItbGlzdCcpO1xyXG4gICAgICAgIHRoaXMuQ29udHJvbGxlcldvcmtpbmdEYXRlcyA9IG5ldyBMdXJlLkNvbnRyb2xsZXIuVGVtcGxhdG9yKHtcclxuICAgICAgICAgICAgT3duZXI6IHRoaXMsXHJcbiAgICAgICAgICAgIFRhcmdldDogJy53b3JraW5nLWRhdGVzJyxcclxuICAgICAgICAgICAgRGF0YTogTHVyZS5Vc2VyLkNhY2hlLldvcmtpbmdEYXRlcyxcclxuICAgICAgICAgICAgTGlzdEVsZW1lbnQ6IGA8b3B0aW9uIHZhbHVlPVwie3skZy5MdXJlLkRhdGUoJHRoaXMpLlZhbHVlfX1cIj57eyRnLkx1cmUuRGF0ZSgkdGhpcykuRm9ybWF0KCdERCBNTU1NIFlZWVnQsy4nKX19PC9vcHRpb24+YFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvL3RoaXMuV2lkZ2V0VmlzaXRBdXRvQ291bnRlciA9IG51bGw7XHJcbiAgICAgICAgLyoqIEBuYW1lc3BhY2UgdGhpcy5XaWRnZXRWaXNpdEF1dG9Db3VudGVyICovXHJcbiAgICAgICAgLyoqIEBuYW1lc3BhY2UgdGhpcy5WaXNpdGF0aW9uICovXHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2hlY2tGb3JCcmVhZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuU3VtbWFyeS5pc0FjdGl2ZSlcclxuICAgICAgICAgICAgICAgIHRoaXMuQnJlYWQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5CcmVhZC5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLk9uRGF0ZVNlbGVjdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0RpYXJ5IE9uRGF0ZVNlbGVjdCcpO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkID0gTHVyZS5EYXRlKHRoaXMuQ29udHJvbGxlcldvcmtpbmdEYXRlcy5Db250ZW50LnZhbHVlKS5EYXRlO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuRGF0ZVByZXYgICAgID0gTHVyZS5Vc2VyLkNhY2hlLldvcmtpbmdEYXRlc1tMdXJlLlVzZXIuQ2FjaGUuV29ya2luZ0RhdGVzLmxlbmd0aC0yXTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5PbkxpYnJhcnlDaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuTGlicmFyeSA9IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5XaGVyZSh4PT54LklEID09PSBwYXJzZUludCh0aGlzLlNlbGVjdExpYnJhcnkudmFsdWUpKS5GaXJzdE9yRGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRGlhcnkgT25MaWJyYXJ5Q2hhbmdlJywgdGhpcy5Qcm90by5EYXRhLkxpYnJhcnkuSUQpO1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgIHRoaXMuQ2hpbGRyZW5SZWZyZXNoKCk7XHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuU2hvd1N1YkNvbnRlbnQoKTtcclxuICAgICAgICBsZXQgQ3VycmVudCA9IERpYXJ5LkdldFN1YkNvbnRlbnRMaXN0KCkuV2hlcmUoeD0+eC5pc0FjdGl2ZSkuRmlyc3RPckRlZmF1bHQoKTtcclxuICAgICAgICBpZiAoQ3VycmVudClcclxuICAgICAgICAgICAgQ3VycmVudC5DaGlsZHJlbkJhY2soKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0KTtcclxuICAgICAgICB0aGlzLlByb3RvLkRhdGEuTGlicmFyeSA9IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5XaGVyZSh4PT54LklEID09PSBwYXJzZUludCh0aGlzLlNlbGVjdExpYnJhcnkudmFsdWUpKS5GaXJzdE9yRGVmYXVsdCgpO1xyXG5cclxuICAgICAgICB0aGlzLlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkID0gTHVyZS5Vc2VyLkNhY2hlLldvcmtpbmdEYXRlcy5MYXN0KCk7XHJcbiAgICAgICAgdGhpcy5Qcm90by5EYXRhLkRhdGVQcmV2ICAgICA9IEx1cmUuVXNlci5DYWNoZS5Xb3JraW5nRGF0ZXNbTHVyZS5Vc2VyLkNhY2hlLldvcmtpbmdEYXRlcy5sZW5ndGgtMl07XHJcbiAgICAgICAgdGhpcy5TZWxlY3RMaWJyYXJ5LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpPT57XHJcbiAgICAgICAgICAgIHRoaXMuT25MaWJyYXJ5Q2hhbmdlKCk7XHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQ29udHJvbGxlcldvcmtpbmdEYXRlcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgdGhpcy5Db250cm9sbGVyV29ya2luZ0RhdGVzLkNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCk9PntcclxuICAgICAgICAgICAgdGhpcy5PbkRhdGVTZWxlY3QoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAvKnRoaXMuU2VsZWN0KCcuZGlhcnktZGF0ZSAuZGF0ZS1pbnB1dCcpLm9uY2xpY2sgPSAoZSk9PntcclxuICAgICAgICAgICAgTHVyZS5TZWxlY3QoJy5sLWVkaXQtYnRuLWVkaXQnLCBlLmN1cnJlbnRUYXJnZXQpLmNsaWNrKCk7XHJcbiAgICAgICAgICAgIC8vdGhpcy5TZWxlY3QoJy5kaWFyeS1kYXRlIC5kYXRlLWlucHV0Jykub25jbGljayA9IHZvaWQgMDtcclxuICAgICAgICB9Ki9cclxuICAgICAgICAvL3RoaXMuc3MgPSBuZXcgRHJhZ0FuZERyb3BJdGVtKHtUYXJnZXQgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZHJhZ2dhYmxlJyl9KTtcclxuICAgICAgICAvLyBsZXQgYWFhID0gbmV3IERyYWdBbmREcm9wSXRlbSh7XHJcbiAgICAgICAgLy8gICAgIFRhcmdldCA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcmFnZ2FibGUnKSxcclxuICAgICAgICAvLyB9KTtcclxuICAgICAgICB0aGlzLmRkZCA9IG5ldyBEcmFnQW5kRHJvcEl0ZW0oe1xyXG4gICAgICAgICAgICBUYXJnZXQgICAgICAgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZHJhZ2dhYmxlJyksXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5sZXQgV2lkZ2V0ID0ge307XHJcbndpbmRvdy5EaWFyeSA9IERpYXJ5O1xyXG53aW5kb3cuV2lkZ2V0ID0gV2lkZ2V0O1xyXG5cclxuXHJcbnJlcXVpcmUoJy4vdmlzaXRhdGlvbi92aXNpdGF0aW9uLmpzJyk7XHJcblxyXG5yZXF1aXJlKCcuL2Jvb2t3YXJlL2Jvb2t3YXJlLmpzJyk7XHJcbnJlcXVpcmUoJy4vc3VtbWFyeS9zdW1tYXJ5LmpzJyk7XHJcbnJlcXVpcmUoJy4vbW92aW5ncy9tb3ZpbmdzLmpzJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IERpYXJ5OyIsImNvbnN0IEhpc3RvcnlTdWJzY3JpcHRpb24gPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2hpc3RvcnktbWFzdGVyL2hpc3Rvcnktc3Vic2NyaXB0aW9uJyk7XHJcbmNvbnN0IEQgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuXHJcbm5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeSxcclxuICAgIE5hbWU6ICdCb29rd2FyZScsXHJcbiAgICBUeXBlOiAnZGlhcnktY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWRpYXJ5LWJvb2t3YXJlJyxcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtELlJvbGUuRGFpcnlJbnB1dF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cImJvb2t3YXJlXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0c1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtcm93IHdpZGdldC1yb3ctMSBsLXJvd1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgV2lkZ2V0LkdpdmVCb29rLlJlZnJlc2goKTtcclxuICAgICAgICBXaWRnZXQuR2l2ZUJvb2tQcm9ncmVzcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgV2lkZ2V0LkdpdmVEb2MuUmVmcmVzaCgpO1xyXG4gICAgICAgIFdpZGdldC5HaXZlUmVmLlJlZnJlc2goKTtcclxuICAgICAgICBXaWRnZXQuR2l2ZU90aGVyLlJlZnJlc2goKTtcclxuICAgIH0sXHJcblxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2hpbHJlbkJhY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBTdWJzID0gdGhpcy5HZXRTdWJDb250ZW50TGlzdCgpO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IFN1YnMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgU3Vic1tpXS5UYXJnZXQuYXBwZW5kQ2hpbGQoU3Vic1tpXS5Db250ZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgfSxcclxuICAgIEJlZm9yZVNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBEaWFyeS5DaGVja0ZvckJyZWFkKCk7XHJcbiAgICAgICAgdGhpcy5DaGlscmVuQmFjaygpO1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL1dpZGdldC5HaXZlQm9va1Byb2dyZXNzLlJlZnJlc2goKTtcclxuICAgICAgICB0aGlzLlN1YnNjcmlwdGlvbi5TdWJzY3JpYmUoKTtcclxuICAgIH0sXHJcbiAgICBIaWRlOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uLlVuc3Vic2NyaWJlKCk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uID0gbmV3IEhpc3RvcnlTdWJzY3JpcHRpb24oe1xyXG4gICAgICAgICAgICBPblN1YnNjcmliZTogKEhpc3RMaXN0KT0+e1xyXG4gICAgICAgICAgICAgICAgaWYgKEhpc3RMaXN0LldoZXJlKGg9PmguTWVzc2FnZVR5cGUgPT09IDEpLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIFdpZGdldC5HaXZlQm9vay5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkdpdmVCb29rUHJvZ3Jlc3MuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKEhpc3RMaXN0LldoZXJlKGg9PmguTWVzc2FnZVR5cGUgPT09IDIpLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIFdpZGdldC5HaXZlRG9jLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChIaXN0TGlzdC5XaGVyZShoPT5oLk1lc3NhZ2VUeXBlID09PSAzKS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICBXaWRnZXQuR2l2ZVJlZi5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoSGlzdExpc3QuV2hlcmUoaD0+aC5NZXNzYWdlVHlwZSA9PT0gNCkubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkdpdmVPdGhlci5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIENvbmRpdGlvbjogKGgpPT5oLlR5cGVJRCA9PT0gRC5TdWJzY3JpYmVUeXBlLkJvb2t3YXJlICYmIGguTGlicmFyeUlEID09PSBEaWFyeS5DdXJyZW50TGlicmFyeUlEICYmIGguTG9naW5JRCAhPT0gTHVyZS5Vc2VyLklEXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuXHJcbnJlcXVpcmUoJy4vd2lkZ2V0cy9naXZlLWJvb2svZ2l2ZS1ib29rLmpzJyk7XHJcbnJlcXVpcmUoJy4vd2lkZ2V0cy9naXZlLWJvb2stcHJvZ3Jlc3MvZ2l2ZS1ib29rLXByb2dyZXNzLmpzJyk7XHJcbnJlcXVpcmUoJy4vd2lkZ2V0cy9naXZlLWRvYy9naXZlLWRvYy5qcycpO1xyXG5cclxucmVxdWlyZSgnLi93aWRnZXRzL2dpdmUtY29uc3VsdC9naXZlLWNvbnN1bHQuanMnKTtcclxucmVxdWlyZSgnLi93aWRnZXRzL2dpdmUtb3RoZXIvZ2l2ZS1vdGhlci5qcycpO1xyXG5cclxuXHJcbiIsIldpZGdldC5HaXZlQm9va1Byb2dyZXNzID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERpYXJ5LkJvb2t3YXJlLFxyXG4gICAgTmFtZTogJ1dpZGdldEdpdmVCb29rUHJvZ3Jlc3MnLFxyXG4gICAgVGFyZ2V0OiAnLndpZGdldC1yb3cnLFxyXG4gICAgQ29udGVudDogYDxkaXYgZHJhZ2dhYmxlPVwidHJ1ZVwiIGNsYXNzPVwid2lkZ2V0IGRyYWdnYWJsZSBkaWFyeS13aWRnZXQgZ2l2ZS1ib29rLXByb2dyZXNzLXdpZGdldFwiIHN0eWxlPVwiLS13aWRnZXQtd2lkdGg6IHt7V2lkZ2V0LldpZHRofX07IC0td2lkZ2V0LWhlaWdodDoge3tXaWRnZXQuSGVpZ2h0fX1cIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1pY29uIGljb24tdmlzaXRvci1uZXdcIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCa0J3QmNCT0J7QktCr0JTQkNCn0JAg0JfQkCB7e01vbnRofX08L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9scyBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1tb3ZlXCIgdGl0bGU9XCLQn9C10YDQtdC80LXRgdGC0LjRgtGMXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLWZhdm9yaXRlXCIgdGl0bGU9XCLQndCwINCz0LvQsNCy0L3Ri9C5INGN0LrRgNCw0L1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+ICBcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdpdmUtYm9vay1wcm9ncmVzcy1jaGFydFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnaXZlLWJvb2stcHJvZ3Jlc3MtcGxhblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWNoaWV2ZWQgbC1jb2xcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7Q291bnR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhc3VhbFwiPtCy0YvQtNCw0L3QvjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtY29sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e0NvdW50UGxhbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzdWFsXCI+0YbQtdC70Yw8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcbiAgICBTdGF0ZTp7XHJcbiAgICAgICAgQ291bnQ6IDE5NDYsXHJcbiAgICAgICAgQ291bnRQbGFuOiAxMjAwMCxcclxuXHJcbiAgICAgICAgV2lkZ2V0OntcclxuICAgICAgICAgICAgV2lkdGg6ICAyLFxyXG4gICAgICAgICAgICBIZWlnaHQ6IDIsXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBNb250aDogKCk9Pkx1cmUuRGF0ZSgpLkZvcm1hdCgnTU1NTScpLnRvVXBwZXJDYXNlKClcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2hhcnQgPSBuZXcgTHVyZS5DaGFydCh7XHJcbiAgICAgICAgICAgIFRhcmdldDogdGhpcy5TZWxlY3QoJy5naXZlLWJvb2stcHJvZ3Jlc3MtY2hhcnQnKSxcclxuICAgICAgICAgICAgVHlwZTogJ3BpZScsXHJcbiAgICAgICAgICAgIExlZ2VuZDoge1xyXG4gICAgICAgICAgICAgICAgVmlzaWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFNlcmllczogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExhYmVsczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhOiBbXCIxXCIsJzInXVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRGF0YTogW3RoaXMuU3RhdGUuQ291bnQvdGhpcy5TdGF0ZS5Db3VudFBsYW4sIDEtdGhpcy5TdGF0ZS5Db3VudC90aGlzLlN0YXRlLkNvdW50UGxhbl0sXHJcbiAgICAgICAgICAgICAgICAgICAgQ29sb3JzOiBbXCIjN0FDRERCXCIsXCIjNUM5QkFBXCJdLFxyXG4gICAgICAgICAgICAgICAgICAgIFR5cGU6ICdyaW5nJyxcclxuICAgICAgICAgICAgICAgICAgICBXaWR0aDogMzEsXHJcbiAgICAgICAgICAgICAgICAgICAgQW5nbGVTdGFydDogLTkwLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBUb29sdGlwOntcclxuICAgICAgICAgICAgICAgIFZpc2libGU6IGZhbHNlLFxyXG4gICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlVwZGF0ZSA9IGZ1bmN0aW9uIChDb3VudERlbHRhKSB7XHJcbiAgICAgICAgICAgIHRoaXMuU3RhdGUuQ291bnQgPSB0aGlzLlN0YXRlLkNvdW50ICsgQ291bnREZWx0YTtcclxuICAgICAgICAgICAgdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1swXS5EYXRhWzBdID0gdGhpcy5Qcm90by5EYXRhLkNvdW50L3RoaXMuUHJvdG8uRGF0YS5Db3VudFBsYW4gfHwgMDtcclxuICAgICAgICAgICAgdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1swXS5EYXRhWzFdID0gMS10aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbMF07XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICB0aGlzLkNoYXJ0LlJlZnJlc2goe0FuaW1hdGlvbjogZmFsc2V9KTtcclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgIGFwaS5EaWFyeV9Cb29rd2FyZV9HaXZpbmdCb29rUHJvZ3Jlc3NHZXQoRGlhcnkuQ3VycmVudExpYnJhcnlJRCwgRGlhcnkuQ3VycmVudERhdGUsIHtcclxuICAgICAgICAgICAgVGhlbjogKHgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLlN0YXRlLkNvdW50ICAgICA9IHhbMF07XHJcbiAgICAgICAgICAgICAgICB0aGlzLlN0YXRlLkNvdW50UGxhbiA9IHhbMV07XHJcbiAgICAgICAgICAgICAgICB0aGlzLlVwZGF0ZSgwKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkNoYXJ0LlJlZHJhdygpO1xyXG4gICAgfSxcclxufSk7IiwiY29uc3QgRCA9IHJlcXVpcmUoJy4uLy4uLy4uLy4uL19jb21tb24vZGljdGlvbmFyeScpO1xyXG5XaWRnZXQuR2l2ZUJvb2sgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGlhcnkuQm9va3dhcmUsXHJcbiAgICBOYW1lOiAnV2lkZ2V0R2l2ZUJvb2snLFxyXG4gICAgVGFyZ2V0OiAnLndpZGdldC1yb3cnLFxyXG4gICAgQ29udGVudDogYDxkaXYgZHJhZ2dhYmxlPVwidHJ1ZVwiIGNsYXNzPVwid2lkZ2V0IGRyYWdnYWJsZSBkaWFyeS13aWRnZXQgZ2l2ZS1ib29rLXdpZGdldFwiIHN0eWxlPVwiLS13aWRnZXQtd2lkdGg6IHt7V2lkZ2V0LldpZHRofX07IC0td2lkZ2V0LWhlaWdodDoge3tXaWRnZXQuSGVpZ2h0fX1cIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1pY29uIGljb24tdmlzaXRvci1uZXdcIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCa0J3QmNCT0Jgg0Jgg0JHQoNCe0KjQrtCg0Ks8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9scyBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1tb3ZlXCIgdGl0bGU9XCLQn9C10YDQtdC80LXRgdGC0LjRgtGMXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLWZhdm9yaXRlXCIgdGl0bGU9XCLQndCwINCz0LvQsNCy0L3Ri9C5INGN0LrRgNCw0L1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+ICBcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiBsLWNvbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvbi10b2RheSBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdW50LWNhcHRpb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3Ryb25nXCI+e3tDb3VudH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhc3VhbFwiPtC60L3QuNCzINC4INCx0YDQvtGI0Y7RgCDQstGL0LTQsNC90L4g0YHQtdCz0L7QtNC90Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdpdmUtYm9vay1wbGFjZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QnNC10YHRgtC+INCy0YvQtNCw0YfQuDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0cyBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1ib29rLXBsYWNlXCIgZGF0YS1wcm9wPVwiUGxhY2VJRFwiIGRhdGEtdmFsdWU9XCIxXCIgaWQ9XCJnaXZlLWJvb2stcGxhY2Utc3RhdGVcIiBjaGVja2VkPVwiY2hlY2tlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1ib29rLXBsYWNlLXN0YXRlXCI+0KHRgtCw0YbQuNC+0L3QsNGAIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1N0YXRpb25hcnlDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stcGxhY2VcIiBkYXRhLXByb3A9XCJQbGFjZUlEXCIgZGF0YS12YWx1ZT1cIjJcIiBpZD1cImdpdmUtYm9vay1wbGFjZS1vdXRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtYm9vay1wbGFjZS1vdXRcIj7QktC90LXRgdGC0LDRhtC40L7QvdCw0YAgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7Q291bnQgLSBTdGF0aW9uYXJ5Q291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2l2ZS1ib29rLWFnZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QktC+0LfRgNCw0YHRgjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0cyBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1ib29rLWFnZVwiIGRhdGEtcHJvcD1cIkFnZVwiIGRhdGEtdmFsdWU9XCIxXCIgaWQ9XCJnaXZlLWJvb2stYWdlLTE0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stYWdlLTE0XCI+0LTQviAxNCDQu9C10YIgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7QWdlMTRDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stYWdlXCIgZGF0YS1wcm9wPVwiQWdlXCIgZGF0YS12YWx1ZT1cIjE0XCIgaWQ9XCJnaXZlLWJvb2stYWdlLTMwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stYWdlLTMwXCI+0L7RgiAxNCDQtNC+IDMwINC70LXRgiA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tBZ2VVbmRlcjMwQ291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1ib29rLWFnZVwiIGRhdGEtcHJvcD1cIkFnZVwiIGRhdGEtdmFsdWU9XCIzMVwiIGlkPVwiZ2l2ZS1ib29rLWFnZS0zMC1wbHVzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stYWdlLTMwLXBsdXNcIj7RgdGC0LDRgNGI0LUgMzAg0LvQtdGCIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e0FnZU92ZXIzMENvdW50fX08L3NwYW4+PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2l2ZS1ib29rLWRpc2FiaWxpdHlcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JjQvdCy0LDQu9C40LTQvdC+0YHRgtGMPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXRzIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stZGlzYWJpbGl0eVwiIGRhdGEtcHJvcD1cImlzRGlzYWJsZWRcIiBkYXRhLXZhbHVlPVwidHJ1ZVwiIGlkPVwiZ2l2ZS1ib29rLWRpc2FiaWxpdHkteWVzXCIge3sjaWYgKG8uaXNEaXNhYmxlZCkgPyAnY2hlY2tlZCc6Jyd9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtYm9vay1kaXNhYmlsaXR5LXllc1wiPtC10YHRgtGMIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e0Rpc2FibGVkQ291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1ib29rLWRpc2FiaWxpdHlcIiBkYXRhLXByb3A9XCJpc0Rpc2FibGVkXCIgZGF0YS12YWx1ZT1cImZhbHNlXCIgaWQ9XCJnaXZlLWJvb2stZGlzYWJpbGl0eS1ub1wiIHt7I2lmIChvLmlzRGlzYWJsZWQpID8gJyc6J2NoZWNrZWQnfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stZGlzYWJpbGl0eS1ub1wiPtC90LXRgiA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tDb3VudCAtIERpc2FibGVkQ291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sdW1uMiBsLWNvbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2l2ZS1ib29rLWNhcnJ5LXR5cGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0KLQuNC/INC90L7RgdC40YLQtdC70Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dHMgbC1yb3cgbC1mbGV4LXdyYXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8taXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdpdmUtYm9vay1jYXJyeS10eXBlXCIgZGF0YS1wcm9wPVwiQm9va0NhcnJ5VHlwZUlEXCIgZGF0YS12YWx1ZT1cIiR7RC5MaWJyYXJ5Qm9va0NhcnJ5VHlwZS5QaHlzaWNhbH1cIiBpZD1cImdpdmUtYm9vay1jYXJyeS10eXBlLXBoeXNcIiBjaGVja2VkPVwiY2hlY2tlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1ib29rLWNhcnJ5LXR5cGUtcGh5c1wiPtGE0LjQt9C40YfQtdGB0LrQuNC5IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1R5cGVQaHlzQ291bnR9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stY2FycnktdHlwZVwiIGRhdGEtcHJvcD1cIkJvb2tDYXJyeVR5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUJvb2tDYXJyeVR5cGUuRWxlY3Ryb259XCIgaWQ9XCJnaXZlLWJvb2stY2FycnktdHlwZS1lbGVjdHJvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1ib29rLWNhcnJ5LXR5cGUtZWxlY3Ryb25cIj7RjdC70LXQutGC0YDQvtC90L3Ri9C5IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1R5cGVFbGVjdHJvbkNvdW50fX08L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1ib29rLWNhcnJ5LXR5cGVcIiBkYXRhLXByb3A9XCJCb29rQ2FycnlUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlCb29rQ2FycnlUeXBlLkluc3RhbGxlZH1cIiBpZD1cImdpdmUtYm9vay1jYXJyeS10eXBlLWluc3RhbGxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtYm9vay1jYXJyeS10eXBlLWluc3RhbGxcIj7QuNC90YHRgtCw0LvQu9C40YDQvtCy0LDQvdC90YvQuSA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tUeXBlSW5zdGFsbGVkQ291bnR9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stY2FycnktdHlwZVwiIGRhdGEtcHJvcD1cIkJvb2tDYXJyeVR5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUJvb2tDYXJyeVR5cGUuUmVtb3RlfVwiIGlkPVwiZ2l2ZS1ib29rLWNhcnJ5LXR5cGUtcmVtb3RlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stY2FycnktdHlwZS1yZW1vdGVcIj7Rg9C00LDQu9C10L3QvdGL0Lkg0LvQuNGG0LXQvdC30LjRgNC+0LLQsNC90L3Ri9C5IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1R5cGVSZW1vdGVDb3VudH19PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdpdmUtYm9vay10eXBlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCi0LXQvNCw0YLQuNC60LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dHMgbC1yb3cgbC1mbGV4LXdyYXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8taXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdpdmUtYm9vay10eXBlXCIgZGF0YS1wcm9wPVwiQm9va1R5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUJvb2tUeXBlLk9QTH1cIiBpZD1cImdpdmUtYm9vay10eXBlLW9wbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1ib29rLXR5cGUtb3BsXCI+0J7Qn9CbIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1RoZW1lT1BMQ291bnR9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stdHlwZVwiIGRhdGEtcHJvcD1cIkJvb2tUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlCb29rVHlwZS5OYXR1cmV9XCIgaWQ9XCJnaXZlLWJvb2stdHlwZS1uYXRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtYm9vay10eXBlLW5hdFwiPtC10YHRgtC10YHRgtCy0L7Qt9C90LDQvdC40LUgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7VGhlbWVOYXR1cmVDb3VudH19PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8taXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdpdmUtYm9vay10eXBlXCIgZGF0YS1wcm9wPVwiQm9va1R5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUJvb2tUeXBlLlRlY2h9XCIgaWQ9XCJnaXZlLWJvb2stdHlwZS10ZWNoXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stdHlwZS10ZWNoXCI+0YLQtdGF0L3QuNC60LAgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7VGhlbWVUZWNoQ291bnR9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stdHlwZVwiIGRhdGEtcHJvcD1cIkJvb2tUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlCb29rVHlwZS5BZ3JpY3VsdHVyZX1cIiBpZD1cImdpdmUtYm9vay10eXBlLWFncmljdWx0dXJlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stdHlwZS1hZ3JpY3VsdHVyZVwiPtGB0LXQu9GM0YHQutC+0LUg0YXQvtC30Y/QudGB0YLQstC+IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1RoZW1lQWdyaWN1bHR1cmVDb3VudH19PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8taXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdpdmUtYm9vay10eXBlXCIgZGF0YS1wcm9wPVwiQm9va1R5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUJvb2tUeXBlLkFydH1cIiBpZD1cImdpdmUtYm9vay10eXBlLWFydFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1ib29rLXR5cGUtYXJ0XCI+0LjRgdC60YPRgdGB0YLQstC+IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1RoZW1lQXJ0Q291bnR9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stdHlwZVwiIGRhdGEtcHJvcD1cIkJvb2tUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlCb29rVHlwZS5TcG9ydH1cIiBpZD1cImdpdmUtYm9vay10eXBlLXNwb3J0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stdHlwZS1zcG9ydFwiPtGB0L/QvtGA0YIgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7VGhlbWVTcG9ydENvdW50fX08L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1ib29rLXR5cGVcIiBkYXRhLXByb3A9XCJCb29rVHlwZUlEXCIgZGF0YS12YWx1ZT1cIiR7RC5MaWJyYXJ5Qm9va1R5cGUuV1RGXzgxODN9XCIgaWQ9XCJnaXZlLWJvb2stdHlwZS04MTgzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stdHlwZS04MTgzXCI+ODEsIDgzIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1RoZW1lODE4M0NvdW50fX08L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1ib29rLXR5cGVcIiBkYXRhLXByb3A9XCJCb29rVHlwZUlEXCIgZGF0YS12YWx1ZT1cIiR7RC5MaWJyYXJ5Qm9va1R5cGUuQ2F0YWxvZ31cIiBpZD1cImdpdmUtYm9vay10eXBlLWNhdGFsb2dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtYm9vay10eXBlLWNhdGFsb2dcIj7RgdC/0YDQsNCy0L7Rh9C90LjQutC4IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1RoZW1lQ2F0YWxvZ0NvdW50fX08L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1ib29rLXR5cGVcIiBkYXRhLXByb3A9XCJCb29rVHlwZUlEXCIgZGF0YS12YWx1ZT1cIiR7RC5MaWJyYXJ5Qm9va1R5cGUuQ2hpbGRyZW59XCIgaWQ9XCJnaXZlLWJvb2stdHlwZS1jaGlsZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1ib29rLXR5cGUtY2hpbGRcIj7QtNC10YLRgdC60LDRjyDQu9C40YLQtdGA0LDRgtGD0YDQsCA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tUaGVtZUNoaWxkcmVuQ291bnR9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWJvb2stdHlwZVwiIGRhdGEtcHJvcD1cIkJvb2tUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlCb29rVHlwZS5GaWN0aW9ufVwiIGlkPVwiZ2l2ZS1ib29rLXR5cGUtZmljdGlvblwiIGNoZWNrZWQ9XCJjaGVja2VkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWJvb2stdHlwZS1maWN0aW9uXCI+0YXRg9C00L7QttC10YHRgtCy0LXQvdC90LDRjyDQu9C40YLQtdGA0LDRgtGD0YDQsCA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tUaGVtZUZpY3Rpb25Db3VudH19PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8taXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdpdmUtYm9vay10eXBlXCIgZGF0YS1wcm9wPVwiQm9va1R5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUJvb2tUeXBlLk90aGVyfVwiIGlkPVwiZ2l2ZS1ib29rLXR5cGUtb3RoZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtYm9vay10eXBlLW90aGVyXCI+0LTQvtC/0L7Qu9C90LjRgtC10LvRjNC90L4gPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7VGhlbWVPdGhlckNvdW50fX08L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnRuLWNvbW1pdFwiPtCS0KvQlNCQ0KLQrDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFN0YXRlOntcclxuICAgICAgICBDb3VudDogNDIsXHJcbiAgICAgICAgUGxhY2VJRDogMSxcclxuICAgICAgICBBZ2U6IC0xLFxyXG4gICAgICAgIGlzRGlzYWJsZWQ6IGZhbHNlLFxyXG4gICAgICAgIEJvb2tDYXJyeVR5cGVJRDogRC5MaWJyYXJ5Qm9va0NhcnJ5VHlwZS5QaHlzaWNhbCxcclxuICAgICAgICBCb29rVHlwZUlEOiBELkxpYnJhcnlCb29rVHlwZS5GaWN0aW9uLFxyXG5cclxuICAgICAgICBTdGF0aW9uYXJ5Q291bnQ6MCxcclxuICAgICAgICBBZ2UxNENvdW50OiAwLFxyXG4gICAgICAgIEFnZVVuZGVyMzBDb3VudDogMCxcclxuICAgICAgICBBZ2VPdmVyMzBDb3VudDogMCxcclxuICAgICAgICBEaXNhYmxlZENvdW50OiAwLFxyXG4gICAgICAgIFR5cGVQaHlzQ291bnQ6IDAsXHJcbiAgICAgICAgVHlwZUVsZWN0cm9uQ291bnQ6IDAsXHJcbiAgICAgICAgVHlwZUluc3RhbGxlZENvdW50OiAwLFxyXG4gICAgICAgIFR5cGVSZW1vdGVDb3VudDogMCxcclxuXHJcbiAgICAgICAgVGhlbWVPUExDb3VudDogMCxcclxuICAgICAgICBUaGVtZU5hdHVyZUNvdW50OiAwLFxyXG4gICAgICAgIFRoZW1lVGVjaENvdW50OiAwLFxyXG4gICAgICAgIFRoZW1lQWdyaWN1bHR1cmVDb3VudDogMCxcclxuICAgICAgICBUaGVtZUFydENvdW50OiAwLFxyXG4gICAgICAgIFRoZW1lU3BvcnRDb3VudDogMCxcclxuICAgICAgICBUaGVtZTgxODNDb3VudDogMCxcclxuICAgICAgICBUaGVtZUNhdGFsb2dDb3VudDogMCxcclxuICAgICAgICBUaGVtZUNoaWxkcmVuQ291bnQ6IDAsXHJcbiAgICAgICAgVGhlbWVGaWN0aW9uQ291bnQ6IDAsXHJcbiAgICAgICAgVGhlbWVPdGhlckNvdW50OiAwLFxyXG5cclxuXHJcblxyXG4gICAgICAgIFdpZGdldDp7XHJcbiAgICAgICAgICAgIFdpZHRoOiAgNCxcclxuICAgICAgICAgICAgSGVpZ2h0OiAyLFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBQcm9wVHlwZXM6e1xyXG4gICAgICAgIFBsYWNlSUQ6IEx1cmUuUHJvcFR5cGVzLlVJbnQsXHJcbiAgICAgICAgQ291bnQ6IEx1cmUuUHJvcFR5cGVzLlVJbnQsXHJcbiAgICAgICAgaXNEaXNhYmxlZDogTHVyZS5Qcm9wVHlwZXMuQm9vbFxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6e1xyXG4gICAgICAgIGFnZTE6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLlJlZy5BZ2UsIDEsIDMpLFxyXG4gICAgICAgIGFnZTI6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLlJlZy5BZ2UsIDIsIDMpLFxyXG4gICAgICAgIGFnZTM6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLlJlZy5BZ2UsIDMsIDMpLFxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgIGFwaS5EaWFyeV9Cb29rd2FyZV9HaXZpbmdCb29rR2V0KERpYXJ5LkN1cnJlbnRMaWJyYXJ5SUQsIERpYXJ5LkN1cnJlbnREYXRlLCB7XHJcbiAgICAgICAgICAgIFRoZW46IChEYXRhKT0+e1xyXG4gICAgICAgICAgICAgICAgbGV0IFN0ID0gdGhpcy5TdGF0ZTtcclxuICAgICAgICAgICAgICAgIFN0LkNvdW50ID0gRGF0YS5Db3VudDtcclxuICAgICAgICAgICAgICAgIFN0LlN0YXRpb25hcnlDb3VudCA9IERhdGEuU3RhdGlvbmFyeUNvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuQWdlMTRDb3VudCA9IERhdGEuQWdlMTRDb3VudDtcclxuICAgICAgICAgICAgICAgIFN0LkFnZVVuZGVyMzBDb3VudCA9IERhdGEuQWdlVW5kZXIzMENvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuQWdlT3ZlcjMwQ291bnQgPSBEYXRhLkFnZU92ZXIzMENvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuRGlzYWJsZWRDb3VudCA9IERhdGEuRGlzYWJsZWRDb3VudDtcclxuICAgICAgICAgICAgICAgIFN0LlR5cGVQaHlzQ291bnQgPSBEYXRhLlR5cGVQaHlzQ291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5UeXBlRWxlY3Ryb25Db3VudCA9IERhdGEuVHlwZUVsZWN0cm9uQ291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5UeXBlSW5zdGFsbGVkQ291bnQgPSBEYXRhLlR5cGVJbnN0YWxsZWRDb3VudDtcclxuICAgICAgICAgICAgICAgIFN0LlR5cGVSZW1vdGVDb3VudCA9IERhdGEuVHlwZVJlbW90ZUNvdW50O1xyXG5cclxuICAgICAgICAgICAgICAgIFN0LlRoZW1lT1BMQ291bnQgPSBEYXRhLlRoZW1lT1BMQ291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5UaGVtZU5hdHVyZUNvdW50ID0gRGF0YS5UaGVtZU5hdHVyZUNvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuVGhlbWVUZWNoQ291bnQgPSBEYXRhLlRoZW1lVGVjaENvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuVGhlbWVBZ3JpY3VsdHVyZUNvdW50ID0gRGF0YS5UaGVtZUFncmljdWx0dXJlQ291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5UaGVtZUFydENvdW50ID0gRGF0YS5UaGVtZUFydENvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuVGhlbWVTcG9ydENvdW50ID0gRGF0YS5UaGVtZVNwb3J0Q291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5UaGVtZTgxODNDb3VudCA9IERhdGEuVGhlbWU4MTgzQ291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5UaGVtZUNhdGFsb2dDb3VudCA9IERhdGEuVGhlbWVDYXRhbG9nQ291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5UaGVtZUNoaWxkcmVuQ291bnQgPSBEYXRhLlRoZW1lQ2hpbGRyZW5Db3VudDtcclxuICAgICAgICAgICAgICAgIFN0LlRoZW1lRmljdGlvbkNvdW50ID0gRGF0YS5UaGVtZUZpY3Rpb25Db3VudDtcclxuICAgICAgICAgICAgICAgIFN0LlRoZW1lT3RoZXJDb3VudCA9IERhdGEuVGhlbWVPdGhlckNvdW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmFkaW9QbGFjZVN0YXRpb24gPSB0aGlzLlNlbGVjdCgnI2dpdmUtYm9vay1wbGFjZS1zdGF0ZScpO1xyXG4gICAgICAgIHRoaXMuUmFkaW9EaXNhYmlsaXR5TiA9IHRoaXMuU2VsZWN0KCcjZ2l2ZS1ib29rLWRpc2FiaWxpdHktbm8nKTtcclxuICAgICAgICB0aGlzLlJhZGlvQm9va0NhcnJ5VHlwZVBoeXNpY2FsID0gdGhpcy5TZWxlY3QoJyNnaXZlLWJvb2stY2FycnktdHlwZS1waHlzJyk7XHJcbiAgICAgICAgdGhpcy5SYWRpb0Jvb2tUeXBlID0gdGhpcy5TZWxlY3QoJyNnaXZlLWJvb2stdHlwZS1maWN0aW9uJyk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db21taXQgPSB0aGlzLlNlbGVjdCgnLmJ0bi1jb21taXQnKTtcclxuXHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2xlYXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuUmFkaW9QbGFjZVN0YXRpb24uY2hlY2tlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5QbGFjZUlEID0gMTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuUmFkaW9EaXNhYmlsaXR5Ti5jaGVja2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLmlzRGlzYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuUmFkaW9Cb29rQ2FycnlUeXBlUGh5c2ljYWwuY2hlY2tlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Cb29rQ2FycnlUeXBlSUQgPSBELkxpYnJhcnlCb29rQ2FycnlUeXBlLlBoeXNpY2FsO1xyXG5cclxuXHJcblxyXG4gICAgICAgICAgICBsZXQgUmFkaW9BZ2UgPSB0aGlzLlNlbGVjdCgnW25hbWU9XCJnaXZlLWJvb2stYWdlXCJdOmNoZWNrZWQnKTtcclxuICAgICAgICAgICAgaWYgKFJhZGlvQWdlKVxyXG4gICAgICAgICAgICAgICAgUmFkaW9BZ2UuY2hlY2tlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLlJhZGlvQm9va1R5cGUuY2hlY2tlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5BZ2UgPSAtMTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkJvb2tUeXBlSUQgPSBELkxpYnJhcnlCb29rVHlwZS5GaWN0aW9uO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Db25maXJtID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgaXNWYWxpZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuQWdlIDwgMCl7XHJcbiAgICAgICAgICAgICAgICBpc1ZhbGlkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRi9Cx0LXRgNC40YLQtSDQstC+0LfRgNCw0YHRgiDQv9C+0LvRg9GH0LDRgtC10LvRjycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuQm9va1R5cGVJRCA8IDApe1xyXG4gICAgICAgICAgICAgICAgaXNWYWxpZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9CS0YvQsdC10YDQuNGC0LUg0YLQtdC80LDRgtC40LrRgycpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoIWlzVmFsaWQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKHRoaXMuQnV0dG9uQ29tbWl0KTtcclxuXHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9Cb29rd2FyZV9HaXZpbmdCb29rQWRkKFxyXG4gICAgICAgICAgICAgICAgRGlhcnkuQ3VycmVudExpYnJhcnlJRCxcclxuICAgICAgICAgICAgICAgIERpYXJ5LkN1cnJlbnREYXRlLFxyXG4gICAgICAgICAgICAgICAgdGhpcy5TdGF0ZS5QbGFjZUlELFxyXG4gICAgICAgICAgICAgICAgdGhpcy5TdGF0ZS5BZ2UsXHJcbiAgICAgICAgICAgICAgICB0aGlzLlN0YXRlLkJvb2tDYXJyeVR5cGVJRCxcclxuICAgICAgICAgICAgICAgIHRoaXMuU3RhdGUuQm9va1R5cGVJRCxcclxuICAgICAgICAgICAgICAgIHRoaXMuU3RhdGUuaXNEaXNhYmxlZCwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHg+MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dTdWNjZXNzKCfQmtC90LjQs9CwINC40LvQuCDQsdGA0L7RiNGO0YDQsCDQstGL0LTQsNC90LAnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnQ291bnQnLCB0aGlzLlN0YXRlLkNvdW50KzEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBXaWRnZXQuR2l2ZUJvb2tQcm9ncmVzcy5VcGRhdGUoMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2xlYXIoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZSh0aGlzLkJ1dHRvbkNvbW1pdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5sLXJhZGlvJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eShlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsncHJvcCddLCBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndmFsdWUnXSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db21taXQub25jbGljayA9ICgpPT57dGhpcy5Db25maXJtKCk7fTtcclxuICAgIH1cclxufSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsImNvbnN0IEQgPSByZXF1aXJlKCcuLi8uLi8uLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuXHJcbldpZGdldC5HaXZlUmVmID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERpYXJ5LkJvb2t3YXJlLFxyXG4gICAgTmFtZTogJ1dpZGdldEdpdmVDb25zdWx0JyxcclxuICAgIFRhcmdldDogJy53aWRnZXQtcm93JyxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGRyYWdnYWJsZT1cInRydWVcIiBjbGFzcz1cIndpZGdldCBkcmFnZ2FibGUgZGlhcnktd2lkZ2V0IGdpdmUtY29uc3VsdC13aWRnZXRcIiBzdHlsZT1cIi0td2lkZ2V0LXdpZHRoOiB7e1dpZGdldC5XaWR0aH19OyAtLXdpZGdldC1oZWlnaHQ6IHt7V2lkZ2V0LkhlaWdodH19XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaWNvbiBpY29uLXZpc2l0b3ItbmV3XCI+PC9kaXY+ICBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7QodCf0KDQkNCS0JrQmCDQmCDQmtCe0J3QodCj0JvQrNCi0JDQptCY0Jg8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9scyBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1tb3ZlXCIgdGl0bGU9XCLQn9C10YDQtdC80LXRgdGC0LjRgtGMXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLWZhdm9yaXRlXCIgdGl0bGU9XCLQndCwINCz0LvQsNCy0L3Ri9C5INGN0LrRgNCw0L1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+ICBcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb24tdG9kYXkgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdW50LWNhcHRpb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdHJvbmdcIj57e0NvdW50fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXN1YWxcIj7RgdC/0YDQsNCy0L7QuiDQuCDQutC+0L3RgdGD0LvRjNGC0LDRhtC40Lkg0LLRi9C00LDQvdC+INGB0LXQs9C+0LTQvdGPPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnaXZlLWNvbnN1bHQtYWdlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JLQvtC30YDQsNGB0YI8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0cyBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdpdmUtY29uc3VsdC1hZ2VcIiBkYXRhLXByb3A9XCJBZ2VcIiBkYXRhLXZhbHVlPVwiMVwiIGlkPVwiZ2l2ZS1jb25zdWx0LWFnZS0xNFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWNvbnN1bHQtYWdlLTE0XCI+0LTQviAxNCDQu9C10YIgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7QWdlMTRDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWNvbnN1bHQtYWdlXCIgZGF0YS1wcm9wPVwiQWdlXCIgZGF0YS12YWx1ZT1cIjE0XCIgaWQ9XCJnaXZlLWNvbnN1bHQtYWdlLTMwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtY29uc3VsdC1hZ2UtMzBcIj7QvtGCIDE0INC00L4gMzAg0LvQtdGCIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e0FnZVVuZGVyMzBDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWNvbnN1bHQtYWdlXCIgZGF0YS1wcm9wPVwiQWdlXCIgZGF0YS12YWx1ZT1cIjMxXCIgaWQ9XCJnaXZlLWNvbnN1bHQtYWdlLTMwLXBsdXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1jb25zdWx0LWFnZS0zMC1wbHVzXCI+0YHRgtCw0YDRiNC1IDMwINC70LXRgiA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tBZ2VPdmVyMzBDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdpdmUtY29uc3VsdC10eXBlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0KLQuNC/INC90L7RgdC40YLQtdC70Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0cyBsLXJvdyBsLWZsZXgtd3JhcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdpdmUtY29uc3VsdC10eXBlXCIgZGF0YS1wcm9wPVwiQ29uc3VsdFR5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUNvbnN1bHRUeXBlLlRoZW1lfVwiIGlkPVwiZ2l2ZS1jb25zdWx0LXR5cGUtdGhlbWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1jb25zdWx0LXR5cGUtdGhlbWVcIj7RgtC10LzQsNGC0LjRh9C10YHQutC40LkgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7VHlwZVRoZW1lQ291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8taXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1jb25zdWx0LXR5cGVcIiBkYXRhLXByb3A9XCJDb25zdWx0VHlwZUlEXCIgZGF0YS12YWx1ZT1cIiR7RC5MaWJyYXJ5Q29uc3VsdFR5cGUuRmFjdG9yfVwiIGlkPVwiZ2l2ZS1jb25zdWx0LXR5cGUtZmFjdG9yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtY29uc3VsdC10eXBlLWZhY3RvclwiPtGE0LDQutGC0L7Qs9GA0LDRhNC40YfQtdGB0LrQuNC5IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1R5cGVGYWN0b3JDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWNvbnN1bHQtdHlwZVwiIGRhdGEtcHJvcD1cIkNvbnN1bHRUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlDb25zdWx0VHlwZS5MaWJyYXJ5fVwiIGlkPVwiZ2l2ZS1jb25zdWx0LXR5cGUtbGliXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtY29uc3VsdC10eXBlLWxpYlwiPtCx0LjQsdC70LjQvtCz0YDQsNGE0LjRh9C10YHQutC40LkgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7VHlwZUxpYnJhcnlDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWNvbnN1bHQtdHlwZVwiIGRhdGEtcHJvcD1cIkNvbnN1bHRUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlDb25zdWx0VHlwZS5Db25zdWx0fVwiIGlkPVwiZ2l2ZS1jb25zdWx0LXR5cGUtY29uc3VsdFwiIGNoZWNrZWQ9XCJjaGVja2VkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtY29uc3VsdC10eXBlLWNvbnN1bHRcIj7QutC+0L3RgdGD0LvRjNGC0LDRhtC40Y8gPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7VHlwZUNvbnN1bHRDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWNvbnN1bHQtdHlwZVwiIGRhdGEtcHJvcD1cIkNvbnN1bHRUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlDb25zdWx0VHlwZS5Db3B5fVwiIGlkPVwiZ2l2ZS1jb25zdWx0LXR5cGUtY29weVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWNvbnN1bHQtdHlwZS1jb3B5XCI+0YPQtNCw0LvQtdC90L3Ri9C1INGB0L/RgNCw0LLQutC4IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1R5cGVDb3B5Q291bnR9fTwvc3Bhbj48L2xhYmVsPjwhLS3QutC+0L/QuNGPLS0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGJ1dHRvbiBidG4tY29tbWl0XCI+0JLQq9CU0JDQotCsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcbiAgICBTdGF0ZToge1xyXG4gICAgICAgIENvdW50OiAwLFxyXG4gICAgICAgIEFnZTogLTEsXHJcbiAgICAgICAgQ29uc3VsdFR5cGVJRDogRC5MaWJyYXJ5Q29uc3VsdFR5cGUuQ29uc3VsdCxcclxuXHJcbiAgICAgICAgQWdlMTRDb3VudDogMCxcclxuICAgICAgICBBZ2VVbmRlcjMwQ291bnQ6IDAsXHJcbiAgICAgICAgQWdlT3ZlcjMwQ291bnQ6IDAsXHJcblxyXG4gICAgICAgIFR5cGVUaGVtZUNvdW50OiAwLFxyXG4gICAgICAgIFR5cGVGYWN0b3JDb3VudDogMCxcclxuICAgICAgICBUeXBlTGlicmFyeUNvdW50OiAwLFxyXG4gICAgICAgIFR5cGVDb25zdWx0Q291bnQ6IDAsXHJcbiAgICAgICAgVHlwZUNvcHlDb3VudDogMCxcclxuXHJcbiAgICAgICAgV2lkZ2V0OntcclxuICAgICAgICAgICAgV2lkdGg6ICAyLFxyXG4gICAgICAgICAgICBIZWlnaHQ6IDIsXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgIGFwaS5EaWFyeV9Cb29rd2FyZV9HaXZpbmdDb25zdWx0R2V0KERpYXJ5LkN1cnJlbnRMaWJyYXJ5SUQsIERpYXJ5LkN1cnJlbnREYXRlLCB7XHJcbiAgICAgICAgICAgIFRoZW46IChEYXRhKT0+e1xyXG4gICAgICAgICAgICAgICAgbGV0IFN0ID0gdGhpcy5TdGF0ZTtcclxuICAgICAgICAgICAgICAgIFN0LkNvdW50ICAgICAgICAgICAgPSBEYXRhLkNvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuQWdlMTRDb3VudCAgICAgICA9IERhdGEuQWdlMTRDb3VudDtcclxuICAgICAgICAgICAgICAgIFN0LkFnZVVuZGVyMzBDb3VudCAgPSBEYXRhLkFnZVVuZGVyMzBDb3VudDtcclxuICAgICAgICAgICAgICAgIFN0LkFnZU92ZXIzMENvdW50ICAgPSBEYXRhLkFnZU92ZXIzMENvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuRGlzYWJsZWRDb3VudCAgICA9IERhdGEuRGlzYWJsZWRDb3VudDtcclxuICAgICAgICAgICAgICAgIFN0LlR5cGVUaGVtZUNvdW50ICAgPSBEYXRhLlR5cGVUaGVtZUNvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuVHlwZUZhY3RvckNvdW50ICA9IERhdGEuVHlwZUZhY3RvckNvdW50O1xyXG4gICAgICAgICAgICAgICAgU3QuVHlwZUxpYnJhcnlDb3VudCA9IERhdGEuVHlwZUxpYnJhcnlDb3VudDtcclxuICAgICAgICAgICAgICAgIFN0LlR5cGVDb25zdWx0Q291bnQgPSBEYXRhLlR5cGVDb25zdWx0Q291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5UeXBlQ29weUNvdW50ICAgID0gRGF0YS5UeXBlQ29weUNvdW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmFkaW9Db3B5ID0gdGhpcy5TZWxlY3QoJyNnaXZlLWNvbnN1bHQtdHlwZS1jb3B5Jyk7XHJcbiAgICAgICAgdGhpcy5SYWRpb0NvbnN1bHRUeXBlID0gdGhpcy5TZWxlY3QoJyNnaXZlLWNvbnN1bHQtdHlwZS1jb25zdWx0Jyk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db21taXQgPSB0aGlzLlNlbGVjdCgnLmJ0bi1jb21taXQnKTtcclxuXHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2xlYXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBSYWRpb0FnZSA9IHRoaXMuU2VsZWN0KCdbbmFtZT1cImdpdmUtY29uc3VsdC1hZ2VcIl06Y2hlY2tlZCcpO1xyXG4gICAgICAgICAgICBpZiAoUmFkaW9BZ2UpXHJcbiAgICAgICAgICAgICAgICBSYWRpb0FnZS5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuUmFkaW9Db25zdWx0VHlwZS5jaGVja2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkFnZSA9IC0xO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ29uc3VsdFR5cGVJRCA9IEQuTGlicmFyeUNvbnN1bHRUeXBlLkNvbnN1bHQ7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNvbmZpcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBpc1ZhbGlkID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuUHJvdG8uRGF0YS5BZ2UgPCAwKXtcclxuICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGL0LHQtdGA0LjRgtC1INCy0L7Qt9GA0LDRgdGCINC/0L7Qu9GD0YfQsNGC0LXQu9GPJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuUHJvdG8uRGF0YS5Db25zdWx0VHlwZUlEIDwgMCl7XHJcbiAgICAgICAgICAgICAgICBpc1ZhbGlkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRi9Cx0LXRgNC40YLQtSDRgtC40L8g0L3QvtGB0LjRgtC10LvRjycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghaXNWYWxpZClcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayh0aGlzLkJ1dHRvbkNvbW1pdCk7XHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9Cb29rd2FyZV9HaXZpbmdDb25zdWx0QWRkKERpYXJ5LkN1cnJlbnRMaWJyYXJ5SUQsIERpYXJ5LkN1cnJlbnREYXRlLCB0aGlzLlN0YXRlLkFnZSwgdGhpcy5TdGF0ZS5Db25zdWx0VHlwZUlELCAge1xyXG4gICAgICAgICAgICAgICAgICAgIFRoZW46ICh4KT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoeD4wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dTdWNjZXNzKHRoaXMuUmFkaW9Db3B5LmNoZWNrZWQgPyAn0JrQvtC/0LjRjyDRgdC/0YDQsNCy0LrQuCDQstGL0LTQsNC90LAnOifQodC/0YDQsNCy0LrQsCDQuNC70Lgg0LrQvtC90YHRg9C70YzRgtCw0YbQuNGPINCy0YvQtNCw0L3QsCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnQ291bnQnLCB0aGlzLlN0YXRlLkNvdW50KzEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DbGVhcigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UodGhpcy5CdXR0b25Db21taXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5sLXJhZGlvJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eShlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsncHJvcCddLCBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndmFsdWUnXSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db21taXQub25jbGljayA9ICgpPT57dGhpcy5Db25maXJtKCk7fTtcclxuICAgIH1cclxufSk7IiwiY29uc3QgRCA9IHJlcXVpcmUoJy4uLy4uLy4uLy4uL19jb21tb24vZGljdGlvbmFyeScpO1xyXG5XaWRnZXQuR2l2ZURvYyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeS5Cb29rd2FyZSxcclxuICAgIE5hbWU6ICdXaWRnZXRHaXZlRG9jJyxcclxuICAgIFRhcmdldDogJy53aWRnZXQtcm93JyxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGRyYWdnYWJsZT1cInRydWVcIiBjbGFzcz1cIndpZGdldCBkcmFnZ2FibGUgZGlhcnktd2lkZ2V0IGdpdmUtZG9jLXdpZGdldFwiIHN0eWxlPVwiLS13aWRnZXQtd2lkdGg6IHt7V2lkZ2V0LldpZHRofX07IC0td2lkZ2V0LWhlaWdodDoge3tXaWRnZXQuSGVpZ2h0fX1cIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1pY29uIGljb24tdmlzaXRvci1uZXdcIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCa0J7Qn9CY0Jg8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9scyBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1tb3ZlXCIgdGl0bGU9XCLQn9C10YDQtdC80LXRgdGC0LjRgtGMXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLWZhdm9yaXRlXCIgdGl0bGU9XCLQndCwINCz0LvQsNCy0L3Ri9C5INGN0LrRgNCw0L1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+ICBcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb24tdG9kYXkgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdW50LWNhcHRpb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdHJvbmdcIj57e0NvdW50fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXN1YWxcIj7QutC+0L/QuNC5INCy0YvQtNCw0L3QviDRgdC10LPQvtC00L3RjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2l2ZS1kb2MtYWdlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JLQvtC30YDQsNGB0YI8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0c1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrYm94LWhvbGRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1kb2MtYWdlXCIgZGF0YS1wcm9wPVwiQWdlXCIgZGF0YS12YWx1ZT1cIjFcIiBpZD1cImdpdmUtZG9jLWFnZS0xNFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWRvYy1hZ2UtMTRcIj7QtNC+IDE0INC70LXRgiA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tBZ2UxNENvdW50fX08L3NwYW4+PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrYm94LWhvbGRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1kb2MtYWdlXCIgZGF0YS1wcm9wPVwiQWdlXCIgZGF0YS12YWx1ZT1cIjE0XCIgaWQ9XCJnaXZlLWRvYy1hZ2UtMzBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1kb2MtYWdlLTMwXCI+0L7RgiAxNCDQtNC+IDMwINC70LXRgiA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tBZ2VVbmRlcjMwQ291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hlY2tib3gtaG9sZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWRvYy1hZ2VcIiBkYXRhLXByb3A9XCJBZ2VcIiBkYXRhLXZhbHVlPVwiMzFcIiBpZD1cImdpdmUtZG9jLWFnZS0zMC1wbHVzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtZG9jLWFnZS0zMC1wbHVzXCI+0YHRgtCw0YDRiNC1IDMwINC70LXRgiA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tBZ2VPdmVyMzBDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnaXZlLWRvYy10eXBlIG5vbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QotC40L8g0L3QvtGB0LjRgtC10LvRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXRzIGwtcm93IGwtZmxleC13cmFwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8taXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1kb2MtdHlwZVwiIGRhdGEtcHJvcD1cIkJvb2tDYXJyeVR5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUJvb2tDYXJyeVR5cGUuUGh5c2ljYWx9XCIgaWQ9XCJnaXZlLWRvYy10eXBlLXBoeXNcIiBjaGVja2VkPVwiY2hlY2tlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWRvYy10eXBlLXBoeXNcIj7RhNC40LfQuNGH0LXRgdC60LjQuSA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tUeXBlUGh5c0NvdW50fX08L3NwYW4+PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdpdmUtZG9jLXR5cGVcIiBkYXRhLXByb3A9XCJCb29rQ2FycnlUeXBlSURcIiBkYXRhLXZhbHVlPVwiJHtELkxpYnJhcnlCb29rQ2FycnlUeXBlLkVsZWN0cm9ufVwiIGlkPVwiZ2l2ZS1kb2MtdHlwZS1lbGVjdHJvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWRvYy10eXBlLWVsZWN0cm9uXCI+0Y3Qu9C10LrRgtGA0L7QvdC90YvQuSA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tUeXBlRWxlY3Ryb25Db3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWRvYy10eXBlXCIgZGF0YS1wcm9wPVwiQm9va0NhcnJ5VHlwZUlEXCIgZGF0YS12YWx1ZT1cIiR7RC5MaWJyYXJ5Qm9va0NhcnJ5VHlwZS5JbnN0YWxsZWR9XCIgaWQ9XCJnaXZlLWRvYy10eXBlLWluc3RhbGxlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnaXZlLWRvYy10eXBlLWluc3RhbGxlZFwiPtC40L3RgdGC0LDQu9C40YDQvtCy0LDQvdC90YvQuSA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tUeXBlSW5zdGFsbGVkQ291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8taXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2l2ZS1kb2MtdHlwZVwiIGRhdGEtcHJvcD1cIkJvb2tDYXJyeVR5cGVJRFwiIGRhdGEtdmFsdWU9XCIke0QuTGlicmFyeUJvb2tDYXJyeVR5cGUuUmVtb3RlfVwiIGlkPVwiZ2l2ZS1kb2MtdHlwZS1yZW1vdGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwiZ2l2ZS1kb2MtdHlwZS1yZW1vdGVcIj7Rg9C00LDQu9C10L3QvdGL0Lkg0LvQuNGG0LXQvdC30LjQvtC90L3Ri9C5IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1R5cGVSZW1vdGVDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJnaXZlLWRvYy10eXBlXCIgZGF0YS1wcm9wPVwiQm9va0NhcnJ5VHlwZUlEXCIgZGF0YS12YWx1ZT1cIiR7RC5MaWJyYXJ5Qm9va0NhcnJ5VHlwZS5Db3B5fVwiIGlkPVwiZ2l2ZS1kb2MtdHlwZS1jb3B5XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cImdpdmUtZG9jLXR5cGUtY29weVwiPtC60L7Qv9C40Y8gPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7VHlwZUNvcHlDb3VudH19PC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGJ1dHRvbiBidG4tY29tbWl0XCI+0JLQq9CU0JDQotCsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcbiAgICBTdGF0ZTp7XHJcbiAgICAgICAgQ291bnQ6IDAsXHJcbiAgICAgICAgQWdlOiAtMSxcclxuICAgICAgICAvL0Jvb2tDYXJyeVR5cGVJRDogRC5MaWJyYXJ5Qm9va0NhcnJ5VHlwZS5QaHlzaWNhbCxcclxuXHJcbiAgICAgICAgQWdlMTRDb3VudDogMCxcclxuICAgICAgICBBZ2VVbmRlcjMwQ291bnQ6IDAsXHJcbiAgICAgICAgQWdlT3ZlcjMwQ291bnQ6IDAsXHJcblxyXG4gICAgICAgIC8vIFR5cGVQaHlzQ291bnQ6IDAsXHJcbiAgICAgICAgLy8gVHlwZUVsZWN0cm9uQ291bnQ6IDAsXHJcbiAgICAgICAgLy8gVHlwZUluc3RhbGxlZENvdW50OiAwLFxyXG4gICAgICAgIC8vIFR5cGVSZW1vdGVDb3VudDogMCxcclxuICAgICAgICAvLyBUeXBlQ29weUNvdW50OiAwLFxyXG4gICAgICAgIFdpZGdldDp7XHJcbiAgICAgICAgICAgIFdpZHRoOiAgMixcclxuICAgICAgICAgICAgSGVpZ2h0OiAyLFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICBhcGkuRGlhcnlfQm9va3dhcmVfR2l2aW5nRG9jR2V0KERpYXJ5LkN1cnJlbnRMaWJyYXJ5SUQsIERpYXJ5LkN1cnJlbnREYXRlLCB7XHJcbiAgICAgICAgICAgIFRoZW46IChEYXRhKT0+e1xyXG4gICAgICAgICAgICAgICAgbGV0IFN0ID0gdGhpcy5TdGF0ZTtcclxuICAgICAgICAgICAgICAgIFN0LkNvdW50ID0gRGF0YS5Db3VudDtcclxuICAgICAgICAgICAgICAgIFN0LkFnZTE0Q291bnQgPSBEYXRhLkFnZTE0Q291bnQ7XHJcbiAgICAgICAgICAgICAgICBTdC5BZ2VVbmRlcjMwQ291bnQgPSBEYXRhLkFnZVVuZGVyMzBDb3VudDtcclxuICAgICAgICAgICAgICAgIFN0LkFnZU92ZXIzMENvdW50ID0gRGF0YS5BZ2VPdmVyMzBDb3VudDtcclxuICAgICAgICAgICAgICAgIC8vIFN0LlR5cGVQaHlzQ291bnQgPSBEYXRhLlR5cGVQaHlzQ291bnQ7XHJcbiAgICAgICAgICAgICAgICAvLyBTdC5UeXBlRWxlY3Ryb25Db3VudCA9IERhdGEuVHlwZUVsZWN0cm9uQ291bnQ7XHJcbiAgICAgICAgICAgICAgICAvLyBTdC5UeXBlSW5zdGFsbGVkQ291bnQgPSBEYXRhLlR5cGVJbnN0YWxsZWRDb3VudDtcclxuICAgICAgICAgICAgICAgIC8vIFN0LlR5cGVSZW1vdGVDb3VudCA9IERhdGEuVHlwZVJlbW90ZUNvdW50O1xyXG4gICAgICAgICAgICAgICAgLy8gU3QuVHlwZUNvcHlDb3VudCA9IERhdGEuVHlwZUNvcHlDb3VudDtcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJhZGlvQm9va0NhcnJ5VHlwZVBoeXNpY2FsID0gdGhpcy5TZWxlY3QoJyNnaXZlLWRvYy10eXBlLXBoeXMnKTtcclxuICAgICAgICB0aGlzLlJhZGlvQ29weSA9IHRoaXMuU2VsZWN0KCcjZ2l2ZS1kb2MtdHlwZS1jb3B5Jyk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db21taXQgPSB0aGlzLlNlbGVjdCgnLmJ0bi1jb21taXQnKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5DbGVhciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy90aGlzLlJhZGlvQm9va0NhcnJ5VHlwZVBoeXNpY2FsLmNoZWNrZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAvL3RoaXMuUHJvdG8uRGF0YS5Cb29rQ2FycnlUeXBlSUQgPSBELkxpYnJhcnlCb29rQ2FycnlUeXBlLlBoeXNpY2FsO1xyXG5cclxuICAgICAgICAgICAgbGV0IFJhZGlvQWdlID0gdGhpcy5TZWxlY3QoJ1tuYW1lPVwiZ2l2ZS1kb2MtYWdlXCJdOmNoZWNrZWQnKTtcclxuICAgICAgICAgICAgaWYgKFJhZGlvQWdlKVxyXG4gICAgICAgICAgICAgICAgUmFkaW9BZ2UuY2hlY2tlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQWdlID0gLTE7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNvbmZpcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuQWdlIDwgMCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9CS0YvQsdC10YDQuNGC0LUg0LLQvtC30YDQsNGB0YIg0L/QvtC70YPRh9Cw0YLQtdC70Y8nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKHRoaXMuQnV0dG9uQ29tbWl0KTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X0Jvb2t3YXJlX0dpdmluZ0RvY0FkZChEaWFyeS5DdXJyZW50TGlicmFyeUlELCBEaWFyeS5DdXJyZW50RGF0ZSwgdGhpcy5TdGF0ZS5BZ2UsIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiAoeCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHg+MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93U3VjY2Vzcygn0JrQvtC/0LjRjyDQtNC+0LrRg9C80LXQvdGC0LAg0LLRi9C00LDQvdCwJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdDb3VudCcsIHRoaXMuU3RhdGUuQ291bnQrMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNsZWFyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgQ2F0Y2g6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLkVycm9yKCfQntC/0LXRgNCw0YbQuNGPINC90LUg0YPQtNCw0LvQsNGB0YwnKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UodGhpcy5CdXR0b25Db21taXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5sLXJhZGlvJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eShlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsncHJvcCddLCBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndmFsdWUnXSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db21taXQub25jbGljayA9ICgpPT57dGhpcy5Db25maXJtKCk7fTtcclxuICAgIH1cclxufSk7IiwiV2lkZ2V0LkdpdmVPdGhlciA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeS5Cb29rd2FyZSxcclxuICAgIE5hbWU6ICdXaWRnZXRHaXZlT3RoZXInLFxyXG4gICAgVGFyZ2V0OiAnLndpZGdldC1yb3cnLFxyXG4gICAgQ29udGVudDogYDxkaXYgZHJhZ2dhYmxlPVwidHJ1ZVwiIGNsYXNzPVwid2lkZ2V0IGRyYWdnYWJsZSBkaWFyeS13aWRnZXQgZ2l2ZS1vdGhlci13aWRnZXRcIiBzdHlsZT1cIi0td2lkZ2V0LXdpZHRoOiB7e1dpZGdldC5XaWR0aH19OyAtLXdpZGdldC1oZWlnaHQ6IHt7V2lkZ2V0LkhlaWdodH19XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaWNvbiBpY29uLXZpc2l0b3ItbmV3XCI+PC9kaXY+ICBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7Qn9Cg0J7Qp9CV0JU8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9scyBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1tb3ZlXCIgdGl0bGU9XCLQn9C10YDQtdC80LXRgdGC0LjRgtGMXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLWZhdm9yaXRlXCIgdGl0bGU9XCLQndCwINCz0LvQsNCy0L3Ri9C5INGN0LrRgNCw0L1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+ICBcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb24tdG9kYXkgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdW50LWNhcHRpb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdHJvbmdcIj57e0NvdW50U3VtfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXN1YWxcIj7QuNC3INGE0L7QvdC00L7QsiDQtNGA0YPQs9C40YUg0LHQuNCx0LvQuNC+0YLQtdC6INCy0YvQtNCw0L3QviDRgdC10LPQvtC00L3RjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2l2ZS1vdGhlci1saXN0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcbiAgICBTdGF0ZTp7XHJcbiAgICAgICAgQ291bnRTdW06IDE0LFxyXG5cclxuICAgICAgICBXaWRnZXQ6e1xyXG4gICAgICAgICAgICBXaWR0aDogIDIsXHJcbiAgICAgICAgICAgIEhlaWdodDogMixcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjp7XHJcbiAgICAgICAgVGFyZ2V0OiAnLmdpdmUtb3RoZXItbGlzdCcsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8ZGl2IGNsYXNzPVwiZXZlbnQtaXRlbSBwcm9ncmVzcy1iYXIgbGluZS1pbnRlcmxpbmVhclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1jYXB0aW9uIGwtcm93IGwtZmxleC1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXN1YWxcIj57eyRnLkRpY3Rpb25hcnkuQm9va3dhcmVPdGhlclBsYWNlRGljdFtvLklEXX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1pbmxpbmUtY2hhbmdlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtcG9pbnRlciBjb250cm9sLWlubGluZSBjb250cm9sLWlubGluZS1taW51c1wiIHt7I2RhdGEtbGluZX19Pi08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1sYXN0IHZhbHVlLWlubGluZVwiPnt7Q291bnR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtcG9pbnRlciBjb250cm9sLWlubGluZSBjb250cm9sLWlubGluZS1wbHVzXCIge3sjZGF0YS1saW5lfX0+KzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICAgICAgRW1wdHlNZXNzYWdlOiBgPGRpdiBjbGFzcz1cImxpc3QtZW1wdHlcIj7QvdC10YIg0L7QsdGK0LXQutGC0L7QsjwvZGl2PmBcclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICBhcGkuRGlhcnlfQm9va3dhcmVfR2l2aW5nT3RoZXJHZXQoRGlhcnkuQ3VycmVudExpYnJhcnlJRCwgRGlhcnkuQ3VycmVudERhdGUsIC0xLCB7XHJcbiAgICAgICAgICAgIFRoZW46IChsaXN0KT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2gobGlzdCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgQ291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5EYXRhW2ldLkNvdW50ID0gbGlzdFtpXS5Db3VudDtcclxuICAgICAgICAgICAgICAgICAgICBDb3VudCArPSBsaXN0W2ldLkNvdW50O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnQ291bnRTdW0nLCBDb3VudCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNvdW50SW5jcmVhc2UgPSBmdW5jdGlvbiAoTGluZUlELCBDb250cm9sKSB7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgbGV0IERhdGVMaW1pdCA9IG5ldyBEYXRlKERhdGVOb3cuZ2V0RnVsbFllYXIoKSwgRGF0ZU5vdy5nZXRNb250aCgpLCBEYXRlTm93LmdldERhdGUoKSwgU3RhdGljLkRhdGVIb3Vyc0VkaXRpbmdMaW1pdCk7XHJcbiAgICAgICAgICAgIGlmIChEYXRlTGltaXQgPCBEYXRlTm93ICYmICFMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpLmlzVG9kYXkpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGA0LXQvNGPINC40LfQvNC10L3QtdC90LjRjyDQv9GA0LXQtNGL0LTRg9GJ0LjRhSDQtNCw0L3QvdGL0YUg0LjRgdGC0LXQutC70L4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKENvbnRyb2wpO1xyXG4gICAgICAgICAgICBsZXQgRGF0YUl0ZW0gPSB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRChMaW5lSUQpO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfQm9va3dhcmVfR2l2aW5nT3RoZXJBZGQoRGlhcnkuQ3VycmVudExpYnJhcnlJRCwgRGlhcnkuQ3VycmVudERhdGUsIERhdGFJdGVtLkRhdGEuSUQsIDEsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcz4wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YUl0ZW0uRGF0YS5Db3VudCsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ291bnRTdW0rKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goTGluZUlEKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZShDb250cm9sKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Db3VudERlY3JlYXNlID0gZnVuY3Rpb24gKExpbmVJRCwgQ29udHJvbCkge1xyXG4gICAgICAgICAgICBsZXQgRGF0ZU5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTGltaXQgPSBuZXcgRGF0ZShEYXRlTm93LmdldEZ1bGxZZWFyKCksIERhdGVOb3cuZ2V0TW9udGgoKSwgRGF0ZU5vdy5nZXREYXRlKCksIFN0YXRpYy5EYXRlSG91cnNFZGl0aW5nTGltaXQpO1xyXG4gICAgICAgICAgICBpZiAoRGF0ZUxpbWl0IDwgRGF0ZU5vdyAmJiAhTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKS5pc1RvZGF5KXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRgNC10LzRjyDQuNC30LzQtdC90LXQvdC40Y8g0L/RgNC10LTRi9C00YPRidC40YUg0LTQsNC90L3Ri9GFINC40YHRgtC10LrQu9C+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayhDb250cm9sKTtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQoTGluZUlEKTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X0Jvb2t3YXJlX0dpdmluZ090aGVyQWRkKERpYXJ5LkN1cnJlbnRMaWJyYXJ5SUQsIERpYXJ5LkN1cnJlbnREYXRlLCBEYXRhSXRlbS5EYXRhLklELCAtMSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzPjApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhSXRlbS5EYXRhLkNvdW50LS07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bS0tO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChMaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKENvbnRyb2wpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5jb250cm9sLWlubGluZS1wbHVzJywgZnVuY3Rpb24gKGUsIHApIHtcclxuICAgICAgICAgICAgdGhpcy5Db3VudEluY3JlYXNlKHAuTGluZUlELCBlLmN1cnJlbnRUYXJnZXQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmNvbnRyb2wtaW5saW5lLW1pbnVzJywgZnVuY3Rpb24gKGUsIHApIHtcclxuICAgICAgICAgICAgdGhpcy5Db3VudERlY3JlYXNlKHAuTGluZUlELCBlLmN1cnJlbnRUYXJnZXQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59KTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIiwiY29uc3QgSW5wdXRCb3ggPSByZXF1aXJlKFwiLi4vLi4vX2NvbW1vbi9pbnB1dC1ib3gvaW5wdXQtYm94XCIpO1xyXG5jb25zdCBEID0gcmVxdWlyZShcIi4uLy4uL19jb21tb24vZGljdGlvbmFyeVwiKTtcclxuXHJcbm5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeSxcclxuICAgIE5hbWU6ICdNb3ZpbmdzJyxcclxuICAgIFZpc2libGU6IGZhbHNlLFxyXG4gICAgVGFyZ2V0OiAnLmJvZHknLFxyXG4gICAgUm91dGU6IGZhbHNlLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGlhcnktYm9vay1vdXQnLFxyXG4gICAgICAgIE9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5Ub2dnbGUoKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRC5Sb2xlLkRhaXJ5SW5wdXRdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpgPGRpdiBjbGFzcz1cIm1vdmluZy1zdGF0aW9ucy1jb250YWluZXJcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJtcy1jb250YWluZXItMlwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJtb3Zpbmctc3RhdGlvbnMgY29udGVudFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJcIj7QoNCw0LHQvtGC0LAg0L/QtdGA0LXQtNCy0LjQttC10Lo8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJsZXNzIGwtcG9pbnRlclwiPjwvc3Bhbj4gXHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3tEYXRlVmFsdWV9fTwvc3Bhbj4gXHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtb3JlIGwtcG9pbnRlclwiPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnQtYmxvY2sgbC1pbnZlcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1sZWZ0LW9uZVwiPtCa0L7Qu9C40YfQtdGB0YLQstC+INC/0LXRgNC10LTQstC40LbQtdC6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctcmlnaHQtb25lIHZhbHVlLWNlbGwgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7TW92aW5nc0NvdW50fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1sZWZ0LW9uZVwiPtCa0L7Qu9C40YfQtdGB0YLQstC+INGH0LjRgtCw0YLQtdC70LXQuTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LXJpZ2h0LW9uZSB2YWx1ZS1jZWxsIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e01vdmluZ3NSZWFkZXJzfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1sZWZ0LW9uZVwiPtCa0L7Qu9C40YfQtdGB0YLQstC+INC80LXRgNC+0L/RgNC40Y/RgtC40Lk8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1yaWdodC1vbmUgdmFsdWUtY2VsbCBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tNb3ZpbmdzRXZlbnRDb3VudH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnQtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctbGVmdC1vbmVcIj7QmtC+0LvQuNGH0LXRgdGC0LLQviDQvtCx0YHQu9GD0LbQtdC90L3Ri9GFINC90LAg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRj9GFPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctcmlnaHQtb25lIHZhbHVlLWNlbGwgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7TW92aW5nc0V2ZW50U2VydmVkQ291bnR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50LXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LWxlZnQtb25lXCI+0JLRgdC10LPQviDQstGL0LTQsNC90L4g0LrQvdC40LM8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1yaWdodC1vbmUgdmFsdWUtY2VsbFwiPnt7Qm9va0dpdmluZ319PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnQtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctbGVmdC1vbmVcIj7QntCf0Js8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1yaWdodC1vbmUgdmFsdWUtY2VsbCBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tCb29rT1BMfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1sZWZ0LW9uZVwiPtCV0YHRgtC10YHRgtCy0L7Qt9C90LDQvdC40LU8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1yaWdodC1vbmUgdmFsdWUtY2VsbCBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tCb29rTmF0dXJlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1sZWZ0LW9uZVwiPtCi0LXRhdC90LjQutCwPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctcmlnaHQtb25lIHZhbHVlLWNlbGwgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7Qm9va1RlY2h9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50LXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LWxlZnQtb25lXCI+0KHQtdC70YzRgdC60L7QtSDRhdC+0LfRj9C50YHRgtCy0L48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1yaWdodC1vbmUgdmFsdWUtY2VsbCBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tCb29rQWdyaWN1bHR1cmV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50LXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LWxlZnQtb25lXCI+0JjRgdC60YPRgdGB0YLQstC+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctcmlnaHQtb25lIHZhbHVlLWNlbGwgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7Qm9va0FydH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnQtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctbGVmdC1vbmVcIj7QodC/0L7RgNGCPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctcmlnaHQtb25lIHZhbHVlLWNlbGwgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7Qm9va1Nwb3J0fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1sZWZ0LW9uZVwiPjgxLCA4MzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LXJpZ2h0LW9uZSB2YWx1ZS1jZWxsIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0Jvb2s4MTgzfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1sZWZ0LW9uZVwiPtCh0L/RgNCw0LLQvtGH0L3QuNC60Lg8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1yaWdodC1vbmUgdmFsdWUtY2VsbCBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tCb29rRGljdH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnQtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctbGVmdC1vbmVcIj7QlNC10YLRgdC60LDRjyDQu9C40YLQtdGA0LDRgtGD0YDQsDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LXJpZ2h0LW9uZSB2YWx1ZS1jZWxsIGVkaXRhYmxlIGVkaXRhYmxlLXNwZWNpYWxcIj57e0Jvb2tDaGlsZH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnQtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctbGVmdC1vbmVcIj7QpdGD0LTQvtC20LXRgdGC0LLQtdC90L3QsNGPINC70LjRgtC10YDQsNGC0YPRgNCwPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctcmlnaHQtb25lIHZhbHVlLWNlbGwgZWRpdGFibGUgZWRpdGFibGUtc3BlY2lhbFwiPnt7Qm9va0ZpY3Rpb259fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50LXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LWxlZnQtb25lXCI+0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90L48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1yaWdodC1vbmUgdmFsdWUtY2VsbCBlZGl0YWJsZSBlZGl0YWJsZS1zcGVjaWFsXCI+e3tCb29rT3RoZXJ9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggRW1wdHl9fVxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50LXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LWxlZnQtb25lXCI+Jm5ic3A7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctcmlnaHQtb25lXCI+Jm5ic3A7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1idXR0b24gYnV0dG9uIGJ1dHRvbjIgYnRuLWNhbmNlbFwiPtCe0KLQnNCV0J3QkDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnRuLWNvbmZpcm1cIj7QodCe0KXQoNCQ0J3QmNCi0Kw8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBFbXB0eTogbmV3IEFycmF5KDcpLFxyXG4gICAgICAgIC8qICoqKiAgKi9cclxuICAgICAgICBMaWJyYXJ5SUQ6IDAsXHJcbiAgICAgICAgRGF0ZVZhbHVlOiBMdXJlLkRhdGUoKS5BZGREYXlzKC0xKS5EYXlTdGFydCxcclxuICAgICAgICBNb3ZpbmdzQ291bnQ6IDAsXHJcbiAgICAgICAgTW92aW5nc1JlYWRlcnM6IDAsXHJcbiAgICAgICAgTW92aW5nc0V2ZW50Q291bnQ6IDAsXHJcbiAgICAgICAgTW92aW5nc0V2ZW50U2VydmVkQ291bnQ6IDAsXHJcblxyXG4gICAgICAgIEJvb2tHaXZpbmc6IDAsXHJcbiAgICAgICAgQm9va09QTDogMCxcclxuICAgICAgICBCb29rTmF0dXJlOiAwLFxyXG4gICAgICAgIEJvb2tUZWNoOiAwLFxyXG4gICAgICAgIEJvb2tBZ3JpY3VsdHVyZTogMCxcclxuICAgICAgICBCb29rQXJ0OiAwLFxyXG4gICAgICAgIEJvb2tTcG9ydDogMCxcclxuICAgICAgICBCb29rODE4MzogMCxcclxuICAgICAgICBCb29rRGljdDowLFxyXG4gICAgICAgIEJvb2tDaGlsZDowLFxyXG4gICAgICAgIEJvb2tGaWN0aW9uOiAwLFxyXG4gICAgICAgIEJvb2tPdGhlcjowLFxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBEYXRlVmFsdWU6IChkKT0+THVyZS5EYXRlKGQpLkZvcm1hdCgnREQgTU1NTSBZWVlZJywgdHJ1ZSksXHJcbiAgICB9LFxyXG4gICAgQW5pbWF0aW9uOiB7XHJcbiAgICAgICAgU2hvdzogJ2xlLXNob3cnLFxyXG4gICAgICAgIEhpZGU6ICdsZS1oaWRlJ1xyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuRGF0ZUxpbWl0ID0gTHVyZS5EYXRlKCkuQWRkRGF5cygtMSkuRGF0ZTtcclxuXHJcbiAgICAgICAgdGhpcy5CdXR0b25Db25maXJtID0gdGhpcy5TZWxlY3QoJy5idG4tY29uZmlybScpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uQ2FuY2VsID0gdGhpcy5TZWxlY3QoJy5idG4tY2FuY2VsJyk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuU2F2ZUluZm9ybWF0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKHRoaXMuQnV0dG9uQ29uZmlybSk7XHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9Nb3ZpbmdzX0FkZChEaWFyeS5DdXJyZW50TGlicmFyeUlELCB0aGlzLlN0YXRlLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAocik9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAociA9PT0gLTIpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uV2Fybign0JfQsCDRjdGC0L7RgiDQtNC10L3RjCDQtNCw0L3QvdGL0LUg0YPQttC1INCy0L3QtdGB0LXQvdGLJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyIDwgMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5FcnJvcign0J7RiNC40LHQutCwINGB0LXRgNCy0LXRgNCwJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dTdWNjZXNzKCfQodC+0YXRgNCw0L3QtdC90L4hJyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgQ2F0Y2g6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uRXJyb3IoJ9Ce0YjQuNCx0LrQsCDRgdC10YDQstC10YDQsCcpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZSh0aGlzLkJ1dHRvbkNvbmZpcm0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2FuY2VsID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCB4IGluIHRoaXMuUHJvdG8uRGF0YSlcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuaGFzT3duUHJvcGVydHkoeCkgJiYgeCAhPT0gJ0VtcHR5JyAmJiB4ICE9PSAnRGF0ZVZhbHVlJylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGFbeF0gPSAwO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkJvb2tHaXZpbmdDYWxjID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgcyA9IDA7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGIgaW4gdGhpcy5Qcm90by5EYXRhKXtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuaGFzT3duUHJvcGVydHkoYikgJiYgYi5pbmRleE9mKCdCb29rJykgPiAtMSAmJiBiICE9PSAnQm9va0dpdmluZycpe1xyXG4gICAgICAgICAgICAgICAgICAgIHMgKz0gdGhpcy5Qcm90by5EYXRhW2JdO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Cb29rR2l2aW5nID0gcztcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5Nb3ZlRGF5ID0gZnVuY3Rpb24gKGRlbHRhKSB7XHJcbiAgICAgICAgICAgIGlmIChkZWx0YSA8IDAgJiYgTHVyZS5EYXRlKHRoaXMuU3RhdGUuRGF0ZVZhbHVlKS5EYXkgPT09IDEpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChkZWx0YSA+IDAgJiYgTHVyZS5EYXRlKHRoaXMuU3RhdGUuRGF0ZVZhbHVlKS5EYXkgPT09IEx1cmUuRGF0ZSh0aGlzLlN0YXRlLkRhdGVWYWx1ZSkuQ291bnREYXlzKXtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlN0YXRlLkRhdGVWYWx1ZSA9IEx1cmUuRGF0ZSh0aGlzLlN0YXRlLkRhdGVWYWx1ZSkuQWRkRGF5cyhkZWx0YSkuRGF0ZTtcclxuICAgICAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgICAgIGRlYnVnZ2VyXHJcbiAgICAgICAgdGhpcy5EYXRlTGltaXQgPSBMdXJlLkRhdGUoKS5BZGREYXlzKC0xKS5EYXRlO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuRGF0ZUxpbWl0KTtcclxuICAgICAgICBhcGkuRGlhcnlfTW92aW5nc19HZXQoRGlhcnkuQ3VycmVudExpYnJhcnlJRCwgdGhpcy5TdGF0ZS5EYXRlVmFsdWUsIHtcclxuICAgICAgICAgICAgVGhlbjogKG0pPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2gobSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkJvb2tHaXZpbmdDYWxjKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIEJlZm9yZVNob3c6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5TdGF0ZS5EYXRlVmFsdWUgPSBEaWFyeS5DdXJyZW50RGF0ZTtcclxuICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5CdXR0b25Db25maXJtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PnRoaXMuU2F2ZUluZm9ybWF0aW9uKCkpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uQ2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PnRoaXMuQ2FuY2VsKCkpO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmwtZWRpdC1idG4tZWRpdCcsIChlKT0+e1xyXG4gICAgICAgICAgICAgICAgbGV0IFByb3BlcnR5ID0gZS5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmRhdGFzZXRbJ3Byb3BlcnR5J107XHJcbiAgICAgICAgICAgICAgICBJbnB1dEJveC5SdW4oXHJcbiAgICAgICAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uR2V0UHJvcGVydHkoUHJvcGVydHkpLFxyXG4gICAgICAgICAgICAgICAgICAgICh2KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoUHJvcGVydHksIHYpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkJvb2tHaXZpbmdDYWxjKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7Q2FwdGlvbjogZS5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQuY2hpbGRyZW5bMF0uaW5uZXJUZXh0fVxyXG4gICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5sZXNzJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+dGhpcy5Nb3ZlRGF5KC0xKSk7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5tb3JlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+dGhpcy5Nb3ZlRGF5KDEpKTtcclxuICAgIH1cclxufSk7IiwiY29uc3QgSW5wdXRCb3ggPSByZXF1aXJlKFwiLi4vLi4vLi4vX2NvbW1vbi9pbnB1dC1ib3gvaW5wdXQtYm94XCIpO1xyXG5cclxuY29uc3QgRm9yYmlkZGVuVG9FZGl0Q29scyA9IFsnUDFWMjEnLCdQMVYyMicsJ1AxVjIzJywnUDFWMjQnLCdQMVYyNScsJ1AxVjI2JywnUDFWMjcnLCdQMVYyOCcsJ1AxVjI5JywnUDFWMzAnLCdQMVYzMScsJ1AxVjMyJywnUDFWMzMnLCdQMVYzNCcsJ1AxVjM1JywnUDFWMzYnXTtcclxuRGlhcnkuU3VtbWFyeS5MaW5lRWRpdG9yID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERpYXJ5LlN1bW1hcnksXHJcbiAgICBUeXBlOiAnc2lkZS1hYnMtY29udGVudCcsXHJcbiAgICAvL1Zpc2libGU6IHRydWUsXHJcbiAgICBSb3V0ZTogZmFsc2UsXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cImxpbmUtZWRpdG9yIGwtY29sXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwiaDJcIj7QoNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNC1INC00LDQvdC90YvRhSDQt9CwINC00LXQvdGMPC9oMj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZS1zaGlmdGVyIGwtcm93IGwtZmxleC1jZW50ZXIgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGUtc2hpZnQtY29udHJvbCBsZWZ0XCI+PC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZS1zaGlmdC12YWx1ZVwiPnt7RGF0ZVNlbGVjdGVkfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGUtc2hpZnQtY29udHJvbCByaWdodFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpc3RcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvb3QgbC1yb3cgbC1mbGV4LWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlcnJvcnMgYWJzXCI+e3tFcnJvcnN9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4tY2xlYXIge3sjaWYgKHRoaXMuQ2hhbmdlcyAmJiB0aGlzLkNoYW5nZXMubGVuZ3RoICNtb3JlIDApPyAnJzonbm9uZSd9fVwiIHRpdGxlPVwi0J7Rh9C40YHRgtC40YLRjFwiPjwvYnV0dG9uPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1idXR0b24gYnV0dG9uIGJ1dHRvbjIgYnRuLWNhbmNlbFwiPtCe0KLQnNCV0J3QkDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnRuLWNvbmZpcm1cIj7QodCe0KXQoNCQ0J3QmNCi0Kw8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIEFuaW1hdGlvbjoge1xyXG4gICAgICAgIFNob3c6ICdhbmltYXRpb24tc2hvdycsXHJcbiAgICAgICAgSGlkZTogJ2FuaW1hdGlvbi1oaWRlJyxcclxuICAgIH0sXHJcbiAgICBTdGF0ZToge1xyXG4gICAgICAgIERhdGVTZWxlY3RlZDogTHVyZS5EYXRlKCkuRm9ybWF0KCdERC5NTS5ZWVlZJyksXHJcbiAgICAgICAgRXJyb3JzOiAnJyxcclxuICAgICAgICBEYXRhTGluZTogbnVsbCxcclxuICAgIH0sXHJcbiAgICBDb250cm9sbGVyOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLmxpc3QnLFxyXG4gICAgICAgIExpc3RFbGVtZW50OiBgPGRpdiBjbGFzcz1cImxpbmUtaXRlbSBsLXJvdyBsLWZsZXgtYmV0d2VlbiB7e1N0YXRlfX1cIj4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lIGwtdGV4dC1vdmVyZmxvd1wiIHRpdGxlPVwie3tOYW1lfX1cIj57e05hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUgcmVsXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNpZiAkdGhpcy5EZXNjcmlwdGlvbn19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludFwiIGRhdGEtaGludD1cInt7RGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGlmfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS12YWx1ZSB7eyNpZiAoby5pc0VkaXRhYmxlKSA/ICdudW1wYWRhYmxlJzonJ319XCI+e3tWYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5fRmFpbGVkID0gW107IC8vbGlzdCBvZiBpbnZhbGlkIHByb3BzXHJcbiAgICAgICAgdGhpcy5fRGF0YUl0ZW0gPSBudWxsO1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlcyA9IFtdO1xyXG5cclxuICAgICAgICB0aGlzLkJ1dHRvbkNvbmZpcm0gPSB0aGlzLlNlbGVjdCgnLmJ0bi1jb25maXJtJyk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUHJlcGFyZSA9IGZ1bmN0aW9uIChMaW5lSUQpIHtcclxuICAgICAgICAgICAgdGhpcy5TdGF0ZS5FcnJvcnMgPSBbXTtcclxuICAgICAgICAgICAgdGhpcy5DaGFuZ2VzICAgICAgPSBbXTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkxpbmVJRCAgID0gTGluZUlEO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuRGF0YUxpbmUgPSBMdXJlLk9iamVjdC5DbG9uZShEaWFyeS5TdW1tYXJ5LkN1cnJlbnRQYXJ0LkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRChMaW5lSUQpLkRhdGEpO1xyXG4gICAgICAgICAgICBsZXQgRGF0YUxpbmUgPSB0aGlzLlByb3RvLkRhdGEuRGF0YUxpbmU7XHJcbiAgICAgICAgICAgIGxldCBMaXN0ID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGsgaW4gRGF0YUxpbmUpe1xyXG4gICAgICAgICAgICAgICAgaWYgKERhdGFMaW5lLmhhc093blByb3BlcnR5KGspICYmIERpYXJ5LlN1bW1hcnkuX0tleVJlZ2V4LnRlc3QoaykgKXtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgRCA9IERhdGFMaW5lW2tdLkQ7XHJcbiAgICAgICAgICAgICAgICAgICAgRC5HZXRWYWx1ZSA9IERpYXJ5LlN1bW1hcnkuRFtrXS5HZXRWYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICBELkNoZWNrICAgID0gRGlhcnkuU3VtbWFyeS5EW2tdLkNoZWNrO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBMaXN0RWxlbSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgX1ZhbHVlOiBEYXRhTGluZVtrXS5WYWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgVmFsdWU6IERhdGFMaW5lW2tdLlZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTdGF0ZTogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEQ6IEQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFByb3A6IGssXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6IGsucmVwbGFjZSgnUCcsICcnKS5yZXBsYWNlKCdWJywgJy4nKSArIFwiIFwiICsgRC5OYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogRC5EZXNjcmlwdGlvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9EYXRhVmFsdWU6IERhdGFMaW5lW2tdLlZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0VkaXRhYmxlOiBELkdldFZhbHVlID09PSBudWxsICYmIChGb3JiaWRkZW5Ub0VkaXRDb2xzLmluZGV4T2YoaykgPCAwKSxcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIExpc3QucHVzaChMaXN0RWxlbSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMaXN0ID0gTGlzdC5zb3J0KChhLGIpPT57XHJcbiAgICAgICAgICAgICAgICBhID0gYS5OYW1lLm1hdGNoKC9bXFxkXSsuW1xcZF0rLylbMF0uc3BsaXQoJy4nKTtcclxuICAgICAgICAgICAgICAgIGIgPSBiLk5hbWUubWF0Y2goL1tcXGRdKy5bXFxkXSsvKVswXS5zcGxpdCgnLicpO1xyXG4gICAgICAgICAgICAgICAgbGV0IFBBID0gcGFyc2VJbnQoYVswXSk7XHJcbiAgICAgICAgICAgICAgICBsZXQgUEIgPSBwYXJzZUludChiWzBdKTtcclxuICAgICAgICAgICAgICAgIGxldCBWQSA9IHBhcnNlSW50KGFbMV0pO1xyXG4gICAgICAgICAgICAgICAgbGV0IFZCID0gcGFyc2VJbnQoYlsxXSk7XHJcblxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChQQSA+IFBCKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxO1xyXG4gICAgICAgICAgICAgICAgaWYgKFBBIDwgUEIpXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChWQSA+IFZCKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxO1xyXG4gICAgICAgICAgICAgICAgaWYgKFZBIDwgVkIpXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuRGF0YSA9IExpc3Q7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0RhdGVTZWxlY3RlZCcsIEx1cmUuRGF0ZSh0aGlzLlByb3RvLkRhdGEuRGF0YUxpbmUuRGF0ZVZhbHVlKS5Gb3JtYXQoJ0RELk1NLllZWVknKSApO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5DaGVjayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtcyA9IHRoaXMuQ29udHJvbGxlci5EYXRhSXRlbXM7XHJcbiAgICAgICAgICAgIGxldCBGYWlsZWQgPSBbXTtcclxuICAgICAgICAgICAgdGhpcy5TdGF0ZS5FcnJvcnMgPSAnJztcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBEYXRhSXRlbXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgLy9EYXRhSXRlbXNbaV0uRE9NLmNsYXNzTGlzdC5yZW1vdmUoJ2ludmFsaWQnKTtcclxuICAgICAgICAgICAgICAgIGxldCBMaW5lID0gRGF0YUl0ZW1zW2ldLkRhdGE7XHJcbiAgICAgICAgICAgICAgICBsZXQgayA9IExpbmUuUHJvcDtcclxuICAgICAgICAgICAgICAgIExpbmUuU3RhdGUgPSAnJztcclxuICAgICAgICAgICAgICAgIExpbmUuVmFsdWUgPSAhTGluZS5ELkdldFZhbHVlID8gTGluZS5WYWx1ZSA6IExpbmUuRC5HZXRWYWx1ZSh0aGlzLlN0YXRlLkRhdGFMaW5lKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuU3RhdGUuRGF0YUxpbmVbTGluZS5Qcm9wXS5WYWx1ZSA9IExpbmUuVmFsdWU7XHJcbiAgICAgICAgICAgICAgICBsZXQgaXNDaGFuZ2VkID0gTGluZS5WYWx1ZSAhPT0gTGluZS5fVmFsdWU7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGlzQ2hhbmdlZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgTGluZS5TdGF0ZSA9ICdjaGFuZ2VkJztcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5DaGFuZ2VzLmluZGV4T2YoaykgPCAwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYW5nZXMucHVzaChrKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goRGF0YUl0ZW1zW2ldLkxpbmVJRCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmICghaXNDaGFuZ2VkICYmIHRoaXMuQ2hhbmdlcy5pbmRleE9mKGspID4gLTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQXJyYXkuUmVtb3ZlKHRoaXMuQ2hhbmdlcywgeD0+eD09PWspO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChMaW5lLkQuQ2hlY2spe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghTGluZS5ELkNoZWNrKHRoaXMuU3RhdGUuRGF0YUxpbmUpKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTGluZS5TdGF0ZSA9ICdpbnZhbGlkJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgRmFpbGVkLnB1c2goTGluZS5Qcm9wLnJlcGxhY2UoJ1AnLCAnJykucmVwbGFjZSgnVicsICcuJykpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIGlmIChpc0NoYW5nZWQpe1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKERhdGFJdGVtc1tpXS5MaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICB0aGlzLlN0YXRlLkVycm9ycyA9IEZhaWxlZC5sZW5ndGggPCAxID8gJyc6IGDQntGI0LjQsdC60Lgg0LIg0L/QvtC70Y/RhTogJHtGYWlsZWQuam9pbignLCAnKX1gO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuTnVtUGFkQ29uZmlybSA9IGZ1bmN0aW9uIChWYWwsIERhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgIFZhbCA9IHBhcnNlSW50KFZhbCk7XHJcbiAgICAgICAgICAgIERhdGFJdGVtLkRhdGEuVmFsdWUgPSBWYWw7XHJcbiAgICAgICAgICAgIHRoaXMuU3RhdGUuRGF0YUxpbmVbRGF0YUl0ZW0uRGF0YS5Qcm9wXS5WYWx1ZSA9IFZhbDtcclxuICAgICAgICAgICAgdGhpcy5DaGVjaygpO1xyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKERhdGFJdGVtLkxpbmVJRCwgdGhpcy5DaGFuZ2VzKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuTGluZVNoaWZ0ID0gZnVuY3Rpb24gKGRlbHRhKSB7XHJcbiAgICAgICAgICAgIHRoaXMuU3RhdGUuRXJyb3JzID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuQ2hhbmdlcyAgICAgID0gW107XHJcbiAgICAgICAgICAgIGxldCBEYXRhSXRlbSA9IEx1cmUuT2JqZWN0LkNsb25lKERpYXJ5LlN1bW1hcnkuQ3VycmVudFBhcnQuQ29udHJvbGxlci5HZXRQcml2YXRlRGF0YUl0ZW1CeUxpbmVJRCh0aGlzLlN0YXRlLkxpbmVJRCArIGRlbHRhKSk7XHJcbiAgICAgICAgICAgIGlmICgodGhpcy5TdGF0ZS5MaW5lSUQgPCAxICYmIGRlbHRhIDwgMCkgfHwgRGF0YUl0ZW0gPT09IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2xpbWl0Jyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5TdGF0ZS5MaW5lSUQgPSB0aGlzLlN0YXRlLkxpbmVJRCArIGRlbHRhO1xyXG4gICAgICAgICAgICB0aGlzLlByZXBhcmUodGhpcy5TdGF0ZS5MaW5lSUQpO1xyXG4gICAgICAgICAgICB0aGlzLkNoZWNrKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNsZWFyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLlByZXBhcmUodGhpcy5TdGF0ZS5MaW5lSUQpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Db25maXJtID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5DaGFuZ2VzLmxlbmd0aCA8IDEpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLlNob3dOb3RpY2UoJ9Cd0LXRgiDQuNC30LzQtdC90LXQvdC40Lkg0LTQu9GPINGB0L7RhdGA0LDQvdC10L3QuNGPJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IEN1cnJlbnRQYXJ0ID0gRGlhcnkuU3VtbWFyeS5DdXJyZW50UGFydDtcclxuICAgICAgICAgICAgbGV0IERhdGFSZWFsID0gQ3VycmVudFBhcnQuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKHRoaXMuU3RhdGUuTGluZUlEKS5EYXRhO1xyXG5cclxuICAgICAgICAgICAgbGV0IENoYW5nZWQgPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkNoYW5nZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgbGV0IGsgPSB0aGlzLkNoYW5nZXNbaV07XHJcbiAgICAgICAgICAgICAgICBpZiAoRGlhcnkuU3VtbWFyeS5EW2tdLkdldFZhbHVlICE9PSBudWxsKXtcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIENoYW5nZWQucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgTmFtZTogayxcclxuICAgICAgICAgICAgICAgICAgICBWYWx1ZTogdGhpcy5TdGF0ZS5EYXRhTGluZVt0aGlzLkNoYW5nZXNbaV1dLlZhbHVlXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zb2xlLmluZm8odGhpcy5DaGFuZ2VzLCBDaGFuZ2VkKTtcclxuICAgICAgICAgICAgbGV0IENoYW5naW5nID0gW3tcclxuICAgICAgICAgICAgICAgIERhdGVWYWx1ZTogTHVyZS5EYXRlKHRoaXMuU3RhdGUuRGF0YUxpbmUuRGF0ZVZhbHVlKS5EYXRlQ3MsXHJcbiAgICAgICAgICAgICAgICBDaGFuZ2VkOiBDaGFuZ2VkLFxyXG4gICAgICAgICAgICB9XTtcclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayh0aGlzLkJ1dHRvbkNvbmZpcm0pO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfU3VtbWFyeV9TZXQoRGlhcnkuQ3VycmVudExpYnJhcnlJRCwgQ2hhbmdpbmcsIFtdLCBbXSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkNoYW5nZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGsgPSB0aGlzLkNoYW5nZXNbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEYXRhUmVhbFtrXS5WYWx1ZSAgPSB0aGlzLlN0YXRlLkRhdGFMaW5lW2tdLlZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0YVJlYWxba10uX1ZhbHVlID0gdGhpcy5TdGF0ZS5EYXRhTGluZVtrXS5WYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDdXJyZW50UGFydC5Db250cm9sbGVyLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU2hvd1N1Y2Nlc3MoJ9CY0LfQvNC10L3QtdC90LjRjyDRgdC+0YXRgNCw0L3QtdC90YsnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFuZ2VzID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uU2hvd0Vycm9yKCfQndC1INGD0LTQsNC70L7RgdGMINGB0L7RhdGA0LDQvdC40YLRjC4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgQ2F0Y2g6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgLy9MdXJlLlN5c3RlbS5TaG93Tm90aWNlKCfQntGI0LjQsdC60LAg0YHQtdGA0LLQtdGA0LAnKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UodGhpcy5CdXR0b25Db25maXJtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKExpbmVJRCkge1xyXG4gICAgICAgIElucHV0Qm94LkhpZGUoKTtcclxuICAgICAgICBMaW5lSUQgPSBwYXJzZUludChMaW5lSUQpO1xyXG4gICAgICAgIHRoaXMuUHJlcGFyZShMaW5lSUQpO1xyXG4gICAgICAgIC8vdGhpcy5DaGVjaygpO1xyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5saW5lLWl0ZW0gLnZhbHVlJywgZnVuY3Rpb24gKGUsIHApIHtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQocC5MaW5lSUQpO1xyXG4gICAgICAgICAgICBpZiAoRGF0YUl0ZW0uRGF0YS5ELkdldFZhbHVlKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBJbnB1dEJveC5SdW4oZS5jdXJyZW50VGFyZ2V0LCBEYXRhSXRlbS5EYXRhLlZhbHVlLCAodik9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuTnVtUGFkQ29uZmlybSh2LCBEYXRhSXRlbSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcuZGF0ZS1zaGlmdC1jb250cm9sLmxlZnQnKS5vbmNsaWNrID0gKCk9Pnt0aGlzLkxpbmVTaGlmdCgtMSl9O1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcuZGF0ZS1zaGlmdC1jb250cm9sLnJpZ2h0Jykub25jbGljayA9ICgpPT57dGhpcy5MaW5lU2hpZnQoMSl9O1xyXG4gICAgICAgIHRoaXMuQnV0dG9uQ29uZmlybS5vbmNsaWNrID0gKCk9PntcclxuICAgICAgICAgICAgaWYgKHRoaXMuU3RhdGUuRXJyb3JzLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9Cj0YHRgtGA0LDQvdC40YLQtSDQvtGI0LjQsdC60Lgg0LLQsNC70LjQtNCw0YbQuNC4LicpO1xyXG4gICAgICAgICAgICB0aGlzLkNvbmZpcm0oKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcuYnRuLWNhbmNlbCcpLm9uY2xpY2sgPSAoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLkNhbmNlbCgpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5idG4tY2xlYXInKS5vbmNsaWNrID0gKCk9PntcclxuICAgICAgICAgICAgdGhpcy5DbGVhcigpO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbi8qXHJcblxyXG4oKCk9PntcclxuICAgIGxldCB4ID0gJyc7XHJcbiAgICBmb3IgKGxldCBpID0gMjsgaSA8IDM3OyBpKyspe1xyXG4gICAgICAgIHggKz0gYHAxLlZhbHVlXyR7aX0gYXMgUDFfVmFsdWVfJHtpfSxcclxuYDtcclxuICAgIH1cclxuICAgIGNvbnNvbGUubG9nKHgpO1xyXG59KSgpO1xyXG5cclxuKi9cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJEaWFyeS5TdW1tYXJ5LlN1bW1hcnlQYXJ0MSA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeS5TdW1tYXJ5LFxyXG4gICAgTmFtZTogJ1N1bW1hcnlQYXJ0MScsXHJcbiAgICBUeXBlOiAnZGlhcnktc3VtbWFyeS1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGlhcnktc3VtbWFyeS0xJyxcclxuICAgIH0sXHJcbiAgICBWaXNpYmxlOiB0cnVlLCAgIFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJzdW1tYXJ5LXBhcnRcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvIHRhYi1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJzdW1tYXJ5LXBhcnQxXCIgaWQ9XCJzdW1tYXJ5LXBhcnQxLTFcIiBkYXRhLXRhYmxlaWQ9XCIxXCIgY2hlY2tlZD1cImNoZWNrZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgdGFiLWxhYmVsXCIgZm9yPVwic3VtbWFyeS1wYXJ0MS0xXCI+0JfQkNCf0JjQodCsINCYINCf0J7QodCV0KnQldCd0JjQrzwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvIHRhYi1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJzdW1tYXJ5LXBhcnQxXCIgaWQ9XCJzdW1tYXJ5LXBhcnQxLTJcIiBkYXRhLXRhYmxlaWQ9XCIyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImxhYmVsIHRhYi1sYWJlbFwiIGZvcj1cInN1bW1hcnktcGFydDEtMlwiPtCc0JXQoNCe0J/QoNCY0K/QotCY0K8g0Jgg0JrQm9Cj0JHQqzwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJsZS1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZSBzdW1tYXJ5LXRhYmxlIGZpeGVkLWhlaWdodFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3M9XCJ0aGVhZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZWFjaCB0aGlzLlRhYmxlSGVhZH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLXt7TGluZX19XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggQ2VsbHN9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCJ7e0NvbHNwYW59fVwiIHJvd3NwYW49XCJ7e1Jvd3NwYW59fVwiIGNsYXNzPVwidGNlbGxcIiB0aXRsZT1cInt7TmFtZX19XCI+e3tOYW1lfX08L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHkgY2xhc3M9XCJ0Ym9keVwiPjwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFN0YXRlOntcclxuICAgICAgICBUYWJsZUlEOiAxLFxyXG4gICAgICAgIFRhYmxlSGVhZDoge1xyXG4gICAgICAgICAgICAxOltcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMaW5lOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIENlbGxzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQlNCw0YLQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktC90L7QstGMINC30LDQv9C40YHQsNCy0YjQuNGF0YHRjycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0YHRgtCw0YbQuNC+0L3QsNGAJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLQvtC30YDQsNGB0YInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQo9C00LDQu9C10L3QvdGL0LUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KjQutC+0LvRjNC90LjQutC4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J7RgtC00LXQu9GM0L3Ri9C1INCz0YDRg9C/0L/RiycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiA0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0L/QvtGB0LXRidC10L3QuNC5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JIg0YLQvtC8INGH0LjRgdC70LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMaW5lOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgIENlbGxzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQtNC+IDE0INC70LXRgicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE0LTMwINC70LXRgicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzMwKyDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQtC/RiCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzctMTAg0LvQtdGCJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTEtMTQg0LvQtdGCJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KHRgtCw0YDRiNC10LrQu9Cw0YHRgdC90LjQutC4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KDQlNCnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/QtdC90YHQuNC+0L3QtdGA0YsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQodC70YPQttCw0YnQuNC1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KHRgtGD0LTQtdC90YLRiycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0YDQvtGH0LjQtScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ch0YLQsNGG0LjQvtC90LDRgCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0L3QtdGB0YLQsNGG0LjQvtC90LDRgCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CY0L3RgtC10YDQvdC10YInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMaW5lOiAzLFxyXG4gICAgICAgICAgICAgICAgICAgIENlbGxzOltcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnNicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzYuMScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnOScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzEwJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxMicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzEzJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxNScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE2JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxOCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgMjpbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGluZTogMSxcclxuICAgICAgICAgICAgICAgICAgICBDZWxsczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JTQsNGC0LAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFibGVJRDogLTEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0L/QvtGB0LXRidC10L3QuNC5INC80LXRgNC+0L/RgNC40Y/RgtC40Y8g0YHRgtCw0YbQuNC+0L3QsNGAJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/QvtGB0LXRidC10L3QuNGPINC80LXRgNC+0L/RgNC40Y/RgtC40LknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktGB0LXQs9C+INC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0YHRgtCw0YbQuNC+0L3QsNGAJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JrQvtC70LjRh9C10YHRgtCy0L4g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0L/QvtGB0LXRidC10L3QuNC5INC80LXRgNC+0L/RgNC40Y/RgtC40Y8g0LLQvdC10YHRgtCw0YbQuNC+0L3QsNGAJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/QvtGB0LXRidC10L3QuNGPINC80LXRgNC+0L/RgNC40Y/RgtC40LknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktGB0LXQs9C+INC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0LLQvdC10YHRgtCw0YbQuNC+0L3QsNGAJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/QvtGB0LXRidC10L3QuNGPINC80LXRgNC+0L/RgNC40Y/RgtC40LknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQkdC10YHQv9C70LDRgtC90YvQtSDQutC70YPQsdGLJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/Qu9Cw0YLQvdGL0LUg0LrQu9GD0LHRiycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExpbmU6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CR0LXRgdC/0LvQsNGC0L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/Qu9Cw0YLQvdGL0LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQkdC10YHQv9C70LDRgtC90YvQtScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0LvQsNGC0L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JHQtdGB0L/Qu9Cw0YLQvdGL0LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C70LDRgtC90YvQtScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CR0LXRgdC/0LvQsNGC0L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/Qu9Cw0YLQvdGL0LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmtC+0LvQuNGH0LXRgdGC0LLQviDQt9Cw0YHQtdC00LDQvdC40LknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQp9C40YHQu9C+INC/0L7RgdC10YnQtdC90LjQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Qu9C40YfQtdGB0YLQstC+INC30LDRgdC10LTQsNC90LjQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LjRgdC70L4g0L/QvtGB0LXRidC10L3QuNC5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGluZTogMyxcclxuICAgICAgICAgICAgICAgICAgICBDZWxsczpbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6IFwiMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyMScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzIyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyNCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzI1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjYnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyNycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzI4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczMCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzMxJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMzInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczMycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzM0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMzUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczNicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIEdldFNldDp7XHJcbiAgICAgICAgZ2V0IFRhYmxlSGVhZCgpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5Qcm90by5EYXRhLlRhYmxlSGVhZFt0aGlzLlByb3RvLkRhdGEuVGFibGVJRF1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUHJvcFR5cGVzOntcclxuICAgICAgICBUYWJsZUlEOiBMdXJlLlByb3BUeXBlcy5JbnQsXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy50Ym9keScsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8dHIgY2xhc3M9XCJ7eyNpZiAoIGkgPT09IDAgfHwgaSAjbW9yZSB0aGlzLkRhdGEubGVuZ3RoLTMgKSA/ICdzcm93JzondHJvdyd9fSB7eyNpZiAoby5pc0NoYW5nZWRCeU91dHNpZGUpID8gJ2NoYW5nZWQtb3V0c2lkZSc6Jyd9fXt7RGF5VHlwZX19XCI+ICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwgc3VtLXBhcnQtZGF0ZSBsLXBvaW50ZXJcIiB0aXRsZT1cInt7RGF0ZVZpc3VhbH19XCI+e3tEYXRlVmlzdWFsfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbG9jayAgICAgICB7e1AxVjIuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMVYyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYyLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjIuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYyLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AxVjMuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMVYzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYzLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjMuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYzLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbG9jayB7e1AxVjQuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMVY0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVY0LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjQuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVY0LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbG9jayAgICAgICB7e1AxVjUuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMVY1XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVY1LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjUuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVY1LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AxVjYuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMVY2XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVY2LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjYuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVY2LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AxVjYxLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDFWNjFcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjYxLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjYxLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWNjEuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSB7eyNpZiAoTHVyZS5Vc2VyLlJvbGVzLmluZGV4T2YoRC5Sb2xlLkRhaXJ5U3VtbWFyeUVkaXRSZW1vdGUpID4gLTEpPydudW1wYWRhYmxlJzonJ319IHt7UDFWNy5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAxVjdcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjcuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWNy5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjcuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDFWOC5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAxVjhcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjguRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWOC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjguVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDFWOS5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAxVjlcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjkuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWOS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjkuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDFWMTAuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjEwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYxMC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYxMC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjEwLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AxVjExLlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYxMVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMTEuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMTEuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYxMS5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMVYxMi5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMTJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjEyLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjEyLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMTIuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDFWMTMuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjEzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYxMy5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYxMy5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjEzLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AxVjE0LlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYxNFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMTQuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMTQuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYxNC5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMVYxNS5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMTVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjE1LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjE1LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMTUuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDFWMTYuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjE2XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYxNi5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYxNi5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjE2LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbG9jayAgICAgICB7e1AxVjE3LlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYxN1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMTcuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMTcuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYxNy5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMVYxOC5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMThcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjE4LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjE4LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMTguVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDFWMTkuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjE5XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYxOS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYxOS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjE5LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AxVjIwLlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYyMFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMjAuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMjAuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYyMC5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IGxvY2sgICAgICAge3tQMVYyMS5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMjFcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjIxLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjIxLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMjEuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrICAgICAgIHt7UDFWMjIuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjIyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYyMi5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYyMi5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjIyLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbG9jayAgICAgICB7e1AxVjIzLlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYyM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMjMuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMjMuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYyMy5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IGxvY2sgICAgICAge3tQMVYyNC5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMjRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjI0LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjI0LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMjQuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrICAgICAgIHt7UDFWMjUuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjI1XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYyNS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYyNS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjI1LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbG9jayAgICAgICB7e1AxVjI2LlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYyNlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMjYuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMjYuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYyNi5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IGxvY2sgICAgICAge3tQMVYyNy5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMjdcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjI3LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjI3LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMjcuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrICAgICAgIHt7UDFWMjguU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjI4XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYyOC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYyOC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjI4LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbG9jayAgICAgICB7e1AxVjI5LlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYyOVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMjkuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMjkuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYyOS5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IGxvY2sgICAgICAge3tQMVYzMC5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMzBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjMwLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjMwLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMzAuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrICAgICAgIHt7UDFWMzEuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjMxXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYzMS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYzMS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjMxLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbG9jayAgICAgICB7e1AxVjMyLlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYzMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMzIuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMzIuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYzMi5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IGxvY2sgICAgICAge3tQMVYzMy5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMzNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjMzLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjMzLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMzMuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrICAgICAgIHt7UDFWMzQuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlAxVjM0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMVYzNC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMVYzNC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AxVjM0LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbG9jayAgICAgICB7e1AxVjM1LlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQMVYzNVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDFWMzUuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDFWMzUuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMVYzNS5WYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IGxvY2sgICAgICAge3tQMVYzNi5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDFWMzZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAxVjM2LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AxVjM2LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDFWMzYuVmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L3RyPmAsXHJcbiAgICAgICAgRW1wdHlNZXNzYWdlOiBgPGRpdiBjbGFzcz1cImxpc3QtZW1wdHlcIj7QvdC10YIg0LTQsNC90L3Ri9GFPC9kaXY+YCxcclxuICAgICAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8qIGlmICh0aGlzLkNvbnRyb2xsZXIuQ29udGVudC5zY3JvbGxIZWlnaHQgPiB0aGlzLkNvbnRyb2xsZXIuQ29udGVudC5jbGllbnRIZWlnaHQpe1xyXG4gICAgICAgICAgICAgICAgIHRoaXMuU2Nyb2xsQ29tcGVuc2F0b3Iuc3R5bGUud2lkdGggPSBMdXJlLkRPTS5TY3JvbGxCYXJXaWR0aCsgJ3B4JztcclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgdGhpcy5TY3JvbGxDb21wZW5zYXRvci5zdHlsZS53aWR0aCA9ICcwJztcclxuICAgICAgICAgICAgIH0qL1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLkN1cnJlbnREYXRlID0gbnVsbDtcclxuICAgIH0sXHJcbiAgICBTaG93KCl7XHJcbiAgICAgICAgdGhpcy5QYXJlbnQuU3Vic2NyaXB0aW9uLlN1YnNjcmliZSgpO1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoID4gMCAmJiB0aGlzLkN1cnJlbnREYXRlID09PSBEaWFyeS5TdW1tYXJ5LkN1cnJlbnREYXRlKXtcclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goRGlhcnkuU3VtbWFyeS5EYXRhUHJlcGFyZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkNvbnRyb2xsZXIuRGF0YS5sZW5ndGggPCAxICYmIERpYXJ5LlN1bW1hcnkuRGF0YVByZXBhcmVkLmxlbmd0aCA+IDAgJiYgdGhpcy5DdXJyZW50RGF0ZSA9PT0gRGlhcnkuU3VtbWFyeS5DdXJyZW50RGF0ZSl7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKERpYXJ5LlN1bW1hcnkuRGF0YVByZXBhcmVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoIDwgMSAmJiBEaWFyeS5TdW1tYXJ5LkRhdGFQcmVwYXJlZC5sZW5ndGggPCAxIHx8IHRoaXMuQ3VycmVudERhdGUgIT09IERpYXJ5LlN1bW1hcnkuQ3VycmVudERhdGUpe1xyXG4gICAgICAgICAgICBEaWFyeS5TdW1tYXJ5LkdldERhdGEoKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIERpYXJ5LkNoZWNrRm9yQnJlYWQoKTtcclxuICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgIH0sXHJcbn0pOyIsIm5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeS5TdW1tYXJ5LFxyXG4gICAgTmFtZTogJ1N1bW1hcnlQYXJ0MicsXHJcbiAgICBUeXBlOiAnZGlhcnktc3VtbWFyeS1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGlhcnktc3VtbWFyeS0yJyxcclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cInN1bW1hcnktcGFydFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYnNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW8gdGFiLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cInN1bW1hcnktcGFydDJcIiBpZD1cInN1bW1hcnktcGFydDItMVwiIGRhdGEtdGFibGVpZD1cIjFcIiBjaGVja2VkPVwiY2hlY2tlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCB0YWItbGFiZWxcIiBmb3I9XCJzdW1tYXJ5LXBhcnQyLTFcIj7QmtCd0JjQk9CYINCYINCR0KDQntCo0K7QoNCrPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW8gdGFiLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cInN1bW1hcnktcGFydDJcIiBpZD1cInN1bW1hcnktcGFydDItMlwiIGRhdGEtdGFibGVpZD1cIjJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgdGFiLWxhYmVsXCIgZm9yPVwic3VtbWFyeS1wYXJ0Mi0yXCI+0JTQntCa0KPQnNCV0J3QotCrINCYINCa0J7Qn9CY0Jg8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyB0YWItcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwic3VtbWFyeS1wYXJ0MlwiIGlkPVwic3VtbWFyeS1wYXJ0Mi0zXCIgZGF0YS10YWJsZWlkPVwiM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCB0YWItbGFiZWxcIiBmb3I9XCJzdW1tYXJ5LXBhcnQyLTNcIj7QodCf0KDQkNCS0JrQmCDQmCDQmtCe0J3QodCj0JvQrNCi0JDQptCY0Jg8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZSBzdW1tYXJ5LXRhYmxlIGZpeGVkLWhlaWdodFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz1cInRoZWFkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggdGhpcy5UYWJsZUhlYWR9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLXt7TGluZX19XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZWFjaCBDZWxsc319XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwie3tDb2xzcGFufX1cIiByb3dzcGFuPVwie3tSb3dzcGFufX1cIiBjbGFzcz1cInRjZWxsXCIgdGl0bGU9XCJ7e05hbWV9fVwiPnt7TmFtZX19PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRib2R5IGNsYXNzPVwidGJvZHlcIj48L3Rib2R5PlxyXG4gICAgICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgUHJvdG86e1xyXG4gICAgICAgIFRhYmxlSUQ6IDEsXHJcbiAgICAgICAgVGFibGVIZWFkOiB7XHJcbiAgICAgICAgICAgIDE6W1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExpbmU6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CU0LDRgtCwJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRgdC10LPQviDQstGL0LTQsNC90L4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+INGC0LjQv9GDINC90L7RgdC40YLQtdC70Y8nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogNSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+INGB0L7QtNC10YDQttCw0L3QuNGOJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDExLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExpbmU6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cd0LAg0YTQuNC3INC90L7RgdC40YLQtdC70Y/RhScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0L3QtdGB0YLQsNGG0LjQvtC90LDRgCDQuCDQvdCwINC00L7QvNGDICg2LjEsIDYuMiknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC3INGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0LHQuNCx0LvQuNC+0YLQtdC60LgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90YHRgtCw0LvQuNGA0L7QstCw0L3QvdGL0LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQo9C00LDQu9C10L3QvdGL0LUg0LvQuNGG0LXQvdC30LjQvtC90L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J7Qn9CbJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JUv0LfQvScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ci0LXRhdC90LjQutCwJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KEv0YUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNGB0LrRg9GB0YHRgtCy0L4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQodC/0L7RgNGCJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnODEuODMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQodC/0YDQsNCy0L7Rh9C90LjQutC4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JTQtdGCLiDQu9C40YIt0YDQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cl0YPQtC4g0LvQuNGCLdGA0LAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQlNC+0L/QvtC70L3QuNGCLicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGluZTogMyxcclxuICAgICAgICAgICAgICAgICAgICBDZWxsczpbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6IFwiMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnNicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnOScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzEwJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxMicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzEzJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxNScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE2JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxOCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAyOltcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMaW5lOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIENlbGxzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQlNCw0YLQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUYWJsZUlEOiAtMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC00L7QutGD0LzQtdC90YLQvtCyINC00LXRgtGP0Lwg0LTQviAxNCDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogNixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0LTQvtC60YPQvNC10L3RgtC+0LIg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GP0LwgMTQtMzAg0LvQtdGCJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDYsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC00L7QutGD0LzQtdC90YLQvtCyINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj9C8IDMwKyDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogNixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC30LPQvtGC0L7QstC70LXQvdC+INC4INCy0YvQtNCw0L3QviDQutC+0L/QuNC5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExpbmU6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0LLRi9C00LDQvdC+JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J3QsCDRhNC40Lcg0L3QvtGB0LjRgtC10LvRj9GFJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLQvdC10YHRgtCw0YbQuNC+0L3QsNGAINC4INC90LAg0LTQvtC80YMgKDYuMSwgNi4yKScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CY0Lcg0Y3Qu9C10LrRgtGA0L7QvdC90L7QuSDQsdC40LHQu9C40L7RgtC10LrQuCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CY0L3RgdGC0LDQu9C40YDQvtCy0LDQvdC90YvQtScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cj0LTQsNC70LXQvdC90YvQtSDQu9C40YbQtdC90LfQuNC+0L3QvdGL0LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktGB0LXQs9C+INCy0YvQtNCw0L3QvicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cd0LAg0YTQuNC3INC90L7RgdC40YLQtdC70Y/RhScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0L3QtdGB0YLQsNGG0LjQvtC90LDRgCDQuCDQvdCwINC00L7QvNGDICg2LjEsIDYuMiknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC3INGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0LHQuNCx0LvQuNC+0YLQtdC60LgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90YHRgtCw0LvQuNGA0L7QstCw0L3QvdGL0LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQo9C00LDQu9C10L3QvdGL0LUg0LvQuNGG0LXQvdC30LjQvtC90L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRgdC10LPQviDQstGL0LTQsNC90L4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQndCwINGE0LjQtyDQvdC+0YHQuNGC0LXQu9GP0YUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktC90LXRgdGC0LDRhtC40L7QvdCw0YAg0Lgg0L3QsCDQtNC+0LzRgyAoNi4xLCA2LjIpJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5INCx0LjQsdC70LjQvtGC0LXQutC4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JjQvdGB0YLQsNC70LjRgNC+0LLQsNC90L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KPQtNCw0LvQtdC90L3Ri9C1INC70LjRhtC10L3Qt9C40L7QvdC90YvQtScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQlNC10YLRj9C8INC00L4gMTQg0LvQtdGCJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/QvtC70YzQt9C+0LLQsNGC0LXQu9GP0LwgMTQtMzAg0LvQtdGCJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/QvtC70YzQt9C+0LLQsNGC0LXQu9GP0LwgMzArINC70LXRgicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMaW5lOiAzLFxyXG4gICAgICAgICAgICAgICAgICAgIENlbGxzOltcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogXCIxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyMScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzIyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyNCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzI1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjYnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyNycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzI4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczMCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzI1LjEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyNi4xJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMjcuMScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzI4LjEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyOS4xJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMzAuMScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzMxJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMzInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczMycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzMzLjEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgMzpbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGluZTogMSxcclxuICAgICAgICAgICAgICAgICAgICBDZWxsczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JTQsNGC0LAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFibGVJRDogLTEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0LLRi9C00LDQvdC+INC40Lcg0YTQvtC90LTQvtCyINC00YDRg9Cz0LjRhSDQsdC40LHQu9C40L7RgtC10LonLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4gKNC/0YDQvtGB0LzQvtGC0YDQtdC90L4pINC00L7Qui3QvtCyINC40Lcg0YTQvtC90LTQvtCyINC00YDRg9Cz0LjRhSDQsdC40LHQu9C40L7RgtC10LosINC10LTQuNC90LjRhicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0LLRi9C/0L7Qu9C90LXQvdC+INGB0L/RgNCw0LLQvtC6INC4INC60L7QvdGB0YPQu9GM0YLQsNGG0LjQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L4g0LLQvtC30YDQsNGB0YLRgycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L4g0YLQuNC/0YMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogNSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMaW5lOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgIENlbGxzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+INGB0LjRgdGC0LXQvNC1INCc0JHQkCDQuCDQnNCc0JHQkCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0LjRgNGC0YPQsNC70YzQvdGL0LUg0YfQuNGC0LDQu9GM0L3Ri9C1INC30LDQu9GLJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0LTQviAxNCDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxNC0zMCDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczMCsg0LvQtdGCJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KLQtdC80LDRgtC40YfQtdGB0LrQuNC1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KTQsNC60YLQvtCz0YDQsNGE0LjRhy4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQkdC40LHQu9C40L7Qs9GA0LDRhNC40YcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmtC+0L3RgdGD0LvRjNGC0LDRhtC40LgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQo9C00LDQu9C10L3QvdGL0LUg0YHQv9GA0LDQstC60LgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMaW5lOiAzLFxyXG4gICAgICAgICAgICAgICAgICAgIENlbGxzOltcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogXCIxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzM0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMzUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczNicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzM3JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMzgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczOScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzM5LjEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc0MCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzQxJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnNDInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc0MycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzQ0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIDQ6W1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExpbmU6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CU0LDRgtCwJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRhYmxlSUQ6IC0xLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQkdC10YHQv9C70LDRgtC90YvQtSDQutC70YPQsdGLJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/Qu9Cw0YLQvdGL0LUg0LrQu9GD0LHRiycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExpbmU6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Qu9C40YfQtdGB0YLQstC+INC30LDRgdC10LTQsNC90LjQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LjRgdC70L4g0L/QvtGB0LXRidC10L3QuNC5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JrQvtC70LjRh9C10YHRgtCy0L4g0LfQsNGB0LXQtNCw0L3QuNC5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KfQuNGB0LvQviDQv9C+0YHQtdGJ0LXQvdC40LknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSxcclxuICAgICAgICBUYWJsZURhdGE6IFtdLFxyXG4gICAgfSxcclxuICAgIEdldFNldDp7XHJcbiAgICAgICAgZ2V0IFRhYmxlSGVhZCgpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5Qcm90by5EYXRhLlRhYmxlSGVhZFt0aGlzLlByb3RvLkRhdGEuVGFibGVJRF1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy50Ym9keScsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8dHIgY2xhc3M9XCJ7eyNpZiAoIGkgPT09IDAgfHwgaSAjbW9yZSB0aGlzLkRhdGEubGVuZ3RoLTMpID8gJ3Nyb3cnOid0cm93J319IHt7I2lmIChvLmlzQ2hhbmdlZEJ5T3V0c2lkZSkgPyAnY2hhbmdlZC1vdXRzaWRlJzonJ319e3tEYXlUeXBlfX1cIj4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwgc3VtLXBhcnQtZGF0ZSBsLXBvaW50ZXJcIiB0aXRsZT1cInt7RGF0ZVZpc3VhbH19XCI+e3tEYXRlVmlzdWFsfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbG9jayB7e1AyVjIuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyXCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMi5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlYyLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjIuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYzLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWM1wiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjMuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMy5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlYzLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBsb2NrIHt7UDJWNC5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjRcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlY0LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjQuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWNC5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjUuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlY1XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWNS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlY1LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjUuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlY2LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWNlwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjYuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWNi5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlY2LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWNy5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjdcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlY3LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjcuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWNy5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjguU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlY4XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWOC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlY4LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjguVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlY5LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWOVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjkuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWOS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlY5LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTAuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxMFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjEwLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjEwLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjEwLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTEuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxMVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjExLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjExLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjExLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTIuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxMlwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjEyLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjEyLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjEyLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTMuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxM1wiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjEzLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjEzLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjEzLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTQuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxNFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjE0LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjE0LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjE0LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTUuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxNVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjE1LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjE1LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjE1LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTYuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxNlwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjE2LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjE2LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjE2LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTcuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxN1wiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjE3LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjE3LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjE3LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAxKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMTguU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxOFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjE4LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjE4LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjE4LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrIHt7UDJWMTkuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYxOVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjE5LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjE5LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjE5LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjAuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyMFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjIwLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjIwLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjIwLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjEuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyMVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjIxLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjIxLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjIxLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjIuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyMlwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjIyLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjIyLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjIyLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjMuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyM1wiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjIzLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjIzLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjIzLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjQuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyNFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjI0LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjI0LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjI0LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrIHt7UDJWMjUuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyNVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjI1LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjI1LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjI1LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjYuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyNlwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjI2LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjI2LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjI2LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjcuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyN1wiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjI3LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjI3LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjI3LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjguU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyOFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjI4LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjI4LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjI4LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjkuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyOVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjI5LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjI5LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjI5LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMzAuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYzMFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjMwLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjMwLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjMwLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrIHt7UDJWMjUxLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWMjUxXCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMjUxLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjI1MS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlYyNTEuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYyNjEuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyNjFcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlYyNjEuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMjYxLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjI2MS5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjI3MS5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjI3MVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjI3MS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlYyNzEuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWMjcxLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMjgxLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWMjgxXCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMjgxLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjI4MS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlYyODEuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYyOTEuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYyOTFcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlYyOTEuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMjkxLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjI5MS5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjMwMS5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjMwMVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjMwMS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlYzMDEuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWMzAxLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBsb2NrIHt7UDJWMzEuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYzMVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjMxLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjMxLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjMxLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMzIuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYzMlwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjMyLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjMyLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjMyLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMzMuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYzM1wiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlAyVjMzLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjMzLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjMzLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDJWMzMxLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWMzMxXCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMzMxLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AyVjMzMS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlYzMzEuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDMpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYzNC5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjM0XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMzQuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMzQuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWMzQuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDMpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYzNS5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjM1XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMzUuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMzUuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWMzUuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDMpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYzNi5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjM2XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMzYuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMzYuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWMzYuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDMpPycnOidub25lJ319IGxvY2sge3tQMlYzNy5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjM3XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMzcuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMzcuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWMzcuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDMpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYzOC5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjM4XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMzguRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMzguRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWMzguVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDMpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYzOS5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlAyVjM5XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDJWMzkuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMzkuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDJWMzkuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDMpPycnOidub25lJ319IG51bXBhZGFibGUge3tQMlYzOTEuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQMlYzOTFcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlYzOTEuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDJWMzkxLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1AyVjM5MS5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMyk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjQwLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWNDBcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlY0MC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlY0MC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlY0MC5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMyk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjQxLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWNDFcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlY0MS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlY0MS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlY0MS5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMyk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjQyLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWNDJcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlY0Mi5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlY0Mi5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlY0Mi5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMyk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjQzLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWNDNcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlY0My5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlY0My5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlY0My5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMyk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AyVjQ0LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDJWNDRcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QMlY0NC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQMlY0NC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQMlY0NC5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgPC90cj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXYgY2xhc3M9XCJsaXN0LWVtcHR5XCI+0L3QtdGCINC00LDQvdC90YvRhTwvZGl2PmAsXHJcbiAgICB9LFxyXG4gICAgUHJvcFR5cGVzOntcclxuICAgICAgICBUYWJsZUlEOiBMdXJlLlByb3BUeXBlcy5JbnRcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLkN1cnJlbnREYXRlID0gbnVsbDtcclxuICAgIH0sXHJcbiAgICBTaG93KCl7XHJcbiAgICAgICAgdGhpcy5QYXJlbnQuU3Vic2NyaXB0aW9uLlN1YnNjcmliZSgpO1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoID4gMCAmJiB0aGlzLkN1cnJlbnREYXRlID09PSBEaWFyeS5TdW1tYXJ5LkN1cnJlbnREYXRlKXtcclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goRGlhcnkuU3VtbWFyeS5EYXRhUHJlcGFyZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkNvbnRyb2xsZXIuRGF0YS5sZW5ndGggPCAxICYmIERpYXJ5LlN1bW1hcnkuRGF0YUV2ZW50Lmxlbmd0aCA+IDAgJiYgdGhpcy5DdXJyZW50RGF0ZSA9PT0gRGlhcnkuU3VtbWFyeS5DdXJyZW50RGF0ZSl7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKERpYXJ5LlN1bW1hcnkuRGF0YVByZXBhcmVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoIDwgMSAmJiBEaWFyeS5TdW1tYXJ5LkRhdGFQcmVwYXJlZC5sZW5ndGggPCAxIHx8IHRoaXMuQ3VycmVudERhdGUgIT09IERpYXJ5LlN1bW1hcnkuQ3VycmVudERhdGUpe1xyXG4gICAgICAgICAgICBEaWFyeS5TdW1tYXJ5LkdldERhdGEoKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKERpYXJ5LlN1bW1hcnkuRGF0YVByZXBhcmVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoIDwgMSAmJiBEaWFyeS5TdW1tYXJ5LkRhdGFQcmVwYXJlZC5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goRGlhcnkuU3VtbWFyeS5EYXRhUHJlcGFyZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkNvbnRyb2xsZXIuRGF0YS5sZW5ndGggPCAxICYmIERpYXJ5LlN1bW1hcnkuRGF0YVByZXBhcmVkLmxlbmd0aCA8IDEpe1xyXG4gICAgICAgICAgICBEaWFyeS5TdW1tYXJ5LkdldERhdGEoKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKCk9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChEaWFyeS5TdW1tYXJ5LkRhdGFQcmVwYXJlZCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIERpYXJ5LkNoZWNrRm9yQnJlYWQoKTtcclxuICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgIH0sXHJcbn0pOyIsIm5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeS5TdW1tYXJ5LFxyXG4gICAgTmFtZTogJ1N1bW1hcnlQYXJ0MycsXHJcbiAgICBUeXBlOiAnZGlhcnktc3VtbWFyeS1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGlhcnktc3VtbWFyeS0zJyxcclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cInN1bW1hcnktcGFydFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYnNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW8gdGFiLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cInN1bW1hcnktcGFydDNcIiBpZD1cInN1bW1hcnktcGFydDMtMVwiIGRhdGEtdGFibGVpZD1cIjFcIiBjaGVja2VkPVwiY2hlY2tlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCB0YWItbGFiZWxcIiBmb3I9XCJzdW1tYXJ5LXBhcnQzLTFcIj7Qo9Cn0JXQoiDQktCr0JTQkNCn0Jgg0K3Qm9CV0JrQotCg0J7QndCd0KvQpSDQoNCV0KHQo9Cg0KHQntCSPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgc3VtbWFyeS10YWJsZSBmaXhlZC1oZWlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3M9XCJ0aGVhZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIFRhYmxlSGVhZH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQte3tMaW5lfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIENlbGxzfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCJ7e0NvbHNwYW59fVwiIHJvd3NwYW49XCJ7e1Jvd3NwYW59fVwiIGNsYXNzPVwidGNlbGxcIiB0aXRsZT1cInt7TmFtZX19XCI+e3tOYW1lfX08L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGJvZHkgY2xhc3M9XCJ0Ym9keVwiPjwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBQcm90bzp7XHJcbiAgICAgICAgVGFibGVJRDogMSxcclxuICAgICAgICBUYWJsZUhlYWQ6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgTGluZTogMSxcclxuICAgICAgICAgICAgICAgIENlbGxzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JTQsNGC0LAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRgdC10LPQviDQstGL0LTQsNC90L4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/QviDRgtC40L/RgyDQvdC+0YHQuNGC0LXQu9GPJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogNCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBMaW5lOiAyLFxyXG4gICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90YHRgtCw0LvQu9C40YDQvtCy0LDQvdC90YvQtSDQtNC+0LrRg9C80LXQvdGC0YsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KHQtdGC0LXQstGL0LUg0YPQtNCw0LvQtdC90L3Ri9C1INC70LjRhtC10L3Qt9C40L7QvdC90YvQtScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC3INGN0LvQtdC60YLRgNC+0L3QvdC+0LkgKNGG0LjRhNGA0L7QstC+0LkpINCx0LjQsdC70LjQvtGC0LXQutC4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ0RWRCAvIENELVJPTScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgTGluZTogMyxcclxuICAgICAgICAgICAgICAgIENlbGxzOltcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6IFwiMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnNScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc2JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy50Ym9keScsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8dHIgY2xhc3M9XCJ7eyNpZiAoIGkgPT09IDAgfHwgaSAjbW9yZSB0aGlzLkRhdGEubGVuZ3RoLTMpID8gJ3Nyb3cnOid0cm93J319IHt7I2lmIChvLmlzQ2hhbmdlZEJ5T3V0c2lkZSkgPyAnY2hhbmdlZC1vdXRzaWRlJzonJ319e3tEYXlUeXBlfX1cIj4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwgc3VtLXBhcnQtZGF0ZSBsLXBvaW50ZXJcIiB0aXRsZT1cInt7RGF0ZVZpc3VhbH19XCI+e3tEYXRlVmlzdWFsfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbG9jayB7e1AzVjIuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQM1YyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QM1YyLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AzVjIuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQM1YyLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AzVjMuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQM1YzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QM1YzLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AzVjMuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQM1YzLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AzVjQuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQM1Y0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QM1Y0LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AzVjQuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQM1Y0LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AzVjUuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQM1Y1XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QM1Y1LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AzVjUuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQM1Y1LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMSk/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1AzVjYuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQM1Y2XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QM1Y2LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1AzVjYuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQM1Y2LlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC90cj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXYgY2xhc3M9XCJsaXN0LWVtcHR5XCI+0L3QtdGCINC00LDQvdC90YvRhTwvZGl2PmAsXHJcbiAgICB9LFxyXG4gICAgUHJvcFR5cGVzOntcclxuICAgICAgICBUYWJsZUlEOiBMdXJlLlByb3BUeXBlcy5JbnRcclxuICAgIH0sXHJcbiAgICBTaG93KCl7XHJcbiAgICAgICAgdGhpcy5QYXJlbnQuU3Vic2NyaXB0aW9uLlN1YnNjcmliZSgpO1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKERpYXJ5LlN1bW1hcnkuRGF0YVByZXBhcmVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoIDwgMSAmJiBEaWFyeS5TdW1tYXJ5LkRhdGFQcmVwYXJlZC5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goRGlhcnkuU3VtbWFyeS5EYXRhUHJlcGFyZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkNvbnRyb2xsZXIuRGF0YS5sZW5ndGggPCAxICYmIERpYXJ5LlN1bW1hcnkuRGF0YVByZXBhcmVkLmxlbmd0aCA8IDEpe1xyXG4gICAgICAgICAgICBEaWFyeS5TdW1tYXJ5LkdldERhdGEoKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKCk9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChEaWFyeS5TdW1tYXJ5LkRhdGFQcmVwYXJlZCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBCZWZvcmVTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgRGlhcnkuQ2hlY2tGb3JCcmVhZCgpO1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgfSxcclxufSk7IiwiY29uc3QgRCA9IHJlcXVpcmUoJy4uLy4uL19jb21tb24vZGljdGlvbmFyeScpO1xyXG5cclxuRGlhcnkuU3VtbWFyeS5TdW1tYXJ5UGFydDQgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGlhcnkuU3VtbWFyeSxcclxuICAgIE5hbWU6ICdTdW1tYXJ5UGFydDQnLFxyXG4gICAgVHlwZTogJ2RpYXJ5LXN1bW1hcnktY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWRpYXJ5LXN1bW1hcnktNCcsXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJzdW1tYXJ5LXBhcnRcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvIHRhYi1yYWRpb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJzdW1tYXJ5LXBhcnQ0XCIgaWQ9XCJzdW1tYXJ5LXBhcnQ0LTFcIiBkYXRhLXRhYmxlaWQ9XCIxXCIgY2hlY2tlZD1cImNoZWNrZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgdGFiLWxhYmVsXCIgZm9yPVwic3VtbWFyeS1wYXJ0NC0xXCI+0JrQo9Cb0KzQotCj0KDQndCeLdCc0JDQodCh0J7QktCQ0K8g0KDQkNCR0J7QotCQPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgc3VtbWFyeS10YWJsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz1cInRoZWFkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggVGFibGVIZWFkfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC17e0xpbmV9fVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggQ2VsbHN9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cInt7Q29sc3Bhbn19XCIgcm93c3Bhbj1cInt7Um93c3Bhbn19XCIgY2xhc3M9XCJ0Y2VsbFwiIHRpdGxlPVwie3tOYW1lfX1cIj57e05hbWV9fTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keSBjbGFzcz1cInRib2R5XCI+PC90Ym9keT5cclxuICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3RvOntcclxuICAgICAgICBUYWJsZUlEOiAxLFxyXG4gICAgICAgIFRhYmxlSGVhZDogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBMaW5lOiAxLFxyXG4gICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQlNCw0YLQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQndCw0LfQstCw0L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40Y8nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KTQvtGA0LzQsCDQv9GA0L7QstC10LTQtdC90LjRjycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQodGC0LDRhtC40L7QvdCw0YAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiA1LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLQvdC10YHRgtCw0YbQuNC+0L3QsNGAJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogNSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CR0LXRgdC/0LvQsNGC0L3Ri9C1INC60LvRg9Cx0YsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/Qu9Cw0YLQvdGL0LUg0LrQu9GD0LHRiycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LXQt9C00L3QvtC1ICjQvdCw0LfQstCw0L3QuNC1KScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQntGC0LLQtdGC0YHRgtCy0LXQvdC90YvQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgTGluZTogMixcclxuICAgICAgICAgICAgICAgIENlbGxzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JHQtdGB0L/Qu9Cw0YLQvdC+JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0LvQsNGC0L3QvicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90LLQsNC70LjQtNGLJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cc0LjQs9GA0LDQvdGC0YsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J/RgNC+0YQuINGB0LXQvNC40L3QsNGA0YssINC70LXQutGG0LjQuCwg0Lgg0YIu0L8uJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CR0LXRgdC/0LvQsNGC0L3QvicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C70LDRgtC90L4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JjQvdCy0LDQu9C40LTRiycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQnNC40LPRgNCw0L3RgtGLJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0YDQvtGELiDRgdC10LzQuNC90LDRgNGLLCDQu9C10LrRhtC40LgsINC4INGCLtC/LicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+0YHQtdGJ0LXQvdC40Y8nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JjQvdCy0LDQu9C40LTRiycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQnNC40LPRgNCw0L3RgtGLJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L7RgdC10YnQtdC90LjRjycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90LLQsNC70LjQtNGLJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cc0LjQs9GA0LDQvdGC0YsnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcblxyXG5cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgTGluZTogMyxcclxuICAgICAgICAgICAgICAgIENlbGxzOltcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6IFwiMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnNScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc2JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnOCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzEwJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzExJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzEyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzEzJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE2JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE3JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzIwJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzIxJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgVGFibGVEYXRhOiBbXSxcclxuICAgIH0sXHJcblxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy50Ym9keScsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8dHIgY2xhc3M9XCJ0cm93IHt7I2lmIChvLmlzQ2hhbmdlZEJ5T3V0c2lkZSkgPyAnY2hhbmdlZC1vdXRzaWRlJzonJ319XCI+IFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMlwiIGNsYXNzPVwidGNlbGxcIiB0aXRsZT1cInt7RGF0ZVN0YXJ0fX0gLSB7e0RhdGVGaW5pc2h9fVwiPnt7RGF0ZVN0YXJ0fX08YnI+e3tEYXRlRmluaXNofX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiM1wiIGNsYXNzPVwidGNlbGwgbG9ja1wiIHRpdGxlPVwie3tQNFYyLlZhbHVlfX1cIiBkYXRhLXByb3A9XCJQNFYyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNFYyLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1A0VjIuRC5EZXNjcmlwdGlvbn19XCI+PzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNFYyLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMlwiIGNsYXNzPVwidGNlbGwgbG9jayB7e1A0VjMuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlA0VjNcIiB0aXRsZT1cInt7UDRWMy5WYWx1ZX19XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNFYzLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1A0VjMuRC5EZXNjcmlwdGlvbn19XCI+PzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNFYzLlZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50UGxhY2VUeXBlSUQ9PTEgJiYgKG8uRXZlbnRUeXBlSUQ9PTEgKSApPydudW1wYWRhYmxlJzonbG9jayd9fSAge3tQNFY0LlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQNFY0XCI+e3tQNFY0LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50UGxhY2VUeXBlSUQ9PTEgJiYgKG8uRXZlbnRUeXBlSUQ9PTIpICk/J251bXBhZGFibGUnOidsb2NrJ319ICB7e1A0VjUuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlA0VjVcIj57e1A0VjUuVmFsdWV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKG8uRXZlbnRQbGFjZVR5cGVJRD09MSAmJiAoby5FdmVudFR5cGVJRD09MSB8fCBvLkV2ZW50VHlwZUlEPT0yKSApPydudW1wYWRhYmxlJzonbG9jayd9fSAge3tQNFY2LlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQNFY2XCI+e3tQNFY2LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50UGxhY2VUeXBlSUQ9PTEgJiYgKG8uRXZlbnRUeXBlSUQ9PTEgfHwgby5FdmVudFR5cGVJRD09MikgKT8nbnVtcGFkYWJsZSc6J2xvY2snfX0gIHt7UDRWNy5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWN1wiPnt7UDRWNy5WYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAoby5FdmVudFBsYWNlVHlwZUlEPT0xICYmIChvLkV2ZW50VHlwZUlEPT0xIHx8IG8uRXZlbnRUeXBlSUQ9PTIpICk/J251bXBhZGFibGUnOidsb2NrJ319ICB7e1A0VjguU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlA0VjhcIj57e1A0VjguVmFsdWV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKG8uRXZlbnRQbGFjZVR5cGVJRD09MiAmJiAoby5FdmVudFR5cGVJRD09MSB8fCBvLkV2ZW50VHlwZUlEPT0yKSApPydudW1wYWRhYmxlJzonbG9jayd9fSAge3tQNFY5LlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQNFY5XCI+e3tQNFY5LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50UGxhY2VUeXBlSUQ9PTIgJiYgKG8uRXZlbnRUeXBlSUQ9PTEgfHwgby5FdmVudFR5cGVJRD09MikgKT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxMC5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTBcIj57e1A0VjEwLlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50UGxhY2VUeXBlSUQ9PTIgJiYgKG8uRXZlbnRUeXBlSUQ9PTEgfHwgby5FdmVudFR5cGVJRD09MikgKT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxMS5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTFcIj57e1A0VjExLlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50UGxhY2VUeXBlSUQ9PTIgJiYgKG8uRXZlbnRUeXBlSUQ9PTEgfHwgby5FdmVudFR5cGVJRD09MikgKT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxMi5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTJcIj57e1A0VjEyLlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50UGxhY2VUeXBlSUQ9PTIgJiYgKG8uRXZlbnRUeXBlSUQ9PTEgfHwgby5FdmVudFR5cGVJRD09MikgKT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxMy5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTNcIj57e1A0VjEzLlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50VHlwZUlEPT0zKT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxNC5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTRcIj57e1A0VjE0LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50VHlwZUlEPT0zKT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxNS5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTVcIj57e1A0VjE1LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50VHlwZUlEPT0zKT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxNi5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTZcIj57e1A0VjE2LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50VHlwZUlEPT00KT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxNy5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTdcIj57e1A0VjE3LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50VHlwZUlEPT00KT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxOC5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMThcIj57e1A0VjE4LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmIChvLkV2ZW50VHlwZUlEPT00KT8nbnVtcGFkYWJsZSc6J2xvY2snfX0ge3tQNFYxOS5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMTlcIj57e1A0VjE5LlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMlwiIGNsYXNzPVwidGNlbGwgdGV4dGJveGFibGUge3tQNFYyMC5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDRWMjBcIiB0aXRsZT1cInt7UDRWMjAuVmFsdWV9fVwiPnt7UDRWMjAuVmFsdWV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XCIyXCIgY2xhc3M9XCJ0Y2VsbCB7e1A0VjIxLlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQNFYyMVwiIHRpdGxlPVwie3tQNFYyMS5WYWx1ZX19XCI+e3tQNFYyMS5WYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvdHI+YCxcclxuICAgICAgICBFbXB0eU1lc3NhZ2U6IGA8dGQgY29sc3Bhbj1cIjI2XCIgY2xhc3M9XCJ0Y2VsbCBsaXN0LWVtcHR5XCI+0L3QtdGCINC00LDQvdC90YvRhTwvdGQ+YCxcclxuICAgICAgICAvLyBCZWZvcmVCdWlsZDogZnVuY3Rpb24oUmVmcmVzaFR5cGUpe1xyXG4gICAgICAgIC8vICAgICB0aGlzLlRCb2R5LnN0eWxlLmhlaWdodCA9IHRoaXMuQ29udGVudC5jbGllbnRIZWlnaHQgKydweCc7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuVEJvZHkuc3R5bGUud2lkdGggPSB0aGlzLkNvbnRlbnQuY2xpZW50V2lkdGggKydweCc7XHJcbiAgICAgICAgLy8gICAgIGRlYnVnZ2VyO1xyXG4gICAgICAgIC8vIH0sXHJcbiAgICAgICAgTGluZVNhdmU6IGZ1bmN0aW9uIChEYXRhSXRlbSwgYSwgVmFsKSB7XHJcbiAgICAgICAgICAgIGxldCB0ZCA9IEx1cmUuU2VsZWN0KGAudGNlbGxbZGF0YS1wcm9wPVwiJHthLnNwbGl0KCcuJylbMF19XCJdYCwgRGF0YUl0ZW0uRE9NKTtcclxuICAgICAgICAgICAgaWYgKHRkKVxyXG4gICAgICAgICAgICAgICAgdGQuc2V0QXR0cmlidXRlKCd0aXRsZScsIFZhbCk7XHJcbiAgICAgICAgICAgIGlmIChMdXJlLk9iamVjdC5HZXRQcm9wZXJ0eShEYXRhSXRlbS5EYXRhLCBhLnJlcGxhY2UoJ1ZhbHVlJywgJ19WYWx1ZScpKSAhPT0gVmFsKXtcclxuICAgICAgICAgICAgICAgIHRkLmNsYXNzTGlzdC5hZGQoJ2NoYW5nZWQnKTtcclxuICAgICAgICAgICAgICAgIEx1cmUuT2JqZWN0LlNldFByb3BlcnR5KERhdGFJdGVtLkRhdGEsIGEsIFZhbCk7XHJcbiAgICAgICAgICAgICAgICBEaWFyeS5TdW1tYXJ5LkNoZWNrKERhdGFJdGVtLkRhdGEpO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHRkLmNsYXNzTGlzdC5yZW1vdmUoJ2NoYW5nZWQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCcnKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUHJvcFR5cGVzOntcclxuICAgICAgICBUYWJsZUlEOiBMdXJlLlByb3BUeXBlcy5JbnRcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OiB7XHJcbiAgICAgICAgRGF0ZVN0YXJ0OiAoZCk9Pkx1cmUuRGF0ZShkKS5Gb3JtYXQoJ0RELk1NLllZWVknKSxcclxuICAgICAgICBEYXRlRmluaXNoOiAoZCk9Pkx1cmUuRGF0ZShkKS5Gb3JtYXQoJ0RELk1NLllZWVknKSxcclxuXHJcbiAgICAgICAgJ1A0VjMuVmFsdWUnOiAocik9PkQuRXZlbnRUeXBlRGljdFtyXSxcclxuICAgICAgICAnUDRWMjEuVmFsdWUnOiAoVXNlcklEKT0+e1xyXG4gICAgICAgICAgICBVc2VySUQgPSBwYXJzZUludChVc2VySUQpO1xyXG4gICAgICAgICAgICBsZXQgVXNlciA9IEx1cmUuVXNlci5DYWNoZS5Vc2VyTGlzdC5XaGVyZSh4PT54LklEID09PSBVc2VySUQpLkZpcnN0T3JEZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGlmIChVc2VyID09PSBudWxsKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICfQndC1INC30LDQtNCw0L0gKic7XHJcbiAgICAgICAgICAgIHJldHVybiBVc2VyLk5hbWU7Ly9gJHtVc2VyLk5hbWV9IFske1VzZXIuUG9zaXRpb259XSwgRW1haWw6ICR7VXNlci5FbWFpbH0sINCi0LXQuy4gJHtVc2VyLlBob25lfWBcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5DdXJyZW50RGF0ZSA9IG51bGw7XHJcbiAgICB9LFxyXG4gICAgU2hvdygpe1xyXG4gICAgICAgIHRoaXMuUGFyZW50LlN1YnNjcmlwdGlvbi5TdWJzY3JpYmUoKTtcclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuQ29udHJvbGxlci5EYXRhLmxlbmd0aCA+IDAgJiYgdGhpcy5DdXJyZW50RGF0ZSA9PT0gRGlhcnkuU3VtbWFyeS5DdXJyZW50RGF0ZSl7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKERpYXJ5LlN1bW1hcnkuRGF0YUV2ZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoIDwgMSAmJiBEaWFyeS5TdW1tYXJ5LkRhdGFFdmVudC5sZW5ndGggPiAwICYmIHRoaXMuQ3VycmVudERhdGUgPT09IERpYXJ5LlN1bW1hcnkuQ3VycmVudERhdGUpe1xyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChEaWFyeS5TdW1tYXJ5LkRhdGFFdmVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuQ29udHJvbGxlci5EYXRhLmxlbmd0aCA8IDEgJiYgRGlhcnkuU3VtbWFyeS5EYXRhRXZlbnQubGVuZ3RoIDwgMSB8fCB0aGlzLkN1cnJlbnREYXRlICE9PSBEaWFyeS5TdW1tYXJ5LkN1cnJlbnREYXRlKXtcclxuICAgICAgICAgICAgRGlhcnkuU3VtbWFyeS5HZXREYXRhKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIEJlZm9yZVNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBEaWFyeS5DaGVja0ZvckJyZWFkKCk7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICB9LFxyXG59KTsiLCJEaWFyeS5TdW1tYXJ5LlN1bW1hcnlQYXJ0NSA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeS5TdW1tYXJ5LFxyXG4gICAgTmFtZTogJ1N1bW1hcnlQYXJ0NScsXHJcbiAgICBUeXBlOiAnZGlhcnktc3VtbWFyeS1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtZGlhcnktc3VtbWFyeS01JyxcclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cInN1bW1hcnktcGFydFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYnNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW8gdGFiLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cInN1bW1hcnktcGFydDVcIiBpZD1cInN1bW1hcnktcGFydDUtMVwiIGRhdGEtdGFibGVpZD1cIjFcIiBjaGVja2VkPVwiY2hlY2tlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCB0YWItbGFiZWxcIiBmb3I9XCJzdW1tYXJ5LXBhcnQ1LTFcIj7QktCr0KHQotCQ0JLQmtCYPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgc3VtbWFyeS10YWJsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz1cInRoZWFkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggVGFibGVIZWFkfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC17e0xpbmV9fVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggQ2VsbHN9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cInt7Q29sc3Bhbn19XCIgcm93c3Bhbj1cInt7Um93c3Bhbn19XCIgY2xhc3M9XCJ0Y2VsbFwiIHRpdGxlPVwie3tOYW1lfX1cIj57e05hbWV9fTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keSBjbGFzcz1cInRib2R5XCI+PC90Ym9keT5cclxuICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3RvOntcclxuICAgICAgICBUYWJsZUlEOiAxLFxyXG4gICAgICAgIFRhYmxlSGVhZDogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBMaW5lOiAxLFxyXG4gICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQlNCw0YLQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQndCw0LfQstCw0L3QuNC1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Qu9C40YfQtdGB0YLQstC+INC/0YDQtdC00YHRgtCw0LLQu9C10L3QvdGL0YUg0LTQvtC60YPQvNC10L3RgtC+0LInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JrQvtC70LjRh9C10YHRgtCy0L4g0LLRi9C00LDQvdC90YvRhSDQtNC+0LrRg9C80LXQvdGC0L7QsicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQntGC0LLQtdGC0YHRgtCy0LXQvdC90YvQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQn9GA0LjQvNC10YfQsNC90LjRjycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgTGluZTogMyxcclxuICAgICAgICAgICAgICAgIENlbGxzOltcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6IFwiMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICczJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnNScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc2JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy50Ym9keScsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8dHIgY2xhc3M9XCJ0cm93IHt7I2lmIChvLmlzQ2hhbmdlZEJ5T3V0c2lkZSkgPyAnY2hhbmdlZC1vdXRzaWRlJzonJ319XCI+IFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsXCIgdGl0bGU9XCJ7e0RhdGVTdGFydH19IC0ge3tEYXRlRmluaXNofX1cIj57e0RhdGVTdGFydH19IC0ge3tEYXRlRmluaXNofX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMlwiIGNsYXNzPVwidGNlbGwgbG9ja1wiIGRhdGEtcHJvcD1cIlA1VjJcIj57e1A1VjIuVmFsdWV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGNlbGwgbnVtcGFkYWJsZSAge3tQNVYzLlN0YXRlfX1cIiBkYXRhLXByb3A9XCJQNVYzXCI+e3tQNVYzLlZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIG51bXBhZGFibGUgIHt7UDVWNC5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDVWNFwiPnt7UDVWNC5WYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7e1A1VjUuU3RhdGV9fVwiIGRhdGEtcHJvcD1cIlA1VjVcIj57e1A1VjUuVmFsdWV9fTwvdGQ+IFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHRleHRib3hhYmxlIHt7UDVWNi5TdGF0ZX19XCIgZGF0YS1wcm9wPVwiUDVWNlwiPnt7UDVWNi5WYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvdHI+YCxcclxuICAgICAgICBFbXB0eU1lc3NhZ2U6IGA8dGQgY29sc3Bhbj1cIjZcIiBjbGFzcz1cImxpc3QtZW1wdHlcIj7QvdC10YIg0LTQsNC90L3Ri9GFPC90ZD5gLFxyXG4gICAgICAgIExpbmVTYXZlOiBmdW5jdGlvbiAoRGF0YUl0ZW0sIGEsIFZhbCkge1xyXG4gICAgICAgICAgICBsZXQgdGQgPSBMdXJlLlNlbGVjdChgLnRjZWxsW2RhdGEtcHJvcD1cIiR7YS5zcGxpdCgnLicpWzBdfVwiXWAsIERhdGFJdGVtLkRPTSk7XHJcbiAgICAgICAgICAgIGlmICh0ZClcclxuICAgICAgICAgICAgICAgIHRkLnNldEF0dHJpYnV0ZSgndGl0bGUnLCBWYWwpO1xyXG4gICAgICAgICAgICBpZiAoTHVyZS5PYmplY3QuR2V0UHJvcGVydHkoRGF0YUl0ZW0uRGF0YSwgYS5yZXBsYWNlKCdWYWx1ZScsICdfVmFsdWUnKSkgIT09IFZhbCl7XHJcbiAgICAgICAgICAgICAgICB0ZC5jbGFzc0xpc3QuYWRkKCdjaGFuZ2VkJyk7XHJcbiAgICAgICAgICAgICAgICBMdXJlLk9iamVjdC5TZXRQcm9wZXJ0eShEYXRhSXRlbS5EYXRhLCBhLCBWYWwpO1xyXG4gICAgICAgICAgICAgICAgRGlhcnkuU3VtbWFyeS5DaGVjayhEYXRhSXRlbS5EYXRhKTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0ZC5jbGFzc0xpc3QucmVtb3ZlKCdjaGFuZ2VkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgnJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBEYXRlU3RhcnQ6IChkKT0+THVyZS5EYXRlKGQpLkZvcm1hdCgnREQuTU0uWVlZWScpLFxyXG4gICAgICAgIERhdGVGaW5pc2g6IChkKT0+THVyZS5EYXRlKGQpLkZvcm1hdCgnREQuTU0uWVlZWScpLFxyXG4gICAgICAgICdQNVY1LlZhbHVlJzogKFVzZXJJRCk9PntcclxuICAgICAgICAgICAgVXNlcklEID0gcGFyc2VJbnQoVXNlcklEKTtcclxuICAgICAgICAgICAgbGV0IFVzZXIgPSBMdXJlLlVzZXIuQ2FjaGUuVXNlckxpc3QuV2hlcmUoeD0+eC5JRCA9PT0gVXNlcklEKS5GaXJzdE9yRGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBpZiAoVXNlciA9PT0gbnVsbClcclxuICAgICAgICAgICAgICAgIHJldHVybiAn0J3QtSDQt9Cw0LTQsNC9IConO1xyXG4gICAgICAgICAgICByZXR1cm4gVXNlci5OYW1lOy8vYCR7VXNlci5OYW1lfSBbJHtVc2VyLlBvc2l0aW9ufV0sIEVtYWlsOiAke1VzZXIuRW1haWx9LCDQotC10LsuICR7VXNlci5QaG9uZX1gXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLkN1cnJlbnREYXRlID0gbnVsbDtcclxuICAgIH0sXHJcbiAgICBTaG93KCl7XHJcbiAgICAgICAgdGhpcy5QYXJlbnQuU3Vic2NyaXB0aW9uLlN1YnNjcmliZSgpO1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoID4gMCAmJiB0aGlzLkN1cnJlbnREYXRlID09PSBEaWFyeS5TdW1tYXJ5LkN1cnJlbnREYXRlKXtcclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goRGlhcnkuU3VtbWFyeS5EYXRhRXhoaWJpdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuQ29udHJvbGxlci5EYXRhLmxlbmd0aCA8IDEgJiYgRGlhcnkuU3VtbWFyeS5EYXRhRXhoaWJpdGlvbi5sZW5ndGggPiAwICYmIHRoaXMuQ3VycmVudERhdGUgPT09IERpYXJ5LlN1bW1hcnkuQ3VycmVudERhdGUpe1xyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChEaWFyeS5TdW1tYXJ5LkRhdGFFeGhpYml0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoIDwgMSAmJiBEaWFyeS5TdW1tYXJ5LkRhdGFFeGhpYml0aW9uLmxlbmd0aCA8IDEgfHwgdGhpcy5DdXJyZW50RGF0ZSAhPT0gRGlhcnkuU3VtbWFyeS5DdXJyZW50RGF0ZSl7XHJcbiAgICAgICAgICAgIERpYXJ5LlN1bW1hcnkuR2V0RGF0YSgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBCZWZvcmVTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgRGlhcnkuQ2hlY2tGb3JCcmVhZCgpO1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgfSxcclxufSk7IiwibmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERpYXJ5LlN1bW1hcnksXHJcbiAgICBOYW1lOiAnU3VtbWFyeVBhcnQ2JyxcclxuICAgIFR5cGU6ICdkaWFyeS1zdW1tYXJ5LWNvbnRlbnQnLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1kaWFyeS1zdW1tYXJ5LTYnLFxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwic3VtbWFyeS1wYXJ0XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFic1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyB0YWItcmFkaW9cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwic3VtbWFyeS1wYXJ0NlwiIGlkPVwic3VtbWFyeS1wYXJ0Ni0xXCIgZGF0YS10YWJsZWlkPVwiMVwiIGNoZWNrZWQ9XCJjaGVja2VkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImxhYmVsIHRhYi1sYWJlbFwiIGZvcj1cInN1bW1hcnktcGFydDYtMVwiPtCf0J7Qm9Cs0JfQntCS0JDQotCV0JvQmCDQndCQINCU0J7QnNCjPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW8gdGFiLXJhZGlvXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cInN1bW1hcnktcGFydDZcIiBpZD1cInN1bW1hcnktcGFydDYtMlwiIGRhdGEtdGFibGVpZD1cIjJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgdGFiLWxhYmVsXCIgZm9yPVwic3VtbWFyeS1wYXJ0Ni0yXCI+0KDQkNCR0J7QotCQINCf0JXQoNCV0JTQktCY0JbQldCaPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgc3VtbWFyeS10YWJsZSBmaXhlZC1oZWlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3M9XCJ0aGVhZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIHRoaXMuVGFibGVIZWFkfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC17e0xpbmV9fVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggQ2VsbHN9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cInt7Q29sc3Bhbn19XCIgcm93c3Bhbj1cInt7Um93c3Bhbn19XCIgY2xhc3M9XCJ0Y2VsbFwiIHRpdGxlPVwie3tOYW1lfX1cIj57e05hbWV9fTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keSBjbGFzcz1cInRib2R5XCI+PC90Ym9keT5cclxuICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3RvOntcclxuICAgICAgICBUYWJsZUlEOiAxLFxyXG4gICAgICAgIFRhYmxlSGVhZDoge1xyXG4gICAgICAgICAgICAxOltcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMaW5lOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIENlbGxzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQlNCw0YLQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CX0LDRgNC10LPQuNGB0YLRgNC40YDQvtCy0LDQvdC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JjQtyDQvdC40YUg0LjQvdCy0LDQu9C40LTQvtCyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC60L3QuNCzINC90LAg0LTQvtC8JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KDQsNCx0L7RgtCwINGBINC/0LXRgNC10LTQstC40LbQutCw0LzQuCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExpbmU6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgQ2VsbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L7RgdC10YnQtdC90LjQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7QvdGB0YPQu9GM0YLQsNGG0LjRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ch0LXQvNC40L3QsNGAINC/0LXRgNC10LTQstC40LbQvdC40LrQvtCyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGluZTogMyxcclxuICAgICAgICAgICAgICAgICAgICBDZWxsczpbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6IFwiMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc1JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnNicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgMjpbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGluZTogMSxcclxuICAgICAgICAgICAgICAgICAgICBDZWxsczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JTQsNGC0LAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFibGVJRDogLTEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Qu9C40YfQtdGB0YLQstC+INC/0LXRgNC10LTQstC40LbQtdC6JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KfQuNGB0LvQviDRh9C40YLQsNGC0LXQu9C10Lkg0LIg0L3QuNGFJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JLRgdC10LPQviDQstGL0LTQsNC90L4g0LrQvdC40LMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+INGC0LXQvNCw0YLQuNC60LUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMTEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JzQsNGB0YHQvtCy0YvQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNGPJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGluZTogMixcclxuICAgICAgICAgICAgICAgICAgICBDZWxsczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0J7Qn9CbJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JUv0LfQvScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ci0LXRhdC90LjQutCwJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KEv0YUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQmNGB0LrRg9GB0YHRgtCy0L4nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQodC/0L7RgNGCJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnODEuODMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQodC/0YDQsNCy0L7Rh9C90LjQutC4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JTQtdGCLiDQu9C40YIt0YDQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cl0YPQtC4g0LvQuNGCLdGA0LAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQlNC+0L/QvtC70L3QuNGCLicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Qu9C40YfQtdGB0YLQstC+JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KfQuNGB0LvQviDQvtCx0YHQu9GD0LbQtdC90L3Ri9GFJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExpbmU6IDMsXHJcbiAgICAgICAgICAgICAgICAgICAgQ2VsbHM6W1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiBcIjFcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnNScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzYnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICc3JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnOCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxMCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzExJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxMycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAnMTUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29sc3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvd3NwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICcxNicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb2xzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUm93c3BhbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJzE3JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbHNwYW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb3dzcGFuOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF0sXHJcblxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgVGFibGVEYXRhOiBbXSxcclxuICAgIH0sXHJcbiAgICBHZXRTZXQ6e1xyXG4gICAgICAgIGdldCBUYWJsZUhlYWQoKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuUHJvdG8uRGF0YS5UYWJsZUhlYWRbdGhpcy5Qcm90by5EYXRhLlRhYmxlSURdXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIENvbnRyb2xsZXI6IHtcclxuICAgICAgICBUYXJnZXQ6ICcudGJvZHknLFxyXG4gICAgICAgIExpc3RFbGVtZW50OiBgPHRyIGNsYXNzPVwie3sjaWYgKCBpID09PSAwIHx8IGkgI21vcmUgdGhpcy5EYXRhLmxlbmd0aC0zKSA/ICdzcm93JzondHJvdyd9fSB7eyNpZiAoby5pc0NoYW5nZWRCeU91dHNpZGUpID8gJ2NoYW5nZWQtb3V0c2lkZSc6Jyd9fXt7RGF5VHlwZX19XCI+IFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRjZWxsIHN1bS1wYXJ0LWRhdGUgbC1wb2ludGVyXCIgdGl0bGU9XCJ7e0RhdGVWaXN1YWx9fVwiPnt7RGF0ZVZpc3VhbH19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQNjFWMi5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MVYyXCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYxVjIuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDYxVjIuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYxVjIuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQNjFWMy5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MVYzXCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYxVjMuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDYxVjMuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYxVjMuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQNjFWNC5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MVY0XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYxVjQuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDYxVjQuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYxVjQuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQNjFWNS5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MVY1XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYxVjUuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDYxVjUuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYxVjUuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQNjFWNi5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MVY2XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYxVjYuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDYxVjYuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYxVjYuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDEpPycnOidub25lJ319IG51bXBhZGFibGUge3tQNjFWNy5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MVY3XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYxVjcuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDYxVjcuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYxVjcuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG5cclxuIDx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlYyLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjJcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWMi5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWMi5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWMi5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlYzLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjNcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWMy5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWMy5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWMy5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbG9jayB7e1A2MlY0LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjRcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWNC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWNC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWNC5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlY1LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjVcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWNS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWNS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWNS5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlY2LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjZcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWNi5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWNi5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWNi5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlY3LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjdcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWNy5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWNy5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWNy5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlY4LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjhcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWOC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWOC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWOC5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlY5LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjlcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWOS5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWOS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWOS5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlYxMC5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MlYxMFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlA2MlYxMC5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWMTAuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYyVjEwLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDYyVjExLlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjExXCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYyVjExLkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1A2MlYxMS5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWMTEuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IG51bXBhZGFibGUge3tQNjJWMTIuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQNjJWMTJcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWMTIuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDYyVjEyLkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1A2MlYxMi5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlYxMy5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MlYxM1wiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlA2MlYxMy5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWMTMuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYyVjEzLlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDYyVjE0LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjE0XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYyVjE0LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1A2MlYxNC5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWMTQuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG48dGQgY2xhc3M9XCJ0Y2VsbCB7eyNpZiAodGhpcy5Qcm90by5EYXRhLlRhYmxlSUQgPT09IDIpPycnOidub25lJ319IG51bXBhZGFibGUge3tQNjJWMTUuU3RhdGV9fVwiICBkYXRhLXByb3A9XCJQNjJWMTVcIj5cclxuICA8ZGl2IGNsYXNzPVwiaGludCB7eyNpZiAoby5QNjJWMTUuRC5EZXNjcmlwdGlvbikgPyAnJzonbm9uZSd9fVwiIGRhdGEtaGludD1cInt7UDYyVjE1LkQuRGVzY3JpcHRpb259fVwiPmY8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e1A2MlYxNS5WYWx1ZX19PC9kaXY+XHJcbjwvdGQ+XHJcbjx0ZCBjbGFzcz1cInRjZWxsIHt7I2lmICh0aGlzLlByb3RvLkRhdGEuVGFibGVJRCA9PT0gMik/Jyc6J25vbmUnfX0gbnVtcGFkYWJsZSB7e1A2MlYxNi5TdGF0ZX19XCIgIGRhdGEtcHJvcD1cIlA2MlYxNlwiPlxyXG4gIDxkaXYgY2xhc3M9XCJoaW50IHt7I2lmIChvLlA2MlYxNi5ELkRlc2NyaXB0aW9uKSA/ICcnOidub25lJ319XCIgZGF0YS1oaW50PVwie3tQNjJWMTYuRC5EZXNjcmlwdGlvbn19XCI+ZjwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7UDYyVjE2LlZhbHVlfX08L2Rpdj5cclxuPC90ZD5cclxuPHRkIGNsYXNzPVwidGNlbGwge3sjaWYgKHRoaXMuUHJvdG8uRGF0YS5UYWJsZUlEID09PSAyKT8nJzonbm9uZSd9fSBudW1wYWRhYmxlIHt7UDYyVjE3LlN0YXRlfX1cIiAgZGF0YS1wcm9wPVwiUDYyVjE3XCI+XHJcbiAgPGRpdiBjbGFzcz1cImhpbnQge3sjaWYgKG8uUDYyVjE3LkQuRGVzY3JpcHRpb24pID8gJyc6J25vbmUnfX1cIiBkYXRhLWhpbnQ9XCJ7e1A2MlYxNy5ELkRlc2NyaXB0aW9ufX1cIj5mPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tQNjJWMTcuVmFsdWV9fTwvZGl2PlxyXG48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC90cj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXYgY2xhc3M9XCJsaXN0LWVtcHR5XCI+0L3QtdGCINC00LDQvdC90YvRhTwvZGl2PmAsXHJcbiAgICB9LFxyXG4gICAgUHJvcFR5cGVzOntcclxuICAgICAgICBUYWJsZUlEOiBMdXJlLlByb3BUeXBlcy5JbnRcclxuICAgIH0sXHJcblxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5DdXJyZW50RGF0ZSA9IG51bGw7XHJcbiAgICB9LFxyXG4gICAgU2hvdygpe1xyXG4gICAgICAgIHRoaXMuUGFyZW50LlN1YnNjcmlwdGlvbi5TdWJzY3JpYmUoKTtcclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuQ29udHJvbGxlci5EYXRhLmxlbmd0aCA+IDAgJiYgdGhpcy5DdXJyZW50RGF0ZSA9PT0gRGlhcnkuU3VtbWFyeS5DdXJyZW50RGF0ZSl7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKERpYXJ5LlN1bW1hcnkuRGF0YVByZXBhcmVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoIDwgMSAmJiBEaWFyeS5TdW1tYXJ5LkRhdGFQcmVwYXJlZC5sZW5ndGggPiAwICYmIHRoaXMuQ3VycmVudERhdGUgPT09IERpYXJ5LlN1bW1hcnkuQ3VycmVudERhdGUpe1xyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChEaWFyeS5TdW1tYXJ5LkRhdGFQcmVwYXJlZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuQ29udHJvbGxlci5EYXRhLmxlbmd0aCA8IDEgJiYgRGlhcnkuU3VtbWFyeS5EYXRhUHJlcGFyZWQubGVuZ3RoIDwgMSB8fCB0aGlzLkN1cnJlbnREYXRlICE9PSBEaWFyeS5TdW1tYXJ5LkN1cnJlbnREYXRlKXtcclxuICAgICAgICAgICAgRGlhcnkuU3VtbWFyeS5HZXREYXRhKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIEJlZm9yZVNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBEaWFyeS5DaGVja0ZvckJyZWFkKCk7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICB9LFxyXG59KTsiLCJjb25zdCBTdGF0aWMgPSByZXF1aXJlKFwiLi4vLi4vX2NvbW1vbi9zdGF0aWNcIik7XHJcbmNvbnN0IEQgPSByZXF1aXJlKFwiLi4vLi4vX2NvbW1vbi9kaWN0aW9uYXJ5XCIpO1xyXG5jb25zdCBIaXN0b3J5U3Vic2NyaXB0aW9uID0gcmVxdWlyZSgnLi4vLi4vX2NvbW1vbi9oaXN0b3J5LW1hc3Rlci9oaXN0b3J5LXN1YnNjcmlwdGlvbicpO1xyXG4vL2NvbnN0IE51bVBhZCA9IHJlcXVpcmUoXCIuLi8uLi9fY29tbW9uL251bXBhZC9udW1wYWRcIik7XHJcbmNvbnN0IElucHV0Qm94ID0gcmVxdWlyZShcIi4uLy4uL19jb21tb24vaW5wdXQtYm94L2lucHV0LWJveFwiKTtcclxuXHJcbkRpYXJ5LlN1bW1hcnkgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGlhcnksXHJcbiAgICBOYW1lOiAnU3VtbWFyeScsXHJcbiAgICBUeXBlOiAnZGlhcnktY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWRpYXJ5LXN1bW1hcnknLFxyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0QuUm9sZS5EYWlyeVN1bW1hcnldLFxyXG4gICAgICAgIFdyaXRlOiBbRC5Sb2xlLkRhaXJ5U3VtbWFyeUVkaXRdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJzdW1tYXJ5XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnJlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGkgYnJlYWQtZGF0ZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0JTQsNGC0LAg0LLQvdC10YHQtdC90L3Ri9GFINC00LDQvdC90YvRhTogJm5ic3A7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtMTAwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJkYXRlLWxpc3RcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggTW9udGhzfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwie3tWYWx1ZX19XCI+e3tUZXh0fX08L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGkgYnJlYWQtbGlicmFyeSBsLXJvdyBsLWZsZXhhLWNlbnRlciBmbGV4LTEwMFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdj7Qn9C+0LTRgNCw0LfQtNC10LvQtdC90LjQtTogJm5ic3A7Jm5ic3A7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC0xMDAgbGlicmFyeS10cmVlLWNvbnRyb2xcIj5fXzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaSBidXR0b24taG9sZGVyIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnRuLXJlZnJlc2hcIj7QntCx0L3QvtCy0LjRgtGMPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpIGJ1dHRvbi1ob2xkZXIgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnV0dG9uLWdldC14bHNcIj7QrdC60YHQv9C+0YDRgjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVkaXQtY29udHJvbHMgbC1yb3cge3sjaWYgKG8uTGlicmFyeUlETGlzdFNlbGVjdGVkLmxlbmd0aCAjbW9yZSAxKSA/ICdub25lJzonJ319XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnV0dG9uLWNsZWFyXCI+0J7Rh9C40YHRgtC40YLRjDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1idXR0b24gYnV0dG9uIGJ1dHRvbi1zYXZlXCI+0KHQvtGF0YDQsNC90LjRgtGMPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIExvYWQ6ICcnLFxyXG4gICAgU3RhdGU6IHtcclxuICAgICAgICBNb250aHM6IFtdLFxyXG4gICAgICAgIERhdGVTZWxlY3RlZDogbnVsbCxcclxuICAgICAgICBMaWJyYXJ5SURMaXN0U2VsZWN0ZWQ6IFtdLFxyXG4gICAgfSxcclxuICAgIEdldFNldDoge1xyXG4gICAgICAgIGdldCBDdXJyZW50UGFydCgpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5HZXRTdWJDb250ZW50TGlzdCgpXHJcbiAgICAgICAgICAgICAgICAuV2hlcmUoeD0+eC5pc0FjdGl2ZSAmJiB4LlR5cGUgIT09ICdzaWRlLWFicy1jb250ZW50JylcclxuICAgICAgICAgICAgICAgIC5GaXJzdE9yRGVmYXVsdCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0IEN1cnJlbnRMaWJyYXJpZXMoKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5SURMaXN0U2VsZWN0ZWQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBnZXQgQ3VycmVudExpYnJhcnlJRCgpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5Qcm90by5EYXRhLkxpYnJhcnlJRExpc3RTZWxlY3RlZC5GaXJzdE9yRGVmYXVsdCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0IEN1cnJlbnREYXRlKCl7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuRCA9IHtcclxuICAgICAgICAgICAgUDFWMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AxVjQnLCAnUDFWNyddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcxLjIgPSAxLjQgKyAxLjcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogKERhdGEpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIERhdGEuUDFWNC5WYWx1ZSArIERhdGEuUDFWNy5WYWx1ZTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjM6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktC90L7QstGMINC30LDQv9C40YHQsNCy0YjQuNGF0YHRjycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDFWMiddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcxLjMgPD0gMS4yJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiAoRGF0YSk9PntcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGF0YS5QMVYzLlZhbHVlIDw9IERhdGEuUDFWMi5WYWx1ZVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjQ6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGB0LXQs9C+INGB0YLQsNGG0LjQvtC90LDRgCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDFWNycsICdQMVY4JywgJ1AxVjknLCAnUDFWMTAnLCAnUDFWMTEnLCAnUDFWMTInLCAnUDFWMTMnLCAnUDFWMTQnLCAnUDFWMTUnLCAnUDFWMTYnXSxcclxuICAgICAgICAgICAgICAgIC8vRGVzY3JpcHRpb246ICcxLjQgKyAxLjcgPSDRgdGD0LzQvNCwINGBIDEuOCDQv9C+IDEuMTYnLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcxLjQgPSAxLjUgKyAxLjYgKyAxLjYuMScsXHJcbiAgICAgICAgICAgICAgICAvLyBDaGVjazogKERhdGEpPT57XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgcmV0dXJuIERhdGEuUDFWNC5WYWx1ZSArIERhdGEuUDFWNy5WYWx1ZSA9PT0gRGF0YS5QMVY4LlZhbHVlICsgRGF0YS5QMVY5LlZhbHVlICsgRGF0YS5QMVYxMC5WYWx1ZSArIERhdGEuUDFWMTEuVmFsdWUgKyBEYXRhLlAxVjEyLlZhbHVlICsgRGF0YS5QMVYxMy5WYWx1ZSArIERhdGEuUDFWMTQuVmFsdWUgKyBEYXRhLlAxVjE1LlZhbHVlICsgRGF0YS5QMVYxNi5WYWx1ZVxyXG4gICAgICAgICAgICAgICAgLy8gfSxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IChEYXRhKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBEYXRhLlAxVjUuVmFsdWUgKyBEYXRhLlAxVjYuVmFsdWUgKyBEYXRhLlAxVjYxLlZhbHVlIC8vMS40ID0gMS41KzEuNisxLjYuMVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVY1OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLQvtC30YDQsNGB0YIg0LTQviAxNCDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AxVjgnLCAnUDFWOScsICdQMVYxMCddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcxLjUgPSAg0YHRg9C80LzQsCDRgSAxLjgg0L/QviAxLjEwJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IChEYXRhKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBEYXRhLlAxVjguVmFsdWUgKyBEYXRhLlAxVjkuVmFsdWUgKyBEYXRhLlAxVjEwLlZhbHVlLy8gKyBEYXRhLlAxVjExLlZhbHVlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjY6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktC+0LfRgNCw0YHRgiAxNC0zMCDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AxVjUnLCAnUDFWOCcsICdQMVY5JywgJ1AxVjEwJywgJ1AxVjExJ10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJzEuNSArIDEuNiArIDEuNi4xPD0gMS4yJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiAoRGF0YSk9PntcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGF0YS5QMVY1LlZhbHVlICsgRGF0YS5QMVY2LlZhbHVlICsgRGF0YS5QMVY2MS5WYWx1ZSA8PSBEYXRhLlAxVjIuVmFsdWVcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVY2MToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0L7Qt9GA0LDRgdGCIDE0LTMwINC70LXRgicsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVY3OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KPQtNCw0LvQtdC90L3Ri9C1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQuCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDFWNCcsICdQMVY4JywgJ1AxVjknLCAnUDFWMTAnLCAnUDFWMTEnLCAnUDFWMTInLCAnUDFWMTMnLCAnUDFWMTQnLCAnUDFWMTUnLCAnUDFWMTYnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnMS40ICsgMS43ID0g0YHRg9C80LzQsCDRgSAxLjgg0L/QviAxLjE2JyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiAoRGF0YSk9PntcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGF0YS5QMVY0LlZhbHVlICsgRGF0YS5QMVY3LlZhbHVlID09PSBEYXRhLlAxVjguVmFsdWUgKyBEYXRhLlAxVjkuVmFsdWUgKyBEYXRhLlAxVjEwLlZhbHVlICsgRGF0YS5QMVYxMS5WYWx1ZSArIERhdGEuUDFWMTIuVmFsdWUgKyBEYXRhLlAxVjEzLlZhbHVlICsgRGF0YS5QMVYxNC5WYWx1ZSArIERhdGEuUDFWMTUuVmFsdWUgKyBEYXRhLlAxVjE2LlZhbHVlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDFWODoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9C0L9GIJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjk6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQqNC60L7Qu9GM0L3QuNC60LggNy0xMCDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDFWMTA6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQqNC60L7Qu9GM0L3QuNC60LggMTEtMTQg0LvQtdGCJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjExOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KHRgtCw0YDRiNC10LrQu9Cw0YHRgdC90LjQutC4JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjEyOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KDQlNCnJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjEzOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J/QtdC90YHQuNC+0L3QtdGA0YsnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDFWMTQ6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQodC70YPQttCw0YnQuNC1JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjE1OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KHRgtGD0LTQtdC90YLRiycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYxNjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cf0YDQvtGH0LjQtScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYxNzoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0L/QvtGB0LXRidC10L3QuNC5JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMVYxOCcsICdQMVYxOSddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogKERhdGEpPT4gRGF0YS5QMVYxOC5WYWx1ZSArIERhdGEuUDFWMTkuVmFsdWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjE4OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KHRgtCw0YbQuNC+0L3QsNGAJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMVYyMScsICdQMVYzNCcsICdQMVYzNiddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcxLjE4ID49IDEuMjEgKyAxLjM0ICsgMS4zNicsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogKERhdGEpPT4gRGF0YS5QMVYxOC5WYWx1ZSA+PSBEYXRhLlAxVjIxLlZhbHVlK0RhdGEuUDFWMzQuVmFsdWUrRGF0YS5QMVYzNi5WYWx1ZSxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYxOToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0L3QtdGB0YLQsNGG0LjQvtC90LDRgCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDFWMjcnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnMS4xOSA+PSAxLjI3JyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiAoRGF0YSk9PiBEYXRhLlAxVjE5LlZhbHVlID49IERhdGEuUDFWMjcuVmFsdWUsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDFWMjA6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90YLQtdGA0L3QtdGCJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYyMToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cc0LDRgdGB0L7QstGL0LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjyDRgdGC0LDRhtC40L7QvdCw0YAnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AxVjIyJ10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiAoRGF0YSk9PiBEYXRhLlAxVjIyLlZhbHVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYyMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L7RgdC10YnQtdC90LjQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC5INGB0YLQsNGGLiDQsdC10YHQv9C70LDRgtC90YvQtScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDFWMjInXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjIzOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J/QvtGB0LXRidC10L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0YHRgtCw0YYuINC/0LvQsNGC0L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYyNDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuSDRgdGC0LDRhtC40L7QvdCw0YAnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AxVjI1J10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiAoRGF0YSk9PiBEYXRhLlAxVjI1LlZhbHVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYyNToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Quy3QstC+INC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0YHRgtCw0YYuINCx0LXRgdC/0LvQsNGC0L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYyNjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Quy3QstC+INC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0YHRgtCw0YYuINC/0LvQsNGC0L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYyNzoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0L/QvtGB0LXRidC10L3QuNC5INC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0LLQvdC10YHRgtCw0YbQuNC+0L3QsNGAJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMVYyOCddLCAvL1A2MlYxN1xyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogKERhdGEpPT4gRGF0YS5QMVYyOC5WYWx1ZSAvLyhEYXRhKT0+IERhdGEuUDYyVjE3LlZhbHVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYyODoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L7RgdC10YnQtdC90LjQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC5INCy0L3QtdGB0YLQsNGGLiDQsdC10YHQv9C70LDRgtC90YvQtScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDYyVjE3J10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLC8vKERhdGEpPT4gRGF0YS5QNjJWMTcuVmFsdWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjI5OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J/QvtGB0LXRidC10L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0LLQvdC10YHRgtCw0YYuINC/0LvQsNGC0L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYzMDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuSDQstC90LXRgdGC0LDRhtC40L7QvdCw0YAnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AxVjMxJ10sIC8vUDYyVjE2XHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiAoRGF0YSk9PiBEYXRhLlAxVjMxLlZhbHVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMVYzMToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Quy3QstC+INC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0LLQvdC10YHRgtCw0YYuINCx0LXRgdC/0LvQsNGC0L3Ri9C1JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sIC8vJ1A2MlYxNidcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsLy8oRGF0YSk9PiBEYXRhLlA2MlYxNi5WYWx1ZSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDFWMzI6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmtC+0Lst0LLQviDQvNC10YDQvtC/0YDQuNGP0YLQuNC5INCy0L3QtdGB0YLQsNGGLiDQv9C70LDRgtC90YvQtScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDFWMzM6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmtC+0Lst0LLQviDQt9Cw0YHQtdC00LDQvdC40Lkg0LrQu9GD0LHQsCDQsdC10YHQv9C70LDRgtC90L4nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjM0OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KfQuNGB0LvQviDQv9C+0YHQtdGJ0LXQvdC40Lkg0LrQu9GD0LHQsCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDFWMzU6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmtC+0Lst0LLQviDQt9Cw0YHQtdC00LDQvdC40Lkg0LrQu9GD0LHQsCDQv9C70LDRgtC90L4nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAxVjM2OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KfQuNGB0LvQviDQv9C+0YHQtdGJ0LXQvdC40Lkg0LrQu9GD0LHQsCDQv9C70LDRgtC90L4nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICBQMlYyOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRgdC10LPQviDQstGL0LTQsNC90L4g0LrQvdC40LMg0Lgg0LHRgNC+0YjRjtGAJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMlYzJywnUDJWNScsICdQMlY2JywgJ1AyVjcnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnMi4yID0gMi4zICsgMi41ICsgMi42ICsgMi43ID0g0YHRg9C80LzQsCBjIDIuOCDQv9C+IDIuMTgnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogKERhdGEpPT5EYXRhLlAyVjMuVmFsdWUgKyBEYXRhLlAyVjUuVmFsdWUgKyBEYXRhLlAyVjYuVmFsdWUgKyBEYXRhLlAyVjcuVmFsdWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjM6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0L3QsCDRhNC40LfQuNGH0LXRgdC60LjRhSDQvdC+0YHQuNGC0LXQu9GP0YUnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AyVjUnLCAnUDJWNicsICdQMlY3JywgJ1AyVjgnLCAnUDJWOScsICdQMlYxMScsICdQMlYxMicsICdQMlYxMycsICdQMlYxNCcsICdQMlYxNScsICdQMlYxNicsICdQMlYxNycsICdQMlYxOCddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcyLjIgPSAyLjMgKyAyLjUgKyAyLjYgKyAyLjcgPSDRgdGD0LzQvNCwIGMgMi44INC/0L4gMi4xOCcsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogKERhdGEpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIERhdGEuUDJWMy5WYWx1ZSArIERhdGEuUDJWNS5WYWx1ZSArIERhdGEuUDJWNi5WYWx1ZSArIERhdGEuUDJWNy5WYWx1ZSA9PT1cclxuICAgICAgICAgICAgICAgICAgICAgICBEYXRhLlAyVjguVmFsdWUgK0RhdGEuUDJWOS5WYWx1ZStEYXRhLlAyVjEwLlZhbHVlICtEYXRhLlAyVjExLlZhbHVlICtEYXRhLlAyVjEyLlZhbHVlICtEYXRhLlAyVjEzLlZhbHVlICtEYXRhLlAyVjE0LlZhbHVlICtEYXRhLlAyVjE1LlZhbHVlICtEYXRhLlAyVjE2LlZhbHVlICtEYXRhLlAyVjE3LlZhbHVlICtEYXRhLlAyVjE4LlZhbHVlO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlY0OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INCy0L3QtdGB0YLQsNGG0LjQvtC90LDRgCDQuCDQvdCwINC00L7QvNGDJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQNjFWNCcsICdQNjJWNCddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcyLjQgPSA2LjEuNCArIDYuMi40JyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IChEYXRhKT0+IERhdGEuUDYxVjQuVmFsdWUgKyBEYXRhLlA2MlY0LlZhbHVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlY1OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC40Lcg0Y3Qu9C10LrRgtGA0L7QvdC90L7QuSDQsdC40LHQu9C40L7RgtC10LrQuCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDJWMycsICdQMlY2JywgJ1AyVjcnLCAnUDJWOCcsICdQMlY5JywgJ1AyVjExJywgJ1AyVjEyJywgJ1AyVjEzJywgJ1AyVjE0JywgJ1AyVjE1JywgJ1AyVjE2JywgJ1AyVjE3JywgJ1AyVjE4J10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJzIuMiA9IDIuMyArIDIuNSArIDIuNiArIDIuNyA9INGB0YPQvNC80LAgYyAyLjgg0L/QviAyLjE4JyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiAoRGF0YSk9PntcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGF0YS5QMlYzLlZhbHVlICsgRGF0YS5QMlY1LlZhbHVlICsgRGF0YS5QMlY2LlZhbHVlICsgRGF0YS5QMlY3LlZhbHVlID09PVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhLlAyVjguVmFsdWUgK0RhdGEuUDJWOS5WYWx1ZStEYXRhLlAyVjEwLlZhbHVlICtEYXRhLlAyVjExLlZhbHVlICtEYXRhLlAyVjEyLlZhbHVlICtEYXRhLlAyVjEzLlZhbHVlICtEYXRhLlAyVjE0LlZhbHVlICtEYXRhLlAyVjE1LlZhbHVlICtEYXRhLlAyVjE2LlZhbHVlICtEYXRhLlAyVjE3LlZhbHVlICtEYXRhLlAyVjE4LlZhbHVlO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlY2OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC40L3RgdGC0LDQu9C70LjRgNC+0LLQsNC90L3Ri9GFJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMlYzJywgJ1AyVjUnLCAnUDJWNycsICdQMlY4JywgJ1AyVjknLCAnUDJWMTEnLCAnUDJWMTInLCAnUDJWMTMnLCAnUDJWMTQnLCAnUDJWMTUnLCAnUDJWMTYnLCAnUDJWMTcnLCAnUDJWMTgnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnMi4yID0gMi4zICsgMi41ICsgMi42ICsgMi43ID0g0YHRg9C80LzQsCBjIDIuOCDQv9C+IDIuMTgnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IChEYXRhKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBEYXRhLlAyVjMuVmFsdWUgKyBEYXRhLlAyVjUuVmFsdWUgKyBEYXRhLlAyVjYuVmFsdWUgKyBEYXRhLlAyVjcuVmFsdWUgPT09XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGEuUDJWOC5WYWx1ZSArRGF0YS5QMlY5LlZhbHVlK0RhdGEuUDJWMTAuVmFsdWUgK0RhdGEuUDJWMTEuVmFsdWUgK0RhdGEuUDJWMTIuVmFsdWUgK0RhdGEuUDJWMTMuVmFsdWUgK0RhdGEuUDJWMTQuVmFsdWUgK0RhdGEuUDJWMTUuVmFsdWUgK0RhdGEuUDJWMTYuVmFsdWUgK0RhdGEuUDJWMTcuVmFsdWUgK0RhdGEuUDJWMTguVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjc6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0L3QsCDRhNC40LfQuNGH0LXRgdC60LjRhSDQvdC+0YHQuNGC0LXQu9GP0YUnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AyVjMnLCAnUDJWNicsICdQMlY2JywgJ1AyVjgnLCAnUDJWOScsICdQMlYxMScsICdQMlYxMicsICdQMlYxMycsICdQMlYxNCcsICdQMlYxNScsICdQMlYxNicsICdQMlYxNycsICdQMlYxOCddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcyLjIgPSAyLjMgKyAyLjUgKyAyLjYgKyAyLjcgPSDRgdGD0LzQvNCwIGMgMi44INC/0L4gMi4xOCcsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogKERhdGEpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIERhdGEuUDJWMy5WYWx1ZSArIERhdGEuUDJWNS5WYWx1ZSArIERhdGEuUDJWNi5WYWx1ZSArIERhdGEuUDJWNy5WYWx1ZSA9PT1cclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YS5QMlY4LlZhbHVlICtEYXRhLlAyVjkuVmFsdWUrRGF0YS5QMlYxMC5WYWx1ZSArRGF0YS5QMlYxMS5WYWx1ZSArRGF0YS5QMlYxMi5WYWx1ZSArRGF0YS5QMlYxMy5WYWx1ZSArRGF0YS5QMlYxNC5WYWx1ZSArRGF0YS5QMlYxNS5WYWx1ZSArRGF0YS5QMlYxNi5WYWx1ZSArRGF0YS5QMlYxNy5WYWx1ZSArRGF0YS5QMlYxOC5WYWx1ZTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWODoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQntCf0JsnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjk6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0LXRgdGC0LXRgdGC0LLQvtC30L3QsNC90LjQtScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMTA6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0KLQtdGF0L3QuNC60LAnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjExOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INCh0LXQu9GM0YHQutC+0LUg0YXQvtC30Y/QudGB0YLQstC+JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYxMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQmNGB0LrRg9GB0YHRgtCy0L4nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjEzOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INCh0L/QvtGA0YInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjE0OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+IDgxLDgzJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYxNToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQodC/0YDQsNCy0L7Rh9C90LjQutC4JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYxNjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQlNC10YLRgdC60LDRjyDQu9C40YLQtdGA0LDRgtGD0YDQsCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMTc6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0KXRg9C00L7QttC10YHRgtCy0LXQvdC90LDRjyDQu9C40YLQtdGA0LDRgtGD0YDQsCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMTg6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90L4nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjE5OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC00L7QutGD0LzQtdC90YLQvtCyJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMlYyMCcsICdQMlYyMicsICdQMlYyMycsICdQMlYyNCddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcyLjE5ID0gMi4yMCArIDIuMjIgKyAyLjIzICsgMi4yNCcsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiAoRGF0YSk9PkRhdGEuUDJWMjAuVmFsdWUgKyBEYXRhLlAyVjIyLlZhbHVlICsgRGF0YS5QMlYyMy5WYWx1ZSArIERhdGEuUDJWMjQuVmFsdWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjIwOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC00L4gMTQsINC90LAg0YTQuNC3LiDQvdC+0YHQuNGC0LXQu9GP0YUnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjIxOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC00L4gMTQsINCy0L3QtdGB0YLQsNGG0LjQvtC90LDRgCDQuCDQvdCwINC00L7QvNGDJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQtNC+IDE0LCDQuNC3INGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0LHQuNCx0LvQuNC+0YLQtdC60LgnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjIzOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC00L4gMTQsINC40L3RgdGC0LDQu9C70LjRgNC+0LLQsNC90L3Ri9GFJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyNDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQtNC+IDE0LCDRg9C00LDQu9C10L3QvdGL0YUg0LvQuNGG0LXQvdC30LjQvtC90L3Ri9GFJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyNToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0LLRi9C00LDQvdC+IDE0LTMwJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMlYyNicsICdQMlYyOCcsICdQMlYyOScsICdQMlYzMCddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcyLjI1ID0gMi4yNiArIDIuMjggKyAyLjI5ICsgMi4zMCcsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiAoRGF0YSk9PiBEYXRhLlAyVjI2LlZhbHVlICsgRGF0YS5QMlYyOC5WYWx1ZSArIERhdGEuUDJWMjkuVmFsdWUgKyBEYXRhLlAyVjMwLlZhbHVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyNjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviAxNC0zMCwg0L3QsCDRhNC40LcuINC90L7RgdC40YLQtdC70Y/RhScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMjc6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4gMTQtMzAsINCy0L3QtdGB0YLQsNGG0LjQvtC90LDRgCDQuCDQvdCwINC00L7QvNGDJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyODoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviAxNC0zMCwg0LjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5INCx0LjQsdC70LjQvtGC0LXQutC4JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyOToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviAxNC0zMCwg0LjQvdGB0YLQsNC70LvQuNGA0L7QstCw0L3QvdGL0YUnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjMwOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+IDE0LTMwLCDRg9C00LDQu9C10L3QvdGL0YUg0LvQuNGG0LXQvdC30LjQvtC90L3Ri9GFJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyNTE6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGB0LXQs9C+INCy0YvQtNCw0L3QviAzMCsnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IChEYXRhKT0+IERhdGEuUDJWMjYxLlZhbHVlICsgRGF0YS5QMlYyODEuVmFsdWUgKyBEYXRhLlAyVjI5MS5WYWx1ZSArIERhdGEuUDJWMzAxLlZhbHVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyNjE6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4gMzArLCDQvdCwINGE0LjQty4g0L3QvtGB0LjRgtC10LvRj9GFJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyNzE6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4gMzArLCDQstC90LXRgdGC0LDRhtC40L7QvdCw0YAg0Lgg0L3QsCDQtNC+0LzRgycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMjgxOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+IDMwKywg0LjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5INCx0LjQsdC70LjQvtGC0LXQutC4JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYyOTE6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4gMzArLCDQuNC90YHRgtCw0LvQu9C40YDQvtCy0LDQvdC90YvRhScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMzAxOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+IDMwKywg0YPQtNCw0LvQtdC90L3Ri9GFINC70LjRhtC10L3Qt9C40L7QvdC90YvRhScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMzE6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGB0LXQs9C+INCy0YvQtNCw0L3QviDQutC+0L/QuNC5JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMlYzMicsICdQMlYzMyddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcyLjMxID49IDIuMzIgKyAyLjMzJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLCAvLyhEYXRhKT0+IERhdGEuUDJWMzEuVmFsdWUgPj0gRGF0YS5QMlYzMi5WYWx1ZSArIERhdGEuUDJWMzMuVmFsdWUsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogKERhdGEpID0+IERhdGEuUDJWMzIuVmFsdWUgKyBEYXRhLlAyVjMzLlZhbHVlICsgRGF0YS5QMlYzMzEuVmFsdWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjMyOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC60L7Qv9C40Lkg0LTQtdGC0Y/QvCDQtNC+IDE0INC70LXRgicsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMzM6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0LrQvtC/0LjQuSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y/QvCAxNC0zMCDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjMzMToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQutC+0L/QuNC5INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj9C8IDMwKyDQu9C10YInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjM0OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRgdC10LPQviDQstGL0LTQsNC90L4g0LTQvtC60YPQvNC10L3RgtC+0LInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AyVjM1JywgJ1AyVjM2J10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJzIuMzQgPj0gMi4zNSArIDIuMzYnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IChEYXRhKT0+IERhdGEuUDJWMzQuVmFsdWUgPj0gRGF0YS5QMlYzNS5WYWx1ZSArIERhdGEuUDJWMzYuVmFsdWUsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMzU6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+0LvRg9GH0LXQvdC+INC/0L4g0YHQuNGB0YLQvNC1INCc0JHQkCDQuCDQnNCc0JHQkCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMzY6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQlNC+0YHRgtGD0L/QvdGL0YUg0LIg0LLQuNGA0YIuINGH0LjRgtCw0LvRjNC90YvRhSDQt9Cw0LvQsNGFJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlYzNzoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0LLRi9C/0L7Qu9C90LXQvdC+INGB0L/RgNCw0LLQvtC6INC4INC60L7QvdGB0YPQu9GM0YLQsNGG0LjQuScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDJWNDAnLCAnUDJWNDEnLCAnUDJWNDInLCAnUDJWNDMnLCAnUDJWNDQnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnMi4zNyA9INGB0YPQvNC80LAgYyAyLjQwINC/0L4gMi40NCcsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiAoRGF0YSk9PiBEYXRhLlAyVjQwLlZhbHVlICsgRGF0YS5QMlY0MS5WYWx1ZSArIERhdGEuUDJWNDIuVmFsdWUgKyBEYXRhLlAyVjQzLlZhbHVlICsgRGF0YS5QMlY0NC5WYWx1ZSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMzg6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQodC/0YDQsNCy0L7Qui/QutC+0L3RgdGD0LvRjNGC0LDRhtC40LksINC00L4gMTQnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1AyVjM5JywgJ1AyVjM3JywgJ1AyVjQ0J10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJzIuMzggKyAyLjM5IDw9IDIuMzcgLSAyLjQ0JyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiAoRGF0YSk9PiBEYXRhLlAyVjM4LlZhbHVlICsgRGF0YS5QMlYzOS5WYWx1ZSA8PSAgRGF0YS5QMlYzNy5WYWx1ZSAtIERhdGEuUDJWNDQuVmFsdWUsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDJWMzk6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQodC/0YDQsNCy0L7Qui/QutC+0L3RgdGD0LvRjNGC0LDRhtC40LksIDE0LTMwJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQMlYzOCcsICdQMlYzNycsICdQMlY0NCddLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcyLjM4ICsgMi4zOSA8PSAyLjM3IC0gMi40NCcsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogKERhdGEpPT4gRGF0YS5QMlYzOC5WYWx1ZSArIERhdGEuUDJWMzkuVmFsdWUgPD0gIERhdGEuUDJWMzcuVmFsdWUgLSBEYXRhLlAyVjQ0LlZhbHVlLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjM5MToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ch0L/RgNCw0LLQvtC6L9C60L7QvdGB0YPQu9GM0YLQsNGG0LjQuSwgMzArJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlY0MDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ch0L/RgNCw0LLQvtC6L9C60L7QvdGB0YPQu9GM0YLQsNGG0LjQuSwg0YLQtdC80LDRgtC40YfQtdGB0LrQuNC1JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlY0MToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ch0L/RgNCw0LLQvtC6L9C60L7QvdGB0YPQu9GM0YLQsNGG0LjQuSwg0YTQsNC60YLQvtCz0YDQsNGE0LjRh9C10YHQutC40LUnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAyVjQyOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KHQv9GA0LDQstC+0Lov0LrQvtC90YHRg9C70YzRgtCw0YbQuNC5LCDQsdC40LHQu9C40L7Qs9GA0LDRhNC40YfQtdGB0LrQuNC1JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlY0Mzoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ch0L/RgNCw0LLQvtC6L9C60L7QvdGB0YPQu9GM0YLQsNGG0LjQuSwg0LrQvtC90YHRg9C70YzRgtCw0YbQuNC4JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQMlY0NDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ch0L/RgNCw0LLQvtC6L9C60L7QvdGB0YPQu9GM0YLQsNGG0LjQuSwg0YPQtNCw0LvQtdC90L3Ri9GFJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgUDNWMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YHQtdCz0L4g0LLRi9C00LDQvdC+INGN0LvQtdC60YLRgNC+0L3QvdGL0YUg0YDQtdGB0YPRgNGB0L7QsicsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDNWMycsICdQM1Y0JywgJ1AzVjUnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnMy4yID0g0YHRg9C80LzQsCBjIDMuMyDQv9C+IDMuNScsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiAoRGF0YSk9PiBEYXRhLlAzVjMuVmFsdWUgKyBEYXRhLlAzVjQuVmFsdWUgKyBEYXRhLlAzVjUuVmFsdWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFAzVjM6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90YHRgtCw0LvQuNGA0L7QstCw0L3QvdGL0LUg0LTQvtC60YPQvNC10L3RgtGLJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQM1Y0OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KHQtdGC0LXQstGL0LUg0YPQtNCw0LvQtdC90L3Ri9C1INC00L7QutGD0LzQtdC90YLRiycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDNWNToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CY0Lcg0Y3Qu9C10LrRgtGA0L7QvdC90L7QuSDQsdC40LHQu9C40L7RgtC10LrQuCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDNWNjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ0RWRCwgQ0QtUk9NJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgUDRWMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cd0LDQt9Cy0LDQvdC40LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICfQmNC30LzQtdC90Y/QtdGC0YHRjyDQv9GA0Lgg0LLQvdC10YHQtdC90LjQuCDQvNC10YDQvtC/0YDQuNGP0YLQuNGPJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA0VjM6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQpNC+0YDQvNCwINC/0YDQvtCy0LXQtNC10L3QuNGPJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJ9CY0LfQvNC10L3Rj9C10YLRgdGPINC/0YDQuCDQstC90LXRgdC10L3QuNC4INC80LXRgNC+0L/RgNC40Y/RgtC40Y8nLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDRWNDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CR0LXRgdC/0LvQsNGC0L3QvicsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDRWNicsICdQNFY3JywgJ1A0VjgnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnNC40ID49IDQuNiArIDQuNyArIDQuOCcsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogKERhdGEpPT4gRGF0YS5QNFY0LlZhbHVlID49IERhdGEuUDRWNi5WYWx1ZSArIERhdGEuUDRWNy5WYWx1ZSArIERhdGEuUDRWOC5WYWx1ZSxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNFY1OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J/Qu9Cw0YLQvdC+JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNFY2OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JjQvdCy0LDQu9C40LTRiycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDRWNzoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cc0LjQs9GA0LDQvdGC0YsnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA0Vjg6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQn9GA0L7RhCDRgdC10LzQuNC90LDRgNGLLCDQu9C10LrRhtC40Lgg0Lgg0YIu0LQuJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNFY5OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JHQtdGB0L/Qu9Cw0YLQvdC+JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogWydQNFYxMScsJ1A0VjEyJywnUDRWMTMnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnNC45ID49IDQuMTEgKyA0LjEyICsgNC4xMycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogKERhdGEpPT4gRGF0YS5QNFY5LlZhbHVlID49IERhdGEuUDRWMTEuVmFsdWUgKyBEYXRhLlA0VjEyLlZhbHVlICsgRGF0YS5QNFYxMy5WYWx1ZSxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNFYxMDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cf0LvQsNGC0L3QvicsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDRWMTE6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90LLQsNC70LjQtNGLJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNFYxMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cc0LjQs9GA0LDQvdGC0YsnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA0VjEzOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J/RgNC+0YQg0YHQtdC80LjQvdCw0YDRiywg0LvQtdC60YbQuNC4INC4INGCLtC0LicsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDRWMTQ6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+0YHQtdGJ0LXQvdC40Y8nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1A0VjE1JywnUDRWMTYnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnNC4xNCA+PSA0LjE1ICsgNC4xNicsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogKERhdGEpPT4gRGF0YS5QNFYxNC5WYWx1ZSA+PSBEYXRhLlA0VjE1LlZhbHVlICsgRGF0YS5QNFYxNi5WYWx1ZSxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNFYxNToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CY0L3QstCw0LvQuNC00YsnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA0VjE2OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JzQuNCz0YDQsNC90YLRiycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDRWMTc6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+0YHQtdGJ0LXQvdC40Y8nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbJ1A0VjE4JywnUDRWMTknXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnNC4xNCA+PSA0LjE1ICsgNC4xNicsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogKERhdGEpPT4gRGF0YS5QNFYxNy5WYWx1ZSA+PSBEYXRhLlA0VjE4LlZhbHVlICsgRGF0YS5QNFYxOS5WYWx1ZSxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNFYxODoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CY0L3QstCw0LvQuNC00YsnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA0VjE5OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JzQuNCz0YDQsNC90YLRiycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDRWMjA6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LXQt9C00L3QvtC1INC90LDQt9Cy0LDQvdC40LUnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA0VjIxOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J7RgtCy0LXRgtGB0YLQstC10L3QvdGL0LknLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcblxyXG5cclxuICAgICAgICAgICAgUDVWMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cd0LDQt9Cy0LDQvdC40LUg0LLRi9GB0YLQsNCy0LrQuCcsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDVWMzoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LjRgdC70L4g0L/RgNC10LTQvtGB0YLQsNCy0LvQtdC90L3Ri9GFINC00L7QutGD0LzQtdC90YLQvtCwJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNVY0OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KfQuNGB0LvQviDQstGL0LTQsNC90L3Ri9GFINC00L7QutGD0LzQtdC90YLQvtCwJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNVY1OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J7RgtCy0LXRgtGB0YLQstC10L3QvdGL0LknLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA1VjY6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQn9GA0LjQvNC10YfQsNC90LjRjycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIFA2MVYyOiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JfQsNGA0LXQs9C10YHRgtGA0LjRgNC+0LLQsNC90L3QviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDYxVjM6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmNC90LLQsNC70LjQtNC+0LInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MVY0OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INC60L3QuNCzINC90LAg0LTQvtC8JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNjFWNToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L7RgdC10YnQtdC90LjQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDYxVjY6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmtC+0L3RgdGD0LvRjNGC0LDRhtC40Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10LknLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MVY3OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KHQtdC80LjQvdCw0YAg0L/QtdGA0LXQtNCy0LjQttC90LjQutC+0LInLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICBQNjJWMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Qu9C40YfQtdGB0YLQstC+INC/0LXRgNC10LTQstC40LbQtdC6JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNjJWMzoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Qu9C40YfQtdGB0YLQstC+INGH0LjRgtCw0YLQtdC70LXQuScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDYyVjQ6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGB0LXQs9C+INCy0YvQtNCw0L3QviDQutC90LjQsycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFsnUDYyVjUnLCAnUDYyVjYnLCAnUDYyVjcnLCAnUDYyVjgnLCAnUDYyVjknLCAnUDYyVjEwJywgJ1A2MlYxMScsICdQNjJWMTInLCAnUDYyVjEzJywgJ1A2MlYxNCcsICdQNjJWMTUnXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnNi4yLjQgPSDRgdGD0LzQvNCwINGBNi4yLjUg0L/QviA2LjIuMTUnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogKGQpPT4gZC5QNjJWNS5WYWx1ZSArIGQuUDYyVjYuVmFsdWUgKyBkLlA2MlY3LlZhbHVlICsgZC5QNjJWOC5WYWx1ZSArIGQuUDYyVjkuVmFsdWUgKyBkLlA2MlYxMC5WYWx1ZSArIGQuUDYyVjExLlZhbHVlICsgZC5QNjJWMTIuVmFsdWUgKyBkLlA2MlYxMy5WYWx1ZSArIGQuUDYyVjE0LlZhbHVlICsgZC5QNjJWMTUuVmFsdWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MlY1OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INCe0J/QmycsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDYyVjY6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0JXRgdGC0LXRgdGC0LLQvtC30L3QsNC90LjQtScsXHJcbiAgICAgICAgICAgICAgICBEZXBlbmRlbmNpZXM6IFtdLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICcnLFxyXG4gICAgICAgICAgICAgICAgQ2hlY2s6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBHZXRWYWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUDYyVjc6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0KLQtdGF0L3QuNC60LAnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MlY4OiB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JLRi9C00LDQvdC+INCh0LXQu9GM0YHQutC+0LUg0YXQvtC30Y/QudGB0YLQstC+JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNjJWOToge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQmNGB0LrRg9GB0YHRgtCy0L4nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MlYxMDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQodC/0L7RgNGCJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNjJWMTE6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4gODEuODMnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MlYxMjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQodC/0YDQsNCy0L7Rh9C90LjQutC4JyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNjJWMTM6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0JTQtdGC0YHQutCw0Y8g0LvQuNGC0LXRgNCw0YLRg9GA0LAnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MlYxNDoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YvQtNCw0L3QviDQpdGD0LTQvtC20LXRgdGC0LLQtdC90L3QsNGPINC70LjRgtC10YDQsNGC0YPRgNCwJyxcclxuICAgICAgICAgICAgICAgIERlcGVuZGVuY2llczogW10sXHJcbiAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgICAgICBDaGVjazogbnVsbCxcclxuICAgICAgICAgICAgICAgIEdldFZhbHVlOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQNjJWMTU6IHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktGL0LTQsNC90L4g0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90L4nLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MlYxNjoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ca0L7Qu9C40YfQtdGB0YLQstC+INC80LXRgNC+0L/RgNC40Y/RgtC40LknLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFA2MlYxNzoge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LjRgdC70L4g0L7QsdGB0LvRg9C20LXQvdGL0YUnLFxyXG4gICAgICAgICAgICAgICAgRGVwZW5kZW5jaWVzOiBbXSxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIENoZWNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgR2V0VmFsdWU6IG51bGwsXHJcbiAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5EYXRhUHJlcGFyZWQgPSBbXTtcclxuXHJcbiAgICAgICAgdGhpcy5EYXRhRXZlbnQgICAgICA9IFtdO1xyXG4gICAgICAgIHRoaXMuRGF0YUV4aGliaXRpb24gPSBbXTtcclxuICAgICAgICB0aGlzLkVycm9ycyA9IFtdO1xyXG4gICAgICAgIHRoaXMuU3RhdGUuTW9udGhzID0gKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IGQgPSBMdXJlLkRhdGUoKTtcclxuICAgICAgICAgICAgbGV0IHkgPSBkLlllYXI7XHJcbiAgICAgICAgICAgIGxldCBNb250aHMgPSBbXTtcclxuICAgICAgICAgICAgd2hpbGUgKGQuWWVhciA9PT0geSl7XHJcbiAgICAgICAgICAgICAgICBNb250aHMudW5zaGlmdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgRGF0ZTogZC5EYXRlLFxyXG4gICAgICAgICAgICAgICAgICAgIFZhbHVlOiBkLlZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgIFRleHQ6IGQuRm9ybWF0KCdNTU1NIFlZWVknKSxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgZC5BZGRNb250aHMoLTEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBNb250aHM7XHJcbiAgICAgICAgfSkoKTtcclxuXHJcbiAgICAgICAgdGhpcy5TZWxlY3RMaWJyYXJ5ID0gdGhpcy5TZWxlY3QoJy5saWItbGlzdCcpO1xyXG4gICAgICAgIHRoaXMuU2VsZWN0RGF0ZSA9IHRoaXMuU2VsZWN0KCcuZGF0ZS1saXN0Jyk7XHJcblxyXG5cclxuICAgICAgICB0aGlzLkJ1dHRvblJlZnJlc2ggPSB0aGlzLlNlbGVjdCgnLmJ0bi1yZWZyZXNoJyk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25HZXRYTFMgPSB0aGlzLlNlbGVjdCgnLmJ1dHRvbi1nZXQteGxzJyk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25TYXZlID0gdGhpcy5TZWxlY3QoJy5idXR0b24tc2F2ZScpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uQ2xlYXIgPSB0aGlzLlNlbGVjdCgnLmJ1dHRvbi1jbGVhcicpO1xyXG5cclxuICAgICAgICB0aGlzLl9LZXlSZWdleCA9IG5ldyBSZWdFeHAoJ1BbXFxcXGRdK1ZbXFxcXGRdKycpO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5TdWJzY3JpYmVUeXBlcyA9IFtcclxuICAgICAgICAgICAgRC5TdWJzY3JpYmVUeXBlLlN1bW1hcnlDaGFuZ2UsXHJcblxyXG4gICAgICAgICAgICBELlN1YnNjcmliZVR5cGUuVmlzaXRSZWdpc3RlckFkZCxcclxuICAgICAgICAgICAgRC5TdWJzY3JpYmVUeXBlLlZpc2l0VmlzaXRBZGQsXHJcbiAgICAgICAgICAgIEQuU3Vic2NyaWJlVHlwZS5WaXNpdEV2ZW50QWRkLFxyXG4gICAgICAgICAgICBELlN1YnNjcmliZVR5cGUuQm9va3dhcmUsXHJcbiAgICAgICAgXTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuR2V0RGF0YSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgSW5wdXRCb3guSGlkZSgpO1xyXG4gICAgICAgICAgICBEaWFyeS5Nb3ZpbmdzLkhpZGUoKTtcclxuICAgICAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgbGV0IEN1cnJlbnRQYXJ0ID0gdGhpcy5DdXJyZW50UGFydDtcclxuICAgICAgICAgICAgbGV0IGR0ID0gTHVyZS5EYXRlKHRoaXMuQ3VycmVudERhdGUpO1xyXG4gICAgICAgICAgICBDdXJyZW50UGFydC5DdXJyZW50RGF0ZSA9IHRoaXMuQ3VycmVudERhdGU7XHJcbiAgICAgICAgICAgIGlmIChDdXJyZW50UGFydC5OYW1lICE9PSAnU3VtbWFyeVBhcnQ0JyAmJiBDdXJyZW50UGFydC5OYW1lICE9PSAnU3VtbWFyeVBhcnQ1Jyl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLkRpYXJ5X1N1bW1hcnlfUGFydDEyMzZfR2V0KHRoaXMuQ3VycmVudExpYnJhcmllcywgZHQuTW9udGhTdGFydCwgZHQuTW9udGhFbmQsIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiAoUmF3RGF0YSk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYXRhUHJlcGFyZWQgPSB0aGlzLlByZXBhcmVEYXRhKFJhd0RhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkN1cnJlbnRQYXJ0LkNvbnRyb2xsZXIuUmVmcmVzaCh0aGlzLkRhdGFQcmVwYXJlZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBDYXRjaDogKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0RpYXJ5LlN1bW1hcnkuR2V0RGF0YScsIGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93RXJyb3IoJ9Ce0YjQuNCx0LrQsCDRgdC10YDQstC10YDQsCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChDdXJyZW50UGFydC5OYW1lID09PSAnU3VtbWFyeVBhcnQ0Jykge1xyXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygncnIgU3VtbWFyeVBhcnQ0Jyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLkRpYXJ5X1N1bW1hcnlQYXJ0NF9HZXQoRGlhcnkuU3VtbWFyeS5DdXJyZW50TGlicmFyaWVzLCBkdC5Nb250aFN0YXJ0LCBkdC5Nb250aEVuZCwge1xyXG4gICAgICAgICAgICAgICAgICAgIFRoZW46ICh4KT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkRhdGFFdmVudCA9IHRoaXMuUHJlcGFyZURhdGFFdmVudCh4KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ3VycmVudFBhcnQuQ29udHJvbGxlci5SZWZyZXNoKHRoaXMuRGF0YUV2ZW50KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoQ3VycmVudFBhcnQuTmFtZSA9PT0gJ1N1bW1hcnlQYXJ0NScpIHtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ3JyIFN1bW1hcnlQYXJ0NScpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5EaWFyeV9TdW1tYXJ5UGFydDVfR2V0KERpYXJ5LlN1bW1hcnkuQ3VycmVudExpYnJhcmllcywgZHQuTW9udGhTdGFydCwgZHQuTW9udGhFbmQsIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiAoeCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYXRhRXhoaWJpdGlvbiA9IHRoaXMuUHJlcGFyZURhdGFFdmVudCh4KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ3VycmVudFBhcnQuQ29udHJvbGxlci5SZWZyZXNoKHRoaXMuRGF0YUV4aGliaXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuUHJlcGFyZURhdGFFdmVudCA9IGZ1bmN0aW9uIChEYXRhKSB7XHJcbiAgICAgICAgICAgIGxldCBQcmVwYXJlZCA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IERhdGEubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgbGV0IExpbmUgPSBEYXRhW2ldO1xyXG4gICAgICAgICAgICAgICAgbGV0IEl0ZW0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgSUQ6IExpbmUuSUQsXHJcbiAgICAgICAgICAgICAgICAgICAgRGF0ZVN0YXJ0OiBMaW5lLkRhdGVTdGFydCxcclxuICAgICAgICAgICAgICAgICAgICBEYXRlRmluaXNoOiBMaW5lLkRhdGVGaW5pc2gsXHJcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRQbGFjZVR5cGVJRDogTGluZS5FdmVudFBsYWNlVHlwZUlELFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50VHlwZUlEOiBMaW5lLkV2ZW50VHlwZUlELFxyXG4gICAgICAgICAgICAgICAgICAgIExpc3RJbnZhbGlkOiBbXSxcclxuICAgICAgICAgICAgICAgICAgICBMaXN0Q2hhbmdlZDogW10sXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgayBpbiBMaW5lKXtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoTGluZS5oYXNPd25Qcm9wZXJ0eShrKSAmJiB0aGlzLl9LZXlSZWdleC50ZXN0KGspKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgSXRlbVtrXSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9WYWx1ZTogTGluZVtrXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZhbHVlOiBMaW5lW2tdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRDogdGhpcy5EW2tdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFByZXBhcmVkLnB1c2goSXRlbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIFByZXBhcmVkO1xyXG5cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuUHJlcGFyZURhdGEgPSBmdW5jdGlvbiAoRGF0YSkge1xyXG4gICAgICAgICAgICBsZXQgUHJlcGFyZWQgPSBbXTtcclxuICAgICAgICAgICAgbGV0IFN1bUxpbmUgPSB7XHJcbiAgICAgICAgICAgICAgICBMaXN0SW52YWxpZDogW10sXHJcbiAgICAgICAgICAgICAgICBMaXN0Q2hhbmdlZDogW10sXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGxldCBTdW1MaW5lRnVsbCA9IHtcclxuICAgICAgICAgICAgICAgIExpc3RJbnZhbGlkOiBbXSxcclxuICAgICAgICAgICAgICAgIExpc3RDaGFuZ2VkOiBbXSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgZm9yIChsZXQgayBpbiBEYXRhWzBdKXtcclxuICAgICAgICAgICAgICAgIGlmIChEYXRhWzBdLmhhc093blByb3BlcnR5KGspKXtcclxuICAgICAgICAgICAgICAgICAgICBTdW1MaW5lW2tdID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBfVmFsdWU6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFZhbHVlOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBEOiB0aGlzLkRba11cclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIFN1bUxpbmVGdWxsW2tdID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBfVmFsdWU6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFZhbHVlOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBEOiB0aGlzLkRba11cclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBTdW1MaW5lLkRhdGVWYWx1ZSAgPSBEYXRhWzBdLkRhdGVWYWx1ZTtcclxuICAgICAgICAgICAgU3VtTGluZS5EYXRlVmlzdWFsID0gJ9CX0LAg0LzQtdGB0Y/Rhic7XHJcbiAgICAgICAgICAgIFN1bUxpbmVGdWxsLkRhdGVWYWx1ZSAgPSBEYXRhWzBdLkRhdGVWYWx1ZTtcclxuICAgICAgICAgICAgU3VtTGluZUZ1bGwuRGF0ZVZpc3VhbCA9ICfQmNGC0L7Qs9C+JztcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBEYXRhLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGxldCBMaW5lID0gRGF0YVtpXTtcclxuICAgICAgICAgICAgICAgIGxldCBJdGVtID0ge307XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBrIGluIExpbmUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChMaW5lLmhhc093blByb3BlcnR5KGspICYmIHRoaXMuX0tleVJlZ2V4LnRlc3Qoaykpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaSA9PT0gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdW1MaW5lRnVsbFtrXS5WYWx1ZSA9IExpbmVba107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdW1MaW5lRnVsbFtrXS5fVmFsdWUgPSBMaW5lW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdW1MaW5lRnVsbFtrXS5WYWx1ZSArPSBMaW5lW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgU3VtTGluZUZ1bGxba10uX1ZhbHVlICs9IExpbmVba107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgPiAwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdW1MaW5lW2tdLlZhbHVlICs9IExpbmVba107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdW1MaW5lW2tdLl9WYWx1ZSArPSBMaW5lW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEl0ZW1ba10gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfVmFsdWU6IExpbmVba10sIC8vbm90IGNoYW5naW5nIHZhbHVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWYWx1ZTogTGluZVtrXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YXRlOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEQ6IHRoaXMuRFtrXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIEl0ZW0uRGF5VHlwZSAgICAgPSAnJztcclxuICAgICAgICAgICAgICAgIGlmIChMaW5lLklzRGF5T2ZmKVxyXG4gICAgICAgICAgICAgICAgICAgIEl0ZW0uRGF5VHlwZSArPSAnIGRheS1vZmYnO1xyXG4gICAgICAgICAgICAgICAgaWYgKEx1cmUuRGF0ZShMaW5lLkRhdGVWYWx1ZSkuaXNUb2RheSlcclxuICAgICAgICAgICAgICAgICAgICBJdGVtLkRheVR5cGUgKz0gJyBkYXktdG9kYXknO1xyXG4gICAgICAgICAgICAgICAgSXRlbS5Jc0RheU9mZiAgICA9IExpbmUuSXNEYXlPZmY7XHJcbiAgICAgICAgICAgICAgICBJdGVtLkRhdGVWYWx1ZSAgID0gTGluZS5EYXRlVmFsdWU7XHJcbiAgICAgICAgICAgICAgICBJdGVtLkRhdGVWaXN1YWwgID0gTHVyZS5EYXRlKExpbmUuRGF0ZVZhbHVlKS5Gb3JtYXQoJ0RELk1NLllZWVknKTtcclxuICAgICAgICAgICAgICAgIEl0ZW0uTGlzdEludmFsaWQgPSBbXTtcclxuICAgICAgICAgICAgICAgIEl0ZW0uTGlzdENoYW5nZWQgPSBbXTtcclxuICAgICAgICAgICAgICAgIFByZXBhcmVkLnB1c2goSXRlbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgUHJlcGFyZWRbMF0uRGF0ZVZpc3VhbCA9ICfQndCwINC90LDRh9Cw0LvQviDQvNC10YHRj9GG0LAnO1xyXG4gICAgICAgICAgICBQcmVwYXJlZC5wdXNoKFN1bUxpbmUpO1xyXG4gICAgICAgICAgICBQcmVwYXJlZC5wdXNoKFN1bUxpbmVGdWxsKTtcclxuICAgICAgICAgICAgcmV0dXJuIFByZXBhcmVkO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuQ2hlY2sgPSBmdW5jdGlvbiAoSXRlbSkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBrIGluIEl0ZW0pe1xyXG4gICAgICAgICAgICAgICAgaWYgKEl0ZW0uaGFzT3duUHJvcGVydHkoaykgJiYgdGhpcy5fS2V5UmVnZXgudGVzdChrKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgSXRlbVtrXS5TdGF0ZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIEl0ZW1ba10uVmFsdWUgPSAhSXRlbVtrXS5ELkdldFZhbHVlID8gSXRlbVtrXS5WYWx1ZSA6IEl0ZW1ba10uRC5HZXRWYWx1ZShJdGVtKSA7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGlzQ2hhbmdlZCA9IEl0ZW1ba10uVmFsdWUgIT09IEl0ZW1ba10uX1ZhbHVlO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKEl0ZW1ba10uRC5DaGVjayl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChJdGVtW2tdLkQuQ2hlY2soSXRlbSkpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzQ2hhbmdlZClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJdGVtW2tdLlN0YXRlID0gJ3ZhbGlkJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChJdGVtLkxpc3RJbnZhbGlkLmluZGV4T2YoaykgPiAtMSApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuQXJyYXkuUmVtb3ZlKEl0ZW0uTGlzdEludmFsaWQsIHg9Png9PT1rKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBJdGVtW2tdLlN0YXRlID0gJ2ludmFsaWQnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEl0ZW0uTGlzdEludmFsaWQuaW5kZXhPZihrKSA8IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEl0ZW0uTGlzdEludmFsaWQucHVzaChrKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL0l0ZW1ba10uU3RhdGUgPSBJdGVtW2tdLkQuQ2hlY2soSXRlbSkgPyAndmFsaWQnOidpbnZhbGlkJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNDaGFuZ2VkICYmICFJdGVtW2tdLlN0YXRlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgSXRlbVtrXS5TdGF0ZSA9ICdjaGFuZ2VkJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzQ2hhbmdlZCAmJiBJdGVtLkxpc3RDaGFuZ2VkLmluZGV4T2YoaykgPCAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgSXRlbS5MaXN0Q2hhbmdlZC5wdXNoKGspXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNDaGFuZ2VkICYmIEl0ZW0uTGlzdENoYW5nZWQuaW5kZXhPZihrKSA+IC0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5BcnJheS5SZW1vdmUoSXRlbS5MaXN0Q2hhbmdlZCwgeD0+eD09PWspO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5DaGVja1N1bSA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgIGxldCBTdW1MaW5lID0gdGhpcy5EYXRhUHJlcGFyZWRbdGhpcy5EYXRhUHJlcGFyZWQubGVuZ3RoLTJdO1xyXG4gICAgICAgICAgICBsZXQgU3VtTGluZUZ1bGwgPSB0aGlzLkRhdGFQcmVwYXJlZC5MYXN0KCk7XHJcblxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRGF0YVByZXBhcmVkLmxlbmd0aC0yOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgbGV0IExpbmUgPSB0aGlzLkRhdGFQcmVwYXJlZFtpXTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGsgaW4gTGluZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKExpbmUuaGFzT3duUHJvcGVydHkoaykgJiYgdGhpcy5fS2V5UmVnZXgudGVzdChrKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpID09PSAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN1bUxpbmVGdWxsW2tdLlZhbHVlID0gTGluZVtrXS5WYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN1bUxpbmVGdWxsW2tdLlZhbHVlICs9IExpbmVba10uVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGkgPT09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgU3VtTGluZVtrXS5WYWx1ZSA9IExpbmVba10uVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoaSA+IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN1bUxpbmVba10uVmFsdWUgKz0gTGluZVtrXS5WYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy90aGlzLkNoZWNrKFN1bUxpbmUpOyDQktCe0KIg0JfQlNCV0KHQrCDQkdCr0JvQkCDQo9CR0KDQkNCd0JAg0J/QoNCe0JLQldCg0JrQkCDQn9Cg0JDQktCY0JvQrNCd0J7QodCi0JjQkiDQn9Ce0KHQm9CV0JTQndCV0Jkg0KHQotCg0J7QmtCVXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5HZXRYTFMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLkN1cnJlbnRMaWJyYXJpZXMubGVuZ3RoID4gMSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uTm90aWNlKCfQrdC60YHQv9C+0YDRgiDQtNCw0L3QvdGL0YUg0L3QtdGB0LrQvtC70YzQutC40YUg0LHQuNCx0LvQuNC+0YLQtdC6INC10YnQtSDQvdC10LTQvtGB0YLRg9C/0LXQvS4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBJbnB1dEJveC5IaWRlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIGxldCBEdCA9IEx1cmUuRGF0ZShEaWFyeS5TdW1tYXJ5LkN1cnJlbnREYXRlKTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1N1bW1hcnlfR2V0WExTKHRoaXMuQ3VycmVudExpYnJhcmllcywgRHQuWWVhciwgW0R0Lk1vbnRoKzFdLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAoQmxvYik9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLlNhdmVCbG9iKEJsb2IsIGDQodCy0L7QtNC90LDRjyDRgtCw0LHQu9C40YbQsCAke0R0LkZvcm1hdCgnTU1NTSBZWVlZJyl9Lnhsc3hgKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDYXRjaDogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcign0J3QtdCy0L7Qt9C80L7QttC90L4g0L/QvtC70YPRh9C40YLRjCDQvtGC0YfQtdGCJyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2xlYXIgPSBmdW5jdGlvbiAoaXNSZXR1cm5WYWx1ZT10cnVlKSB7XHJcbiAgICAgICAgICAgIC8vY29tbW9uXHJcbiAgICAgICAgICAgIC8vaT0xIGZvciBza2lwIG1vbnRoJ3Mgc3RhcnQncyBzdW0gdmFsaWRhdGlvblxyXG4gICAgICAgICAgICAvLyAtMiBmb3Igc2tpcCBzdW1zXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpPCB0aGlzLkRhdGFQcmVwYXJlZC5sZW5ndGgtMjsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGxldCBMaW5lID0gdGhpcy5EYXRhUHJlcGFyZWRbaV07XHJcbiAgICAgICAgICAgICAgICBMaW5lLkxpc3RDaGFuZ2VkID0gW107XHJcbiAgICAgICAgICAgICAgICBMaW5lLkxpc3RJbnZhbGlkID0gW107XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBrIGluIExpbmUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChMaW5lLmhhc093blByb3BlcnR5KGspICYmIHRoaXMuX0tleVJlZ2V4LnRlc3Qoaykpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNSZXR1cm5WYWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpbmVba10uVmFsdWUgPSBMaW5lW2tdLl9WYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTGluZVtrXS5fVmFsdWUgPSBMaW5lW2tdLlZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoZWNrKExpbmUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vcGFydDRcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGk8IHRoaXMuRGF0YUV2ZW50Lmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGxldCBMaW5lID0gdGhpcy5EYXRhRXZlbnRbaV07XHJcbiAgICAgICAgICAgICAgICBMaW5lLkxpc3RDaGFuZ2VkID0gW107XHJcbiAgICAgICAgICAgICAgICBMaW5lLkxpc3RJbnZhbGlkID0gW107XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBrIGluIExpbmUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChMaW5lLmhhc093blByb3BlcnR5KGspICYmIHRoaXMuX0tleVJlZ2V4LnRlc3Qoaykpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNSZXR1cm5WYWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpbmVba10uVmFsdWUgPSBMaW5lW2tdLl9WYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTGluZVtrXS5fVmFsdWUgPSBMaW5lW2tdLlZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hlY2soTGluZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy9wYXJ0NVxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaTwgdGhpcy5EYXRhRXhoaWJpdGlvbi5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICBsZXQgTGluZSA9IHRoaXMuRGF0YUV4aGliaXRpb25baV07XHJcbiAgICAgICAgICAgICAgICBMaW5lLkxpc3RDaGFuZ2VkID0gW107XHJcbiAgICAgICAgICAgICAgICBMaW5lLkxpc3RJbnZhbGlkID0gW107XHJcblxyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgayBpbiBMaW5lKXtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoTGluZS5oYXNPd25Qcm9wZXJ0eShrKSAmJiB0aGlzLl9LZXlSZWdleC50ZXN0KGspKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzUmV0dXJuVmFsdWUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMaW5lW2tdLlZhbHVlID0gTGluZVtrXS5fVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpbmVba10uX1ZhbHVlID0gTGluZVtrXS5WYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoZWNrKExpbmUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudFBhcnQuQ29udHJvbGxlci5SZWZyZXNoKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlNhdmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBDaGFuZ2VkID0gW107XHJcbiAgICAgICAgICAgIGxldCBpc09rID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgIGxldCBFcnJvckxpc3QgPSBbXTtcclxuXHJcbiAgICAgICAgICAgIC8vY2hlY2sgcGFydCAxMjM2XHJcbiAgICAgICAgICAgIC8vaT0xIGZvciBza2lwIG1vbnRoJ3Mgc3RhcnQncyBzdW0gdmFsaWRhdGlvblxyXG4gICAgICAgICAgICAvLyAtMiBmb3Igc2tpcCBzdW1zXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpPCB0aGlzLkRhdGFQcmVwYXJlZC5sZW5ndGgtMjsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGxldCBMaW5lID0gdGhpcy5EYXRhUHJlcGFyZWRbaV07XHJcbiAgICAgICAgICAgICAgICBpZiAoTGluZS5MaXN0SW52YWxpZCAmJiBMaW5lLkxpc3RJbnZhbGlkLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIGlzT2sgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAvL2xldCBGaWVsZE5hbWUgPSAoaSA8IHRoaXMuRGF0YVByZXBhcmVkLmxlbmd0aC0yKSA/IEx1cmUuRGF0ZShMaW5lLkRhdGVWYWx1ZSkuRm9ybWF0KCdERCBNTU1NIFlZWVknKSA6ICfQodGD0LzQvNCwINC30LAg0LzQtdGB0Y/Rhic7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9GaWVsZE5hbWUgPSAoaSA9PT0gdGhpcy5EYXRhUHJlcGFyZWQubGVuZ3RoLTEpID8gRmllbGROYW1lIDogJ9CY0YLQvtCz0L4nO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBGaWVsZE5hbWUgPSBMdXJlLkRhdGUoTGluZS5EYXRlVmFsdWUpLkZvcm1hdCgnREQgTU1NTSBZWVlZJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IEZpZWxkcyA9IExpbmUuTGlzdEludmFsaWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgLlNlbGVjdCh4PT54LnJlcGxhY2UoJ1AnLCAnJykucmVwbGFjZSgnVicsICcuJykpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKCcsICcpO1xyXG4gICAgICAgICAgICAgICAgICAgIEVycm9yTGlzdC5wdXNoKGAke0ZpZWxkTmFtZX06INC+0YjQuNCx0LrQsCDQsiDQv9C+0LvRj9GFICR7RmllbGRzfWApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKExpbmUuTGlzdENoYW5nZWQubGVuZ3RoID4gMCAmJiBpIDwgdGhpcy5EYXRhUHJlcGFyZWQubGVuZ3RoLTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBwYWNrZXQgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGVWYWx1ZTogTGluZS5EYXRlVmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENoYW5nZWQ6IExpbmUuTGlzdENoYW5nZWQuU2VsZWN0KHg9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7TmFtZTogeCwgVmFsdWU6IExpbmVbeF0uVmFsdWV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICBDaGFuZ2VkLnB1c2gocGFja2V0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL2NoZWNrIHBhcnQgNFxyXG4gICAgICAgICAgICBsZXQgQ2hhbmdlZEV2ZW50ID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpPCB0aGlzLkRhdGFFdmVudC5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICBsZXQgTGluZSA9IHRoaXMuRGF0YUV2ZW50W2ldO1xyXG4gICAgICAgICAgICAgICAgaWYgKExpbmUuTGlzdEludmFsaWQgJiYgTGluZS5MaXN0SW52YWxpZC5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICBpc09rID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IEZpZWxkTmFtZSA9IExpbmUuUDRWMi5WYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgRmllbGRzID0gTGluZS5MaXN0SW52YWxpZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuU2VsZWN0KHg9PngucmVwbGFjZSgnUCcsICcnKS5yZXBsYWNlKCdWJywgJy4nKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmpvaW4oJywgJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IEVyclRleHQgPSBgJHtGaWVsZE5hbWV9OiDQvtGI0LjQsdC60LAg0LIg0L/QvtC70Y/RhSAke0ZpZWxkc31gO1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dFcnJvcihFcnJUZXh0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoTGluZS5MaXN0Q2hhbmdlZC5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcGFja2V0ID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBJRDogTGluZS5JRCwgLy9oZXJlIGlzIExpYnJhcnlFdmVudElEXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENoYW5nZWQ6IExpbmUuTGlzdENoYW5nZWQuU2VsZWN0KHg9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7S2V5OiB4LnJlcGxhY2UoJ1A0VicsICcnKSwgVmFsdWU6IExpbmVbeF0uVmFsdWV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICBDaGFuZ2VkRXZlbnQucHVzaChwYWNrZXQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vY2hlY2sgcGFydCA1XHJcbiAgICAgICAgICAgIGxldCBDaGFuZ2VkRXhoaWJpdGlvbiA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaTwgdGhpcy5EYXRhRXhoaWJpdGlvbi5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICBsZXQgTGluZSA9IHRoaXMuRGF0YUV4aGliaXRpb25baV07XHJcbiAgICAgICAgICAgICAgICBpZiAoTGluZS5MaXN0SW52YWxpZCAmJiBMaW5lLkxpc3RJbnZhbGlkLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIGlzT2sgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgRmllbGROYW1lID0gTGluZS5QNFYyLlZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBGaWVsZHMgPSBMaW5lLkxpc3RJbnZhbGlkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5TZWxlY3QoeD0+eC5yZXBsYWNlKCdQJywgJycpLnJlcGxhY2UoJ1YnLCAnLicpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuam9pbignLCAnKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgRXJyVGV4dCA9IGAke0ZpZWxkTmFtZX06INC+0YjQuNCx0LrQsCDQsiDQv9C+0LvRj9GFICR7RmllbGRzfWA7XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU2hvd0Vycm9yKEVyclRleHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKExpbmUuTGlzdENoYW5nZWQubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBhY2tldCA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgSUQ6IExpbmUuSUQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENoYW5nZWQ6IExpbmUuTGlzdENoYW5nZWQuU2VsZWN0KHg9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7S2V5OiB4LnJlcGxhY2UoJ1A1VicsICcnKSwgVmFsdWU6IExpbmVbeF0uVmFsdWV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICBDaGFuZ2VkRXhoaWJpdGlvbi5wdXNoKHBhY2tldCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgRXJyb3JMaXN0Lmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dFcnJvcihFcnJvckxpc3RbaV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChFcnJvckxpc3QubGVuZ3RoIDwgMSAmJiAoQ2hhbmdlZC5sZW5ndGgrQ2hhbmdlZEV2ZW50Lmxlbmd0aCtDaGFuZ2VkRXhoaWJpdGlvbi5sZW5ndGg+IDApKXtcclxuICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2sodGhpcy5CdXR0b25TYXZlKTtcclxuICAgICAgICAgICAgICAgIGFwaS5EaWFyeV9TdW1tYXJ5X1NldCh0aGlzLkN1cnJlbnRMaWJyYXJ5SUQsIENoYW5nZWQsIENoYW5nZWRFdmVudCwgQ2hhbmdlZEV4aGliaXRpb24sIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dTdWNjZXNzKCfQmNC30LzQtdC90LXQvdC40Y8g0YHQvtGF0YDQsNC90LXQvdGLJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNsZWFyKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU2hvd0Vycm9yKCfQndC1INGB0L7RhdGA0LDQvdC10L3QvicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKHRoaXMuQnV0dG9uU2F2ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKENoYW5nZWQubGVuZ3RoIDwgMSAmJiBDaGFuZ2VkRXZlbnQubGVuZ3RoIDwgMSAmJiBDaGFuZ2VkRXhoaWJpdGlvbi5sZW5ndGggPCAxKVxyXG4gICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU2hvd05vdGljZSgn0JjQt9C80LXQvdC10L3QuNC5INC90LXRgicpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnU3VtbWFyeS5TYXZlLkxpbmVzJywgQ2hhbmdlZCwgQ2hhbmdlZEV2ZW50LCBDaGFuZ2VkRXhoaWJpdGlvbik7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5TaG93T3V0c2lkZUNoYW5nZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTaG93T3V0c2lkZUNoYW5nZXMnKTtcclxuICAgICAgICAgICAgRGlhcnkuU3VtbWFyeS5DdXJyZW50UGFydC5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5CdXR0b25SZWZyZXNoLmNsYXNzTGlzdC5jb250YWlucygnY2hhbmdlZC1vdXRzaWRlJykpXHJcbiAgICAgICAgICAgICAgICB0aGlzLkJ1dHRvblJlZnJlc2guY2xhc3NMaXN0LmFkZCgnY2hhbmdlZC1vdXRzaWRlJylcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2FsbENlbGxFZGl0b3IgPSBmdW5jdGlvbiAoQ2VsbEVsZW1lbnQsIExpbmVJRCkge1xyXG4gICAgICAgICAgICBpZiAoRGlhcnkuU3VtbWFyeS5DdXJyZW50TGlicmFyaWVzLmxlbmd0aCA+IDEpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIGlmICghRGlhcnkuU3VtbWFyeS5IYXNQZXJtaXNzaW9uV3JpdGUpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uTm90aWNlKCfQndC10YIg0L/RgNCw0LIg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDRgtCw0LHQu9C40YbRiycpO1xyXG4gICAgICAgICAgICBMdXJlLkRvY3VtZW50U2VsZWN0aW9uQ2xlYXIoKTtcclxuICAgICAgICAgICAgaWYgKERpYXJ5LlN1bW1hcnkuTGluZUVkaXRvci5pc0FjdGl2ZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQotCw0LHQu9C40YbQsCDRg9C20LUg0YDQtdC00LDQutGC0LjRgNGD0LXRgtGB0Y8nKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbGV0IEN1cnJlbnRQYXJ0ID0gdGhpcy5DdXJyZW50UGFydDtcclxuICAgICAgICAgICAgLy9sZXQgTGluZUlEID0gcC5MaW5lSUQ7Ly9wYXJzZUludChlLmN1cnJlbnRUYXJnZXQucGFyZW50RWxlbWVudC5kYXRhc2V0WydsaW5lJ10pO1xyXG4gICAgICAgICAgICBsZXQgRGF0YUl0ZW0gPSBDdXJyZW50UGFydC5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQoTGluZUlEKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBEYXRlTm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgbGV0IERhdGVMaW1pdCA9IG5ldyBEYXRlKERhdGVOb3cuZ2V0RnVsbFllYXIoKSwgRGF0ZU5vdy5nZXRNb250aCgpLCBEYXRlTm93LmdldERhdGUoKSAtIDEpO1xyXG4gICAgICAgICAgICBsZXQgRHRUYXJnZXQgPSBEYXRhSXRlbS5EYXRhLkRhdGVWYWx1ZTtcclxuICAgICAgICAgICAgaWYgKCFEdFRhcmdldCkgLy9pZiBldmVudFxyXG4gICAgICAgICAgICAgICAgRHRUYXJnZXQgPSBEYXRhSXRlbS5EYXRhLkRhdGVGaW5pc2g7XHJcbiAgICAgICAgICAgIGlmIChMdXJlLkRhdGUoRHRUYXJnZXQpLkRhdGUgPiBEYXRlTGltaXQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uV2Fybign0JLQvdC10YHQtdC90LjQtSDQv9C10YDQstC40YfQvdGL0YUg0LTQsNC90L3Ri9GFINC90LUg0LfQsNCy0LXRgNGI0LXQvdC+Jyk7XHJcbiAgICAgICAgICAgIGlmIChMdXJlLkRhdGUoRHRUYXJnZXQpLkRhdGUgPj0gRGF0ZUxpbWl0ICYmIERhdGVOb3cuZ2V0SG91cnMoKSA8IFN0YXRpYy5EYXRlSG91cnNFZGl0aW5nTGltaXQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uV2Fybign0JLQvdC10YHQtdC90LjQtSDQv9C10YDQstC40YfQvdGL0YUg0LTQsNC90L3Ri9GFINC90LUg0LfQsNCy0LXRgNGI0LXQvdC+Jyk7XHJcblxyXG4gICAgICAgICAgICBsZXQgU3VtTGluZUlEID0gLTE7XHJcbiAgICAgICAgICAgIGxldCBTdW1GdWxsTGluZUlEID0gLTE7XHJcbiAgICAgICAgICAgIGlmIChDdXJyZW50UGFydC5OYW1lICE9PSBcIlN1bW1hcnlQYXJ0NFwiICYmIEN1cnJlbnRQYXJ0Lk5hbWUgIT09IFwiU3VtbWFyeVBhcnQ1XCIpe1xyXG4gICAgICAgICAgICAgICAgU3VtTGluZUlEID0gQ3VycmVudFBhcnQuQ29udHJvbGxlci5fRGF0YVtDdXJyZW50UGFydC5Db250cm9sbGVyLl9EYXRhLmxlbmd0aC0yXS5MaW5lSUQ7XHJcbiAgICAgICAgICAgICAgICBTdW1GdWxsTGluZUlEID0gQ3VycmVudFBhcnQuQ29udHJvbGxlci5fRGF0YS5MYXN0KCkuTGluZUlEO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgUHJvcCA9IENlbGxFbGVtZW50LmRhdGFzZXRbJ3Byb3AnXTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IEV4dHJhT3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAgIENhcHRpb246IERhdGFJdGVtLkRhdGFbUHJvcF0uRC5OYW1lLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAvLyBpZiAoUHJvcCA9PT0gJ1A1VjUnIHx8IFByb3AgPT09ICdQNFYyMScpeyAvL0N1cmF0b3IgKFVzZXJJRCkgc2VsZWN0XHJcbiAgICAgICAgICAgIC8vICAgICBFeHRyYU9wdGlvbnMuRGF0YSA9IEx1cmUuVXNlci5DYWNoZS5Vc2VyTGlzdC5TZWxlY3QoeD0+e1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIElEOiB4LklELFxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICBOYW1lOiBgJHt4Lk5hbWV9IFske3guUG9zaXRpb259XSwgRW1haWw6ICR7eC5FbWFpbH0sINCi0LXQuy4gJHt4LlBob25lfWBcclxuICAgICAgICAgICAgLy8gICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vICAgICB9KTtcclxuICAgICAgICAgICAgLy8gICAgIEV4dHJhT3B0aW9ucy5LZXlWYWx1ZSA9ICdJRCc7XHJcbiAgICAgICAgICAgIC8vICAgICBFeHRyYU9wdGlvbnMuS2V5VmlldyA9ICdOYW1lJztcclxuICAgICAgICAgICAgLy8gICAgIC8ve1xyXG4gICAgICAgICAgICAvLyAgICAgLy8gICAgICAgICAgICAgLy8gICAgIFRleHRBcmVhOiBmYWxzZSxcclxuICAgICAgICAgICAgLy8gICAgIC8vICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICBpZiAoUHJvcCA9PT0gJ1A1VjYnKXtcclxuICAgICAgICAgICAgICAgIEV4dHJhT3B0aW9ucy5UeXBlID0gJ3RleHQnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChQcm9wID09PSAnUDRWMjAnIHx8IFByb3AgPT09ICdQNVY2Jyl7XHJcbiAgICAgICAgICAgICAgICBFeHRyYU9wdGlvbnMuVHlwZSA9ICdyaWNodGV4dCc7XHJcbiAgICAgICAgICAgICAgICBFeHRyYU9wdGlvbnMuQ3VzdG9tV2lkdGggPSAzMDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgSW5wdXRCb3guUnVuKENlbGxFbGVtZW50LCBEYXRhSXRlbS5EYXRhW1Byb3BdLlZhbHVlLCAodikgPT4ge1xyXG4gICAgICAgICAgICAgICAgRGF0YUl0ZW0uRGF0YVtQcm9wXS5WYWx1ZSA9IHY7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoZWNrKERhdGFJdGVtLkRhdGEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DaGVjayhEYXRhSXRlbS5EYXRhKTsgLy9pdCBpc24ndCBhIG1pc3Rha2UuIEl0IHJlcXVpcmVzIGNoZWNrIGZpZWxkcyBhZnRlciBjYWxjIGZ1cnRoZXIgZmllbGRzIChmb3IgaW5zdGFuY2UsIHJlY2hlY2tzIFAxVjE5IGFmdGVyIGNoYW5nZSBQMVYyNyAoY2F1c2VkIGJ5IGNoYW5naW5nIFAxVjI4KSlcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hlY2soRGF0YUl0ZW0uRGF0YSk7IC8vdGhpcyBsaW5lIGNhdXNlZCBieSBhZGRpdGlvbiAzcmQgbHZsIG9mIGNvbXB1dGVkIHZhbHVlcyAob2ggc2hpLi4pXHJcbiAgICAgICAgICAgICAgICAvL3RoaXMuQ2hlY2tTdW0oKTsvLy9cclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS53YXJuKFByb3AsIHYpO1xyXG4gICAgICAgICAgICAgICAgQ3VycmVudFBhcnQuQ29udHJvbGxlci5SZWZyZXNoKExpbmVJRCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoQ3VycmVudFBhcnQuTmFtZSAhPT0gXCJTdW1tYXJ5UGFydDRcIiAmJiBDdXJyZW50UGFydC5OYW1lICE9PSBcIlN1bW1hcnlQYXJ0NVwiKXtcclxuICAgICAgICAgICAgICAgICAgICBDdXJyZW50UGFydC5Db250cm9sbGVyLlJlZnJlc2goU3VtTGluZUlEKTtcclxuICAgICAgICAgICAgICAgICAgICBDdXJyZW50UGFydC5Db250cm9sbGVyLlJlZnJlc2goU3VtRnVsbExpbmVJRCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9LCBFeHRyYU9wdGlvbnMpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG5cclxuICAgIFJlZnJlc2goKXtcclxuICAgICAgICB0aGlzLkJ1dHRvblJlZnJlc2guY2xhc3NMaXN0LnJlbW92ZSgnY2hhbmdlZC1vdXRzaWRlJyk7XHJcbiAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgdGhpcy5TZWxlY3REYXRlLnZhbHVlID0gTHVyZS5EYXRlKHRoaXMuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpLlZhbHVlO1xyXG4gICAgICAgIHRoaXMuR2V0RGF0YSgpO1xyXG5cclxuICAgIH0sXHJcbiAgICBCZWZvcmVTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgRGlhcnkuQ2hlY2tGb3JCcmVhZCgpO1xyXG4gICAgICAgIGxldCBTdWIgPSB0aGlzLkN1cnJlbnRQYXJ0O1xyXG4gICAgICAgIC8vU3ViPy5TaG93KCk7XHJcbiAgICAgICAgaWYgKFN1YilcclxuICAgICAgICAgICAgU3ViLlNob3coKTtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKCdEaWFyeS5TdW1tYXJ5IEJlZm9yZVNob3cnKTtcclxuICAgIH0sXHJcbiAgICBTaG93OiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uLlN1YnNjcmliZSgpO1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgfSxcclxuICAgIEhpZGU6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5TdWJzY3JpcHRpb24uVW5zdWJzY3JpYmUoKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbmV3IExpYnJhcnlUcmVlKHRoaXMsIHRoaXMuU2VsZWN0KCcubGlicmFyeS10cmVlLWNvbnRyb2wnKSwge1xyXG4gICAgICAgICAgICAvLyBPblNlbGVjdDogKFNlbGVjdGVkKT0+e1xyXG4gICAgICAgICAgICAvLyAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5TZWxlY3REYXRlLnZhbHVlID0gdGhpcy5Qcm90by5EYXRhLk1vbnRocy5MYXN0KCkuVmFsdWU7XHJcbiAgICAgICAgdGhpcy5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCA9IHRoaXMuUHJvdG8uRGF0YS5Nb250aHMuTGFzdCgpLlZhbHVlO1xyXG4gICAgICAgIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5SURMaXN0U2VsZWN0ZWQgPSBbTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0Lkxhc3QoKS5JRF07XHJcblxyXG5cclxuICAgICAgICB0aGlzLlNlbGVjdERhdGUuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCk9PntcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCA9IEx1cmUuRGF0ZSh0aGlzLlNlbGVjdERhdGUudmFsdWUpLkRhdGU7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ19DaGFuZ2VEYXRlJywgdGhpcy5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCk7XHJcbiAgICAgICAgICAgIHRoaXMuR2V0RGF0YSgpO1xyXG5cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcudHJvdzpub3QoLmRheS1vZmYpIC5zdW0tcGFydC1kYXRlJywgZnVuY3Rpb24gKGUsIHApIHtcclxuICAgICAgICAgICAgLy9yZXR1cm47XHJcbiAgICAgICAgICAgIGlmIChEaWFyeS5TdW1tYXJ5LkN1cnJlbnRMaWJyYXJpZXMubGVuZ3RoPjEpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIGxldCBEYXRhSXRlbSA9IHRoaXMuQ3VycmVudFBhcnQuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKHAuTGluZUlEKTtcclxuICAgICAgICAgICAgbGV0IERhdGVOb3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICBsZXQgRGF0ZUxpbWl0ID0gbmV3IERhdGUoRGF0ZU5vdy5nZXRGdWxsWWVhcigpLCBEYXRlTm93LmdldE1vbnRoKCksIERhdGVOb3cuZ2V0RGF0ZSgpLTEpO1xyXG4gICAgICAgICAgICBpZiAoTHVyZS5EYXRlKERhdGFJdGVtLkRhdGEuRGF0ZVZhbHVlKS5EYXRlID4gRGF0ZUxpbWl0KVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLldhcm4oJ9Cf0LXRgNCy0LjRh9C90YvQtSDQtNCw0L3QvdGL0LUg0LXRidC1INC90LUg0LLQvdC10YHQtdC90YsnKTtcclxuICAgICAgICAgICAgaWYgKEx1cmUuRGF0ZShEYXRhSXRlbS5EYXRhLkRhdGVWYWx1ZSkuRGF0ZSA+PSBEYXRlTGltaXQgJiYgRGF0ZU5vdy5nZXRIb3VycygpIDwgU3RhdGljLkRhdGVIb3Vyc0VkaXRpbmdMaW1pdClcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5XYXJuKCfQn9C10YDQstC40YfQvdGL0LUg0LTQsNC90L3Ri9C1INC10YnQtSDQvdC1INCy0L3QtdGB0LXQvdGLJyk7XHJcblxyXG4gICAgICAgICAgICBEaWFyeS5TdW1tYXJ5LkxpbmVFZGl0b3IuU2hvdyhwLkxpbmVJRCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnRyb3c6bm90KC5kYXktb2ZmKSAubnVtcGFkYWJsZSwgLnRyb3c6bm90KC5kYXktb2ZmKSAudGV4dGJveGFibGUsIC50cm93Om5vdCguZGF5LW9mZikgLnNlbGVjdGFibGUnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNhbGxDZWxsRWRpdG9yKGUuY3VycmVudFRhcmdldCwgcC5MaW5lSUQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnRyb3cgLmxvY2ssIC5kYXktb2ZmIC50Y2VsbCcsIGZ1bmN0aW9uIChlLCBwKSB7XHJcbiAgICAgICAgICAgIGlmIChlLmN0cmxLZXkgJiYgZS5hbHRLZXkpXHJcbiAgICAgICAgICAgICAgICB0aGlzLkNhbGxDZWxsRWRpdG9yKGUuY3VycmVudFRhcmdldCwgcC5MaW5lSUQpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICcudGFiLXJhZGlvJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgSW5wdXRCb3guSGlkZSgpO1xyXG4gICAgICAgICAgICBsZXQgUGFydCA9IHRoaXMuQ3VycmVudFBhcnQ7XHJcbiAgICAgICAgICAgIFBhcnQuUHJvdG8uU2V0UHJvcGVydHkoJ1RhYmxlSUQnLCBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndGFibGVpZCddKTtcclxuICAgICAgICAgICAgUGFydC5Db250cm9sbGVyLlJlZnJlc2goKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5CdXR0b25SZWZyZXNoLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PnRoaXMuUmVmcmVzaCgpKTtcclxuXHJcbiAgICAgICAgdGhpcy5CdXR0b25TYXZlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5TYXZlKTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkNsZWFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5DbGVhcik7XHJcbiAgICAgICAgdGhpcy5CdXR0b25HZXRYTFMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLkdldFhMUyk7XHJcblxyXG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uID0gbmV3IEhpc3RvcnlTdWJzY3JpcHRpb24oIHtcclxuICAgICAgICAgICAgT25TdWJzY3JpYmU6IChIaXN0TGlzdCk9PntcclxuICAgICAgICAgICAgICAgIGxldCBDRCA9IEx1cmUuRGF0ZSh0aGlzLkN1cnJlbnREYXRlKTtcclxuICAgICAgICAgICAgICAgIGxldCBpc091ckd1eSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaCBvZiBIaXN0TGlzdCl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKChoLlR5cGVJRCAhPT0gRC5TdWJzY3JpYmVUeXBlLlN1bW1hcnlDaGFuZ2UgJiYgaC5UeXBlSUQgIT09IEQuU3Vic2NyaWJlVHlwZS5WaXNpdEV2ZW50QWRkKSB8fCAoaC5UeXBlSUQgPT09IEQuU3Vic2NyaWJlVHlwZS5TdW1tYXJ5Q2hhbmdlICYmIGguTWVzc2FnZVR5cGUgIT09IDQgJiYgaC5NZXNzYWdlVHlwZSAhPT0gNSkgKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9wYXJ0MTIzNlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaERhdGVWYWx1ZSA9IEx1cmUuRGF0ZShoLkRhdGVWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChDRC5ZZWFyID09PSBoRGF0ZVZhbHVlLlllYXIgJiYgQ0QuTW9udGggPT09IGhEYXRlVmFsdWUuTW9udGgpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNPdXJHdXkgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IERhdGFMaW5lID0gdGhpcy5EYXRhUHJlcGFyZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuV2hlcmUoeD0+eC5EYXRlVmFsdWUgPT09IGguRGF0ZVZhbHVlICYmIHguRGF0ZVZpc3VhbCAhPT0gJ9CX0LAg0LzQtdGB0Y/RhicgJiYgeC5EYXRlVmlzdWFsICE9PSBcItCd0LAg0L3QsNGH0LDQu9C+INC80LXRgdGP0YbQsFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5GaXJzdE9yRGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKERhdGFMaW5lICE9PSBudWxsKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEYXRhTGluZS5pc0NoYW5nZWRCeU91dHNpZGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vcGFydDQ1XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBEYXRhTGluZTQgPSBEaWFyeS5TdW1tYXJ5LlN1bW1hcnlQYXJ0NC5EYXRhLldoZXJlKHg9PnguSUQgPT09IGguSXRlbUlEKS5GaXJzdE9yRGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoRGF0YUxpbmU0ICE9PSBudWxsICYmIERpYXJ5LlN1bW1hcnkuU3VtbWFyeVBhcnQ0LkN1cnJlbnREYXRlID09PSB0aGlzLkN1cnJlbnREYXRlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzT3VyR3V5ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERhdGFMaW5lNC5pc0NoYW5nZWRCeU91dHNpZGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBEYXRhTGluZTUgPSBEaWFyeS5TdW1tYXJ5LlN1bW1hcnlQYXJ0NS5EYXRhLldoZXJlKHg9PnguSUQgPT09IGguSXRlbUlEKS5GaXJzdE9yRGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoRGF0YUxpbmU1ICE9PSBudWxsICYmIERpYXJ5LlN1bW1hcnkuU3VtbWFyeVBhcnQ1LkN1cnJlbnREYXRlID09PSB0aGlzLkN1cnJlbnREYXRlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzT3VyR3V5ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERhdGFMaW5lNS5pc0NoYW5nZWRCeU91dHNpZGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChpc091ckd1eSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TaG93T3V0c2lkZUNoYW5nZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICAvL3RoaXMuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBDb25kaXRpb246IChoKT0+e1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuU3Vic2NyaWJlVHlwZXMuaW5kZXhPZihoLlR5cGVJRCkgPiAtMSAmJiBoLkxpYnJhcnlJRCA9PT0gRGlhcnkuU3VtbWFyeS5DdXJyZW50TGlicmFyeUlEICYmIGguTG9naW5JRCAhPT0gTHVyZS5Vc2VyLklEXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcblxyXG5yZXF1aXJlKCcuL3BhcnQxLmpzJyk7XHJcbnJlcXVpcmUoJy4vcGFydDIuanMnKTtcclxucmVxdWlyZSgnLi9wYXJ0My5qcycpO1xyXG5yZXF1aXJlKCcuL3BhcnQ0LmpzJyk7XHJcbnJlcXVpcmUoJy4vcGFydDUuanMnKTtcclxucmVxdWlyZSgnLi9wYXJ0Ni5qcycpO1xyXG5cclxucmVxdWlyZSgnLi9saW5lLWVkaXRvci9saW5lLWVkaXRvci5qcycpOyIsImNvbnN0IEhpc3RvcnlTdWJzY3JpcHRpb24gPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2hpc3RvcnktbWFzdGVyL2hpc3Rvcnktc3Vic2NyaXB0aW9uJyk7XHJcbmNvbnN0IEQgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuXHJcblxyXG5EaWFyeS5WaXNpdGF0aW9uID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERpYXJ5LFxyXG4gICAgTmFtZTogJ1Zpc2l0YXRpb24nLFxyXG4gICAgVHlwZTogJ2RpYXJ5LWNvbnRlbnQnLFxyXG4gICAgLy9WaXNpYmxlOiB0cnVlLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1kaWFyeS12aXNpdCcsXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRC5Sb2xlLkRhaXJ5SW5wdXRdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJ2aXNpdGF0aW9uXCI+XHJcblxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInR1dG9yLXJ1bm5lclwiIHRpdGxlPVwi0J/QvtC80L7RidGMXCI+PzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldHNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LXJvdyBsLXJvd1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwhLS08ZGl2IGNsYXNzPVwid2lkZ2V0LXJvdyB3aWRnZXQtcm93LTAgbC1yb3dcIj48L2Rpdj4tLT5cclxuICAgICAgICAgICAgICAgICAgICA8IS0tPGRpdiBjbGFzcz1cIndpZGdldC1yb3cgd2lkZ2V0LXJvdy0xIGwtcm93XCI+PC9kaXY+LS0+XHJcbiAgICAgICAgICAgICAgICAgICAgPCEtLTxkaXYgY2xhc3M9XCJ3aWRnZXQtcm93IHdpZGdldC1yb3ctMiBsLXJvd1wiPjwvZGl2Pi0tPlxyXG4gICAgICAgICAgICAgICAgICAgIDwhLS08ZGl2IGNsYXNzPVwid2lkZ2V0LXJvdyB3aWRnZXQtcm93LTMgbC1yb3dcIj48L2Rpdj4tLT5cclxuICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLlN1YnNjcmliZVR5cGVzID0gW1xyXG4gICAgICAgICAgICBELlN1YnNjcmliZVR5cGUuVmlzaXRSZWdpc3RlckFkZCxcclxuICAgICAgICAgICAgRC5TdWJzY3JpYmVUeXBlLlZpc2l0VmlzaXRBZGQsXHJcbiAgICAgICAgICAgIEQuU3Vic2NyaWJlVHlwZS5WaXNpdEV2ZW50QWRkXHJcbiAgICAgICAgXTtcclxuXHJcblxyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIERpYXJ5LkNoZWNrRm9yQnJlYWQoKTtcclxuICAgICAgICAvL3RoaXMuQ2hpbGRyZW5CYWNrKCk7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcblxyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBXaWRnZXQuVmlzaXRDb3VudC5DaGFydC5SZWRyYXcoKTtcclxuICAgICAgICAvLyBXaWRnZXQuRXZlbnRTdW1tYXJ5LkNoYXJ0LlJlZHJhdygpO1xyXG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uLlN1YnNjcmliZSgpO1xyXG4gICAgfSxcclxuICAgIEhpZGU6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5TdWJzY3JpcHRpb24uVW5zdWJzY3JpYmUoKTtcclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIFdpZGdldC5UZXN0LlJlZnJlc2goKTtcclxuXHJcbiAgICAgICAgV2lkZ2V0LlZpc2l0UmVnaXN0ZXIuUmVmcmVzaCgpO1xyXG4gICAgICAgIFdpZGdldC5WaXNpdENvdW50LlJlZnJlc2goKTtcclxuICAgICAgICBXaWRnZXQuVmlzaXRBdXRvQ291bnQuUmVmcmVzaCgpO1xyXG5cclxuICAgICAgICBXaWRnZXQuRXZlbnRGcmVlLlJlZnJlc2goKTtcclxuICAgICAgICBXaWRnZXQuRXZlbnRQYWlkLlJlZnJlc2goKTtcclxuICAgICAgICBXaWRnZXQuRXZlbnRTdW1tYXJ5LlJlZnJlc2goKTtcclxuXHJcbiAgICAgICAgV2lkZ2V0LkNsdWJGcmVlLlJlZnJlc2goKTtcclxuICAgICAgICBXaWRnZXQuQ2x1YlBhaWQuUmVmcmVzaCgpO1xyXG4gICAgICAgIFdpZGdldC5FeGhpYml0aW9uLlJlZnJlc2goKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy50dXRvci1ydW5uZXInKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XHJcbiAgICAgICAgICAgIEx1cmUuUnVuVHV0b3IodGhpcy5Db250ZW50KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5TdWJzY3JpcHRpb24gPSBuZXcgSGlzdG9yeVN1YnNjcmlwdGlvbih7XHJcbiAgICAgICAgICAgIE9uU3Vic2NyaWJlOiAoSGlzdExpc3QpPT57XHJcbiAgICAgICAgICAgICAgICBpZiAoSGlzdExpc3QuV2hlcmUoaD0+aC5UeXBlSUQgPT09IEQuU3Vic2NyaWJlVHlwZS5WaXNpdFJlZ2lzdGVyQWRkKS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICBXaWRnZXQuVmlzaXRSZWdpc3Rlci5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoSGlzdExpc3QuV2hlcmUoaD0+aC5UeXBlSUQgPT09IEQuU3Vic2NyaWJlVHlwZS5WaXNpdFZpc2l0QWRkKS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICBXaWRnZXQuVmlzaXRDb3VudC5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBsZXQgSGlzdFZpc2l0RXZlbnQgPSBIaXN0TGlzdC5XaGVyZShoPT5oLlR5cGVJRCA9PT0gRC5TdWJzY3JpYmVUeXBlLlZpc2l0RXZlbnRBZGQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKEhpc3RWaXNpdEV2ZW50Lmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChIaXN0VmlzaXRFdmVudC5XaGVyZShoPT5oLk1lc3NhZ2VUeXBlID09PSBELkxpYnJhcnlFdmVudFR5cGUuRXZlbnRGcmVlKS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkV2ZW50RnJlZS5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChIaXN0VmlzaXRFdmVudC5XaGVyZShoPT5oLk1lc3NhZ2VUeXBlID09PSBELkxpYnJhcnlFdmVudFR5cGUuRXZlbnRQYWlkKS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkV2ZW50UGFpZC5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChIaXN0VmlzaXRFdmVudC5XaGVyZShoPT5oLk1lc3NhZ2VUeXBlID09PSBELkxpYnJhcnlFdmVudFR5cGUuQ2x1YkZyZWUpLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBXaWRnZXQuQ2x1YkZyZWUuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoSGlzdFZpc2l0RXZlbnQuV2hlcmUoaD0+aC5NZXNzYWdlVHlwZSA9PT0gRC5MaWJyYXJ5RXZlbnRUeXBlLkNsdWJQYWlkKS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkNsdWJQYWlkLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKEhpc3RWaXNpdEV2ZW50LldoZXJlKGg9PmguTWVzc2FnZVR5cGUgPT09IEQuTGlicmFyeUV2ZW50VHlwZS5FeGhpYml0aW9uKS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkV4aGliaXRpb24uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIENvbmRpdGlvbjogKGgpPT57XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5TdWJzY3JpYmVUeXBlcy5pbmRleE9mKGguVHlwZUlEKSA+IC0xICYmIGguTGlicmFyeUlEID09PSBEaWFyeS5DdXJyZW50TGlicmFyeUlEICYmIGguTG9naW5JRCAhPT0gTHVyZS5Vc2VyLklEXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgfVxyXG5cclxufSk7XHJcblxyXG5yZXF1aXJlKCcuL3dpZGdldHMvdGVzdC90ZXN0LmpzJyk7XHJcblxyXG5yZXF1aXJlKCcuL3dpZGdldHMvcmVnaXN0ZXIvcmVnaXN0ZXIuanMnKTtcclxucmVxdWlyZSgnLi93aWRnZXRzL2NvdW50L2NvdW50LmpzJyk7XHJcbnJlcXVpcmUoJy4vd2lkZ2V0cy9hdXRvY291bnRlci9hdXRvY291bnRlci5qcycpO1xyXG5cclxucmVxdWlyZSgnLi93aWRnZXRzL2V2ZW50LWZyZWUvZXZlbnQtZnJlZS5qcycpO1xyXG5yZXF1aXJlKCcuL3dpZGdldHMvZXZlbnQtcGFpZC9ldmVudC1wYWlkLmpzJyk7XHJcbnJlcXVpcmUoJy4vd2lkZ2V0cy9ldmVudC1zdW1tYXJ5L2V2ZW50LXN1bW1hcnkuanMnKTtcclxuXHJcbnJlcXVpcmUoJy4vd2lkZ2V0cy9jbHViLWZyZWUvY2x1Yi1mcmVlLmpzJyk7XHJcbnJlcXVpcmUoJy4vd2lkZ2V0cy9jbHViLXBhaWQvY2x1Yi1wYWlkLmpzJyk7XHJcbnJlcXVpcmUoJy4vd2lkZ2V0cy9leGhpYml0aW9uL2V4aGliaXRpb24uanMnKTtcclxuXHJcblxyXG4iLCJjb25zdCBSRUZSRVNIX0lOVEVSVkFMID0gNzAwMDA7XHJcblxyXG5XaWRnZXQuVmlzaXRBdXRvQ291bnQgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGlhcnkuVmlzaXRhdGlvbixcclxuICAgIE5hbWU6ICdXaWRnZXRWaXNpdEF1dG9Db3VudGVyJyxcclxuICAgIFRhcmdldDogJy53aWRnZXQtcm93JyxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGRyYWdnYWJsZT1cInRydWVcIiBjbGFzcz1cIndpZGdldCBkcmFnZ2FibGUgZGlhcnktd2lkZ2V0IHZpc2l0LWF1dG9jb3VudGVyLXdpZGdldFwiIGRhdGEtdHV0b3I9XCLQktC40LTQttC10YIg0LTQsNC90L3Ri9GFINGBINCw0LLRgtC+0LzQsNGC0LjRh9C10YHQutC+0LPQviDRgdGH0LXRgtGH0LjQutCwINC/0L7RgdC10YnQtdC90LjQuVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1oZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtdGl0bGUgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWljb24gaWNvbi12aXNpdG9yLW5ld1wiPjwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jYXB0aW9uXCI+0JTQkNCd0J3Qq9CVINCQ0JLQotCe0JzQkNCi0JjQp9CV0KHQmtCe0JPQniDQodCn0JXQotCn0JjQmtCQPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbHMgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtbW92ZVwiIHRpdGxlPVwi0J/QtdGA0LXQvNC10YHRgtC40YLRjFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1mYXZvcml0ZVwiIHRpdGxlPVwi0J3QsCDQs9C70LDQstC90YvQuSDRjdC60YDQsNC9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudCBsLWNvbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoaW50LXdhcm5lclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICDQntCx0YDQsNGJ0LDQtdC8INCS0LDRiNC1INCy0L3QuNC80LDQvdC40LUg0L3QsCDRgtC+LCDRh9GC0L4g0LTQsNC90L3Ri9C1INGBINCw0LLRgtC+0LzQsNGC0LjRh9C10YHQutC+0LPQviDRgdGH0LXRgtGH0LjQutCwINC/0L7RgdC10YnQtdC90LjQuSDQvNC+0LPRg9GCINC30L3QsNGH0LjRgtC10LvRjNC90L4g0L7RgtC70LjRh9Cw0YLRjNGB0Y8g0L7RgiDRgNC10LDQu9GM0L3Ri9GFINC/0L7QutCw0LfQsNGC0LXQu9C10LkhXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdW50ZXJzIGwtcm93IGwtZmxleC1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb3VudGVyIGNvdW50ZXItaW5cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaWdpdFwiPnt7Y2luMX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlnaXRcIj57e2NpbjJ9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpZ2l0XCI+e3tjaW4zfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaWdpdFwiPnt7Y2luNH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY291bnRlciBjb3VudGVyLW91dFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpZ2l0XCI+e3tjb3V0MX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlnaXRcIj57e2NvdXQyfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaWdpdFwiPnt7Y291dDN9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpZ2l0XCI+e3tjb3V0NH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb3VudGVyLWNhcHRpb25zIGwtcm93IGwtZmxleC1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb3VudGVyLWNhcHRpb25cIj7QktCl0J7QlDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY291bnRlci1jYXB0aW9uXCI+0JLQq9Cl0J7QlDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWZsZXgtY2VudGVyIG5vbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiBidG4tcmVmcmVzaFwiPjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb25uZWN0aW9uLXN0YXR1cyBsLXJvdyBsLWZsZXgtZW5kIGwtZmxleGEtYmFzZWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj5j0L7QtdC00LjQvdC10L3QuNC1INGB0L4g0YHRh9C10YLRh9C40LrQvtC8PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb25uZWN0aW9uLWljb24ge3sjaWYgKG8uU3RhdHVzKSA/ICdjb25uZWN0ZWQnOidkaXNjb25uZWN0ZWQnfX1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3RvOntcclxuICAgICAgICBDb3VudEluOiAwLFxyXG4gICAgICAgIENvdW50T3V0OiAwLFxyXG4gICAgICAgIFN0YXR1czogMVxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6e1xyXG4gICAgICAgIGNpbjE6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLkNvdW50SW4sIDEpLFxyXG4gICAgICAgIGNpbjI6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLkNvdW50SW4sIDIpLFxyXG4gICAgICAgIGNpbjM6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLkNvdW50SW4sIDMpLFxyXG4gICAgICAgIGNpbjQ6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLkNvdW50SW4sIDQpLFxyXG4gICAgICAgIGNvdXQxOiAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLkNvdW50T3V0LCAxKSxcclxuICAgICAgICBjb3V0MjogKGMsIHApPT5HbG9iYWwuR2V0RGlnaXQocC5Db3VudE91dCwgMiksXHJcbiAgICAgICAgY291dDM6IChjLCBwKT0+R2xvYmFsLkdldERpZ2l0KHAuQ291bnRPdXQsIDMpLFxyXG4gICAgICAgIGNvdXQ0OiAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLkNvdW50T3V0LCA0KSxcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLlJlZnJlc2hJbnRlcnZhbCA9IFJFRlJFU0hfSU5URVJWQUw7XHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uID0gdGhpcy5TZWxlY3QoJy53aWRnZXQtY29udHJvbC1mYXZvcml0ZScpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5HZXRDb3VudHMgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG5cclxuICAgICAgICAgICAgbGV0IEludER0U3RhcnQgPSBMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpLkRheVN0YXJ0LnZhbHVlT2YoKTtcclxuICAgICAgICAgICAgbGV0IEludER0RW5kID0gTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKS5EYXlFbmQudmFsdWVPZigpO1xyXG4gICAgICAgICAgICAvL2FwaS5MaWJyYXJ5X0dldFZpc2l0YXRpb25fb2xkKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEaWFyeS5TZWxlY3RMaWJyYXJ5LnZhbHVlLCB7XHJcbiAgICAgICAgICAgIGFwaS5MaWJyYXJ5X0dldFZpc2l0YXRpb24oRGlhcnkuU2VsZWN0TGlicmFyeS52YWx1ZSwgW0ludER0U3RhcnQsIEludER0RW5kXSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHYpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgLy90aGlzLlByb3RvLlNldFByb3BlcnR5KCcnKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0NvdW50SW4nLCB2WzBdKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdDb3VudE91dCcsIHZbMV0pO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIENhdGNoOiAoZSk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcign0J7RiNC40LHQutCwINC/0L7Qu9GD0YfQtdC90LjRjyDQtNCw0L3QvdGL0YUg0LDQstGC0L7QvNCw0YLQuNGH0LXRgdC60L7Qs9C+INGB0YfQtdGC0YfQuNC60LAg0YHQviDRgdGC0L7RgNC+0L3QvdC10LPQviDRgdC10YDQstC10YDQsCcsIGUpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU3dpdGNoRmF2b3JpdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5SZW1vdmVXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5BZGRXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcC50aGVuKCgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICAgICAgfSlcclxuXHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmlzRmF2b3JpdGUgPSBMdXJlLlVzZXIuV2ViU2V0dGluZ3MuRmVhdHVyZWQuV2lkZ2V0cy5pbmRleE9mKHRoaXMuRnVsbE5hbWUpID4gLTE7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzRmF2b3JpdGUpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICAvL3JldHVybjtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgIHRoaXMuR2V0Q291bnRzKCk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIHRoaXMuUmVJbnRlcnZhbCA9IHNldEludGVydmFsKCgpPT57XHJcbiAgICAgICAgLy8gICAgIHRoaXMuR2V0Q291bnRzKCk7XHJcbiAgICAgICAgLy8gfSwgdGhpcy5SZWZyZXNoSW50ZXJ2YWwpXHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5Td2l0Y2hGYXZvcml0ZSlcclxuICAgIH1cclxuXHJcbn0pO1xyXG4iLCJXaWRnZXQuQ2x1YkZyZWUgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGlhcnkuVmlzaXRhdGlvbixcclxuICAgIE5hbWU6ICdXaWRnZXRDbHViRnJlZScsXHJcbiAgICBUYXJnZXQ6ICcud2lkZ2V0LXJvdycsXHJcbiAgICBDb250ZW50OiBgPGRpdiBkcmFnZ2FibGU9XCJ0cnVlXCIgY2xhc3M9XCJ3aWRnZXQgZHJhZ2dhYmxlIGRpYXJ5LXdpZGdldCBjbHViLWZyZWUtd2lkZ2V0XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaWNvbiBpY29uLXZpc2l0b3ItbmV3XCI+PC9kaXY+ICBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7QkdCV0KHQn9Cb0JDQotCd0KvQlSDQmtCb0KPQkdCrPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbHMgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtbW92ZVwiIHRpdGxlPVwi0J/QtdGA0LXQvNC10YHRgtC40YLRjFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1mYXZvcml0ZVwiIHRpdGxlPVwi0J3QsCDQs9C70LDQstC90YvQuSDRjdC60YDQsNC9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uLXRvZGF5IGwtcm93IGwtZmxleGEtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb3VudC1jYXB0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3Ryb25nXCI+e3tDb3VudFN1bX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzdWFsXCI+0YfQuNGC0LDRgtC10LvQtdC5INC/0L7RgdC10YLQuNC70Lgg0YHQtdCz0L7QtNC90Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50LWxpc3RcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLXBsdXMtY3V0dGVyIHJpZ2h0XCI+PGJ1dHRvbiBjbGFzcz1cImJ1dHRvbi1wbHVzIGJ0bi1zd2l0Y2hlclwiIGRpc2FibGVkPVwiZGlzYWJsZWRcIj48L2J1dHRvbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgTGlicmFyeUV2ZW50VHlwZUlEOiBEaWN0aW9uYXJ5LkxpYnJhcnlFdmVudFR5cGUuQ2x1YkZyZWUsXHJcbiAgICAgICAgQ291bnRTdW06IDAsXHJcbiAgICAgICAgU2VyaWVzSW5kZXg6IDIsXHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgIERhdGU6ICgpPT57XHJcbiAgICAgICAgICAgIGlmICghRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XHJcbiAgICAgICAgICAgIGxldCBEID0gTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKTtcclxuICAgICAgICAgICAgcmV0dXJuIEQuaXNUb2RheSA/ICfRgdC10LPQvtC00L3Rjyc6RC5Gb3JtYXQoJ0REIE1NTU0gWVlZWScsIHRydWUpfSxcclxuICAgICAgICBQZXJjZW50OiAoYywgcCk9PntcclxuICAgICAgICAgICAgbGV0IHBlcmNlbnQgPSBwLkNvdW50L3AuQ291bnRQbGFuKjEwMDtcclxuICAgICAgICAgICAgaWYgKHBlcmNlbnQgPD0gMTAwKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBlcmNlbnQ7XHJcbiAgICAgICAgICAgIHJldHVybiAxMDA7XHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBDb250cm9sbGVyOntcclxuICAgICAgICBUYXJnZXQ6ICcuZXZlbnQtbGlzdCcsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8ZGl2IGNsYXNzPVwiZXZlbnQtaXRlbSBwcm9ncmVzcy1iYXIgbGluZS1pbnRlcmxpbmVhclwiIHN0eWxlPVwiLS1wcm9ncmVzcy1wZXJjZW50OiB7e1BlcmNlbnR9fSU7XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb2dyZXNzLWNhcHRpb24gbC1yb3cgbC1mbGV4LWJldHdlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhc3VhbFwiPnt7TmFtZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1pbmxpbmUtY2hhbmdlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtcG9pbnRlciBjb250cm9sLWlubGluZSBjb250cm9sLWlubGluZS1taW51c1wiIHt7I2RhdGEtbGluZX19Pi08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1sYXN0IHZhbHVlLWlubGluZVwiPnt7Q291bnR9fS97e0NvdW50UGxhbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1wb2ludGVyIGNvbnRyb2wtaW5saW5lIGNvbnRyb2wtaW5saW5lLXBsdXNcIiB7eyNkYXRhLWxpbmV9fT4rPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgICAgICBFbXB0eU1lc3NhZ2U6IGA8ZGl2IGNsYXNzPVwibGlzdC1lbXB0eVwiPtC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0L3QtdGCPC9kaXY+YFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbiA9IHRoaXMuU2VsZWN0KCcud2lkZ2V0LWNvbnRyb2wtZmF2b3JpdGUnKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5Db3VudEluY3JlYXNlID0gZnVuY3Rpb24gKExpbmVJRCwgQ29udHJvbCkge1xyXG4gICAgICAgICAgICBsZXQgRGF0ZU5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTGltaXQgPSBuZXcgRGF0ZShEYXRlTm93LmdldEZ1bGxZZWFyKCksIERhdGVOb3cuZ2V0TW9udGgoKSwgRGF0ZU5vdy5nZXREYXRlKCksIFN0YXRpYy5EYXRlSG91cnNFZGl0aW5nTGltaXQpO1xyXG4gICAgICAgICAgICBpZiAoRGF0ZUxpbWl0IDwgRGF0ZU5vdyAmJiAhTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKS5pc1RvZGF5KXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRgNC10LzRjyDQuNC30LzQtdC90LXQvdC40Y8g0L/RgNC10LTRi9C00YPRidC40YUg0LTQsNC90L3Ri9GFINC40YHRgtC10LrQu9C+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayhDb250cm9sKTtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQoTGluZUlEKTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1Zpc2l0YXRpb25fRXZlbnRWaXNpdEFkZChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGF0YUl0ZW0uRGF0YS5JRCwgMSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzPjApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhSXRlbS5EYXRhLkNvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChMaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkV2ZW50U3VtbWFyeS5TZXJpZXNVcGRhdGUodGhpcy5Qcm90by5EYXRhLlNlcmllc0luZGV4LCB0aGlzLlByb3RvLkRhdGEuQ291bnRTdW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UoQ29udHJvbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ291bnREZWNyZWFzZSA9IGZ1bmN0aW9uIChMaW5lSUQsIENvbnRyb2wpIHtcclxuICAgICAgICAgICAgbGV0IERhdGVOb3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICBsZXQgRGF0ZUxpbWl0ID0gbmV3IERhdGUoRGF0ZU5vdy5nZXRGdWxsWWVhcigpLCBEYXRlTm93LmdldE1vbnRoKCksIERhdGVOb3cuZ2V0RGF0ZSgpLCBTdGF0aWMuRGF0ZUhvdXJzRWRpdGluZ0xpbWl0KTtcclxuICAgICAgICAgICAgaWYgKERhdGVMaW1pdCA8IERhdGVOb3cgJiYgIUx1cmUuRGF0ZShEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCkuaXNUb2RheSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9CS0YDQtdC80Y8g0LjQt9C80LXQvdC10L3QuNGPINC/0YDQtdC00YvQtNGD0YnQuNGFINC00LDQvdC90YvRhSDQuNGB0YLQtdC60LvQvicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2soQ29udHJvbCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRhSXRlbSA9IHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKExpbmVJRCk7XHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0V2ZW50VmlzaXRBZGQoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQsIERhdGFJdGVtLkRhdGEuSUQsIC0xLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXM+MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGFJdGVtLkRhdGEuQ291bnQtLTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtLS07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKExpbmVJRCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBXaWRnZXQuRXZlbnRTdW1tYXJ5LlNlcmllc1VwZGF0ZSh0aGlzLlByb3RvLkRhdGEuU2VyaWVzSW5kZXgsIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZShDb250cm9sKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlN3aXRjaEZhdm9yaXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgcDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNGYXZvcml0ZSl7XHJcbiAgICAgICAgICAgICAgICBwID0gRmVhdHVyZWQuUmVtb3ZlV2lkZ2V0KHRoaXMuRnVsbE5hbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBwID0gRmVhdHVyZWQuQWRkV2lkZ2V0KHRoaXMuRnVsbE5hbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHAudGhlbigoKT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNGYXZvcml0ZSA9IEx1cmUuVXNlci5XZWJTZXR0aW5ncy5GZWF0dXJlZC5XaWRnZXRzLmluZGV4T2YodGhpcy5GdWxsTmFtZSkgPiAtMTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNGYXZvcml0ZSlcclxuICAgICAgICAgICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yKCk7XHJcbiAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9FdmVudEdldChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGlhcnkuUHJvdG8uRGF0YS5MaWJyYXJ5LklELCB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUV2ZW50VHlwZUlELCAtMSwge1xyXG4gICAgICAgICAgICBUaGVuOiAobGlzdCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKGxpc3QpO1xyXG4gICAgICAgICAgICAgICAgbGV0IENvdW50ID0gMDtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgICAgICAgICBDb3VudCArPSBsaXN0W2ldLkNvdW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnQ291bnRTdW0nLCBDb3VudCk7XHJcbiAgICAgICAgICAgICAgICBXaWRnZXQuRXZlbnRTdW1tYXJ5LlNlcmllc1VwZGF0ZSh0aGlzLlByb3RvLkRhdGEuU2VyaWVzSW5kZXgsIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmNvbnRyb2wtaW5saW5lLXBsdXMnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvdW50SW5jcmVhc2UocC5MaW5lSUQsIGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29udHJvbC1pbmxpbmUtbWludXMnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvdW50RGVjcmVhc2UocC5MaW5lSUQsIGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuU3dpdGNoRmF2b3JpdGUpO1xyXG4gICAgfVxyXG59KTsiLCJXaWRnZXQuQ2x1YlBhaWQgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGlhcnkuVmlzaXRhdGlvbixcclxuICAgIE5hbWU6ICdXaWRnZXRDbHViUGFpZCcsXHJcbiAgICBUYXJnZXQ6ICcud2lkZ2V0LXJvdycsXHJcbiAgICBDb250ZW50OiBgPGRpdiBkcmFnZ2FibGU9XCJ0cnVlXCIgY2xhc3M9XCJ3aWRnZXQgZHJhZ2dhYmxlIGRpYXJ5LXdpZGdldCBjbHViLXBhaWQtd2lkZ2V0XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaWNvbiBpY29uLXZpc2l0b3ItbmV3XCI+PC9kaXY+ICBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7Qn9Cb0JDQotCd0KvQlSDQmtCb0KPQkdCrPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbHMgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtbW92ZVwiIHRpdGxlPVwi0J/QtdGA0LXQvNC10YHRgtC40YLRjFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1mYXZvcml0ZVwiIHRpdGxlPVwi0J3QsCDQs9C70LDQstC90YvQuSDRjdC60YDQsNC9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uLXRvZGF5IGwtcm93IGwtZmxleGEtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb3VudC1jYXB0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3Ryb25nXCI+e3tDb3VudFN1bX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzdWFsXCI+0YfQuNGC0LDRgtC10LvQtdC5INC/0L7RgdC10YLQuNC70Lgge3tEYXRlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50LWxpc3RcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLXBsdXMtY3V0dGVyIHJpZ2h0XCI+PGJ1dHRvbiBjbGFzcz1cImJ1dHRvbi1wbHVzIGJ0bi1zd2l0Y2hlclwiIGRpc2FibGVkPVwiZGlzYWJsZWRcIj48L2J1dHRvbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgTGlicmFyeUV2ZW50VHlwZUlEOiBEaWN0aW9uYXJ5LkxpYnJhcnlFdmVudFR5cGUuQ2x1YlBhaWQsXHJcbiAgICAgICAgQ291bnRTdW06IDAsXHJcbiAgICAgICAgU2VyaWVzSW5kZXg6IDMsXHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgIERhdGU6ICgpPT57XHJcbiAgICAgICAgICAgIGlmICghRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XHJcbiAgICAgICAgICAgIGxldCBEID0gTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKTtcclxuICAgICAgICAgICAgcmV0dXJuIEQuaXNUb2RheSA/ICfRgdC10LPQvtC00L3Rjyc6RC5Gb3JtYXQoJ0REIE1NTU0gWVlZWScsIHRydWUpfSxcclxuICAgICAgICBQZXJjZW50OiAoYywgcCk9PntcclxuICAgICAgICAgICAgbGV0IHBlcmNlbnQgPSBwLkNvdW50L3AuQ291bnRQbGFuKjEwMDtcclxuICAgICAgICAgICAgaWYgKHBlcmNlbnQgPD0gMTAwKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBlcmNlbnQ7XHJcbiAgICAgICAgICAgIHJldHVybiAxMDA7XHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBDb250cm9sbGVyOntcclxuICAgICAgICBUYXJnZXQ6ICcuZXZlbnQtbGlzdCcsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8ZGl2IGNsYXNzPVwiZXZlbnQtaXRlbSBwcm9ncmVzcy1iYXIgbGluZS1pbnRlcmxpbmVhclwiIHN0eWxlPVwiLS1wcm9ncmVzcy1wZXJjZW50OiB7e1BlcmNlbnR9fSU7XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb2dyZXNzLWNhcHRpb24gbC1yb3cgbC1mbGV4LWJldHdlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhc3VhbFwiPnt7TmFtZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1pbmxpbmUtY2hhbmdlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtcG9pbnRlciBjb250cm9sLWlubGluZSBjb250cm9sLWlubGluZS1taW51c1wiIHt7I2RhdGEtbGluZX19Pi08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1sYXN0IHZhbHVlLWlubGluZVwiPnt7Q291bnR9fS97e0NvdW50UGxhbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1wb2ludGVyIGNvbnRyb2wtaW5saW5lIGNvbnRyb2wtaW5saW5lLXBsdXNcIiB7eyNkYXRhLWxpbmV9fT4rPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgICAgICBFbXB0eU1lc3NhZ2U6IGA8ZGl2IGNsYXNzPVwibGlzdC1lbXB0eVwiPtC80LXRgNC+0L/RgNC40Y/RgtC40Lkg0L3QtdGCPC9kaXY+YFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbiA9IHRoaXMuU2VsZWN0KCcud2lkZ2V0LWNvbnRyb2wtZmF2b3JpdGUnKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5Db3VudEluY3JlYXNlID0gZnVuY3Rpb24gKExpbmVJRCwgQ29udHJvbCkge1xyXG4gICAgICAgICAgICBsZXQgRGF0ZU5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTGltaXQgPSBuZXcgRGF0ZShEYXRlTm93LmdldEZ1bGxZZWFyKCksIERhdGVOb3cuZ2V0TW9udGgoKSwgRGF0ZU5vdy5nZXREYXRlKCksIFN0YXRpYy5EYXRlSG91cnNFZGl0aW5nTGltaXQpO1xyXG4gICAgICAgICAgICBpZiAoRGF0ZUxpbWl0IDwgRGF0ZU5vdyAmJiAhTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKS5pc1RvZGF5KXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRgNC10LzRjyDQuNC30LzQtdC90LXQvdC40Y8g0L/RgNC10LTRi9C00YPRidC40YUg0LTQsNC90L3Ri9GFINC40YHRgtC10LrQu9C+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayhDb250cm9sKTtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQoTGluZUlEKTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1Zpc2l0YXRpb25fRXZlbnRWaXNpdEFkZChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGF0YUl0ZW0uRGF0YS5JRCwgMSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzPjApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhSXRlbS5EYXRhLkNvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChMaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkV2ZW50U3VtbWFyeS5TZXJpZXNVcGRhdGUodGhpcy5Qcm90by5EYXRhLlNlcmllc0luZGV4LCB0aGlzLlByb3RvLkRhdGEuQ291bnRTdW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UoQ29udHJvbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ291bnREZWNyZWFzZSA9IGZ1bmN0aW9uIChMaW5lSUQsIENvbnRyb2wpIHtcclxuICAgICAgICAgICAgbGV0IERhdGVOb3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICBsZXQgRGF0ZUxpbWl0ID0gbmV3IERhdGUoRGF0ZU5vdy5nZXRGdWxsWWVhcigpLCBEYXRlTm93LmdldE1vbnRoKCksIERhdGVOb3cuZ2V0RGF0ZSgpLCBTdGF0aWMuRGF0ZUhvdXJzRWRpdGluZ0xpbWl0KTtcclxuICAgICAgICAgICAgaWYgKERhdGVMaW1pdCA8IERhdGVOb3cgJiYgIUx1cmUuRGF0ZShEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCkuaXNUb2RheSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9CS0YDQtdC80Y8g0LjQt9C80LXQvdC10L3QuNGPINC/0YDQtdC00YvQtNGD0YnQuNGFINC00LDQvdC90YvRhSDQuNGB0YLQtdC60LvQvicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2soQ29udHJvbCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRhSXRlbSA9IHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKExpbmVJRCk7XHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0V2ZW50VmlzaXRBZGQoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQsIERhdGFJdGVtLkRhdGEuSUQsIC0xLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXM+MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGFJdGVtLkRhdGEuQ291bnQtLTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtLS07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKExpbmVJRCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBXaWRnZXQuRXZlbnRTdW1tYXJ5LlNlcmllc1VwZGF0ZSh0aGlzLlByb3RvLkRhdGEuU2VyaWVzSW5kZXgsIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZShDb250cm9sKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlN3aXRjaEZhdm9yaXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgcDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNGYXZvcml0ZSl7XHJcbiAgICAgICAgICAgICAgICBwID0gRmVhdHVyZWQuUmVtb3ZlV2lkZ2V0KHRoaXMuRnVsbE5hbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBwID0gRmVhdHVyZWQuQWRkV2lkZ2V0KHRoaXMuRnVsbE5hbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHAudGhlbigoKT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNGYXZvcml0ZSA9IEx1cmUuVXNlci5XZWJTZXR0aW5ncy5GZWF0dXJlZC5XaWRnZXRzLmluZGV4T2YodGhpcy5GdWxsTmFtZSkgPiAtMTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNGYXZvcml0ZSlcclxuICAgICAgICAgICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yKCk7XHJcbiAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9FdmVudEdldChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGlhcnkuUHJvdG8uRGF0YS5MaWJyYXJ5LklELCB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUV2ZW50VHlwZUlELCAtMSwge1xyXG4gICAgICAgICAgICBUaGVuOiAobGlzdCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKGxpc3QpO1xyXG4gICAgICAgICAgICAgICAgbGV0IENvdW50ID0gMDtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgICAgICAgICBDb3VudCArPSBsaXN0W2ldLkNvdW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnQ291bnRTdW0nLCBDb3VudCk7XHJcbiAgICAgICAgICAgICAgICBXaWRnZXQuRXZlbnRTdW1tYXJ5LlNlcmllc1VwZGF0ZSh0aGlzLlByb3RvLkRhdGEuU2VyaWVzSW5kZXgsIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmNvbnRyb2wtaW5saW5lLXBsdXMnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvdW50SW5jcmVhc2UocC5MaW5lSUQsIGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29udHJvbC1pbmxpbmUtbWludXMnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvdW50RGVjcmVhc2UocC5MaW5lSUQsIGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5Td2l0Y2hGYXZvcml0ZSk7XHJcbiAgICB9XHJcbn0pOyIsImNvbnN0IEhpc3RvcnlNYXN0ZXIgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vX2NvbW1vbi9oaXN0b3J5LW1hc3Rlci9oaXN0b3J5LW1hc3RlclwiKTtcclxuY29uc3QgU3RhdGljID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL19jb21tb24vc3RhdGljXCIpO1xyXG5cclxuLyoqXHJcbiAqXHJcbiAqIEBjbGFzcyBXaWRnZXRWaXNpdENvdW50XHJcbiAqL1xyXG5jb25zdCBXaWRnZXRWaXNpdENvdW50ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERpYXJ5LlZpc2l0YXRpb24sXHJcbiAgICBOYW1lOiAnV2lkZ2V0VmlzaXRDb3VudCcsXHJcbiAgICBUYXJnZXQ6ICcud2lkZ2V0LXJvdycsXHJcbiAgICBDb250ZW50OiBgPGRpdiBkcmFnZ2FibGU9XCJ0cnVlXCIgY2xhc3M9XCJ3aWRnZXQgZHJhZ2dhYmxlIGRpYXJ5LXdpZGdldCB2aXNpdC1jb3VudC13aWRnZXQge3tEYXlUeXBlfX1cIiBkYXRhLXR1dG9yPVwi0JLQuNC00LbQtdGCINGD0YfQtdGC0LAg0L/QvtGB0LXRidC10L3QuNC5XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaWNvbiBpY29uLXZpc2l0b3ItbmV3XCI+PC9kaXY+ICBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7Qo9Cn0JXQoiDQn9Ce0KHQldCi0JjQotCV0JvQldCZPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbHMgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtbW92ZVwiIHRpdGxlPVwi0J/QtdGA0LXQvNC10YHRgtC40YLRjFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1mYXZvcml0ZVwiIHRpdGxlPVwi0J3QsCDQs9C70LDQstC90YvQuSDRjdC60YDQsNC9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudCBsLWNvbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2aXNpdC1jaGFydFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2aXNpdC1wbGFuXCIgZGF0YS10dXRvcj1cItCa0LvQuNC60L3QuNGC0LUgwqvQv9C70Y7RgcK7INC00LvRjyDRg9GH0LXRgtCwINC/0L7RgdC10YnQtdC90LjRjywgwqvQvNC40L3Rg9GBwrsgLSDQtNC70Y8g0L7RgtC80LXQvdGLINGD0YfQtdGC0LAg0L/QvtGB0LXRidC10L3QuNGPXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7Q291bnR9fS97e0NvdW50UGxhbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250cm9sc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImNvbnRyb2wgbC1wb2ludGVyIGNvbnRyb2wtbWludXNcIj48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJjb250cm9sIGwtcG9pbnRlciBjb250cm9sLXBsdXNcIj48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxhc3QtdmlzaXRcIiBkYXRhLXR1dG9yPVwi0KPRh9C10YIg0L/QvtGB0LXRidC10L3QuNC5INC30LAg0L/RgNC+0YjQu9GL0Lkg0LTQtdC90YwuINCU0LDQvdC90YvQtSDQvNC+0LbQvdC+INC40LfQvNC10L3Rj9GC0Ywg0LTQviAxNC4wMC4g0JrQu9C40LrQvdC40YLQtSDCq9C/0LvRjtGBwrsg0LTQu9GPINGD0YfQtdGC0LAg0L/QvtGB0LXRidC10L3QuNGPLCDCq9C80LjQvdGD0YHCuyAtINC00LvRjyDQvtGC0LzQtdC90Ysg0YPRh9C10YLQsCDQv9C+0YHQtdGJ0LXQvdC40Y9cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhc3VhbFwiPtCf0L7RgdC10YLQuNGC0LXQu9C10Lkge3tEYXRlUHJldn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1pbmxpbmUtY2hhbmdlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtcG9pbnRlciBjb250cm9sLWlubGluZSBjb250cm9sLWlubGluZS1taW51c1wiPi08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZS1sYXN0IHZhbHVlLWlubGluZVwiPnt7Q291bnRQcmV2fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLXBvaW50ZXIgY29udHJvbC1pbmxpbmUgY29udHJvbC1pbmxpbmUtcGx1c1wiPis8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDonJyxcclxuICAgIFN0YXRlOiB7XHJcbiAgICAgICAgQ291bnQ6IDAsXHJcbiAgICAgICAgQ291bnRQcmV2OiAwLFxyXG4gICAgICAgIENvdW50UGxhbjogMCxcclxuICAgICAgICBEYXRlUHJldjogTHVyZS5EYXRlKCkuQWRkRGF5cygtMSkuRGF0ZSxcclxuXHJcbiAgICAgICAgLy9pc0Zhdm9yaXRlOiBmYWxzZSxcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OntcclxuICAgICAgICBEYXlUeXBlOiAoKT0+e1xyXG4gICAgICAgICAgICByZXR1cm4gIURpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkIHx8IEx1cmUuRGF0ZShEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCkuaXNUb2RheSA/ICcnOicgcHJldmlvdXMnO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgRGF0ZVByZXY6IChkKT0+THVyZS5EYXRlKGQpLkZvcm1hdCgnREQgTU1NTSBZWVlZJywgdHJ1ZSksXHJcbiAgICAgICAgYzE6IChjLCBwKT0+R2xvYmFsLkdldERpZ2l0KHAuQ291bnQsIDEpLFxyXG4gICAgICAgIGMyOiAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLkNvdW50LCAyKSxcclxuICAgICAgICBjMzogKGMsIHApPT5HbG9iYWwuR2V0RGlnaXQocC5Db3VudCwgMyksXHJcbiAgICAgICAgYzQ6IChjLCBwKT0+R2xvYmFsLkdldERpZ2l0KHAuQ291bnQsIDQpLFxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0NvdW50R2V0KERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEaWFyeS5Qcm90by5EYXRhLkxpYnJhcnkuSUQsIHtcclxuICAgICAgICAgICAgVGhlbjogKHgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ291bnQgPSB4LkNvdW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkNvdW50UHJldiA9IHguQ291bnRQcmV2O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkNvdW50UGxhbiA9IHguQ291bnRQbGFuO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkRhdGVQcmV2ID0gTHVyZS5EYXRlKHguRGF0ZVByZXYpLkRhdGU7XHJcblxyXG4gICAgICAgICAgICAgICAgLy9sZXQgUmluZ0NvdW50ID0gdGhpcy5Qcm90by5EYXRhLkNvdW50IDwgdGhpcy5Qcm90by5EYXRhLkNvdW50UGxhbiA/IHRoaXMuUHJvdG8uRGF0YS5Db3VudDogdGhpcy5Qcm90by5EYXRhLkNvdW50UGxhbjtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YVswXSA9IHRoaXMuUHJvdG8uRGF0YS5Db3VudCAvIHRoaXMuUHJvdG8uRGF0YS5Db3VudFBsYW4gfHwgMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YVsxXSA9IDEtdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1swXS5EYXRhWzBdO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbMF0gPiAxKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbMF0gPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YVsxXSA9IDBcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnQuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQ2hlY2tGb3JGYXZvcigpO1xyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5DaGFydCA9IG5ldyBMdXJlLkNoYXJ0KHtcclxuICAgICAgICAgICAgVGFyZ2V0OiB0aGlzLlNlbGVjdCgnLnZpc2l0LWNoYXJ0JyksXHJcbiAgICAgICAgICAgIFR5cGU6ICdwaWUnLFxyXG4gICAgICAgICAgICBMZWdlbmQ6IHtcclxuICAgICAgICAgICAgICAgIFZpc2libGU6IGZhbHNlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFNlcmllczogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIExhYmVsczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhOiBbXCLQktCl0J7QlFwiLCfQktCr0KXQntCUJ11cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIERhdGE6IFswLCAwXSxcclxuICAgICAgICAgICAgICAgICAgICBDb2xvcnM6IFtcIiM3QUNEREJcIixcIiM1QzlCQUFcIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgVHlwZTogJ3JpbmcnLFxyXG4gICAgICAgICAgICAgICAgICAgIFdpZHRoOiAzMSxcclxuICAgICAgICAgICAgICAgICAgICBBbmdsZVN0YXJ0OiAtOTAsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFRvb2x0aXA6e1xyXG4gICAgICAgICAgICAgICAgVmlzaWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuQnV0dG9uSW5jcmVhc2UgPSB0aGlzLlNlbGVjdCgnLmNvbnRyb2wtcGx1cycpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uRGVjcmVhc2UgPSB0aGlzLlNlbGVjdCgnLmNvbnRyb2wtbWludXMnKTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkluY3JlYXNlUHJldiA9IHRoaXMuU2VsZWN0KCcuY29udHJvbC1pbmxpbmUtcGx1cycpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uRGVjcmVhc2VQcmV2ID0gdGhpcy5TZWxlY3QoJy5jb250cm9sLWlubGluZS1taW51cycpO1xyXG5cclxuICAgICAgICB0aGlzLldpZGdldENvbnRlbnQgPSB0aGlzLlNlbGVjdCgnLndpZGdldC1jb250ZW50Jyk7XHJcbiAgICAgICAgdGhpcy5BdHRlbnRpb25BbmltYXRpb25EdXJhdGlvbiA9IEx1cmUuR2V0RHVyYXRpb25BbmltYXRpb24oJ2FuaW1hdGlvbi1ibGluaycsIHRoaXMuV2lkZ2V0Q29udGVudCk7XHJcblxyXG4gICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbiA9IHRoaXMuU2VsZWN0KCcud2lkZ2V0LWNvbnRyb2wtZmF2b3JpdGUnKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5Db3VudEluY3JlYXNlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKHRoaXMuQnV0dG9uSW5jcmVhc2UpO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9Db3VudEFkZChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGlhcnkuUHJvdG8uRGF0YS5MaWJyYXJ5LklELCAxLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAocik9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAociA8IDEpXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ0NvdW50JywgdGhpcy5Qcm90by5EYXRhLkNvdW50KzEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YVswXSA9IHRoaXMuUHJvdG8uRGF0YS5Db3VudC90aGlzLlByb3RvLkRhdGEuQ291bnRQbGFuIHx8IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1swXS5EYXRhWzFdID0gMS10aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YVswXSA+IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbMF0gPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbMV0gPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIFdpZGdldC5WaXNpdENvdW50LkNoYXJ0LlJlZnJlc2goe0FuaW1hdGlvbjogZmFsc2V9KTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDYXRjaDogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICAvL0hpc3RvcnlNYXN0ZXIuRGVjcmVhc2VMYXN0SUQoKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UodGhpcy5CdXR0b25JbmNyZWFzZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Db3VudERlY3JlYXNlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5Qcm90by5EYXRhLkNvdW50IDw9IFdpZGdldC5WaXNpdFJlZ2lzdGVyLlByb3RvLkRhdGEuQ291bnQgfHwgdGhpcy5Qcm90by5EYXRhLkNvdW50IDwgMSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayh0aGlzLkJ1dHRvbkRlY3JlYXNlKTtcclxuICAgICAgICAgICAgLy9IaXN0b3J5TWFzdGVyLkluY3JlYXNlTGFzdElEKCk7XHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0NvdW50QWRkKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEaWFyeS5Qcm90by5EYXRhLkxpYnJhcnkuSUQsIC0xLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAoeCk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAoeCA8IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47Ly8gSGlzdG9yeU1hc3Rlci5EZWNyZWFzZUxhc3RJRCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdDb3VudCcsIHRoaXMuUHJvdG8uRGF0YS5Db3VudC0xKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbMF0gPSB0aGlzLlByb3RvLkRhdGEuQ291bnQvdGhpcy5Qcm90by5EYXRhLkNvdW50UGxhbiB8fCAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YVsxXSA9IDEtdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1swXS5EYXRhWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbMF0gPiAxKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1swXS5EYXRhWzBdID0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1swXS5EYXRhWzFdID0gMFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBXaWRnZXQuVmlzaXRDb3VudC5DaGFydC5SZWZyZXNoKHtBbmltYXRpb246IGZhbHNlfSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgQ2F0Y2g6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgLy9IaXN0b3J5TWFzdGVyLkRlY3JlYXNlTGFzdElEKCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKHRoaXMuQnV0dG9uRGVjcmVhc2UpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNvdW50TGFzdEluY3JlYXNlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgRGF0ZU5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTGltaXQgPSBuZXcgRGF0ZShEYXRlTm93LmdldEZ1bGxZZWFyKCksIERhdGVOb3cuZ2V0TW9udGgoKSwgRGF0ZU5vdy5nZXREYXRlKCksIFN0YXRpYy5EYXRlSG91cnNFZGl0aW5nTGltaXQpO1xyXG4gICAgICAgICAgICBpZiAoRGF0ZUxpbWl0ID4gRGF0ZU5vdyl7XHJcbiAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKHRoaXMuQnV0dG9uSW5jcmVhc2VQcmV2KTtcclxuICAgICAgICAgICAgICAgIC8vSGlzdG9yeU1hc3Rlci5JbmNyZWFzZUxhc3RJRCgpO1xyXG4gICAgICAgICAgICAgICAgYXBpLkRpYXJ5X1Zpc2l0YXRpb25fQ291bnRBZGQodGhpcy5Qcm90by5EYXRhLkRhdGVQcmV2LCBEaWFyeS5Qcm90by5EYXRhLkxpYnJhcnkuSUQsIDEsIHtcclxuICAgICAgICAgICAgICAgICAgICBUaGVuOiAoeCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHggPCAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsvLyBIaXN0b3J5TWFzdGVyLkRlY3JlYXNlTGFzdElEKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnQ291bnRQcmV2JywgdGhpcy5Qcm90by5EYXRhLkNvdW50UHJldisxKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIENhdGNoOiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL0hpc3RvcnlNYXN0ZXIuRGVjcmVhc2VMYXN0SUQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UodGhpcy5CdXR0b25JbmNyZWFzZVByZXYpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRgNC10LzRjyDQuNC30LzQtdC90LXQvdC40Y8g0L/RgNC10LTRi9C00YPRidC40YUg0LTQsNC90L3Ri9GFINC40YHRgtC10LrQu9C+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNvdW50TGFzdERlY3JlYXNlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgRGF0ZU5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTGltaXQgPSBuZXcgRGF0ZShEYXRlTm93LmdldEZ1bGxZZWFyKCksIERhdGVOb3cuZ2V0TW9udGgoKSwgRGF0ZU5vdy5nZXREYXRlKCksIFN0YXRpYy5EYXRlSG91cnNFZGl0aW5nTGltaXQpO1xyXG5cclxuICAgICAgICAgICAgaWYgKERhdGVMaW1pdCA+IERhdGVOb3cpe1xyXG4gICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayh0aGlzLkJ1dHRvbkRlY3JlYXNlUHJldik7XHJcbiAgICAgICAgICAgICAgICAvL0hpc3RvcnlNYXN0ZXIuSW5jcmVhc2VMYXN0SUQoKTtcclxuICAgICAgICAgICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0NvdW50QWRkKHRoaXMuUHJvdG8uRGF0YS5EYXRlUHJldiwgRGlhcnkuUHJvdG8uRGF0YS5MaWJyYXJ5LklELCAtMSwge1xyXG4gICAgICAgICAgICAgICAgICAgIFRoZW46ICh4KT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoeCA8IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOy8vIEhpc3RvcnlNYXN0ZXIuRGVjcmVhc2VMYXN0SUQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdDb3VudFByZXYnLCB0aGlzLlByb3RvLkRhdGEuQ291bnRQcmV2LTEpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgQ2F0Y2g6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vSGlzdG9yeU1hc3Rlci5EZWNyZWFzZUxhc3RJRCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZSh0aGlzLkJ1dHRvbkRlY3JlYXNlUHJldik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGA0LXQvNGPINC40LfQvNC10L3QtdC90LjRjyDQv9GA0LXQtNGL0LTRg9GJ0LjRhSDQtNCw0L3QvdGL0YUg0LjRgdGC0LXQutC70L4nKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLkNhbGxBdHRlbnRpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIEx1cmUuQXN5bmNUb2dnbGUodGhpcywgbnVsbCwgdGhpcy5XaWRnZXRDb250ZW50LCAoKT0+e30sKCk9Pnt9LCAnYW5pbWF0aW9uLWJsaW5rJywgJ2FuaW1hdGlvbi1ibGluaycsIHRoaXMuQXR0ZW50aW9uQW5pbWF0aW9uRHVyYXRpb24sIG51bGwpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuU3dpdGNoRmF2b3JpdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5SZW1vdmVXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5BZGRXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcC50aGVuKCgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hlY2tGb3JGYXZvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5pc0Zhdm9yaXRlID0gTHVyZS5Vc2VyLldlYlNldHRpbmdzLkZlYXR1cmVkLldpZGdldHMuaW5kZXhPZih0aGlzLkZ1bGxOYW1lKSA+IC0xO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5CdXR0b25JbmNyZWFzZS5vbmNsaWNrICAgICA9IHRoaXMuQ291bnRJbmNyZWFzZTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkRlY3JlYXNlLm9uY2xpY2sgICAgID0gdGhpcy5Db3VudERlY3JlYXNlO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uSW5jcmVhc2VQcmV2Lm9uY2xpY2sgPSB0aGlzLkNvdW50TGFzdEluY3JlYXNlO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uRGVjcmVhc2VQcmV2Lm9uY2xpY2sgPSB0aGlzLkNvdW50TGFzdERlY3JlYXNlO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5Td2l0Y2hGYXZvcml0ZSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuV2lkZ2V0LlZpc2l0Q291bnQgPSBXaWRnZXRWaXNpdENvdW50O1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJXaWRnZXQuRXZlbnRGcmVlID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERpYXJ5LlZpc2l0YXRpb24sXHJcbiAgICBOYW1lOiAnV2lkZ2V0RXZlbnRGcmVlJyxcclxuICAgIFRhcmdldDogJy53aWRnZXQtcm93JyxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGRyYWdnYWJsZT1cInRydWVcIiBjbGFzcz1cIndpZGdldCBkcmFnZ2FibGUgZGlhcnktd2lkZ2V0IGV2ZW50LWZyZWUtd2lkZ2V0XCIgZGF0YS10dXRvcj1cIlwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1oZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtdGl0bGUgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWljb24gaWNvbi12aXNpdG9yLW5ld1wiPjwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jYXB0aW9uXCI+0JHQldCh0J/Qm9CQ0KLQndCr0JUg0JzQldCg0J7Qn9Cg0JjQr9Ci0JjQrzwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2xzIGwtcm93IGwtZmxleGEtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLW1vdmVcIiB0aXRsZT1cItCf0LXRgNC10LzQtdGB0YLQuNGC0YxcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtZmF2b3JpdGVcIiB0aXRsZT1cItCd0LAg0LPQu9Cw0LLQvdGL0Lkg0Y3QutGA0LDQvVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvbi10b2RheSBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY291bnQtY2FwdGlvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0cm9uZ1wiPnt7Q291bnRTdW19fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhc3VhbFwiPtGH0LjRgtCw0YLQtdC70LXQuSDQv9C+0YHQtdGC0LjQu9C4IHt7RGF0ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudC1saXN0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1wbHVzLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1wbHVzLWN1dHRlciByaWdodFwiPjxidXR0b24gY2xhc3M9XCJidXR0b24tcGx1cyBidG4tc3dpdGNoZXJcIiBkaXNhYmxlZD1cImRpc2FibGVkXCI+PC9idXR0b24+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcbiAgICBQcm90bzoge1xyXG4gICAgICAgIExpYnJhcnlFdmVudFR5cGVJRDogRGljdGlvbmFyeS5MaWJyYXJ5RXZlbnRUeXBlLkV2ZW50RnJlZSxcclxuICAgICAgICBDb3VudFN1bTogMCxcclxuICAgICAgICBTZXJpZXNJbmRleDogMCxcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OiB7XHJcbiAgICAgICAgRGF0ZTogKCk9PntcclxuICAgICAgICAgICAgaWYgKCFEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZClcclxuICAgICAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICAgICAgbGV0IEQgPSBMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICByZXR1cm4gRC5pc1RvZGF5ID8gJ9GB0LXQs9C+0LTQvdGPJzpELkZvcm1hdCgnREQgTU1NTSBZWVlZJywgdHJ1ZSl9LFxyXG4gICAgICAgIFBlcmNlbnQ6IChjLCBwKT0+e1xyXG4gICAgICAgICAgICBsZXQgcGVyY2VudCA9IHAuQ291bnQvcC5Db3VudFBsYW4qMTAwO1xyXG4gICAgICAgICAgICBpZiAocGVyY2VudCA8PSAxMDApXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcGVyY2VudDtcclxuICAgICAgICAgICAgcmV0dXJuIDEwMDtcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIENvbnRyb2xsZXI6e1xyXG4gICAgICAgIFRhcmdldDogJy5ldmVudC1saXN0JyxcclxuICAgICAgICBMaXN0RWxlbWVudDogYDxkaXYgY2xhc3M9XCJldmVudC1pdGVtIHByb2dyZXNzLWJhciBsaW5lLWludGVybGluZWFyXCIgc3R5bGU9XCItLXByb2dyZXNzLXBlcmNlbnQ6IHt7UGVyY2VudH19JTtcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MtY2FwdGlvbiBsLXJvdyBsLWZsZXgtYmV0d2VlblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzdWFsXCI+e3tOYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLWlubGluZS1jaGFuZ2VyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1wb2ludGVyIGNvbnRyb2wtaW5saW5lIGNvbnRyb2wtaW5saW5lLW1pbnVzXCIge3sjZGF0YS1saW5lfX0+LTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLWxhc3QgdmFsdWUtaW5saW5lXCI+e3tDb3VudH19L3t7Q291bnRQbGFufX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLXBvaW50ZXIgY29udHJvbC1pbmxpbmUgY29udHJvbC1pbmxpbmUtcGx1c1wiIHt7I2RhdGEtbGluZX19Pis8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXYgY2xhc3M9XCJsaXN0LWVtcHR5XCI+0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuSDQvdC10YI8L2Rpdj5gXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uID0gdGhpcy5TZWxlY3QoJy53aWRnZXQtY29udHJvbC1mYXZvcml0ZScpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNvdW50SW5jcmVhc2UgPSBmdW5jdGlvbiAoTGluZUlELCBDb250cm9sKSB7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgbGV0IERhdGVMaW1pdCA9IG5ldyBEYXRlKERhdGVOb3cuZ2V0RnVsbFllYXIoKSwgRGF0ZU5vdy5nZXRNb250aCgpLCBEYXRlTm93LmdldERhdGUoKSwgU3RhdGljLkRhdGVIb3Vyc0VkaXRpbmdMaW1pdCk7XHJcbiAgICAgICAgICAgIGlmIChEYXRlTGltaXQgPCBEYXRlTm93ICYmICFMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpLmlzVG9kYXkpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGA0LXQvNGPINC40LfQvNC10L3QtdC90LjRjyDQv9GA0LXQtNGL0LTRg9GJ0LjRhSDQtNCw0L3QvdGL0YUg0LjRgdGC0LXQutC70L4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKENvbnRyb2wpO1xyXG4gICAgICAgICAgICBsZXQgRGF0YUl0ZW0gPSB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRChMaW5lSUQpO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9FdmVudFZpc2l0QWRkKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEYXRhSXRlbS5EYXRhLklELCAxLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXM+MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGFJdGVtLkRhdGEuQ291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKExpbmVJRCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBXaWRnZXQuRXZlbnRTdW1tYXJ5LlNlcmllc1VwZGF0ZSh0aGlzLlByb3RvLkRhdGEuU2VyaWVzSW5kZXgsIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZShDb250cm9sKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Db3VudERlY3JlYXNlID0gZnVuY3Rpb24gKExpbmVJRCwgQ29udHJvbCkge1xyXG4gICAgICAgICAgICBsZXQgRGF0ZU5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTGltaXQgPSBuZXcgRGF0ZShEYXRlTm93LmdldEZ1bGxZZWFyKCksIERhdGVOb3cuZ2V0TW9udGgoKSwgRGF0ZU5vdy5nZXREYXRlKCksIFN0YXRpYy5EYXRlSG91cnNFZGl0aW5nTGltaXQpO1xyXG4gICAgICAgICAgICBpZiAoRGF0ZUxpbWl0IDwgRGF0ZU5vdyAmJiAhTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKS5pc1RvZGF5KXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRgNC10LzRjyDQuNC30LzQtdC90LXQvdC40Y8g0L/RgNC10LTRi9C00YPRidC40YUg0LTQsNC90L3Ri9GFINC40YHRgtC10LrQu9C+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayhDb250cm9sKTtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQoTGluZUlEKTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1Zpc2l0YXRpb25fRXZlbnRWaXNpdEFkZChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGF0YUl0ZW0uRGF0YS5JRCwgLTEsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcz4wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YUl0ZW0uRGF0YS5Db3VudC0tO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ291bnRTdW0tLTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goTGluZUlEKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpZGdldC5FdmVudFN1bW1hcnkuU2VyaWVzVXBkYXRlKHRoaXMuUHJvdG8uRGF0YS5TZXJpZXNJbmRleCwgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKENvbnRyb2wpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU3dpdGNoRmF2b3JpdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5SZW1vdmVXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5BZGRXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcC50aGVuKCgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hlY2tGb3JGYXZvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5pc0Zhdm9yaXRlID0gTHVyZS5Vc2VyLldlYlNldHRpbmdzLkZlYXR1cmVkLldpZGdldHMuaW5kZXhPZih0aGlzLkZ1bGxOYW1lKSA+IC0xO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0V2ZW50R2V0KERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEaWFyeS5Qcm90by5EYXRhLkxpYnJhcnkuSUQsIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5RXZlbnRUeXBlSUQsIC0xLCB7XHJcbiAgICAgICAgICAgIFRoZW46IChsaXN0KT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2gobGlzdCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgQ291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICAgICAgICAgIENvdW50ICs9IGxpc3RbaV0uQ291bnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdDb3VudFN1bScsIENvdW50KTtcclxuICAgICAgICAgICAgICAgIFdpZGdldC5FdmVudFN1bW1hcnkuU2VyaWVzVXBkYXRlKHRoaXMuUHJvdG8uRGF0YS5TZXJpZXNJbmRleCwgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29udHJvbC1pbmxpbmUtcGx1cycsIGZ1bmN0aW9uIChlLCBwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ291bnRJbmNyZWFzZShwLkxpbmVJRCwgZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5jb250cm9sLWlubGluZS1taW51cycsIGZ1bmN0aW9uIChlLCBwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ291bnREZWNyZWFzZShwLkxpbmVJRCwgZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLlN3aXRjaEZhdm9yaXRlKTtcclxuICAgIH1cclxufSk7IiwiV2lkZ2V0LkV2ZW50UGFpZCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeS5WaXNpdGF0aW9uLFxyXG4gICAgTmFtZTogJ1dpZGdldEV2ZW50UGFpZCcsXHJcbiAgICBUYXJnZXQ6ICcud2lkZ2V0LXJvdycsXHJcbiAgICBDb250ZW50OiBgPGRpdiBkcmFnZ2FibGU9XCJ0cnVlXCIgY2xhc3M9XCJ3aWRnZXQgZHJhZ2dhYmxlIGRpYXJ5LXdpZGdldCBldmVudC1wYWlkLXdpZGdldFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1oZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtdGl0bGUgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWljb24gaWNvbi12aXNpdG9yLW5ld1wiPjwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jYXB0aW9uXCI+0J/Qm9CQ0KLQndCr0JUg0JzQldCg0J7Qn9Cg0JjQr9Ci0JjQrzwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2xzIGwtcm93IGwtZmxleGEtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLW1vdmVcIiB0aXRsZT1cItCf0LXRgNC10LzQtdGB0YLQuNGC0YxcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtZmF2b3JpdGVcIiB0aXRsZT1cItCd0LAg0LPQu9Cw0LLQvdGL0Lkg0Y3QutGA0LDQvVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvbi10b2RheSBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY291bnQtY2FwdGlvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0cm9uZ1wiPnt7Q291bnRTdW19fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhc3VhbFwiPtGH0LjRgtCw0YLQtdC70LXQuSDQv9C+0YHQtdGC0LjQu9C4IHt7RGF0ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudC1saXN0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1wbHVzLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1wbHVzLWN1dHRlciByaWdodFwiPjxidXR0b24gY2xhc3M9XCJidXR0b24tcGx1cyBidG4tc3dpdGNoZXJcIiBkaXNhYmxlZD1cImRpc2FibGVkXCI+PC9idXR0b24+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcbiAgICBQcm90bzoge1xyXG4gICAgICAgIExpYnJhcnlFdmVudFR5cGVJRDogRGljdGlvbmFyeS5MaWJyYXJ5RXZlbnRUeXBlLkV2ZW50UGFpZCxcclxuICAgICAgICBDb3VudFN1bTogMCxcclxuICAgICAgICBTZXJpZXNJbmRleDogMSxcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OiB7XHJcbiAgICAgICAgRGF0ZTogKCk9PntcclxuICAgICAgICAgICAgaWYgKCFEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZClcclxuICAgICAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICAgICAgbGV0IEQgPSBMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICByZXR1cm4gRC5pc1RvZGF5ID8gJ9GB0LXQs9C+0LTQvdGPJzpELkZvcm1hdCgnREQgTU1NTSBZWVlZJywgdHJ1ZSl9LFxyXG4gICAgICAgIFBlcmNlbnQ6IChjLCBwKT0+e1xyXG4gICAgICAgICAgICBsZXQgcGVyY2VudCA9IHAuQ291bnQvcC5Db3VudFBsYW4qMTAwO1xyXG4gICAgICAgICAgICBpZiAocGVyY2VudCA8PSAxMDApXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcGVyY2VudDtcclxuICAgICAgICAgICAgcmV0dXJuIDEwMDtcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIENvbnRyb2xsZXI6e1xyXG4gICAgICAgIFRhcmdldDogJy5ldmVudC1saXN0JyxcclxuICAgICAgICBMaXN0RWxlbWVudDogYDxkaXYgY2xhc3M9XCJldmVudC1pdGVtIHByb2dyZXNzLWJhciBsaW5lLWludGVybGluZWFyXCIgc3R5bGU9XCItLXByb2dyZXNzLXBlcmNlbnQ6IHt7UGVyY2VudH19JTtcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MtY2FwdGlvbiBsLXJvdyBsLWZsZXgtYmV0d2VlblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzdWFsXCI+e3tOYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLWlubGluZS1jaGFuZ2VyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1wb2ludGVyIGNvbnRyb2wtaW5saW5lIGNvbnRyb2wtaW5saW5lLW1pbnVzXCIge3sjZGF0YS1saW5lfX0+LTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLWxhc3QgdmFsdWUtaW5saW5lXCI+e3tDb3VudH19L3t7Q291bnRQbGFufX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLXBvaW50ZXIgY29udHJvbC1pbmxpbmUgY29udHJvbC1pbmxpbmUtcGx1c1wiIHt7I2RhdGEtbGluZX19Pis8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXYgY2xhc3M9XCJsaXN0LWVtcHR5XCI+0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuSDQvdC10YI8L2Rpdj5gXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uID0gdGhpcy5TZWxlY3QoJy53aWRnZXQtY29udHJvbC1mYXZvcml0ZScpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNvdW50SW5jcmVhc2UgPSBmdW5jdGlvbiAoTGluZUlELCBDb250cm9sKSB7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgbGV0IERhdGVMaW1pdCA9IG5ldyBEYXRlKERhdGVOb3cuZ2V0RnVsbFllYXIoKSwgRGF0ZU5vdy5nZXRNb250aCgpLCBEYXRlTm93LmdldERhdGUoKSwgU3RhdGljLkRhdGVIb3Vyc0VkaXRpbmdMaW1pdCk7XHJcbiAgICAgICAgICAgIGlmIChEYXRlTGltaXQgPCBEYXRlTm93ICYmICFMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpLmlzVG9kYXkpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGA0LXQvNGPINC40LfQvNC10L3QtdC90LjRjyDQv9GA0LXQtNGL0LTRg9GJ0LjRhSDQtNCw0L3QvdGL0YUg0LjRgdGC0LXQutC70L4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKENvbnRyb2wpO1xyXG4gICAgICAgICAgICBsZXQgRGF0YUl0ZW0gPSB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRChMaW5lSUQpO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9FdmVudFZpc2l0QWRkKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEYXRhSXRlbS5EYXRhLklELCAxLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXM+MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGFJdGVtLkRhdGEuQ291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKExpbmVJRCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBXaWRnZXQuRXZlbnRTdW1tYXJ5LlNlcmllc1VwZGF0ZSh0aGlzLlByb3RvLkRhdGEuU2VyaWVzSW5kZXgsIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZShDb250cm9sKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Db3VudERlY3JlYXNlID0gZnVuY3Rpb24gKExpbmVJRCwgQ29udHJvbCkge1xyXG4gICAgICAgICAgICBsZXQgRGF0ZU5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTGltaXQgPSBuZXcgRGF0ZShEYXRlTm93LmdldEZ1bGxZZWFyKCksIERhdGVOb3cuZ2V0TW9udGgoKSwgRGF0ZU5vdy5nZXREYXRlKCksIFN0YXRpYy5EYXRlSG91cnNFZGl0aW5nTGltaXQpO1xyXG4gICAgICAgICAgICBpZiAoRGF0ZUxpbWl0IDwgRGF0ZU5vdyAmJiAhTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKS5pc1RvZGF5KXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRgNC10LzRjyDQuNC30LzQtdC90LXQvdC40Y8g0L/RgNC10LTRi9C00YPRidC40YUg0LTQsNC90L3Ri9GFINC40YHRgtC10LrQu9C+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayhDb250cm9sKTtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQoTGluZUlEKTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1Zpc2l0YXRpb25fRXZlbnRWaXNpdEFkZChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGF0YUl0ZW0uRGF0YS5JRCwgLTEsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcz4wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YUl0ZW0uRGF0YS5Db3VudC0tO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ291bnRTdW0tLTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goTGluZUlEKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpZGdldC5FdmVudFN1bW1hcnkuU2VyaWVzVXBkYXRlKHRoaXMuUHJvdG8uRGF0YS5TZXJpZXNJbmRleCwgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKENvbnRyb2wpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLlN3aXRjaEZhdm9yaXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgcDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNGYXZvcml0ZSl7XHJcbiAgICAgICAgICAgICAgICBwID0gRmVhdHVyZWQuUmVtb3ZlV2lkZ2V0KHRoaXMuRnVsbE5hbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBwID0gRmVhdHVyZWQuQWRkV2lkZ2V0KHRoaXMuRnVsbE5hbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHAudGhlbigoKT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNGYXZvcml0ZSA9IEx1cmUuVXNlci5XZWJTZXR0aW5ncy5GZWF0dXJlZC5XaWRnZXRzLmluZGV4T2YodGhpcy5GdWxsTmFtZSkgPiAtMTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNGYXZvcml0ZSlcclxuICAgICAgICAgICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yKCk7XHJcbiAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9FdmVudEdldChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGlhcnkuUHJvdG8uRGF0YS5MaWJyYXJ5LklELCB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUV2ZW50VHlwZUlELCAtMSwge1xyXG4gICAgICAgICAgICBUaGVuOiAobGlzdCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKGxpc3QpO1xyXG4gICAgICAgICAgICAgICAgbGV0IENvdW50ID0gMDtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgICAgICAgICBDb3VudCArPSBsaXN0W2ldLkNvdW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnQ291bnRTdW0nLCBDb3VudCk7XHJcbiAgICAgICAgICAgICAgICBXaWRnZXQuRXZlbnRTdW1tYXJ5LlNlcmllc1VwZGF0ZSh0aGlzLlByb3RvLkRhdGEuU2VyaWVzSW5kZXgsIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmNvbnRyb2wtaW5saW5lLXBsdXMnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvdW50SW5jcmVhc2UocC5MaW5lSUQsIGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29udHJvbC1pbmxpbmUtbWludXMnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvdW50RGVjcmVhc2UocC5MaW5lSUQsIGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5Td2l0Y2hGYXZvcml0ZSk7XHJcbiAgICB9XHJcbn0pOyIsIldpZGdldC5FdmVudFN1bW1hcnkgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGlhcnkuVmlzaXRhdGlvbixcclxuICAgIE5hbWU6ICdXaWRnZXRFdmVudFN1bW1hcnknLFxyXG4gICAgVGFyZ2V0OiAnLndpZGdldC1yb3cnLFxyXG4gICAgQ29udGVudDogYDxkaXYgZHJhZ2dhYmxlPVwidHJ1ZVwiIGNsYXNzPVwid2lkZ2V0IGRyYWdnYWJsZSBkaWFyeS13aWRnZXQgZXZlbnQtc3VtbWFyeS13aWRnZXRcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1pY29uIGljb24tdmlzaXRvci1uZXdcIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCh0JLQntCUPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbHMgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtbW92ZVwiIHRpdGxlPVwi0J/QtdGA0LXQvNC10YHRgtC40YLRjFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1mYXZvcml0ZVwiIHRpdGxlPVwi0J3QsCDQs9C70LDQstC90YvQuSDRjdC60YDQsNC9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPiBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3VtbWFyeS1jaGFydFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdW1tYXJ5LXBsYW5cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tDb3VudFN1bW1hcnl9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzdWFsXCI+0LLRgdC10LPQvjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgQ291bnRTdW1tYXJ5OiAwLFxyXG4gICAgICAgIFNlcmllc05hbWVzOiBbXCLQvNC10YDQvtC/0YDQuNGP0YLQuNGPICjQsSlcIiwn0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjyAo0L8pJywgJ9C60LvRg9Cx0YsgKNCxKScsICfQutC70YPQsdGLICjQvyknLCAn0LLRi9GB0YLQsNCy0LrQuCddLFxyXG4gICAgICAgIFNlcmllc0RhdGE6IFswLDAsMCwwLDBdLFxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBQZXJjZW50OiAocCwgbyk9Pm8uQ291bnQvby5Db3VudFBsYW4qMTAwLFxyXG4gICAgICAgIENvdW50U3VtbWFyeTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuQ2hhcnQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICAgICAgbGV0IHMgPSAwO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpPTA7aTx0aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGEubGVuZ3RoO2krKylcclxuICAgICAgICAgICAgICAgIHMgKz0gdGhpcy5DaGFydC5PcHRpb25zLlNlcmllc1swXS5EYXRhW2ldID8gIHRoaXMuQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YVtpXTowO1xyXG4gICAgICAgICAgICByZXR1cm4gcztcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNoYXJ0ID0gbmV3IEx1cmUuQ2hhcnQoe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuU2VsZWN0KCcuc3VtbWFyeS1jaGFydCcpLFxyXG4gICAgICAgICAgICBUeXBlOiAncGllJyxcclxuICAgICAgICAgICAgTGVnZW5kOiB7XHJcbiAgICAgICAgICAgICAgICBQb3NpdGlvbjogJ3JpZ2h0J1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBTZXJpZXM6IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBMYWJlbHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YTogdGhpcy5Qcm90by5EYXRhLlNlcmllc05hbWVzLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRGF0YTogdGhpcy5Qcm90by5EYXRhLlNlcmllc0RhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgQ29sb3JzOiBbJyM0MTZFNzQnLCBcIiM3QUNEREJcIixcIiM1QzlCQUFcIixcIiM3MDgyODRcIixcIiM1MUExQThcIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgVHlwZTogJ3JpbmcnLFxyXG4gICAgICAgICAgICAgICAgICAgIFdpZHRoOiAzMSxcclxuICAgICAgICAgICAgICAgICAgICBBbmdsZVN0YXJ0OiAtOTAsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFRvb2x0aXA6e1xyXG4gICAgICAgICAgICAgICAgVmlzaWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uID0gdGhpcy5TZWxlY3QoJy53aWRnZXQtY29udHJvbC1mYXZvcml0ZScpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlNlcmllc1VwZGF0ZSA9IGZ1bmN0aW9uIChpLCBWYWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLkNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGFbaV0gPSBWYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnQuUmVmcmVzaCh7QW5pbWF0aW9uOiBmYWxzZX0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Td2l0Y2hGYXZvcml0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IHA7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzRmF2b3JpdGUpe1xyXG4gICAgICAgICAgICAgICAgcCA9IEZlYXR1cmVkLlJlbW92ZVdpZGdldCh0aGlzLkZ1bGxOYW1lKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgcCA9IEZlYXR1cmVkLkFkZFdpZGdldCh0aGlzLkZ1bGxOYW1lKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwLnRoZW4oKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hlY2tGb3JGYXZvcigpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmlzRmF2b3JpdGUgPSBMdXJlLlVzZXIuV2ViU2V0dGluZ3MuRmVhdHVyZWQuV2lkZ2V0cy5pbmRleE9mKHRoaXMuRnVsbE5hbWUpID4gLTE7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzRmF2b3JpdGUpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2hlY2tGb3JGYXZvcigpO1xyXG4gICAgICAgIHRoaXMuQ2hhcnQuUmVkcmF3KCk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5sLWxlZ2VuZC1jaGVja2JveCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5jb250cm9sLWlubGluZS1wbHVzJywgZnVuY3Rpb24gKGUsIHApIHtcclxuICAgICAgICAgICAgbGV0IERhdGFJdGVtID0gdGhpcy5Db250cm9sbGVyLkdldERhdGFJdGVtQnlMaW5lSUQocC5MaW5lSUQpO1xyXG4gICAgICAgICAgICBEYXRhSXRlbS5EYXRhLkNvdW50Kys7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKHAuTGluZUlEKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5jb250cm9sLWlubGluZS1taW51cycsIGZ1bmN0aW9uIChlLCBwKSB7XHJcbiAgICAgICAgICAgIGxldCBEYXRhSXRlbSA9IHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKHAuTGluZUlEKTtcclxuICAgICAgICAgICAgRGF0YUl0ZW0uRGF0YS5Db3VudC0tO1xyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChwLkxpbmVJRCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5Td2l0Y2hGYXZvcml0ZSk7XHJcbiAgICB9XHJcbn0pOyIsIldpZGdldC5FeGhpYml0aW9uID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IERpYXJ5LlZpc2l0YXRpb24sXHJcbiAgICBOYW1lOiAnV2lkZ2V0RXhoaWJpdGlvbicsXHJcbiAgICBUYXJnZXQ6ICcud2lkZ2V0LXJvdycsXHJcbiAgICBDb250ZW50OiBgPGRpdiBkcmFnZ2FibGU9XCJ0cnVlXCIgY2xhc3M9XCJ3aWRnZXQgZHJhZ2dhYmxlIGRpYXJ5LXdpZGdldCBleGhpYml0aW9uLXdpZGdldFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1oZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtdGl0bGUgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWljb24gaWNvbi12aXNpdG9yLW5ld1wiPjwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jYXB0aW9uXCI+0JLQq9Ch0KLQkNCS0JrQmDwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2xzIGwtcm93IGwtZmxleGEtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLW1vdmVcIiB0aXRsZT1cItCf0LXRgNC10LzQtdGB0YLQuNGC0YxcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtZmF2b3JpdGVcIiB0aXRsZT1cItCd0LAg0LPQu9Cw0LLQvdGL0Lkg0Y3QutGA0LDQvVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb24tdG9kYXkgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdW50LWNhcHRpb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdHJvbmdcIj57e0NvdW50U3VtfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXN1YWxcIj7Rh9C40YLQsNGC0LXQu9C10Lkg0L/QvtGB0LXRgtC40LvQuCB7e0RhdGV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnQtbGlzdFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24tcGx1cy13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24tcGx1cy1jdXR0ZXIgcmlnaHRcIj48YnV0dG9uIGNsYXNzPVwiYnV0dG9uLXBsdXMgYnRuLXN3aXRjaGVyXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiPjwvYnV0dG9uPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIExvYWQ6ICcnLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBMaWJyYXJ5RXZlbnRUeXBlSUQ6IERpY3Rpb25hcnkuTGlicmFyeUV2ZW50VHlwZS5FeGhpYml0aW9uLFxyXG4gICAgICAgIENvdW50OiAwLFxyXG4gICAgICAgIENvdW50U3VtOiAwLFxyXG4gICAgICAgIFNlcmllc0luZGV4OiA0LFxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBEYXRlOiAoKT0+e1xyXG4gICAgICAgICAgICBpZiAoIURpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgICAgICAgICBsZXQgRCA9IEx1cmUuRGF0ZShEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCk7XHJcbiAgICAgICAgICAgIHJldHVybiBELmlzVG9kYXkgPyAn0YHQtdCz0L7QtNC90Y8nOkQuRm9ybWF0KCdERCBNTU1NIFlZWVknLCB0cnVlKX0sXHJcbiAgICAgICAgUGVyY2VudDogKGMsIHApPT57XHJcbiAgICAgICAgICAgIGxldCBwZXJjZW50ID0gcC5Db3VudC9wLkNvdW50UGxhbioxMDA7XHJcbiAgICAgICAgICAgIGlmIChwZXJjZW50IDw9IDEwMClcclxuICAgICAgICAgICAgICAgIHJldHVybiBwZXJjZW50O1xyXG4gICAgICAgICAgICByZXR1cm4gMTAwO1xyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjp7XHJcbiAgICAgICAgVGFyZ2V0OiAnLmV2ZW50LWxpc3QnLFxyXG4gICAgICAgIExpc3RFbGVtZW50OiBgPGRpdiBjbGFzcz1cImV2ZW50LWl0ZW0gcHJvZ3Jlc3MtYmFyIGxpbmUtaW50ZXJsaW5lYXJcIiBzdHlsZT1cIi0tcHJvZ3Jlc3MtcGVyY2VudDoge3tQZXJjZW50fX0lO1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1jYXB0aW9uIGwtcm93IGwtZmxleC1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXN1YWxcIj57e05hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtaW5saW5lLWNoYW5nZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLXBvaW50ZXIgY29udHJvbC1pbmxpbmUgY29udHJvbC1pbmxpbmUtbWludXNcIiB7eyNkYXRhLWxpbmV9fT4tPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUtbGFzdCB2YWx1ZS1pbmxpbmVcIj57e0NvdW50fX0ve3tDb3VudFBsYW59fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtcG9pbnRlciBjb250cm9sLWlubGluZSBjb250cm9sLWlubGluZS1wbHVzXCIge3sjZGF0YS1saW5lfX0+KzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICAgICAgRW1wdHlNZXNzYWdlOiBgPGRpdiBjbGFzcz1cImxpc3QtZW1wdHlcIj7QvNC10YDQvtC/0YDQuNGP0YLQuNC5INC90LXRgjwvZGl2PmBcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24gPSB0aGlzLlNlbGVjdCgnLndpZGdldC1jb250cm9sLWZhdm9yaXRlJyk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ291bnRJbmNyZWFzZSA9IGZ1bmN0aW9uIChMaW5lSUQsIENvbnRyb2wpIHtcclxuICAgICAgICAgICAgbGV0IERhdGVOb3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICBsZXQgRGF0ZUxpbWl0ID0gbmV3IERhdGUoRGF0ZU5vdy5nZXRGdWxsWWVhcigpLCBEYXRlTm93LmdldE1vbnRoKCksIERhdGVOb3cuZ2V0RGF0ZSgpLCBTdGF0aWMuRGF0ZUhvdXJzRWRpdGluZ0xpbWl0KTtcclxuICAgICAgICAgICAgaWYgKERhdGVMaW1pdCA8IERhdGVOb3cgJiYgIUx1cmUuRGF0ZShEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCkuaXNUb2RheSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9CS0YDQtdC80Y8g0LjQt9C80LXQvdC10L3QuNGPINC/0YDQtdC00YvQtNGD0YnQuNGFINC00LDQvdC90YvRhSDQuNGB0YLQtdC60LvQvicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2soQ29udHJvbCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRhSXRlbSA9IHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKExpbmVJRCk7XHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0V2ZW50VmlzaXRBZGQoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQsIERhdGFJdGVtLkRhdGEuSUQsIDEsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcz4wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YUl0ZW0uRGF0YS5Db3VudCsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ291bnRTdW0rKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goTGluZUlEKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpZGdldC5FdmVudFN1bW1hcnkuU2VyaWVzVXBkYXRlKHRoaXMuUHJvdG8uRGF0YS5TZXJpZXNJbmRleCwgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKENvbnRyb2wpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNvdW50RGVjcmVhc2UgPSBmdW5jdGlvbiAoTGluZUlELCBDb250cm9sKSB7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgbGV0IERhdGVMaW1pdCA9IG5ldyBEYXRlKERhdGVOb3cuZ2V0RnVsbFllYXIoKSwgRGF0ZU5vdy5nZXRNb250aCgpLCBEYXRlTm93LmdldERhdGUoKSwgU3RhdGljLkRhdGVIb3Vyc0VkaXRpbmdMaW1pdCk7XHJcbiAgICAgICAgICAgIGlmIChEYXRlTGltaXQgPCBEYXRlTm93ICYmICFMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpLmlzVG9kYXkpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGA0LXQvNGPINC40LfQvNC10L3QtdC90LjRjyDQv9GA0LXQtNGL0LTRg9GJ0LjRhSDQtNCw0L3QvdGL0YUg0LjRgdGC0LXQutC70L4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKENvbnRyb2wpO1xyXG4gICAgICAgICAgICBsZXQgRGF0YUl0ZW0gPSB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRChMaW5lSUQpO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9FdmVudFZpc2l0QWRkKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEYXRhSXRlbS5EYXRhLklELCAtMSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzPjApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhSXRlbS5EYXRhLkNvdW50LS07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bS0tO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChMaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkV2ZW50U3VtbWFyeS5TZXJpZXNVcGRhdGUodGhpcy5Qcm90by5EYXRhLlNlcmllc0luZGV4LCB0aGlzLlByb3RvLkRhdGEuQ291bnRTdW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UoQ29udHJvbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Td2l0Y2hGYXZvcml0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IHA7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzRmF2b3JpdGUpe1xyXG4gICAgICAgICAgICAgICAgcCA9IEZlYXR1cmVkLlJlbW92ZVdpZGdldCh0aGlzLkZ1bGxOYW1lKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgcCA9IEZlYXR1cmVkLkFkZFdpZGdldCh0aGlzLkZ1bGxOYW1lKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwLnRoZW4oKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hlY2tGb3JGYXZvcigpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5DaGVja0ZvckZhdm9yID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmlzRmF2b3JpdGUgPSBMdXJlLlVzZXIuV2ViU2V0dGluZ3MuRmVhdHVyZWQuV2lkZ2V0cy5pbmRleE9mKHRoaXMuRnVsbE5hbWUpID4gLTE7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzRmF2b3JpdGUpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0V2ZW50R2V0KERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEaWFyeS5Qcm90by5EYXRhLkxpYnJhcnkuSUQsIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5RXZlbnRUeXBlSUQsIC0xLCB7XHJcbiAgICAgICAgICAgIFRoZW46IChsaXN0KT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2gobGlzdCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgQ291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICAgICAgICAgIENvdW50ICs9IGxpc3RbaV0uQ291bnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdDb3VudFN1bScsIENvdW50KTtcclxuICAgICAgICAgICAgICAgIFdpZGdldC5FdmVudFN1bW1hcnkuU2VyaWVzVXBkYXRlKHRoaXMuUHJvdG8uRGF0YS5TZXJpZXNJbmRleCwgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmNvbnRyb2wtaW5saW5lLXBsdXMnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvdW50SW5jcmVhc2UocC5MaW5lSUQsIGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29udHJvbC1pbmxpbmUtbWludXMnLCBmdW5jdGlvbiAoZSwgcCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvdW50RGVjcmVhc2UocC5MaW5lSUQsIGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5Td2l0Y2hGYXZvcml0ZSk7XHJcbiAgICB9XHJcbn0pOyIsImNvbnN0IEhpc3RvcnlNYXN0ZXIgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vX2NvbW1vbi9oaXN0b3J5LW1hc3Rlci9oaXN0b3J5LW1hc3RlclwiKTtcclxuY29uc3QgSW5wdXRCb3ggPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vX2NvbW1vbi9pbnB1dC1ib3gvaW5wdXQtYm94XCIpO1xyXG5cclxuV2lkZ2V0LlZpc2l0UmVnaXN0ZXIgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGlhcnkuVmlzaXRhdGlvbixcclxuICAgIE5hbWU6ICdXaWRnZXRSZWdpc3RlcicsXHJcbiAgICBUYXJnZXQ6ICcud2lkZ2V0LXJvdycsXHJcbiAgICBDb250ZW50OiBgPGRpdiBkcmFnZ2FibGU9XCJ0cnVlXCIgY2xhc3M9XCJ3aWRnZXQgZHJhZ2dhYmxlIGRpYXJ5LXdpZGdldCByZWdpc3Rlci13aWRnZXQge3tEYXlUeXBlfX1cIiBkYXRhLXR1dG9yPVwi0JLQuNC00LbQtdGCINC30LDQv9C40YHQuCDQvdC+0LLQvtCz0L4g0L/QvtGB0LXRgtC40YLQtdC70Y9cIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1pY29uIGljb24tdmlzaXRvci1uZXdcIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCX0JDQn9CY0KHQrCDQkiDQkdCY0JHQm9CY0J7QotCV0JrQozwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2xzIGwtcm93IGwtZmxleGEtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLW1vdmVcIiB0aXRsZT1cItCf0LXRgNC10LzQtdGB0YLQuNGC0YxcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtZmF2b3JpdGVcIiB0aXRsZT1cItCd0LAg0LPQu9Cw0LLQvdGL0Lkg0Y3QutGA0LDQvVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3RhdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvbi10b2RheSBsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdW50LWNhcHRpb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3Ryb25nXCI+e3tDb3VudH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhc3VhbFwiPtC90L7QstGL0YUg0YfQuNGC0LDRgtC10LvQtdC5INC30LDQv9C40YHQsNC90L4ge3tEYXRlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZpc2l0LW90aGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZSBsaW5lLWludGVybGluZWFyIGwtcm93IGwtZmxleGEtY2VudGVyIGwtZmxleC1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7Ql9Cw0L/QuNGB0LDQvdC+INGH0LjRgtCw0YLQtdC70LXQuSB7e0RhdGVQcmV2fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pnt7Q291bnRQcmV2fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUgbGluZS1pbnRlcmxpbmVhciBsLXJvdyBsLWZsZXhhLWNlbnRlciBsLWZsZXgtYmV0d2VlblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0JIg0YHRgNC10LTQvdC10Lwg0LfQsNC/0LjRgdC10Lkg0LIg0LTQtdC90Yw8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pnt7Q291bnRBdmVyYWdlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUgbGluZS1pbnRlcmxpbmVhciBsLXJvdyBsLWZsZXhhLWNlbnRlciBsLWZsZXgtYmV0d2VlblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+0JfQsNC/0LjRgdCw0L3QviDQsiDRjdGC0L7QvCDQvNC10YHRj9GG0LU8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pnt7Q291bnRNb250aH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2aXNpdC1wbGFuIGwtY29sIGwtZmxleC1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lIGwtcm93IGwtZmxleGEtYmFzZWxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzdWFsXCI+0JjRgdC/0L7Qu9C90LXQvdC40LUg0YPRgdGC0LDQvdC+0LLQu9C10L3QvdGL0YUg0L3QvtGA0LzQsNGC0LjQstC90YvRhSDQv9C+0LrQsNC30LDRgtC10LvQtdC5OjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MtYmFyXCIgc3R5bGU9XCItLXByb2dyZXNzLXBlcmNlbnQ6IHt7Q291bnRQZXJjZW50fX0lO1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1jYXB0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdHJvbmdcIj57e0NvdW50fX0ve3tDb3VudFBsYW59fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1wbHVzLWN1dHRlciBsZWZ0XCIgZGF0YS10dXRvcj1cItCd0LDQttC80LjRgtC1INC30LTQtdGB0YwsINC00LvRjyDQvtGC0LzQtdC90Ysg0L/QvtGB0LvQtdC00L3QtdCz0L4g0LfQsNC/0LjRgdCw0L3QvdC+0LPQviDQv9C+0YHQtdGC0LjRgtC10LvRjy4g0J7RgtC80LXQvdC40YLRjCDQt9Cw0L/QuNGB0Ywg0LzQvtC20L3QviDRgtC+0LvRjNC60L4g0L7QtNC40L0g0YDQsNC3INC/0L7RgdC70LUg0LfQsNC/0LjRgdC4INC90L7QstC+0LPQviDQv9C+0YHQtdGC0LjRgtC10LvRjy5cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uLW1pbnVzIGJ0bi1yZXdpbmRcIj48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1wbHVzLWN1dHRlciByaWdodFwiIGRhdGEtdHV0b3I9XCLQndCw0LbQvNC40YLQtSDCq9C/0LvRjtGBwrsg0LTQu9GPINC+0YLQutGA0YvRgtC40Y8g0YTQvtGA0LzRiyDQt9Cw0L/QuNGB0Lgg0L3QvtCy0L7Qs9C+INC/0L7RgdC10YLQuNGC0LXQu9GPXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbi1wbHVzIGJ0bi1zd2l0Y2hlclwiPjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwhLS0gV0laQVJEIC0tPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aXphcmQgbm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2VuZGVyIHdpemFyZC1ncm91cDAgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1lbGVtZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyByYWRpby1nZW5kZXJcIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZ2VuZGVyXCIgaWQ9XCJnZW5kZXItbWFsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnZW5kZXItbWFsZVwiPtC80YPQttGH0LjQvdCwIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e01hbGVDb3VudH19PC9zcGFuPjwvbGFiZWw+IFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW8tZWxlbWVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW8gcmFkaW8tZ2VuZGVyXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdlbmRlclwiIGlkPVwiZ2VuZGVyLWZlbWFsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJnZW5kZXItZmVtYWxlXCI+0LbQtdC90YnQuNC90LAgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7RmVtYWxlQ291bnR9fTwvc3Bhbj48L2xhYmVsPiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFnZSB3aXphcmQtZ3JvdXAgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JLQvtC30YDQsNGB0YI8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSBsLXJvdyBsLXBvaW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWdlLWRpZ2l0XCI+e3thZ2UxfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWdlLWRpZ2l0XCI+e3thZ2UyfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWdlLWRpZ2l0XCI+e3thZ2UzfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvY2lhbCB3aXphcmQtZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0KHQvtGG0LjQsNC70YzQvdCw0Y8g0LPRgNGD0L/Qv9CwPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic29jaWFsLWNvbHVtbnMgbC1jb2wgbC1mbGV4LXdyYXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvIHJhZGlvLXNvY2lhbFwiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJyZWctc29jaWFsXCIgZGF0YS10eXBlPVwiNVwiIGlkPVwicmVnLXJldGlyZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cInJlZy1yZXRpcmVkXCI+0L/QtdC90YHQuNC+0L3QtdGA0YsgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7UmV0aXJlZENvdW50fX08L3NwYW4+PC9sYWJlbD4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyByYWRpby1zb2NpYWxcIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwicmVnLXNvY2lhbFwiIGRhdGEtdHlwZT1cIjRcIiBpZD1cInJlZy13YXJyaW9yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJyZWctd2FycmlvclwiPtGB0LvRg9C20LDRidC40LUgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7U2VydmFudENvdW50fX08L3NwYW4+PC9sYWJlbD4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyByYWRpby1zb2NpYWxcIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwicmVnLXNvY2lhbFwiIGRhdGEtdHlwZT1cIjNcIiBpZD1cInJlZy1zdHVkZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJyZWctc3R1ZGVudFwiPtGB0YLRg9C00LXQvdGC0YsgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7U3R1ZGVudENvdW50fX08L3NwYW4+PC9sYWJlbD4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyByYWRpby1zb2NpYWxcIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwicmVnLXNvY2lhbFwiIGRhdGEtdHlwZT1cIjFcIiBpZD1cInJlZy1wdXBpbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwicmVnLXB1cGlsXCI+0YjQutC+0LvRjNC90LjQutC4IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1NjaG9vbENvdW50fX08L3NwYW4+PC9sYWJlbD4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyByYWRpby1zb2NpYWxcIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwicmVnLXNvY2lhbFwiIGRhdGEtdHlwZT1cIjdcIiBpZD1cInJlZy1wcmUtcHVwaWxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cInJlZy1wcmUtcHVwaWxcIj7QtNC+0YjQutC+0LvRjNC90LjQutC4IDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e1ByZXNjaG9vbENvdW50fX08L3NwYW4+PC9sYWJlbD4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyByYWRpby1zb2NpYWxcIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwicmVnLXNvY2lhbFwiIGRhdGEtdHlwZT1cIjJcIiBpZD1cInJlZy1yZGNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibC1yYWRpby1sYWJlbFwiIGZvcj1cInJlZy1yZGNcIj7QoNCU0KcgPHNwYW4gY2xhc3M9XCJjdXJyZW50LXZhbFwiPnt7U2Nob29sUkRDQ291bnR9fTwvc3Bhbj48L2xhYmVsPiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJsLXJhZGlvIHJhZGlvLXNvY2lhbFwiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJyZWctc29jaWFsXCIgZGF0YS10eXBlPVwiNlwiIGlkPVwicmVnLW90aGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtcmFkaW8tbGFiZWxcIiBmb3I9XCJyZWctb3RoZXJcIj7Qv9GA0L7Rh9C10LUgIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e090aGVyQ291bnR9fTwvc3Bhbj48L2xhYmVsPiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpc2FiaWxpdHkgd2l6YXJkLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCY0L3QstCw0LvQuNC00L3QvtGB0YLRjDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhZGlvLWVsZW1lbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1yYWRpbyByYWRpby1kaXNhYmxlZFwiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJyZWctZGlzYWJpbGl0eVwiIGlkPVwicmVnLWRpc2FiaWxpdHkteVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwicmVnLWRpc2FiaWxpdHkteVwiPtC10YHRgtGMIDxzcGFuIGNsYXNzPVwiY3VycmVudC12YWxcIj57e0Rpc2FibGVkQ291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpby1lbGVtZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtcmFkaW8gcmFkaW8tZGlzYWJsZWRcIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwicmVnLWRpc2FiaWxpdHlcIiBpZD1cInJlZy1kaXNhYmlsaXR5LW5cIiBjaGVja2VkPVwiY2hlY2tlZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsLXJhZGlvLWxhYmVsXCIgZm9yPVwicmVnLWRpc2FiaWxpdHktblwiPtC90LXRgiA8c3BhbiBjbGFzcz1cImN1cnJlbnQtdmFsXCI+e3tDb3VudCAtIERpc2FibGVkQ291bnR9fTwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWN0dWFsLW5ldy12aXNpdG9yIHdpemFyZC1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1jaGVja2JveCBjaGVja2JveFwiIHR5cGU9XCJjaGVja2JveFwiIGlkPVwicmVnLWFjdHVhbC1uZXdcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImwtY2hlY2tib3gtbGFiZWxcIiBmb3I9XCJyZWctYWN0dWFsLW5ld1wiPtCd0L7QstGL0Lkg0L/QvtGB0LXRgtC40YLQtdC70Yw8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnV0dG9uMiBidG4tY2FuY2VsXCI+0J7QotCc0JXQndCQPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1idXR0b24gYnV0dG9uIGJ0bi1jb25maXJtXCI+0JfQkNCf0JjQodCQ0KLQrDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBTdGF0ZTp7XHJcbiAgICAgICAgQ291bnQ6IDAsXHJcbiAgICAgICAgQ291bnRQcmV2OiAwLFxyXG4gICAgICAgIENvdW50QXZlcmFnZTogMCxcclxuICAgICAgICBDb3VudE1vbnRoOiAwLFxyXG4gICAgICAgIENvdW50UGxhbjogMSxcclxuXHJcbiAgICAgICAgTWFsZUNvdW50OiAwLFxyXG4gICAgICAgIEZlbWFsZUNvdW50OiAwLFxyXG4gICAgICAgIFNjaG9vbENvdW50OiAwLFxyXG4gICAgICAgIFNjaG9vbFJEQ0NvdW50OiAwLFxyXG4gICAgICAgIFN0dWRlbnRDb3VudDogMCxcclxuICAgICAgICBTZXJ2YW50Q291bnQ6IDAsXHJcbiAgICAgICAgUmV0aXJlZENvdW50OiAwLFxyXG4gICAgICAgIE90aGVyQ291bnQ6IDAsXHJcbiAgICAgICAgUHJlc2Nob29sQ291bnQ6IDAsXHJcblxyXG4gICAgICAgIERhdGVQcmV2OiAwLFxyXG4gICAgICAgIFdpZGdldDoge30sXHJcbiAgICAgICAgUmVnOiB7XHJcbiAgICAgICAgICAgIEFnZTogMCxcclxuICAgICAgICAgICAgR2VuZGVyOiAtMSxcclxuICAgICAgICAgICAgU29jaWFsOiAtMSxcclxuICAgICAgICAgICAgaXNEaXNhYmxlZDogMCxcclxuICAgICAgICAgICAgaXNBY3R1YWxOZXc6IGZhbHNlLFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3BGb3JtYXQ6e1xyXG4gICAgICAgIERheVR5cGU6ICgpPT57XHJcbiAgICAgICAgICAgIHJldHVybiAhRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQgfHwgTHVyZS5EYXRlKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKS5pc1RvZGF5ID8gJyc6JyBwcmV2aW91cyc7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBEYXRlOiAoKT0+e1xyXG4gICAgICAgICAgICBpZiAoIURpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgICAgICAgICBsZXQgRCA9IEx1cmUuRGF0ZShEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCk7XHJcbiAgICAgICAgICAgIHJldHVybiBELmlzVG9kYXkgPyAn0YHQtdCz0L7QtNC90Y8nOkQuRm9ybWF0KCdERCBNTU1NIFlZWVknLCB0cnVlKX0sXHJcbiAgICAgICAgRGF0ZVByZXY6IChkKT0+THVyZS5EYXRlKGQpLkFkZERheXMoMSkuaXNUb2RheSA/ICfQstGH0LXRgNCwJzpMdXJlLkRhdGUoZCkuRm9ybWF0KCdERCBNTU1NIFlZWVknLCB0cnVlKSxcclxuXHJcbiAgICAgICAgQ291bnRQZXJjZW50OiAoYywgcCk9PntcclxuICAgICAgICAgICAgbGV0IHBlcmNlbnQgPSBwLkNvdW50L3AuQ291bnRQbGFuKjEwMDtcclxuICAgICAgICAgICAgaWYgKHBlcmNlbnQgPD0xMDApXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcGVyY2VudDtcclxuICAgICAgICAgICAgcmV0dXJuIDEwMDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFnZTE6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLlJlZy5BZ2UsIDEsIDMpLFxyXG4gICAgICAgIGFnZTI6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLlJlZy5BZ2UsIDIsIDMpLFxyXG4gICAgICAgIGFnZTM6ICAoYywgcCk9Pkdsb2JhbC5HZXREaWdpdChwLlJlZy5BZ2UsIDMsIDMpLFxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG5cclxuICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9SZWdpc3RlckdldChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGlhcnkuUHJvdG8uRGF0YS5MaWJyYXJ5LklELCB7XHJcbiAgICAgICAgICAgIFRoZW46IChEYXRhKT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkNvdW50ICAgICAgICA9IERhdGEuQ291bnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ291bnRQcmV2ICAgID0gRGF0YS5Db3VudFByZXY7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ291bnRBdmVyYWdlID0gRGF0YS5Db3VudEF2ZXJhZ2UudG9GaXhlZCgyKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Db3VudFBsYW4gICAgPSBEYXRhLkNvdW50UGxhbjtcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Db3VudE1vbnRoICAgPSBEYXRhLkNvdW50TW9udGg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuRGF0ZVByZXYgICAgID0gTHVyZS5EYXRlKERhdGEuRGF0ZVByZXYpLkRhdGU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuRGF0ZVN0YW1wQWRkZWQgICA9IERhdGEuRGF0ZVN0YW1wQWRkZWQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuRGF0ZVN0YW1wUmVtb3ZlZCA9IERhdGEuRGF0ZVN0YW1wUmVtb3ZlZDtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuTWFsZUNvdW50ICAgICAgPSBEYXRhLk1hbGVDb3VudDtcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5GZW1hbGVDb3VudCAgICA9IERhdGEuRmVtYWxlQ291bnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuU2Nob29sQ291bnQgICAgPSBEYXRhLlNjaG9vbENvdW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlNjaG9vbFJEQ0NvdW50ID0gRGF0YS5TY2hvb2xSRENDb3VudDtcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5TdHVkZW50Q291bnQgICA9IERhdGEuU3R1ZGVudENvdW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlNlcnZhbnRDb3VudCAgID0gRGF0YS5TZXJ2YW50Q291bnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuUmV0aXJlZENvdW50ICAgPSBEYXRhLlJldGlyZWRDb3VudDtcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5PdGhlckNvdW50ICAgICA9IERhdGEuT3RoZXJDb3VudDtcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5QcmVzY2hvb2xDb3VudCA9IERhdGEuUHJlc2Nob29sQ291bnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuRGlzYWJsZWRDb3VudCAgPSBEYXRhLkRpc2FibGVkQ291bnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5CdXR0b25SZXdpbmQuZGlzYWJsZWQgPSBEYXRhLkRhdGVTdGFtcFJlbW92ZWQgPj0gRGF0YS5EYXRlU3RhbXBBZGRlZDtcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBDYXRjaDogKCk9PntcclxuXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvL3RoaXMuUHJvdG8uRGF0YS5Db3VudFBlcmNlbnQgPSBNYXRoLnJvdW5kKERhdGEuQ291bnQvRGF0YS5Db3VudFBsYW4qMTAwKTtcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuU3RhdENvbnRlbnQgICA9IHRoaXMuU2VsZWN0KCcuc3RhdCcpO1xyXG4gICAgICAgIHRoaXMuV2l6YXJkQ29udGVudCA9IHRoaXMuU2VsZWN0KCcud2l6YXJkJyk7XHJcblxyXG4gICAgICAgIHRoaXMuQnV0dG9uV2l6YXJkQ29uZmlybSA9IHRoaXMuU2VsZWN0KCcuYnRuLWNvbmZpcm0nKTtcclxuICAgICAgICB0aGlzLkJ1dHRvblJld2luZCA9IHRoaXMuU2VsZWN0KCcuYnRuLXJld2luZCcpO1xyXG5cclxuICAgICAgICB0aGlzLlJhZGlvTWFsZSA9IHRoaXMuU2VsZWN0KCcjZ2VuZGVyLW1hbGUnKTtcclxuICAgICAgICB0aGlzLlJhZGlvRmVtYWxlID0gdGhpcy5TZWxlY3QoJyNnZW5kZXItZmVtYWxlJyk7XHJcbiAgICAgICAgdGhpcy5SYWRpb1BlcnNvbkRpc2FibGVkWSA9IHRoaXMuU2VsZWN0KCcjcmVnLWRpc2FiaWxpdHkteScpO1xyXG4gICAgICAgIHRoaXMuUmFkaW9QZXJzb25EaXNhYmxlZE4gPSB0aGlzLlNlbGVjdCgnI3JlZy1kaXNhYmlsaXR5LW4nKTtcclxuXHJcbiAgICAgICAgdGhpcy5DaGVja2JveEFjdHVhbE5ldyA9IHRoaXMuU2VsZWN0KCcjcmVnLWFjdHVhbC1uZXcnKTtcclxuXHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uID0gdGhpcy5TZWxlY3QoJy53aWRnZXQtY29udHJvbC1mYXZvcml0ZScpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlN3aXRjaCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5TdGF0Q29udGVudCAgLmNsYXNzTGlzdC50b2dnbGUoJ25vbmUnKTtcclxuICAgICAgICAgICAgdGhpcy5XaXphcmRDb250ZW50LmNsYXNzTGlzdC50b2dnbGUoJ25vbmUnKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2xlYXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuUmFkaW9NYWxlLmNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5SYWRpb0ZlbWFsZS5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5SZWcuQWdlID0gMDtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlJlZy5HZW5kZXIgPSAtMTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlJlZy5Tb2NpYWwgPSAtMTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlJlZy5pc0Rpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5SZWcuaXNBY3R1YWxOZXcgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIGxldCBQZXJzb25UeXBlID0gdGhpcy5TZWxlY3QoJ2lucHV0W25hbWU9XCJyZWctc29jaWFsXCJdOmNoZWNrZWQnKTtcclxuICAgICAgICAgICAgaWYgKFBlcnNvblR5cGUpXHJcbiAgICAgICAgICAgICAgICBQZXJzb25UeXBlLmNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5SYWRpb1BlcnNvbkRpc2FibGVkTi5jaGVja2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5DaGVja2JveEFjdHVhbE5ldy5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLldpemFyZENsb3NlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLlN3aXRjaCgpO1xyXG4gICAgICAgICAgICB0aGlzLkNsZWFyKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLldpemFyZENvbmZpcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBpc1ZhbGlkID0gdHJ1ZTtcclxuICAgICAgICAgICAgbGV0IFJlZyA9IHRoaXMuU3RhdGUuUmVnO1xyXG4gICAgICAgICAgICBpZiAoUmVnLkFnZSA8IDEpe1xyXG4gICAgICAgICAgICAgICAgaXNWYWxpZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9CS0LLQtdC00LjRgtC1INCy0L7Qt9GA0LDRgdGCINC/0L7RgdC10YLQuNGC0LXQu9GPJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKFJlZy5Tb2NpYWwgPCAwKXtcclxuICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGL0LHQtdGA0LjRgtC1INGB0L7RhtC40LDQu9GM0L3Rg9GOINCz0YDRg9C/0L/RgyDQv9C+0YHQtdGC0LjRgtC10LvRjycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChSZWcuR2VuZGVyIDwgMCl7XHJcbiAgICAgICAgICAgICAgICBpc1ZhbGlkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRi9Cx0LXRgNC40YLQtSDQv9C+0Lsg0L/QvtGB0LXRgtC40YLQtdC70Y8nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWlzVmFsaWQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2sodGhpcy5CdXR0b25XaXphcmRDb25maXJtKTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1Zpc2l0YXRpb25fUmVnaXN0ZXJBZGQoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQsIERpYXJ5LlByb3RvLkRhdGEuTGlicmFyeS5JRCwgUmVnLkFnZSwgUmVnLlNvY2lhbCwgUmVnLkdlbmRlciwgUmVnLmlzQWN0dWFsTmV3LCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBTdCA9IHRoaXMuU3RhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU2hvd1N1Y2Nlc3MoJ9Cf0L7RgdC10YLQuNGC0LXQu9GMINC30LDRgNC10LPQuNGB0YLRgNC40YDQvtCy0LDQvScpO1xyXG4gICAgICAgICAgICAgICAgICAgIFN0LkRhdGVTdGFtcEFkZGVkICAgPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgIFN0LkRhdGVTdGFtcFJlbW92ZWQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuV2l6YXJkQ2xvc2UoKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDYXRjaDogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93V2Fybign0J/QvtGB0LXRgtC40YLQtdC70Ywg0L3QtSDQt9Cw0YDQtdCz0LjRgdGC0YDQuNGA0L7QstCw0L0nKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UodGhpcy5CdXR0b25XaXphcmRDb25maXJtKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlJld2luZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuUHJvdG8uRGF0YS5EYXRlU3RhbXBBZGRlZCA8IHRoaXMuUHJvdG8uRGF0YS5EYXRlU3RhbXBSZW1vdmVkKXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjYW50IHJlbW92ZSBhc3QgcmVnJyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICAgICBMdXJlLkNvbmZpcm0oJ9Ce0YLQvNC10L3QsCDQv9C+0YHQtdGC0LjRgtC10LvRjycsICfQktGLINGB0L7QsdC40YDQsNC10YLQtdGB0Ywg0L7RgtC80LXQvdC40YLRjCDRgNC10LPQuNGB0YLRgNCw0YbQuNGOINC/0L7RgdC70LXQtNC90LXQs9C+INC/0L7RgdC10YLQuNGC0LXQu9GPLiDQn9GA0L7QtNC+0LvQttC40YLRjD8nLCB7XHJcbiAgICAgICAgICAgICAgICBPbkFncmVlOiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQnV0dG9uUmV3aW5kLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9SZWdpc3RlclJld2luZChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGlhcnkuUHJvdG8uRGF0YS5MaWJyYXJ5LklELCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFRoZW46IChyZXMpPT57XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkRhdGVTdGFtcFJlbW92ZWQgPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkRhdGVTdGFtcEFkZGVkICAgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuUHJvdG8uRGF0YS5Db3VudCA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuQ291bnQgPTBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLkNvdW50LS07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RoaXMuUHJvdG8uRGF0YS5Db3VudCA8IDAgPyB0aGlzLlByb3RvLkRhdGEuQ291bnQgPTAgOiB0aGlzLlByb3RvLkRhdGEuQ291bnQtLTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5CdXR0b25SZXdpbmQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgT25DYW5jZWw6ICgpPT57fVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuTnVtUGFkU2V0QWdlID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5SZWcuQWdlID0gdmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuU3dpdGNoRmF2b3JpdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5SZW1vdmVXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5BZGRXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcC50aGVuKCgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hlY2tGb3JGYXZvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5pc0Zhdm9yaXRlID0gTHVyZS5Vc2VyLldlYlNldHRpbmdzLkZlYXR1cmVkLldpZGdldHMuaW5kZXhPZih0aGlzLkZ1bGxOYW1lKSA+IC0xO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5idG4tc3dpdGNoZXInKS5vbmNsaWNrID0gKCk9Pnt0aGlzLlN3aXRjaCgpfTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnLmJ0bi1jYW5jZWwnKS5vbmNsaWNrID0gKCk9Pnt0aGlzLldpemFyZENsb3NlKCl9O1xyXG4gICAgICAgIHRoaXMuQnV0dG9uV2l6YXJkQ29uZmlybS5vbmNsaWNrID0gKCk9Pnt0aGlzLldpemFyZENvbmZpcm0oKX07XHJcbiAgICAgICAgdGhpcy5CdXR0b25SZXdpbmQub25jbGljayA9ICgpPT57dGhpcy5SZXdpbmQoKX07XHJcblxyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcuYWdlIC52YWx1ZScpLm9uY2xpY2sgPSAoZSk9PntcclxuICAgICAgICAgICAgSW5wdXRCb3guUnVuKGUuY3VycmVudFRhcmdldCwgdGhpcy5Qcm90by5EYXRhLlJlZy5BZ2UsIHRoaXMuTnVtUGFkU2V0QWdlLCB7Q2FwdGlvbjogJ9CS0L7Qt9GA0LDRgdGCINC/0L7RgdC10YLQuNGC0LXQu9GPJ30pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5yYWRpby1nZW5kZXInLCAoZSk9PntcclxuICAgICAgICAgICAgdGhpcy5TdGF0ZS5SZWcuR2VuZGVyID0gZS5jdXJyZW50VGFyZ2V0LmlkID09PSAnZ2VuZGVyLW1hbGUnID8gMSA6IDA7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAnLnJhZGlvLXNvY2lhbCcsIChlKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlN0YXRlLlJlZy5Tb2NpYWwgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndHlwZSddO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5yYWRpby1kaXNhYmxlZCcsIChlKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlN0YXRlLlJlZy5pc0Rpc2FibGVkID0gZS5jdXJyZW50VGFyZ2V0LmlkID09PSAncmVnLWRpc2FiaWxpdHkteScgPyAxIDogMDtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5DaGVja2JveEFjdHVhbE5ldy5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlN0YXRlLlJlZy5pc0FjdHVhbE5ldyA9IHRoaXMuQ2hlY2tib3hBY3R1YWxOZXcuY2hlY2tlZDtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5Td2l0Y2hGYXZvcml0ZSk7XHJcbiAgICB9XHJcbn0pO1xyXG4iLCJXaWRnZXQuVGVzdCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEaWFyeS5WaXNpdGF0aW9uLFxyXG4gICAgTmFtZTogJ1Rlc3QnLFxyXG4gICAgVGFyZ2V0OiAnLndpZGdldC1yb3cnLFxyXG4gICAgQ29udGVudDogYDxkaXYgZHJhZ2dhYmxlPVwidHJ1ZVwiIGNsYXNzPVwid2lkZ2V0IGRyYWdnYWJsZSBkaWFyeS13aWRnZXQgZXZlbnQtcGFpZC13aWRnZXRcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1pY29uIGljb24tdmlzaXRvci1uZXdcIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCa0LDQutC40LUt0YLQviDQnNCV0KDQntCf0KDQmNCv0KLQmNCvPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbHMgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2wgd2lkZ2V0LWNvbnRyb2wtbW92ZVwiIHRpdGxlPVwi0J/QtdGA0LXQvNC10YHRgtC40YLRjFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1mYXZvcml0ZVwiIHRpdGxlPVwi0J3QsCDQs9C70LDQstC90YvQuSDRjdC60YDQsNC9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uLXRvZGF5IGwtcm93IGwtZmxleGEtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb3VudC1jYXB0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3Ryb25nXCI+0KPQm9Cr0JHQndCY0KHQrCA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXN1YWxcIj4g0YHQtdCz0L7QtNC90Y8ge3tDb3VudH19ISE8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50LWxpc3RcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLXBsdXMtY3V0dGVyIHJpZ2h0XCI+PGJ1dHRvbiBjbGFzcz1cImJ1dHRvbi1wbHVzIGJ0bi1zd2l0Y2hlclwiIGRpc2FibGVkPVwiZGlzYWJsZWRcIj48L2J1dHRvbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFN0YXRlOiB7XHJcbiAgICAgICAgQ291bnQ6IEx1cmUuRGF0ZShuZXcgRGF0ZSkuRm9ybWF0KCdERCBNTU1NIFlZWVnQsy4nKSxcclxuICAgIH0sXHJcbiAgICBQcm90bzoge1xyXG4gICAgICAgIExpYnJhcnlFdmVudFR5cGVJRDogRGljdGlvbmFyeS5MaWJyYXJ5RXZlbnRUeXBlLkV2ZW50UGFpZCxcclxuICAgICAgICBDb3VudFN1bTogMCxcclxuICAgICAgICBTZXJpZXNJbmRleDogMSxcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OiB7XHJcbiAgICAgICAgRGF0ZTogKCk9PntcclxuICAgICAgICAgICAgaWYgKCFEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZClcclxuICAgICAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICAgICAgbGV0IEQgPSBMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICByZXR1cm4gRC5pc1RvZGF5ID8gJ9GB0LXQs9C+0LTQvdGPJzpELkZvcm1hdCgnREQgTU1NTSBZWVlZJywgdHJ1ZSl9LFxyXG4gICAgICAgIFBlcmNlbnQ6IChjLCBwKT0+e1xyXG4gICAgICAgICAgICBsZXQgcGVyY2VudCA9IHAuQ291bnQvcC5Db3VudFBsYW4qMTAwO1xyXG4gICAgICAgICAgICBpZiAocGVyY2VudCA8PSAxMDApXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcGVyY2VudDtcclxuICAgICAgICAgICAgcmV0dXJuIDEwMDtcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIENvbnRyb2xsZXI6e1xyXG4gICAgICAgIFRhcmdldDogJy5ldmVudC1saXN0JyxcclxuICAgICAgICBMaXN0RWxlbWVudDogYDxkaXYgY2xhc3M9XCJldmVudC1pdGVtIHByb2dyZXNzLWJhciBsaW5lLWludGVybGluZWFyXCIgc3R5bGU9XCItLXByb2dyZXNzLXBlcmNlbnQ6IHt7UGVyY2VudH19JTtcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MtY2FwdGlvbiBsLXJvdyBsLWZsZXgtYmV0d2VlblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzdWFsXCI+e3tOYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLWlubGluZS1jaGFuZ2VyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibC1wb2ludGVyIGNvbnRyb2wtaW5saW5lIGNvbnRyb2wtaW5saW5lLW1pbnVzXCIge3sjZGF0YS1saW5lfX0+LTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlLWxhc3QgdmFsdWUtaW5saW5lXCI+e3tDb3VudH19L3t7Q291bnRQbGFufX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLXBvaW50ZXIgY29udHJvbC1pbmxpbmUgY29udHJvbC1pbmxpbmUtcGx1c1wiIHt7I2RhdGEtbGluZX19Pis8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXYgY2xhc3M9XCJsaXN0LWVtcHR5XCI+PC9kaXY+YFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuX0Zhdm9yaXRlSWNvbiA9IHRoaXMuU2VsZWN0KCcud2lkZ2V0LWNvbnRyb2wtZmF2b3JpdGUnKTtcclxuXHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ291bnRJbmNyZWFzZSA9IGZ1bmN0aW9uIChMaW5lSUQsIENvbnRyb2wpIHtcclxuICAgICAgICAgICAgbGV0IERhdGVOb3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICBsZXQgRGF0ZUxpbWl0ID0gbmV3IERhdGUoRGF0ZU5vdy5nZXRGdWxsWWVhcigpLCBEYXRlTm93LmdldE1vbnRoKCksIERhdGVOb3cuZ2V0RGF0ZSgpLCBTdGF0aWMuRGF0ZUhvdXJzRWRpdGluZ0xpbWl0KTtcclxuICAgICAgICAgICAgaWYgKERhdGVMaW1pdCA8IERhdGVOb3cgJiYgIUx1cmUuRGF0ZShEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCkuaXNUb2RheSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uU2hvd1dhcm4oJ9CS0YDQtdC80Y8g0LjQt9C80LXQvdC10L3QuNGPINC/0YDQtdC00YvQtNGD0YnQuNGFINC00LDQvdC90YvRhSDQuNGB0YLQtdC60LvQvicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2soQ29udHJvbCk7XHJcbiAgICAgICAgICAgIGxldCBEYXRhSXRlbSA9IHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKExpbmVJRCk7XHJcblxyXG5cclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1Zpc2l0YXRpb25fRXZlbnRWaXNpdEFkZChEaWFyeS5Qcm90by5EYXRhLkRhdGVTZWxlY3RlZCwgRGF0YUl0ZW0uRGF0YS5JRCwgMSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzPjApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhSXRlbS5EYXRhLkNvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bSsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChMaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpZGdldC5FdmVudFN1bW1hcnkuU2VyaWVzVXBkYXRlKHRoaXMuUHJvdG8uRGF0YS5TZXJpZXNJbmRleCwgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKENvbnRyb2wpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNvdW50RGVjcmVhc2UgPSBmdW5jdGlvbiAoTGluZUlELCBDb250cm9sKSB7XHJcbiAgICAgICAgICAgIGxldCBEYXRlTm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgbGV0IERhdGVMaW1pdCA9IG5ldyBEYXRlKERhdGVOb3cuZ2V0RnVsbFllYXIoKSwgRGF0ZU5vdy5nZXRNb250aCgpLCBEYXRlTm93LmdldERhdGUoKSwgU3RhdGljLkRhdGVIb3Vyc0VkaXRpbmdMaW1pdCk7XHJcbiAgICAgICAgICAgIGlmIChEYXRlTGltaXQgPCBEYXRlTm93ICYmICFMdXJlLkRhdGUoRGlhcnkuUHJvdG8uRGF0YS5EYXRlU2VsZWN0ZWQpLmlzVG9kYXkpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuU3lzdGVtLlNob3dXYXJuKCfQktGA0LXQvNGPINC40LfQvNC10L3QtdC90LjRjyDQv9GA0LXQtNGL0LTRg9GJ0LjRhSDQtNCw0L3QvdGL0YUg0LjRgdGC0LXQutC70L4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKENvbnRyb2wpO1xyXG4gICAgICAgICAgICBsZXQgRGF0YUl0ZW0gPSB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRChMaW5lSUQpO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfVmlzaXRhdGlvbl9FdmVudFZpc2l0QWRkKERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEYXRhSXRlbS5EYXRhLklELCAtMSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHJlcyk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzPjApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRhSXRlbS5EYXRhLkNvdW50LS07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5Db3VudFN1bS0tO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuUmVmcmVzaChMaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgV2lkZ2V0LkV2ZW50U3VtbWFyeS5TZXJpZXNVcGRhdGUodGhpcy5Qcm90by5EYXRhLlNlcmllc0luZGV4LCB0aGlzLlByb3RvLkRhdGEuQ291bnRTdW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UoQ29udHJvbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuU3dpdGNoRmF2b3JpdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxldCBwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5SZW1vdmVXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHAgPSBGZWF0dXJlZC5BZGRXaWRnZXQodGhpcy5GdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcC50aGVuKCgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hlY2tGb3JGYXZvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5pc0Zhdm9yaXRlID0gTHVyZS5Vc2VyLldlYlNldHRpbmdzLkZlYXR1cmVkLldpZGdldHMuaW5kZXhPZih0aGlzLkZ1bGxOYW1lKSA+IC0xO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0Zhdm9yaXRlKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fRmF2b3JpdGVJY29uLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkNoZWNrRm9yRmF2b3IoKTtcclxuICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgIGFwaS5EaWFyeV9WaXNpdGF0aW9uX0V2ZW50R2V0KERpYXJ5LlByb3RvLkRhdGEuRGF0ZVNlbGVjdGVkLCBEaWFyeS5Qcm90by5EYXRhLkxpYnJhcnkuSUQsIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5RXZlbnRUeXBlSUQsIC0xLCB7XHJcbiAgICAgICAgICAgIFRoZW46IChsaXN0KT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2gobGlzdCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgQ291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICAgICAgICAgIENvdW50ICs9IGxpc3RbaV0uQ291bnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdDb3VudFN1bScsIENvdW50KTtcclxuICAgICAgICAgICAgICAgIFdpZGdldC5FdmVudFN1bW1hcnkuU2VyaWVzVXBkYXRlKHRoaXMuUHJvdG8uRGF0YS5TZXJpZXNJbmRleCwgdGhpcy5Qcm90by5EYXRhLkNvdW50U3VtKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29udHJvbC1pbmxpbmUtcGx1cycsIGZ1bmN0aW9uIChlLCBwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ291bnRJbmNyZWFzZShwLkxpbmVJRCwgZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5jb250cm9sLWlubGluZS1taW51cycsIGZ1bmN0aW9uIChlLCBwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ291bnREZWNyZWFzZShwLkxpbmVJRCwgZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9GYXZvcml0ZUljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLlN3aXRjaEZhdm9yaXRlKTtcclxuXHJcbiAgICB9XHJcbn0pO1xyXG4iLCJjb25zdCBIaXN0b3J5U3Vic2NyaXB0aW9uID0gcmVxdWlyZSgnLi4vX2NvbW1vbi9oaXN0b3J5LW1hc3Rlci9oaXN0b3J5LXN1YnNjcmlwdGlvbicpO1xyXG5jb25zdCBEID0gcmVxdWlyZShcIi4uL19jb21tb24vZGljdGlvbmFyeVwiKTtcclxuXHJcbi8qKlxyXG4gKiBAY2xhc3MgRmVhdHVyZWRcclxuICovXHJcbmxldCBGZWF0dXJlZCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgLy9EaXNhYmxlZDogdHJ1ZSxcclxuICAgIE5hbWU6ICdGZWF0dXJlZCcsXHJcbiAgICBUYXJnZXQ6ICcuYm9keScsXHJcbiAgICBUeXBlOiAnY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWZlYXR1cmVkJ1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwiZmVhdHVyZWQgY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgIDxoMT5GZWVkPC9oMT5cclxuICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0c1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFN0YXRlOntcclxuICAgICAgICBLdWs6IDEyLFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5fQ29udGVudFdpZGdldCA9IHRoaXMuU2VsZWN0KCcud2lkZ2V0cycpO1xyXG4gICAgICAgIHRoaXMuX0N1cnJlbnRMQ29udGVudExpc3QgPSBbXTtcclxuXHJcbiAgICAgICAgdGhpcy5fUmVzaXplVGFyZ2V0ID0gbnVsbDtcclxuXHJcbiAgICAgICAgdGhpcy5JbnB1dEZpbGUgPSB0aGlzLlNlbGVjdCgnLmZpbGVtYW4nKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbigpe1xyXG5cclxuICAgICAgICB0aGlzLl9TdGVhbENvbnRlbnRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLl9DdXJyZW50TENvbnRlbnRMaXN0ID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IFdpZGdldEZ1bGxOYW1lIG9mIEx1cmUuVXNlci5XZWJTZXR0aW5ncy5GZWF0dXJlZC5XaWRnZXRzKXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGB3dy0+YCwgV2lkZ2V0RnVsbE5hbWUpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgV2lkZ2V0TENvbnRlbnQgPSBMdXJlLk9iamVjdC5HZXRQcm9wZXJ0eSh3aW5kb3csIFdpZGdldEZ1bGxOYW1lKTtcclxuICAgICAgICAgICAgICAgIGlmIChXaWRnZXRMQ29udGVudCAhPT0gbnVsbCl7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9zdGVhbCBjb250ZW50XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fQ3VycmVudExDb250ZW50TGlzdC5wdXNoKFdpZGdldExDb250ZW50KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9Db250ZW50V2lkZ2V0LmFwcGVuZENoaWxkKFdpZGdldExDb250ZW50LkNvbnRlbnQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLl9SZWZyZXNoQ3VycmVudHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGMgb2YgdGhpcy5fQ3VycmVudExDb250ZW50TGlzdClcclxuICAgICAgICAgICAgICAgIGMuUmVmcmVzaCgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuQWRkV2lkZ2V0ID0gZnVuY3Rpb24gKExDb250ZW50RnVsbE5hbWUpIHtcclxuICAgICAgICAgICAgTHVyZS5Vc2VyLldlYlNldHRpbmdzLkZlYXR1cmVkLldpZGdldHMucHVzaChMQ29udGVudEZ1bGxOYW1lKTtcclxuICAgICAgICAgICAgcmV0dXJuIGFwaS5Vc2VyX1dlYlNldHRpbmdzVXBkYXRlKEpTT04uc3RyaW5naWZ5KEx1cmUuVXNlci5XZWJTZXR0aW5ncyksIG51bGwpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5SZW1vdmVXaWRnZXQgPSBmdW5jdGlvbiAoTENvbnRlbnRGdWxsTmFtZSkge1xyXG4gICAgICAgICAgICBMdXJlLkFycmF5LlJlbW92ZShMdXJlLlVzZXIuV2ViU2V0dGluZ3MuRmVhdHVyZWQuV2lkZ2V0cywgeD0+eCA9PT0gTENvbnRlbnRGdWxsTmFtZSk7XHJcbiAgICAgICAgICAgIHJldHVybiBhcGkuVXNlcl9XZWJTZXR0aW5nc1VwZGF0ZShKU09OLnN0cmluZ2lmeShMdXJlLlVzZXIuV2ViU2V0dGluZ3MpLCBudWxsKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLl9DaGVja1NldHRpbmdzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoTHVyZS5Vc2VyLldlYlNldHRpbmdzLkZlYXR1cmVkID09PSB2b2lkIDApIHtcclxuICAgICAgICAgICAgICAgIEx1cmUuVXNlci5XZWJTZXR0aW5ncy5GZWF0dXJlZCA9IHtcclxuICAgICAgICAgICAgICAgICAgICBXaWRnZXRzOiBbXSxcclxuICAgICAgICAgICAgICAgICAgICBTZXR0aW5nczoge30sXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLl9TdGVhbENvbnRlbnRzKCk7XHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLl9SZWZyZXNoQ3VycmVudHMoKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuX0NoZWNrU2V0dGluZ3MoKTtcclxuXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIChlKT0+e1xyXG4gICAgICAgICAgICB0aGlzLl9SZXNpemVUYXJnZXQgPSBudWxsO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQ29udGVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCAoZSk9PntcclxuICAgICAgICAgICAgaWYgKHRoaXMuX1Jlc2l6ZVRhcmdldCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9SZXNpemVUYXJnZXQuX09uUmVzaXplKGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxuICAgIH0sXHJcblxyXG5cclxufSk7XHJcblxyXG5cclxud2luZG93LkZlYXR1cmVkID0gRmVhdHVyZWQ7XHJcbm1vZHVsZS5leHBvcnRzID0gRmVhdHVyZWQ7IiwibGV0IEhlbHBEZXNrID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnSGVscERlc2snLFxyXG4gICAgVGFyZ2V0OiAnLmJvZHknLFxyXG4gICAgVHlwZTogJ2NvbnRlbnQnLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1oZWxwLWRlc2snXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuICAgICAgICBgPGRpdiBjbGFzcz1cImhlbHAtZGVzayBjb250ZW50XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWxwLWRlc2stbXktcmVxdWVzdHNcIj48L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhlbHAtZGVzay1uZXctcmVxdWVzdFwiPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PmAsXHJcbiAgICBTaG93OiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIGlmIChMdXJlLlVzZXIuUm9sZXMuaW5kZXhPZig5KSAhPT0gLTEgfHwgTHVyZS5Vc2VyLlJvbGVzLmluZGV4T2YoMjMpICE9PSAtMSlcclxuICAgICAgICAgICAgICAgIHRoaXMuTXlSZXFzLlNob3coKTtcclxuICAgICAgICBlbHNlIHRoaXMuTmV3UmVxLlNob3coKTtcclxuICAgIH1cclxufSk7XHJcbndpbmRvdy5IZWxwRGVzayA9IEhlbHBEZXNrO1xyXG5yZXF1aXJlKCcuL215LXJlcXMvbXktcmVxcy5qcycpO1xyXG5yZXF1aXJlKCcuL25ldy1yZXEvbmV3LXJlcS5qcycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBIZWxwRGVzaztcclxuIiwiLy8gbGV0IExpc3RTZWxlY3RvciA9IHJlcXVpcmUoJy4uLy4uL19jb21tb24vbGlzdC1zZWxlY3Rvci9saXN0LXNlbGVjdG9yJyk7XHJcbmNvbnN0IEhpc3RvcnlTdWJzY3JpcHRpb24gPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2hpc3RvcnktbWFzdGVyL2hpc3Rvcnktc3Vic2NyaXB0aW9uJyk7XHJcbmNvbnN0IEQgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuY29uc3QgSW5wdXRCb3ggPSByZXF1aXJlKFwiLi4vLi4vX2NvbW1vbi9pbnB1dC1ib3gvaW5wdXQtYm94XCIpO1xyXG5cclxuU3RhdGljLkhlbHBSZXF1ZXN0U3RhdHVzc0NoYW5nZSA9IFN0YXRpYy5IZWxwUmVxdWVzdFN0YXR1c3MuZmlsdGVyKHggPT4geC5JRCA8IDMpO1xyXG5TdGF0aWMuSGVscFJlcXVlc3RQcmlvcml0eXNDaGFuZ2UgPSBTdGF0aWMuSGVscFJlcXVlc3RQcmlvcml0eXMuZmlsdGVyKHggPT4geC5JRCA8IDQpO1xyXG5cclxubGV0IGNvbnRyb2wgPSBgPGRpdiBjbGFzcz1cImNvbnRyb2xcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmlsdGVyXCIgdGl0bGU9XCLQpNC40LvRjNGC0YBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0b2dnbGUtZmlsdGVyXCI+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGQtZmlsdGVyXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvcnRpbmdcIiB0aXRsZT1cItCh0L7RgNGC0LjRgNC+0LLQutCwXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgIDwvZGl2PmA7XHJcbkhlbHBEZXNrLk15UmVxcyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgVGFyZ2V0OiAnLmhlbHAtZGVzay1teS1yZXF1ZXN0cycsXHJcbiAgICBUeXBlOiAnaGVscC1kZXNrLWNvbnRlbnQnLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1oZWxwLWRlc2stbXktcmVxJ1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBXcml0ZTogW0QuUm9sZS5IZWxwZGVza01vZGVyYXRvcl1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG4gICAgICAgIGA8ZGl2IGNsYXNzPVwibXktcmVxdWVzdHNcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpYXJ5LWJyZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGkgZGF0ZS1yYW5nZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYWxlbmRhci1pY29uXCI+JiMxMjgxOTg7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVzXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaSBsLXJvdyBsLWZsZXhhLWNlbnRlciBmbGV4LTEwMFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+0J/QvtC00YDQsNC30LTQtdC70LXQvdC40LU6ICZuYnNwOyZuYnNwOzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTEwMCBsaWJyYXJ5LXRyZWUtY29udHJvbCBzdHJvbmdcIj5fXzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFyZ2V0LW1vZGVyYXRvclwiPjwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibXktcmVxLWhlYWRlclwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgYWxsLW15LXJlcXNcIj7QktCh0JU8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIGFjdGl2ZS1teS1yZXFzIHNlbGVjdGVkXCI+0JDQmtCi0JjQktCd0KvQlTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgY2xvc2VkLW15LXJlcXNcIj7QmNCh0J/QntCb0J3QldCd0J3Qq9CVPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBuZWVkLXNvbHV0aW9uLW15LXJlcXMgbm9uZVwiPtCi0KDQldCR0KPQldCi0KHQryDQoNCV0KjQldCd0JjQlSAoPHNwYW4+e3tOZWVkU29sdXRpb25Db3VudH19PC9zcGFuPik8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtc2VhcmNoIGZsZXgxIG5vbmVcIj48aW5wdXQgY2xhc3M9XCJzZWFyY2gtaW5wdXRcIiBwbGFjZWhvbGRlcj1cItCf0L7QuNGB0LouLi5cIj48L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4MSByZXEtc3BhY2VcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJteS1yZXFzLWxpc3RcIj5cclxuICAgICAgICAgICAgICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPCEtLU1PREVSLS0+PHRoIGNsYXNzPVwibm90LWZvci11c2VyIG15LXJlcXMtY2hlY2tzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid3JhcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwibWFzcy1hY3Rpb25zXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOnJlbGF0aXZlO1wiIGNsYXNzPVwie3tOb25lTWFzc0FjdGlvbnN9fVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibWFzcy1hY3Rpb25zIGwtYnV0dG9uXCI+TTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWN0aW9uLWxpc3Qgbm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFjdGlvbi10eXBlXCIgZGF0YS1hY3R0eXBlPVwiY2xvc2Utc2VsXCI+0JfQsNC60YDRi9GC0Ywg0LLRi9Cx0YDQsNC90L3Ri9C1PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWN0aW9uLXR5cGVcIiBkYXRhLWFjdHR5cGU9XCJjaGFuZ2UtdGVjaFwiPtCY0LfQvNC10L3QuNGC0Ywg0LjRgdC/0L7Qu9C90LjRgtC10LvRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFjdGlvbi10eXBlXCIgZGF0YS1hY3R0eXBlPVwiY2hhbmdlLXN0YXR1c1wiPtCY0LfQvNC10L3QuNGC0Ywg0YHRgtCw0YLRg9GBPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWN0aW9uLXR5cGVcIiBkYXRhLWFjdHR5cGU9XCJjaGFuZ2UtcHJpb3JpdHlcIj7QmNC30LzQtdC90LjRgtGMINC/0YDQuNC+0YDQuNGC0LXRgjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1BTEwgLS0+PHRoIGNsYXNzPVwicmVxLWhlYWQgbXktcmVxcy1udW1cIj48ZGl2IGNsYXNzPVwiaGVhZC13cmFwXCI+PGRpdj7ihJY8L2Rpdj48ZGl2IGNsYXNzPVwiY29udHJvbFwiPjxkaXYgY2xhc3M9XCJzb3J0aW5nXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUFMTCAtLT48dGggY2xhc3M9XCJyZXEtaGVhZCBteS1yZXFzLWNyZWF0ZS1kYXRlXCI+PGRpdiBjbGFzcz1cImhlYWQtd3JhcFwiPjxkaXY+0JTQsNGC0LAg0YDQtdCz0LjRgdGC0YDQsNGG0LjQuDwvZGl2PiR7Y29udHJvbH08L2Rpdj48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8IS0tQUxMIC0tPjx0aCBjbGFzcz1cInJlcS1oZWFkIG15LXJlcXMtY29tcGxldGUtZGF0ZVwiPjxkaXYgY2xhc3M9XCJoZWFkLXdyYXBcIj48ZGl2PtCh0YDQvtC6INC40YHQv9C+0LvQvdC10L3QuNGPPC9kaXY+JHtjb250cm9sfTwvZGl2PjwvdGg+XHJcbiAgICAgICAgICAgIDwhLS1URUNILS0+PCEtLU1PREVSLS0+PHRoIGNsYXNzPVwibm90LWZvci11c2VyIHJlcS1oZWFkIG15LXJlcXMtY2xvc2VkLWRhdGVcIj48ZGl2IGNsYXNzPVwiaGVhZC13cmFwXCI+PGRpdj7QlNCw0YLQsCDQt9Cw0LrRgNGL0YLQuNGPPC9kaXY+JHtjb250cm9sfTwvZGl2PjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1BTEwgLS0+PHRoIGNsYXNzPVwicmVxLWhlYWQgbXktcmVxcy1yZXEtdHlwZVwiPjxkaXYgY2xhc3M9XCJoZWFkLXdyYXBcIj48ZGl2PtCi0LjQvyDQt9Cw0Y/QstC60Lg8L2Rpdj4ke2NvbnRyb2x9PC9kaXY+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUFMTCAtLT48dGggY2xhc3M9XCJyZXEtaGVhZCBteS1yZXFzLXRoZW1lXCI+PGRpdiBjbGFzcz1cImhlYWQtd3JhcFwiPjxkaXY+0KLQtdC80LA8L2Rpdj4ke2NvbnRyb2x9PC9kaXY+PC90aD4gICAgXHJcbiAgICAgICAgICAgIDwhLS1URUNILS0+PCEtLU1PREVSLS0+PHRoIGNsYXNzPVwibm90LWZvci11c2VyIHJlcS1oZWFkIG15LXJlcXMtYXBwbGljXCI+PGRpdiBjbGFzcz1cImhlYWQtd3JhcFwiPjxkaXY+0JfQsNGP0LLQuNGC0LXQu9GMPC9kaXY+JHtjb250cm9sfTwvZGl2PjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1VU0VSLS0+PHRoIGNsYXNzPVwibm90LWZvci10ZWNoIHJlcS1oZWFkIG15LXJlcXMtdGVjaFwiPjxkaXYgY2xhc3M9XCJoZWFkLXdyYXBcIj48ZGl2PtCY0YHQv9C+0LvQvdC40YLQtdC70Yw8L2Rpdj4ke2NvbnRyb2x9PC9kaXY+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVRFQ0gtLT48dGggY2xhc3M9XCJub3QtZm9yLXVzZXIgcmVxLWhlYWQgbXktcmVxcy1saWJyYXJ5XCI+PGRpdiBjbGFzcz1cImhlYWQtd3JhcFwiPjxkaXY+0J/QvtC00YDQsNC30LTQtdC70LXQvdC40LU8L2Rpdj4ke2NvbnRyb2x9PC9kaXY+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVRFQ0gtLT48dGggY2xhc3M9XCJub3QtZm9yLXVzZXIgcmVxLWhlYWQgbXktcmVxcy1wcmlvcml0eVwiPjxkaXYgY2xhc3M9XCJoZWFkLXdyYXBcIj48ZGl2PtCf0YDQuNC+0YDQuNGC0LXRgjwvZGl2PiR7Y29udHJvbH08L2Rpdj48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8IS0tQUxMIC0tPjx0aCBjbGFzcz1cInJlcS1oZWFkIG15LXJlcXMtc3RhdHVzXCI+PGRpdiBjbGFzcz1cImhlYWQtd3JhcFwiPjxkaXY+0KHRgtCw0YLRg9GBPC9kaXY+JHtjb250cm9sfTwvZGl2PjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHkgY2xhc3M9XCJteS1yZXFzLWxpc3QtYm9keSBhY3RpdmUtdGFiLXNob3dcIj48L3Rib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+YCxcclxuICAgIExvYWQ6ICcnLFxyXG4gICAgU29ydDoge1xyXG4gICAgICAgIElEOiAnLm15LXJlcXMtbnVtIC5zb3J0aW5nJyxcclxuICAgICAgICBEYXRlQ3JlYXRlZDogJy5teS1yZXFzLWNyZWF0ZS1kYXRlIC5zb3J0aW5nJyxcclxuICAgICAgICBOYW1lOiAnLm15LXJlcXMtdGhlbWUgLnNvcnRpbmcnLFxyXG4gICAgICAgIFN0YXR1c0lEOiAnLm15LXJlcXMtc3RhdHVzIC5zb3J0aW5nJyxcclxuICAgICAgICBUZWNobmljaWFuSUQ6ICcubXktcmVxcy10ZWNoIC5zb3J0aW5nJyxcclxuICAgICAgICBMaWJyYXJ5SUQ6ICcubXktcmVxcy1saWJyYXJ5IC5zb3J0aW5nJyxcclxuICAgICAgICBQcmlvcml0eUlEOiAnLm15LXJlcXMtcHJpb3JpdHkgLnNvcnRpbmcnLFxyXG4gICAgICAgIEV4ZWN1dGlvbkRhdGU6ICcubXktcmVxcy1jb21wbGV0ZS1kYXRlIC5zb3J0aW5nJyxcclxuICAgICAgICBMb2dpbklEOiAnLm15LXJlcXMtYXBwbGljIC5zb3J0aW5nJyxcclxuICAgICAgICBIZWxwUmVxdWVzdFR5cGVJRDogJy5teS1yZXFzLXJlcS10eXBlIC5zb3J0aW5nJyxcclxuICAgICAgICBEYXRlQ2xvc2VkOiAnLm15LXJlcXMtY2xvc2VkLWRhdGUgLnNvcnRpbmcnXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy5teS1yZXFzLWxpc3QgLm15LXJlcXMtbGlzdC1ib2R5JyxcclxuICAgICAgICBEYXRhOiBbXSxcclxuICAgICAgICBMaXN0RWxlbWVudDpcclxuICAgICAgICAgICAgYDx0ciBjbGFzcz1cImV2ZW50LXJvdyB7e1N0YXR1c0lEVGFifX1cIiBkYXRhLXJlcWlkPVwie3tJRH19XCI+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJub3QtZm9yLXVzZXIgbWFzcy1jaGVja1wiPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBjbGFzcz1cIm1hc3MtYWN0aW9uc1wiPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZC1yZXFzLW51bVwiPnt7SUR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZC1jcmVhdGUtZGF0ZVwiPnt7RGF0ZUNyZWF0ZWR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZC1jb21wbGV0ZS1kYXRlXCI+e3tFeGVjdXRpb25EYXRlfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwibm90LWZvci11c2VyIHRkLWNsb3NlZC1kYXRlXCI+e3tEYXRlQ2xvc2VkfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkPnt7SGVscFJlcXVlc3RUeXBlSUR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQ+e3tOYW1lfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwibm90LWZvci11c2VyXCI+e3tVc2VyLk5hbWV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJub3QtZm9yLXRlY2ggZWRpdGFibGVcIiBkYXRhLW9iamVjdD1cIkx1cmUuVXNlci5DYWNoZS5UZWNobmljaWFuc1wiIGRhdGEtcHJlc2VudD1cIk5hbWVcIiBkYXRhLXZhbHVlPVwiSURcIj57e1RlY2huaWNpYW5JRH19PC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cIm5vdC1mb3ItdXNlclwiPnt7TGlicmFyeUlEfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwibm90LWZvci11c2VyIGVkaXRhYmxlXCIgZGF0YS1vYmplY3Q9XCJTdGF0aWMuSGVscFJlcXVlc3RQcmlvcml0eXNDaGFuZ2VcIiBkYXRhLXByZXNlbnQ9XCJOYW1lXCIgZGF0YS12YWx1ZT1cIklEXCI+e3tQcmlvcml0eUlEfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwibXktcmVxcy1zdGF0dXMgZWRpdGFibGVcIiBkYXRhLW9iamVjdD1cIlN0YXRpYy5IZWxwUmVxdWVzdFN0YXR1c3NDaGFuZ2VcIiBkYXRhLXByZXNlbnQ9XCJOYW1lXCIgZGF0YS12YWx1ZT1cIklEXCI+e3tTdGF0dXNJRH19PC90ZD5cclxuICAgICAgICAgICAgPC90cj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTpcclxuICAgICAgICAgICAgIGA8dGQgY29sc3Bhbj1cIjE1XCI+0JfQsNGP0LLQutC4INC+0YLRgdGD0YLRgdGC0LLRg9GO0YI8L3RkPmAsXHJcbiAgICAgICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLlVwZGF0ZUZpbHRlcigpO1xyXG4gICAgICAgICAgICB0aGlzLlJlY292ZXJTZWxlY3Rpb24oKTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnTmVlZFNvbHV0aW9uQ291bnQnLCB0aGlzLkNvbnRyb2xsZXIuRGF0YS5maWx0ZXIoeCA9PiBbMywgNF0uaW5kZXhPZih4LlN0YXR1c0lEKSAhPT0gLTEpLmxlbmd0aCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBMaW5lU2F2ZTogZnVuY3Rpb24gKGRhdGFJdGVtLCBwYXJhbU5hbWUsIHZhbHVlKSB7XHJcbiAgICAgICAgICAgIC8qdGhpcy5Db250cm9sbGVyLkRhdGFbZGF0YUl0ZW0uTGluZUlEXVtwYXJhbU5hbWVdID0gcGFyc2VJbnQodmFsdWUpOyovXHJcbiAgICAgICAgICAgIGlmIChwYXJhbU5hbWUgPT09ICdUZWNobmljaWFuSUQnKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5IZWxwRGVza19SZXF1ZXN0RWRpdF9UZWNobmljaWFuKGRhdGFJdGVtLkRhdGEuSUQsIHZhbHVlLCB7VGhlbjogKCkgPT4gTHVyZS5TeXN0ZW0uU3VjY2Vzcygn0JjRgdC/0L7Qu9C90LjRgtC10LvRjCDQuNC30LzQtdC90LXQvScpfSk7XHJcbiAgICAgICAgICAgIGlmIChwYXJhbU5hbWUgPT09ICdQcmlvcml0eUlEJylcclxuICAgICAgICAgICAgICAgIHJldHVybiBhcGkuSGVscERlc2tfUmVxdWVzdEVkaXRfUHJpb3JpdHkoZGF0YUl0ZW0uRGF0YS5JRCwgdmFsdWUsIHtUaGVuOiAoKSA9PiBMdXJlLlN5c3RlbS5TdWNjZXNzKCfQn9GA0LjQvtGA0LjRgtC10YIg0LjQt9C80LXQvdC10L0nKX0pO1xyXG4gICAgICAgICAgICBpZiAocGFyYW1OYW1lID09PSAnU3RhdHVzSUQnKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5IZWxwRGVza19SZXF1ZXN0RWRpdF9TdGF0dXMoZGF0YUl0ZW0uRGF0YS5JRCwgdmFsdWUsIHtUaGVuOiAoKSA9PiBMdXJlLlN5c3RlbS5TdWNjZXNzKCfQodGC0LDRgtGD0YEg0LjQt9C80LXQvdC10L0nKX0pO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBQcm90bzoge1xyXG4gICAgICAgIE5lZWRTb2x1dGlvbkNvdW50OiAwLFxyXG4gICAgICAgIE5vbmVNYXNzQWN0aW9uczogJ25vbmUnXHJcbiAgICB9LFxyXG4gICAgUHJvcFR5cGVzOiB7XHJcbiAgICAgICAgVGVjaG5pY2lhbklEOiBMdXJlLlByb3BUeXBlcy5JbnQsXHJcbiAgICAgICAgUHJpb3JpdHlJRDogTHVyZS5Qcm9wVHlwZXMuSW50LFxyXG4gICAgICAgIFN0YXR1c0lEOiBMdXJlLlByb3BUeXBlcy5JbnRcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OiB7XHJcbiAgICAgICAgTGlicmFyeUlEOiAoaWQpID0+IChMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0W2lkXSB8fCB7TmFtZTogJyd9KS5OYW1lLFxyXG4gICAgICAgIFN0YXR1c0lEOiB4ID0+ICh7XHJcbiAgICAgICAgICAgIDA6IGA8ZGl2IGNsYXNzPVwic3RhdHVzLWRvdCBuZXdcIj48L2Rpdj5gLFxyXG4gICAgICAgICAgICAxOiAnPGRpdiBjbGFzcz1cInN0YXR1cy1kb3QgYWN0aXZlXCI+PC9kaXY+JyxcclxuICAgICAgICAgICAgMjogJzxkaXYgY2xhc3M9XCJzdGF0dXMtZG90IGNsb3NlZFwiPjwvZGl2PicsXHJcbiAgICAgICAgICAgIDM6ICc8ZGl2IGNsYXNzPVwic3RhdHVzLWRvdCByZWplY3RlZFwiPjwvZGl2PicsXHJcbiAgICAgICAgICAgIDQ6ICc8ZGl2IGNsYXNzPVwic3RhdHVzLWRvdCByZXR1cm5lZFwiPjwvZGl2PicsXHJcbiAgICAgICAgfVt4XSB8fCAnJykgKyAoRC5IZWxwUmVxdWVzdFN0YXR1c0RpY3RbeF0gfHwgJz8/PycpLFxyXG4gICAgICAgIERhdGVDcmVhdGVkOiB4ID0+IEx1cmUuRGF0ZSh4KS5Gb3JtYXQoJ0REIE1NTU0gWVlZWSDQsiBISDptbScsIHRydWUpLFxyXG4gICAgICAgIEV4ZWN1dGlvbkRhdGU6IHggPT4gTHVyZS5EYXRlKHgpLkZvcm1hdCgnREQuTU0uWVlZWSBISDptbScpLFxyXG4gICAgICAgIFRlY2huaWNpYW5JRDogeCA9PiAoTHVyZS5Vc2VyLkNhY2hlLlRlY2huaWNpYW5EaWN0W3hdIHx8IHtOYW1lOiAn0J3QtSDQvdCw0LfQvdCw0YfQtdC9J30pLk5hbWUsXHJcbiAgICAgICAgU3RhdHVzSURUYWI6ICh4LCBwKSA9PiB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAocC5TdGF0dXNJRCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOiAvLyBhY3RpdmVcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ25ldy1yZXEnO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAxOiAvLyBhY3RpdmVcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2FjdGl2ZS1yZXEnO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAyOiAvLyBjbG9zZWRcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2Nsb3NlZC1yZXEnO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAncmVqZWN0ZWQtcmVxJztcclxuICAgICAgICAgICAgICAgIGNhc2UgNDpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ3JldHVybmVkLXJlcSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIFByaW9yaXR5SUQ6IHggPT4gKHtcclxuICAgICAgICAgICAgMTogJzxkaXYgY2xhc3M9XCJzdGF0dXMtZG90IGxvd1wiPjwvZGl2PicsXHJcbiAgICAgICAgICAgIDI6ICc8ZGl2IGNsYXNzPVwic3RhdHVzLWRvdCBtaWRcIj48L2Rpdj4nLFxyXG4gICAgICAgICAgICAzOiAnPGRpdiBjbGFzcz1cInN0YXR1cy1kb3QgaGlnaFwiPjwvZGl2PicsXHJcbiAgICAgICAgICAgIDQ6ICc8ZGl2IGNsYXNzPVwic3RhdHVzLWRvdCBleGVjLWRhdGVcIj48L2Rpdj4nLFxyXG4gICAgICAgIH1beF0gfHwgJycpICsgRC5IZWxwUmVxdWVzdFByaW9yaXR5RGljdFt4XSxcclxuICAgICAgICBIZWxwUmVxdWVzdFR5cGVJRDogeCA9PiB7XHJcbiAgICAgICAgICAgIGlmIChELkhlbHBSZXF1ZXN0VHlwZUFIRExpc3QuaW5kZXhPZih4KSAhPT0gLTEpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ9CQ0KXQlCc7XHJcbiAgICAgICAgICAgIGlmIChELkhlbHBSZXF1ZXN0VHlwZUlUTGlzdC5pbmRleE9mKHgpICE9PSAtMSlcclxuICAgICAgICAgICAgICAgIHJldHVybiAn0JjQoic7XHJcbiAgICAgICAgICAgIHJldHVybiAn0JTRgNGD0LPQvtC1JztcclxuICAgICAgICB9LFxyXG4gICAgICAgIERhdGVDbG9zZWQ6IHggPT4geCA/IEx1cmUuRGF0ZSh4KS5Gb3JtYXQoJ0RELk1NLllZWVknKSA6ICcnXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlNlbGVjdGVkVGFiID0gJ2FjdGl2ZSc7XHJcbiAgICAgICAgdGhpcy5GaWx0ZXJlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuRmlsdGVyQ29uZHMgPSB7fTtcclxuICAgICAgICB0aGlzLkFjdExpc3QgPSB0aGlzLlNlbGVjdCgnLmFjdGlvbi1saXN0Jyk7XHJcblxyXG4gICAgICAgIHRoaXMuVXNlcnMgPSB7fTtcclxuICAgICAgICBmb3IgKGxldCB1IG9mIEx1cmUuVXNlci5DYWNoZS5Vc2VyTGlzdClcclxuICAgICAgICAgICAgdGhpcy5Vc2Vyc1t1LklEXSA9IHU7XHJcbiAgICB9LFxyXG4gICAgR2V0U2V0OiB7XHJcbiAgICAgICAgZ2V0IEN1cnJlbnRMaWJyYXJpZXMoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUlETGlzdFNlbGVjdGVkO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0IGxhc3RSZXFJRCgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuQ29udHJvbGxlci5EYXRhLkxhc3QoKS5JRFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uLlN1YnNjcmliZSgpO1xyXG4gICAgICAgIGlmICh0aGlzLlNwZWNpYWxNb2RlclNpZGViYXIpXHJcbiAgICAgICAgICAgIHRoaXMuU3BlY2lhbE1vZGVyU2lkZWJhci5SZWZyZXNoQ2hhcnRzKCk7XHJcblxyXG4gICAgICAgIHRoaXMuQWN0TGlzdC5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICB9LFxyXG4gICAgSGlkZTogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLlN1YnNjcmlwdGlvbi5VbnN1YnNjcmliZSgpO1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyAwIC0g0L3QvtCy0LDRjyAo0LXRidC1INC90LUg0L/RgNC40L3Rj9GC0LAg0LIg0YDQsNCx0L7RgtGDKVxyXG4gICAgICAgIC8vIDEgLSDQsiDRgNCw0LHQvtGC0LVcclxuICAgICAgICAvLyAyIC0g0LfQsNC60YDRi9GC0YvQtVxyXG4gICAgICAgIC8vIDMgLSDQvtGC0LrQu9C+0L3QtdC90L3Ri9C1XHJcbiAgICAgICAgLy8gNCAtINCy0L7Qt9Cy0YDQsNGJ0LXQvdC90YvQtVxyXG4gICAgICAgIHRoaXMuU2lkZWJhci5SZXNldERhdGEoKTtcclxuICAgICAgICB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlU3RhdHVzID0gZnVuY3Rpb24gKHJlcUlELCBzdGF0dXMpIHtcclxuICAgICAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5Db250cm9sbGVyLkRhdGEuZmluZEluZGV4KHggPT4geC5JRCA9PT0gcmVxSUQpO1xyXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IC0xKSByZXR1cm47XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5EYXRhW2luZGV4XS5TdGF0dXNJRCA9IHN0YXR1cztcclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goaW5kZXgpO1xyXG4gICAgICAgICAgICB0aGlzLlNpZGViYXIuUHJvdG8uU2V0UHJvcGVydHkoJ1N0YXR1c0lEJywgc3RhdHVzKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaERhdGEgPSBmdW5jdGlvbiAocmVxSUQgPSBmYWxzZSkge1xyXG4gICAgICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgICAgICBsZXQgZGF0ZXMgPSB0aGlzLkRhdGVQaWNrZXIuRGF0ZTtcclxuICAgICAgICAgICAgYXBpLkhlbHBEZXNrX1JlcXVlc3RHZXQoLTEsIGRhdGVzWzBdLCBkYXRlc1sxXSwgdGhpcy5DdXJyZW50TGlicmFyaWVzLypbNDQwXSovLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiBhc3luYyAodGlja2V0cykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vbGV0IGEgPSBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgdGlja2V0IG9mIHRpY2tldHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpY2tldC5Mb2dpbklEID09PSBMdXJlLlVzZXIuSUQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrZXQuVXNlciA9IHtFbWFpbDogTHVyZS5Vc2VyLkVtYWlsLCBOYW1lOiBMdXJlLlVzZXIuTmFtZSwgUGhvbmU6IEx1cmUuVXNlci5QaG9uZSwgUG9zaXRpb246IEx1cmUuVXNlci5Qb3NpdGlvbn07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tldC5Vc2VyID0gYXdhaXQgdGhpcy5HZXRVc2VySW5mbyh0aWNrZXQuSUQsIHRpY2tldC5Mb2dpbklEKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGlja2V0LkV4ZWN1dGlvbkRhdGUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHRpY2tldC5Qcmlvcml0eUlEKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBELkhlbHBSZXF1ZXN0UHJpb3JpdHkuTG93OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrZXQuRXhlY3V0aW9uRGF0ZSA9IEx1cmUuRGF0ZSh0aWNrZXQuRGF0ZUNyZWF0ZWQpLkFkZEhvdXJzKDgpLkRhdGU7IC8vIDgg0YfQsNGB0L7QslxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIEQuSGVscFJlcXVlc3RQcmlvcml0eS5NaWQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tldC5FeGVjdXRpb25EYXRlID0gTHVyZS5EYXRlKHRpY2tldC5EYXRlQ3JlYXRlZCkuQWRkRGF5cygxKS5EYXRlOyAvLyAxINC00LXQvdGMXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgRC5IZWxwUmVxdWVzdFByaW9yaXR5LkhpZ2g6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tldC5FeGVjdXRpb25EYXRlID0gTHVyZS5EYXRlKHRpY2tldC5EYXRlQ3JlYXRlZCkuQWRkRGF5cygzKS5EYXRlOyAvLyAzINC00L3Rj1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIEQuSGVscFJlcXVlc3RQcmlvcml0eS5FeGFjdERhdGU6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tldC5FeGVjdXRpb25EYXRlID0gbmV3IERhdGU7IC8vINCd0LAg0LLRgdGP0LrQuNC5INGB0LvRg9GH0LDQuVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlja2V0LkV4ZWN1dGlvbkRhdGUgPSBMdXJlLkRhdGUodGlja2V0LkV4ZWN1dGlvbkRhdGUpLkRhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tldC5EYXRlQ3JlYXRlZCA9IEx1cmUuRGF0ZSh0aWNrZXQuRGF0ZUNyZWF0ZWQpLkRhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aWNrZXQuRGF0ZUNsb3NlZCkgdGlja2V0LkRhdGVDbG9zZWQgPSBMdXJlLkRhdGUodGlja2V0LkRhdGVDbG9zZWQpLkRhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKHRpY2tldHMpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIENhdGNoOiBjb25zb2xlLmVycm9yLFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCkgPT4gdGhpcy5Mb2FkLkhpZGUoKVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5SZWZyZXNoZWQgPSB0cnVlO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5TZWxlY3RUYWIgPSBmdW5jdGlvbiAodHlwZSkge1xyXG4gICAgICAgICAgICBsZXQgY2wgPSB0aGlzLkNvbnRyb2xsZXIuQ29udGVudC5jbGFzc0xpc3Q7XHJcbiAgICAgICAgICAgIGNsLnJlbW92ZSgnYWN0aXZlLXRhYi1zaG93Jyk7XHJcbiAgICAgICAgICAgIGNsLnJlbW92ZSgnYWxsLXRhYi1zaG93Jyk7XHJcbiAgICAgICAgICAgIGNsLnJlbW92ZSgnY2xvc2VkLXRhYi1zaG93Jyk7XHJcbiAgICAgICAgICAgIGNsLnJlbW92ZSgnbmVlZC1zb2x1dGlvbi10YWItc2hvdycpO1xyXG4gICAgICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2FjdGl2ZSc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2wuYWRkKCdhY3RpdmUtdGFiLXNob3cnKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2FsbCc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2wuYWRkKCdhbGwtdGFiLXNob3cnKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2Nsb3NlZCc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2wuYWRkKCdjbG9zZWQtdGFiLXNob3cnKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ25lZWQtc29sdXRpb24nOlxyXG4gICAgICAgICAgICAgICAgICAgIGNsLmFkZCgnbmVlZC1zb2x1dGlvbi10YWItc2hvdycpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdGVkVGFiID0gdHlwZTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuUmVjb3ZlclNlbGVjdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuT3BlbmVkUmVxID09PSAtMSkgcmV0dXJuO1xyXG4gICAgICAgICAgICBsZXQgZWxlbSA9IHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5RGVsZWdhdGUoeCA9PiB4LklEID09PSB0aGlzLk9wZW5lZFJlcSk7XHJcbiAgICAgICAgICAgIGlmIChlbGVtKSBlbGVtLkRPTS5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5SZXNldFNlbGVjdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IG9sZCA9IHRoaXMuU2VsZWN0KCcuZXZlbnQtcm93LnNlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIGlmIChvbGQpIG9sZC5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICB0aGlzLmlzUm93U2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5PcGVuZWRSZXEgPSAtMTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuT3BlblJlcVNpZGViYXIgPSBmdW5jdGlvbihyb3dJRCwgZWxlbSkge1xyXG4gICAgICAgICAgICAvKmlmICh0aGlzLmlzUm93U2VsZWN0ZWQpIHtcclxuICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLk5vdGljZSgn0JLRiyDRg9C20LUg0YDQtdC00LDQutGC0LjRgNGD0LXRgtC1INC30LDRj9Cy0LrRgy48YnI+0JfQsNC60YDQvtC50YLQtSDQtdGRLCDRh9GC0L7QsdGLINGA0LXQtNCw0LrRgtC40YDQvtCy0LDRgtGMINC00YDRg9Cz0YPRjicpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9Ki9cclxuICAgICAgICAgICAgdGhpcy5SZXNldFNlbGVjdGlvbigpO1xyXG4gICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIHRoaXMuT3BlblJlcVNpZGViYXJCeUlEKHJvd0lEKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuT3BlblJlcVNpZGViYXJCeUlEID0gZnVuY3Rpb24gKHJvd0lEKSB7XHJcbiAgICAgICAgICAgIGxldCByZXEgPSB0aGlzLkNvbnRyb2xsZXIuRGF0YVtyb3dJRF07XHJcbiAgICAgICAgICAgIGlmICghcmVxKSByZXR1cm47XHJcbiAgICAgICAgICAgIHRoaXMuT3BlbmVkUmVxID0gcmVxLklEO1xyXG4gICAgICAgICAgICB0aGlzLlNpZGViYXIuU2hvd1JlcXVlc3QocmVxLCByb3dJRCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLk5ld1JlcXVlc3RzID0gZnVuY3Rpb24gKGxpc3QpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaWQgb2YgbGlzdClcclxuICAgICAgICAgICAgICAgIGFwaS5IZWxwRGVza19SZXF1ZXN0R2V0KGlkLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgVGhlbjogciA9PiB0aGlzLkNvbnRyb2xsZXIuQWRkKHJbMF0pLFxyXG4gICAgICAgICAgICAgICAgICAgIEVycm9yOiBjb25zb2xlLmVycm9yLFxyXG4gICAgICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpID0+IHt9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2cobGlzdCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkdldFVzZXJJbmZvID0gZnVuY3Rpb24gKHJlcUlELCB1c2VySUQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLlVzZXJzW3VzZXJJRF0pXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLkhlbHBEZXNrX1VzZXJJbmZvR2V0KHJlcUlELCB1c2VySUQpLnRoZW4odSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Vc2Vyc1t1c2VySURdID0gdTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBlbHNlIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5Vc2Vyc1t1c2VySURdKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuVXBkYXRlRmlsdGVyID0gZnVuY3Rpb24gKHIsIHR5cGUpIHtcclxuICAgICAgICAgICAgaWYgKChyIHx8IHIgPT09ICcnKSAmJiB0eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5GaWx0ZXJDb25kc1t0eXBlXSA9PT0gcikgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5GaWx0ZXJDb25kc1t0eXBlXSA9IHI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IGxpc3QgPSB0aGlzLkNvbnRyb2xsZXIuRGF0YUl0ZW1zO1xyXG4gICAgICAgICAgICBsZXQgZmlsdGVyX2RhdGUgPSAoYXJyLCB4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXgpIHJldHVybiBhcnIuaW5kZXhPZignJyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXJyLmluZGV4T2YoeC5nZXRGdWxsWWVhcigpICsgJy0nICsgeC5nZXRNb250aCgpICsgJy0nICsgeC5nZXREYXRlKCkpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBsZXQgZmlsdGVyX3RleHQgPSAociwgdCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdCA9IHQudG9Mb2NhbGVMb3dlckNhc2UoKS50cmltKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodCA9PT0gJycpIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGxldCBpbmQgPSByLk5hbWUuY29uY2F0KHIuRGVzY3JpcHRpb24sIEx1cmUuRGF0ZShyLkRhdGVDcmVhdGVkKS5Gb3JtYXQoJ0REIE1NTU0gWVlZWSDQsiBISDptbScsIHRydWUpLCAoTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0LmZpbHRlcigoeCkgPT4geC5JRCA9PT0gci5MaWJyYXJ5SUQpWzBdIHx8IHtOYW1lOiAnJ30pLk5hbWUsIChMdXJlLlVzZXIuQ2FjaGUuVGVjaG5pY2lhbkRpY3Rbci5UZWNobmljaWFuSURdIHx8IHtOYW1lOiAn0J3QtSDQvdCw0LfQvdCw0YfQtdC9J30pLk5hbWUpLnRvTG9jYWxlTG93ZXJDYXNlKCkuaW5kZXhPZih0KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBpbmQgPT09IC0xO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLkZpbHRlckNvbmRzKVxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgICAgICAgICAoXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5GaWx0ZXJDb25kcy5oYXNPd25Qcm9wZXJ0eSgnc2VhcmNoLXF1ZXJ5JykgJiYgZmlsdGVyX3RleHQobGlzdFtpXS5EYXRhLCB0aGlzLkZpbHRlckNvbmRzWydzZWFyY2gtcXVlcnknXSkgfHxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLXRoZW1lJ10gICAgICAgICAmJiB0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLXRoZW1lJ10uaW5kZXhPZihsaXN0W2ldLkRhdGEuSGVscFJlcXVlc3RUeXBlSUQgKyAnJykgPT09IC0xIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5GaWx0ZXJDb25kc1snbXktcmVxcy10ZWNoJ10gICAgICAgICAgJiYgdGhpcy5GaWx0ZXJDb25kc1snbXktcmVxcy10ZWNoJ10uaW5kZXhPZihsaXN0W2ldLkRhdGEuVGVjaG5pY2lhbklEICsgJycpID09PSAtMSB8fFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuRmlsdGVyQ29uZHNbJ215LXJlcXMtcHJpb3JpdHknXSAgICAgICYmIHRoaXMuRmlsdGVyQ29uZHNbJ215LXJlcXMtcHJpb3JpdHknXS5pbmRleE9mKGxpc3RbaV0uRGF0YS5Qcmlvcml0eUlEICsgJycpID09PSAtMSB8fFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuRmlsdGVyQ29uZHNbJ215LXJlcXMtbGlicmFyeSddICAgICAgICYmIHRoaXMuRmlsdGVyQ29uZHNbJ215LXJlcXMtbGlicmFyeSddLmluZGV4T2YobGlzdFtpXS5EYXRhLkxpYnJhcnlJRCArICcnKSA9PT0gLTEgfHxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLWFwcGxpYyddICAgICAgICAmJiB0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLWFwcGxpYyddLmluZGV4T2YobGlzdFtpXS5EYXRhLkxvZ2luSUQgKyAnJykgPT09IC0xIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5GaWx0ZXJDb25kc1snbXktcmVxcy1jb21wbGV0ZS1kYXRlJ10gJiYgZmlsdGVyX2RhdGUodGhpcy5GaWx0ZXJDb25kc1snbXktcmVxcy1jb21wbGV0ZS1kYXRlJ10sIGxpc3RbaV0uRGF0YS5FeGVjdXRpb25EYXRlKSA9PT0gLTEgfHxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLWNyZWF0ZS1kYXRlJ10gICAmJiBmaWx0ZXJfZGF0ZSh0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLWNyZWF0ZS1kYXRlJ10sIGxpc3RbaV0uRGF0YS5EYXRlQ3JlYXRlZCkgPT09IC0xIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5GaWx0ZXJDb25kc1snbXktcmVxcy1zdGF0dXMnXSAgICAgICAgJiYgdGhpcy5GaWx0ZXJDb25kc1snbXktcmVxcy1zdGF0dXMnXS5pbmRleE9mKGxpc3RbaV0uRGF0YS5TdGF0dXNJRCArICcnKSA9PT0gLTEgfHxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLWNsb3NlZC1kYXRlJ10gICAmJiBmaWx0ZXJfZGF0ZSh0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLWNsb3NlZC1kYXRlJ10sIGxpc3RbaV0uRGF0YS5EYXRlQ2xvc2VkKSA9PT0gLTEgfHxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkZpbHRlckNvbmRzWydteS1yZXFzLXJlcS10eXBlJ10gICAgICAmJiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuRmlsdGVyQ29uZHNbJ215LXJlcXMtcmVxLXR5cGUnXS5pbmRleE9mKCcxJykgPT09IC0xICYmIEQuSGVscFJlcXVlc3RUeXBlSVRMaXN0LmluZGV4T2YobGlzdFtpXS5EYXRhLkhlbHBSZXF1ZXN0VHlwZUlEKSAhPT0gLTEgfHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5GaWx0ZXJDb25kc1snbXktcmVxcy1yZXEtdHlwZSddLmluZGV4T2YoJzInKSA9PT0gLTEgJiYgRC5IZWxwUmVxdWVzdFR5cGVBSERMaXN0LmluZGV4T2YobGlzdFtpXS5EYXRhLkhlbHBSZXF1ZXN0VHlwZUlEKSAhPT0gLTFcclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICApID8gbGlzdFtpXS5ET00uY2xhc3NMaXN0LmFkZCgnZmlsdGVyZWQnKSA6IGxpc3RbaV0uRE9NLmNsYXNzTGlzdC5yZW1vdmUoJ2ZpbHRlcmVkJyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNoYW5nZVJvd0RhdGEgPSBmdW5jdGlvbiAocm93LCBwYXJhbSwgZGF0YSkge1xyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuRGF0YVtyb3ddW3BhcmFtXSA9IGRhdGE7XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKHJvdyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBsZXQgYWxsQ2hlY2sgPSB0aGlzLlNlbGVjdCgnaW5wdXQubWFzcy1hY3Rpb25zJyk7XHJcbiAgICAgICAgdGhpcy5DaGFuZ2VNYXNzQ2hlY2sgPSBmdW5jdGlvbiAobGluZSwgY2hlY2tlZCkge1xyXG4gICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuRGF0YVtsaW5lXS5NYXNzU2VsZWN0ID0gY2hlY2tlZDtcclxuICAgICAgICAgICAgaWYgKCFjaGVja2VkKSBhbGxDaGVjay5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGxldCBsaXN0ID0gdGhpcy5Db250cm9sbGVyLkRhdGEuZmlsdGVyKHggPT4geC5NYXNzU2VsZWN0KTtcclxuICAgICAgICAgICAgaWYgKGxpc3QubGVuZ3RoID4gMCApXHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdOb25lTWFzc0FjdGlvbnMnLCAnJyk7XHJcbiAgICAgICAgICAgIGVsc2UgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnTm9uZU1hc3NBY3Rpb25zJywgJ25vbmUnKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuRG9NYXNzQWN0aW9uID0gZnVuY3Rpb24gKHR5cGUsIGVsZW0pIHtcclxuICAgICAgICAgICAgbGV0IGxpc3QgPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkNvbnRyb2xsZXIuRGF0YS5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLkNvbnRyb2xsZXIuRGF0YVtpXS5NYXNzU2VsZWN0KVxyXG4gICAgICAgICAgICAgICAgICAgIGxpc3QucHVzaCh7SUQ6IHRoaXMuQ29udHJvbGxlci5EYXRhW2ldLklELCBMaW5lOiBpfSk7XHJcbiAgICAgICAgICAgIC8vIGxldCBsaXN0ID0gdGhpcy5Db250cm9sbGVyLkRhdGEuZmlsdGVyKHggPT4geC5NYXNzU2VsZWN0KS5tYXAoeCA9PiB4LklEKTtcclxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdjbG9zZS1zZWwnKVxyXG4gICAgICAgICAgICAgICAgSW5wdXRCb3guUnVuKGVsZW0sICcnLFxyXG4gICAgICAgICAgICAgICAgICAgIGFzeW5jIGNvbW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCB4IG9mIGxpc3QpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBhcGkuSGVscERlc2tfUmVxdWVzdEZpbmlzaCh4LklELCBjb21tZW50LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlbjogciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyID09PSAtMSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlNob3dFcnJvcign0KfRgtC+LdGC0L4g0L/QvtGI0LvQviDQvdC1INGC0LDQuicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhbmdlU3RhdHVzKHguSUQsIDIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLkRhdGFbeC5MaW5lXS5NYXNzU2VsZWN0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlNlbGVjdCgnaW5wdXQnLCB0aGlzLkNvbnRyb2xsZXIuR2V0RGF0YUl0ZW1CeUxpbmVJRCh4LkxpbmUpLkRPTSkuY2hlY2tlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLkNvbnRyb2xsZXIuRGF0YS5maWx0ZXIoeCA9PiB4Lk1hc3NTZWxlY3QpLmxlbmd0aCA9PT0gMClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ05vbmVNYXNzQWN0aW9ucycsICdub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0KCcuYWN0aW9uLWxpc3QnKS5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwge0NhcHRpb246ICfQl9Cw0LrRgNGL0YLRjCDQstGL0LHRgNCw0L3QvdGL0LUnLCBUZXh0QXJlYTogdHJ1ZX0pO1xyXG4gICAgICAgICAgICBsZXQgbWV0aG9kLCBmaWVsZCwgZGF0YTtcclxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdjaGFuZ2UtdGVjaCcpIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZCA9IGFwaS5IZWxwRGVza19SZXF1ZXN0RWRpdF9UZWNobmljaWFuO1xyXG4gICAgICAgICAgICAgICAgZmllbGQgPSAnVGVjaG5pY2lhbklEJztcclxuICAgICAgICAgICAgICAgIGRhdGEgPSBMdXJlLlVzZXIuQ2FjaGUuVGVjaG5pY2lhbnMubWFwKHggPT4gKHtOYW1lOiB4Lk5hbWUsIElEOiB4LklEfSkpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdjaGFuZ2Utc3RhdHVzJykge1xyXG4gICAgICAgICAgICAgICAgbWV0aG9kID0gYXBpLkhlbHBEZXNrX1JlcXVlc3RFZGl0X1N0YXR1cztcclxuICAgICAgICAgICAgICAgIGZpZWxkID0gJ1N0YXR1c0lEJztcclxuICAgICAgICAgICAgICAgIGRhdGEgPSBTdGF0aWMuSGVscFJlcXVlc3RTdGF0dXNzLmZpbHRlcih4ID0+IHguSUQgPCAzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ2NoYW5nZS1wcmlvcml0eScpIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZCA9IGFwaS5IZWxwRGVza19SZXF1ZXN0RWRpdF9Qcmlvcml0eTtcclxuICAgICAgICAgICAgICAgIGZpZWxkID0gJ1ByaW9yaXR5SUQnO1xyXG4gICAgICAgICAgICAgICAgZGF0YSA9IFN0YXRpYy5IZWxwUmVxdWVzdFByaW9yaXR5cy5maWx0ZXIoeCA9PiB4LklEIDwgNCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0eXBlID09PSAnY2hhbmdlLXByaW9yaXR5JyB8fCB0eXBlID09PSAnY2hhbmdlLXRlY2gnIHx8IHR5cGUgPT09ICdjaGFuZ2Utc3RhdHVzJylcclxuICAgICAgICAgICAgICAgIElucHV0Qm94LlJ1bihlbGVtLCAwICsgdHlwZSA9PT0gJ2NoYW5nZS1wcmlvcml0eScsXHJcbiAgICAgICAgICAgICAgICAgICAgYXN5bmMgcmVzID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgeCBvZiBsaXN0KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgbWV0aG9kKHguSUQsIHJlcywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZW46IHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgPSBwYXJzZUludChyZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAociA9PT0gLTEpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93RXJyb3IoJ9Cn0YLQvi3RgtC+INC/0L7RiNC70L4g0L3QtSDRgtCw0LonKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXIuRGF0YVt4LkxpbmVdW2ZpZWxkXSA9IHJlcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5EYXRhW3guTGluZV0uTWFzc1NlbGVjdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goeC5MaW5lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU2VsZWN0KCdpbnB1dCcsIHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKHguTGluZSkuRE9NKS5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuQ29udHJvbGxlci5EYXRhLmZpbHRlcih4ID0+IHguTWFzc1NlbGVjdCkubGVuZ3RoID09PSAwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnTm9uZU1hc3NBY3Rpb25zJywgJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5TZWxlY3QoJy5hY3Rpb24tbGlzdCcpLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENhcHRpb246ICfQmNC30LzQtdC90LjRgtGMINC/0YDQuNC+0YDQuNGC0LXRgicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEtleVZhbHVlOiAnSUQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBLZXlWaWV3OiAnTmFtZScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGE6IGRhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFRleHRBcmVhOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5TZWxlY3REZXNlbGVjdEFsbCA9IGZ1bmN0aW9uIChjaGVja2VkKSB7XHJcbiAgICAgICAgICAgIGxldCBjID0gdGhpcy5Db250cm9sbGVyLkRhdGFJdGVtcztcclxuICAgICAgICAgICAgZm9yIChsZXQgZSBvZiBjKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2hlY2tlZClcclxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuU2VsZWN0ZWRUYWIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnYWN0aXZlJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLkRhdGEuU3RhdHVzSUQgIT09IDAgJiYgZS5EYXRhLlN0YXR1c0lEICE9PSAxICYmIGUuRGF0YS5TdGF0dXNJRCAhPT0gNCkgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnY2xvc2VkJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLkRhdGEuU3RhdHVzSUQgIT09IDIpIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ25lZWQtc29sdXRpb24nOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUuRGF0YS5TdGF0dXNJRCAhPT0gMyAmJiBlLkRhdGEuU3RhdHVzSUQgIT09IDQpIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGNoZWNrZWQpXHJcbiAgICAgICAgICAgICAgICAgICAgZS5ET00uY2xhc3NMaXN0LmFkZCgnbWFzcy1zZWxlY3QnKTtcclxuICAgICAgICAgICAgICAgIGVsc2UgZS5ET00uY2xhc3NMaXN0LnJlbW92ZSgnbWFzcy1zZWxlY3QnKTtcclxuICAgICAgICAgICAgICAgIEx1cmUuU2VsZWN0KCdpbnB1dCcsIGUuRE9NKS5jaGVja2VkID0gY2hlY2tlZDtcclxuICAgICAgICAgICAgICAgIGUuRGF0YS5NYXNzU2VsZWN0ID0gY2hlY2tlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgbGlzdCA9IGMuZmlsdGVyKHggPT4geC5EYXRhLk1hc3NTZWxlY3QpO1xyXG4gICAgICAgICAgICBpZiAobGlzdC5sZW5ndGggPiAwIClcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ05vbmVNYXNzQWN0aW9ucycsICcnKTtcclxuICAgICAgICAgICAgZWxzZSB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdOb25lTWFzc0FjdGlvbnMnLCAnbm9uZScpO1xyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIG5ldyBMaWJyYXJ5VHJlZSh0aGlzLCB0aGlzLlNlbGVjdCgnLmxpYnJhcnktdHJlZS1jb250cm9sJyksIHtNdWx0aVNlbGVjdDogdHJ1ZSwgU2VsZWN0ZWRMaXN0OiBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3QuU2VsZWN0KHg9PnguSUQpfSk7XHJcbiAgICAgICAgdGhpcy5Qcm90by5EYXRhLkxpYnJhcnlJRExpc3RTZWxlY3RlZCA9IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5TZWxlY3QoeD0+eC5JRCk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcubXktcmVxLWhlYWRlciAucmVxLXRhYicsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBlbGVtID0gdGhpcy5TZWxlY3QoJy5teS1yZXEtaGVhZGVyIC5zZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0ICE9PSBlbGVtKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZWxlbSkgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGNsID0gZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdDtcclxuICAgICAgICAgICAgICAgIGNsLmFkZCgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgIGlmIChjbC5jb250YWlucygnYWN0aXZlLW15LXJlcXMnKSkgdGhpcy5TZWxlY3RUYWIoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoY2wuY29udGFpbnMoJ2FsbC1teS1yZXFzJykpIHRoaXMuU2VsZWN0VGFiKCdhbGwnKTtcclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNsLmNvbnRhaW5zKCdjbG9zZWQtbXktcmVxcycpKSB0aGlzLlNlbGVjdFRhYignY2xvc2VkJyk7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChjbC5jb250YWlucygnbmVlZC1zb2x1dGlvbi1teS1yZXFzJykpIHRoaXMuU2VsZWN0VGFiKCduZWVkLXNvbHV0aW9uJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5ldmVudC1yb3cnLCBlID0+IHRoaXMuT3BlblJlcVNpZGViYXIoZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ2xpbmUnXSwgZS5jdXJyZW50VGFyZ2V0KSk7XHJcblxyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmV2ZW50LXJvdyB0ZDpub3QoLm1hc3MtY2hlY2spJywgZSA9PiB0aGlzLk9wZW5SZXFTaWRlYmFyKGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50LmRhdGFzZXRbJ2xpbmUnXSwgZS5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQpKTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICcuZXZlbnQtcm93IC5tYXNzLWNoZWNrIC5tYXNzLWFjdGlvbnMnLCBlID0+IHtcclxuICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKCdtYXNzLXNlbGVjdCcpO1xyXG4gICAgICAgICAgICB0aGlzLkNoYW5nZU1hc3NDaGVjayhlLmN1cnJlbnRUYXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmRhdGFzZXRbJ2xpbmUnXSwgZS5jdXJyZW50VGFyZ2V0LmNoZWNrZWQpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLlNlbGVjdCgnYnV0dG9uLm1hc3MtYWN0aW9ucycpLm9uY2xpY2sgPSBlID0+IHt0aGlzLkFjdExpc3QuY2xhc3NMaXN0LnRvZ2dsZSgnbm9uZScpOyBlLnN0b3BQcm9wYWdhdGlvbigpfTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5hY3Rpb24tbGlzdCAuYWN0aW9uLXR5cGUnLCBlID0+IHRoaXMuRG9NYXNzQWN0aW9uKGUuY3VycmVudFRhcmdldC5kYXRhc2V0WydhY3R0eXBlJ10sIGUuY3VycmVudFRhcmdldCkpO1xyXG5cclxuICAgICAgICB0aGlzLlNlbGVjdCgnLm15LXJlcXMtY2hlY2tzIGlucHV0Lm1hc3MtYWN0aW9ucycpLm9uY2hhbmdlID0gZSA9PiB0aGlzLlNlbGVjdERlc2VsZWN0QWxsKGUuY3VycmVudFRhcmdldC5jaGVja2VkKTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJyo6bm90KC5teS1yZXFzLWNoZWNrcyknLCBlID0+ICF0aGlzLkFjdExpc3QuY2xhc3NMaXN0LmNvbnRhaW5zKCdub25lJykgPyB0aGlzLkFjdExpc3QuY2xhc3NMaXN0LmFkZCgnbm9uZScpIDogJycpO1xyXG5cclxuICAgICAgICB0aGlzLkRhdGVQaWNrZXIgPSBuZXcgTHVyZS5QZXJpb2RQaWNrZXIoe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuU2VsZWN0KCcuZGlhcnktYnJlYWQgLmxpLmRhdGUtcmFuZ2UgLmRhdGVzJyksXHJcbiAgICAgICAgICAgIERhdGVSYW5nZTogW0x1cmUuRGF0ZSgpLldlZWtTdGFydCwgTHVyZS5EYXRlKCkuV2Vla0VuZF0sXHJcbiAgICAgICAgICAgIE9uQ29uZmlybTogKCkgPT4gdGhpcy5SZWZyZXNoRGF0YSgpXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uID0gbmV3IEhpc3RvcnlTdWJzY3JpcHRpb24oe1xyXG4gICAgICAgICAgICBPblN1YnNjcmliZTogSGlzdExpc3QgPT4gdGhpcy5OZXdSZXF1ZXN0cyhIaXN0TGlzdC5tYXAoeCA9PiB4Lkl0ZW1JRCkpLFxyXG4gICAgICAgICAgICBDb25kaXRpb246IGggPT4gaC5UeXBlSUQgPT09IEQuU3Vic2NyaWJlVHlwZS5TdXBwb3J0QWRkICYmIGguTG9naW5JRCAhPT0gTHVyZS5Vc2VyLklEICYmIGguSXRlbUlEID4gdGhpcy5sYXN0UmVxSURcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5GaWx0ZXJzID0gW107XHJcbiAgICAgICAgbGV0IGRhdGEgPSBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNsOiAnbXktcmVxcy10aGVtZScsXHJcbiAgICAgICAgICAgICAgICBsaXN0OiBbe2s6IDAsIHY6ICfQntGA0LPQsNC90LjQt9Cw0YbQuNGPINGA0LDQsdC+0YfQtdCz0L4g0LzQtdGB0YLQsCd9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtrOiAxLCB2OiAn0J7QsdGB0LvRg9C20LjQstCw0L3QuNC1INC60L7QvNC/0YzRjtGC0LXRgNC+0LInfSxcclxuICAgICAgICAgICAgICAgICAgICB7azogMiwgdjogJ9Ce0LHRgdC70YPQttC40LLQsNC90LjQtSDQvtGA0LPRgtC10YXQvdC40LrQuCd9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtrOiAzLCB2OiAn0J7QsdGB0LvRg9C20LjQstCw0L3QuNC1INC/0YDQvtCz0YDQsNC80LzQvdC+0LPQviDQvtCx0LXRgdC/0LXRh9C10L3QuNGPJ30sXHJcbiAgICAgICAgICAgICAgICAgICAge2s6IDQsIHY6ICfQndCw0LHQu9GO0LTQtdC90LjQtSwg0YHRh9C10YLRh9C40LrQuCwg0YHQuNCz0L3QsNC70LjQt9Cw0YbQuNGPJ30sXHJcbiAgICAgICAgICAgICAgICAgICAge2s6IDUsIHY6ICfQotC10YXQvdC40YfQtdGB0LrQvtC1INGB0L7Qv9GA0L7QstC+0LbQtNC10L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40LknfSxcclxuICAgICAgICAgICAgICAgICAgICB7azogNiwgdjogJ9Cg0LXQvNC+0L3Rgid9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtrOiA3LCB2OiAn0JfQsNC80LXQvdCwIC8g0KPRgdGC0LDQvdC+0LLQutCwJ30sXHJcbiAgICAgICAgICAgICAgICAgICAge2s6IDgsIHY6ICfQlNGA0YPQs9C+0LUgKNCY0KIpJ30sXHJcbiAgICAgICAgICAgICAgICAgICAge2s6IDksIHY6ICfQlNGA0YPQs9C+0LUgKNCQ0KXQlCknfV1cclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgY2w6ICdteS1yZXFzLXRlY2gnLFxyXG4gICAgICAgICAgICAgICAgbGlzdDogW3tcclxuICAgICAgICAgICAgICAgICAgICBrOiAtMSxcclxuICAgICAgICAgICAgICAgICAgICB2OiAn0J3QtSDQvdCw0LfQvdCw0YfQtdC9J1xyXG4gICAgICAgICAgICAgICAgfV0uY29uY2F0KE9iamVjdC5lbnRyaWVzKEx1cmUuVXNlci5DYWNoZS5UZWNobmljaWFuRGljdCkubWFwKHggPT4gKHtrOiB4WzFdLklELCB2OiB4WzFdLk5hbWV9KSkpXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIGNsOiAnbXktcmVxcy1saWJyYXJ5JyxcclxuICAgICAgICAgICAgICAgIGxpc3Q6IChvID0ge30pID0+IHRoaXMuQ29udHJvbGxlci5EYXRhLm1hcCh4ID0+ICh7XHJcbiAgICAgICAgICAgICAgICAgICAgazogeC5MaWJyYXJ5SUQsXHJcbiAgICAgICAgICAgICAgICAgICAgdjogTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0RGljdFt4LkxpYnJhcnlJRF0uTmFtZVxyXG4gICAgICAgICAgICAgICAgfSkpLmZpbHRlcih4ID0+IG9beC5rXSA/IGZhbHNlIDogKG9beC5rXSA9IHRydWUpKVxyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBjbDogJ215LXJlcXMtY29tcGxldGUtZGF0ZScsXHJcbiAgICAgICAgICAgICAgICBsaXN0OiAobyA9IHt9KSA9PiB0aGlzLkNvbnRyb2xsZXIuRGF0YS5tYXAoeCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgazogKGQgPT4gZC5nZXRGdWxsWWVhcigpICsgJy0nICsgZC5nZXRNb250aCgpICsgJy0nICsgZC5nZXREYXRlKCkpKEx1cmUuRGF0ZSh4LkV4ZWN1dGlvbkRhdGUpLkRheVN0YXJ0KSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdjogTHVyZS5EYXRlKHguRXhlY3V0aW9uRGF0ZSkuRm9ybWF0KCdERC5NTS5ZWVlZJylcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KS5maWx0ZXIoeCA9PiBvW3gua10gPyBmYWxzZSA6IChvW3gua10gPSB0cnVlKSlcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgY2w6ICdteS1yZXFzLWNsb3NlZC1kYXRlJyxcclxuICAgICAgICAgICAgICAgIGxpc3Q6IChvID0ge30pID0+IHRoaXMuQ29udHJvbGxlci5EYXRhLm1hcCh4ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoeC5EYXRlQ2xvc2VkKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgazogKGQgPT4gZC5nZXRGdWxsWWVhcigpICsgJy0nICsgZC5nZXRNb250aCgpICsgJy0nICsgZC5nZXREYXRlKCkpKEx1cmUuRGF0ZSh4LkRhdGVDbG9zZWQpLkRheVN0YXJ0KSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHY6IEx1cmUuRGF0ZSh4LkRhdGVDbG9zZWQpLkZvcm1hdCgnREQuTU0uWVlZWScpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXR1cm4ge2s6ICcnLCB2OiAnJ31cclxuICAgICAgICAgICAgICAgIH0pLmZpbHRlcih4ID0+IG9beC5rXSA/IGZhbHNlIDogKG9beC5rXSA9IHRydWUpKVxyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBjbDogJ215LXJlcXMtY3JlYXRlLWRhdGUnLFxyXG4gICAgICAgICAgICAgICAgbGlzdDogKG8gPSB7fSkgPT4gdGhpcy5Db250cm9sbGVyLkRhdGEubWFwKHggPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICBrOiAoZCA9PiBkLmdldEZ1bGxZZWFyKCkgKyAnLScgKyBkLmdldE1vbnRoKCkgKyAnLScgKyBkLmdldERhdGUoKSkoTHVyZS5EYXRlKHguRGF0ZUNyZWF0ZWQpLkRheVN0YXJ0KSxcclxuICAgICAgICAgICAgICAgICAgICB2OiBMdXJlLkRhdGUoeC5EYXRlQ3JlYXRlZCkuRm9ybWF0KCdERCBNTU1NIFlZWVknLCB0cnVlKVxyXG4gICAgICAgICAgICAgICAgfSkpLmZpbHRlcih4ID0+IG9beC5rXSA/IGZhbHNlIDogKG9beC5rXSA9IHRydWUpKVxyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBjbDogJ215LXJlcXMtcHJpb3JpdHknLCBsaXN0OiBbe2s6IDEsIHY6ICfQndC40LfQutC40LknfSxcclxuICAgICAgICAgICAgICAgICAgICB7azogMiwgdjogJ9Ch0YDQtdC00L3QuNC5J30sXHJcbiAgICAgICAgICAgICAgICAgICAge2s6IDMsIHY6ICfQktGL0YHQvtC60LjQuSd9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtrOiA0LCB2OiAn0KLQvtGH0L3QsNGPINC00LDRgtCwJ30sXHJcbiAgICAgICAgICAgICAgICBdLCByaWdodDogJ3RvcC1yaWdodCdcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgY2w6ICdteS1yZXFzLXN0YXR1cycsIGxpc3Q6IFt7azogMCwgdjogJ9Cd0L7QstCw0Y8nfSxcclxuICAgICAgICAgICAgICAgICAgICB7azogMSwgdjogJ9CSINGA0LDQsdC+0YLQtSd9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtrOiAyLCB2OiAn0JfQsNC60YDRi9GC0LAnfSxcclxuICAgICAgICAgICAgICAgICAgICB7azogMywgdjogJ9Ce0YLQutC70L7QvdC10L3QsCd9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtrOiA0LCB2OiAn0JLQvtC30LLRgNCw0YnQtdC90LAnfSxcclxuICAgICAgICAgICAgICAgIF0sIHJpZ2h0OiAndG9wLXJpZ2h0J1xyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBjbDogJ215LXJlcXMtYXBwbGljJyxcclxuICAgICAgICAgICAgICAgIGxpc3Q6IChvID0ge30pID0+IHRoaXMuQ29udHJvbGxlci5EYXRhLm1hcCh4ID0+ICh7XHJcbiAgICAgICAgICAgICAgICAgICAgazogeC5Mb2dpbklELFxyXG4gICAgICAgICAgICAgICAgICAgIHY6IHguVXNlci5OYW1lXHJcbiAgICAgICAgICAgICAgICB9KSkuZmlsdGVyKHggPT4gb1t4LmtdID8gZmFsc2UgOiAob1t4LmtdID0gdHJ1ZSkpXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIGNsOiAnbXktcmVxcy1yZXEtdHlwZScsXHJcbiAgICAgICAgICAgICAgICBsaXN0OiBbe2s6IDEsIHY6ICfQmNCiJ30sIHtrOiAyLCB2OiAn0JDQpdCUJ31dXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdO1xyXG4gICAgICAgIGZvciAobGV0IGUgb2YgZGF0YSlcclxuICAgICAgICAgICAgdGhpcy5GaWx0ZXJzLnB1c2goUmVxRmlsdGVyKHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IGAuJHtlLmNsfSAuZmllbGQtZmlsdGVyYCxcclxuICAgICAgICAgICAgICAgICAgICBEYXRhOiBlLmxpc3QsIEtleTogJ2snLCBWYWx1ZTogJ3YnLFxyXG4gICAgICAgICAgICAgICAgICAgIENvbnRyb2w6IHRoaXMuU2VsZWN0KGAuJHtlLmNsfSAudG9nZ2xlLWZpbHRlcmApLFxyXG4gICAgICAgICAgICAgICAgICAgIG9uT0s6IHIgPT4gdGhpcy5VcGRhdGVGaWx0ZXIociwgZS5jbCksXHJcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IGUucmlnaHRcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgbGV0IGlucCA9IHRoaXMuU2VsZWN0KCcucmVxLXNlYXJjaCAuc2VhcmNoLWlucHV0Jyk7XHJcbiAgICAgICAgaWYgKGlucCAmJiAhaW5wLmNsYXNzTGlzdC5jb250YWlucygnbm9uZScpKVxyXG4gICAgICAgICAgICBpbnAub25rZXl1cCA9IGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGUud2hpY2ggPT09IDI3KVxyXG4gICAgICAgICAgICAgICAgICAgIGlucC52YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coaW5wLnZhbHVlLCAnc2VhcmNoLXF1ZXJ5Jyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlVwZGF0ZUZpbHRlcihpbnAudmFsdWUsICdzZWFyY2gtcXVlcnknKTtcclxuICAgICAgICAgICAgfTtcclxuICAgIH1cclxufSk7XHJcbmxldCBSZXFGaWx0ZXIgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2ZpbHRlci1zZWxlY3Rvci9maWx0ZXItc2VsZWN0b3IuanMnKTtcclxucmVxdWlyZShcIi4vc2lkZWJhci9zaWRlYmFyLmpzXCIpO1xyXG4iLCJsZXQgUmVxRmlsdGVyID0gcmVxdWlyZSgnLi4vLi4vLi4vX2NvbW1vbi9maWx0ZXItc2VsZWN0b3IvZmlsdGVyLXNlbGVjdG9yLmpzJyk7XHJcbmNvbnN0IEQgPSByZXF1aXJlKFwiLi4vLi4vLi4vX2NvbW1vbi9kaWN0aW9uYXJ5XCIpO1xyXG5jb25zdCBMSUJSQVJZX0xJTUlUID0gNTtcclxubW9kdWxlLmV4cG9ydHMgPSAoKSA9PiAoe1xyXG4gICAgVGFyZ2V0OiAnLnRhcmdldC1tb2RlcmF0b3InLFxyXG4gICAgVHlwZTogJ2hlbHAtZGVzay1zaWRlYmFyJyxcclxuICAgIFBhcmVudDogSGVscERlc2suTXlSZXFzLFxyXG4gICAgVmlzaWJsZTogdHJ1ZSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwic2lkZWJhci1tb2RlcmF0b3JcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tbGVmdCBmbGV4MlwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4taGVhZGVyXCI+XHJcbiAgICAgICAgICAgIDxkaXY+0KPQp9CQ0KHQotCd0JjQmtCYINCa0J7QnNCQ0J3QlNCrPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdWx0aS1zZWxlY3Qgc2VsZWN0YWJsZVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBkYXRhLXRhYnR5cGU9XCJhbGxcIiBjbGFzcz1cIm11bHRpLXNlbC1yb3cgc2VsZWN0ZWRcIj7QktGB0LU8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgZGF0YS10YWJ0eXBlPVwiaXRcIiAgY2xhc3M9XCJtdWx0aS1zZWwtcm93XCI+0JjQojwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBkYXRhLXRhYnR5cGU9XCJhaGRcIiBjbGFzcz1cIm11bHRpLXNlbC1yb3dcIj7QkNCl0JQ8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdWx0aS1zZWxlY3RcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdWx0aS1zZWwtcm93IG11bHRpLWxpYlwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjbGljay1jb250clwiPtCf0L7QtNGA0LDQt9C00LXQu9C10L3QuNGPOiDQstGB0LUgKHt7JGcuTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0Lmxlbmd0aH19KTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaWItc2VsZWN0b3JcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uLWNvbnRlbnQgdGVjaC1saXN0IGZsZXgxXCI+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tbWlkZGxlIGZsZXgxXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbi1oZWFkZXJcIj7QodCV0JPQntCU0J3QrzwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwaWUtdG9kYXktc3RhdC13cmFwXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwaWUtdG9kYXktc3RhdFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZSB0b2RheS1zdGF0LWNoYXJ0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQtc3Vic2NyaXB0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Yi1pY29uIHBhcmFtLWljb25cIj48c3Bhbj57e1N0YXQuQ29tcGxldGV9fTwvc3Bhbj4vPHNwYW4+e3tTdGF0LkNvbXBsZXRlICsgU3RhdC5BY3RpdmUgKyBTdGF0LlJlamVjdGVkICsgU3RhdC5SZXR1cm5lZH19PC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWItY2FwdGlvblwiPtCy0YvQv9C+0LvQvdC10L3Qvjxicj7Qt9Cw0Y/QstC+0Lo8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtZXRlcnNcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIiBkYXRhLXR5cGU9XCJzdC0wXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgY2xvc2VkXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0LLRi9C/0L7Qu9C90LXQvdC+PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7U3RhdC5Db21wbGV0ZX19PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic3QtMVwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGFjdGl2ZVwiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtCyINGA0LDQsdC+0YLQtTwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1N0YXQuQWN0aXZlfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwhLS08ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic3QtMlwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG1pZFwiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC/0YDQvtGB0YDQvtGH0LXQvdC+PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7U3RhdC5Db21wbGV0ZX19PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic3QtM1wiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGhpZ2hcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7QvtGC0LvQvtC20LXQvdC+PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7U3RhdC5Db21wbGV0ZX19PC9kaXY+PC9kaXY+LS0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic3QtNFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIHJlamVjdGVkXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0L7RgtC60LvQvtC90LXQvdC+PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7U3RhdC5SZWplY3RlZH19PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic3QtNVwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIHJldHVybmVkXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0LLQvtC30LLRgNCw0YnQtdC90L48L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLXZhbHVlXCI+e3tTdGF0LlJldHVybmVkfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4tcmlnaHQgZmxleDNcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uLWhlYWRlclwiPlxyXG4gICAgICAgICAgICA8ZGl2PtCh0KLQkNCi0JjQodCi0JjQmtCQPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdWx0aS1zZWxlY3Qgbm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm11bHRpLXNlbC1yb3cgbXVsdGktbGliXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNsaWNrLWNvbnRyXCI+0J/QvtC00YDQsNC30LTQtdC70LXQvdC40Y86IDA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGliLXNlbGVjdG9yXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdWx0aS1zZWxlY3Qgc2VsZWN0YWJsZVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm11bHRpLXNlbC1yb3cgc2VsZWN0ZWRcIiBkYXRhLXR5cGU9XCJ0b2RheVwiPtCh0LXQs9C+0LTQvdGPPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibXVsdGktc2VsLXJvd1wiIGRhdGEtdHlwZT1cInllc3RlcmRheVwiPtCS0YfQtdGA0LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdWx0aS1zZWwtcm93XCIgZGF0YS10eXBlPVwid2Vla1wiPtCd0LXQtNC10LvRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm11bHRpLXNlbC1yb3dcIiBkYXRhLXR5cGU9XCJtb250aFwiPtCc0LXRgdGP0YY8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdWx0aS1zZWwtcm93XCIgZGF0YS10eXBlPVwicXVhcnRlclwiPtCa0LLQsNGA0YLQsNC7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibXVsdGktc2VsLXJvd1wiIGRhdGEtdHlwZT1cInllYXJcIj7Qk9C+0LQ8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdWx0aS1zZWxlY3Qgc2VsZWN0YWJsZVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm11bHRpLXNlbC1yb3cgZGF0ZS1zZWxlY3QtcmFuZ2VcIiBkYXRhLXR5cGU9XCJyYW5nZVwiPiYjMTI4MTk4OzI3LjEyLjIwMTggLSAyOC4wMS4yMDE5PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LWNoYXJ0IGZsZXgxIHZpcy1ub25lXCI+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInN0YXRzLWJvdHRvbVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3RhdC1yaW5nLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LXJpbmcgYWN0aXZlXCI+e3tUZWNoU3RhdEFjdGl2ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3RhdC1yaW5nLW5hbWVcIj7QkiDRgNCw0LHQvtGC0LU8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LXJpbmctd3JhcFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0YXQtcmluZyBjbG9zZWRcIj57e1RlY2hTdGF0Q2xvc2VkfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LXJpbmctbmFtZVwiPtCX0LDQutGA0YvRgtC+PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3RhdC1yaW5nLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LXJpbmcgcmVqZWN0ZWRcIj57e1RlY2hTdGF0UmVqZWN0ZWR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0YXQtcmluZy1uYW1lXCI+0J7RgtC60LvQvtC90LXQvdC+PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3RhdC1yaW5nLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LXJpbmcgcmV0dXJuZWRcIj57e1RlY2hTdGF0UmV0dXJuZWR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0YXQtcmluZy1uYW1lXCI+0JLQvtC30LLRgNCw0YnQtdC90L48L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgXHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YCxcclxuICAgIENvbnRyb2xsZXI6IHtcclxuICAgICAgICBUYXJnZXQ6ICcudGVjaC1saXN0JyxcclxuICAgICAgICBEYXRhOiAoKCk9PntcclxuICAgICAgICAgICAgbGV0IEVycm9yQ291bnQsIEVycm9yQ291bnRNYXggPSAwO1xyXG4gICAgICAgICAgICBsZXQgcmVzID0gTHVyZS5Vc2VyLkNhY2hlLlRlY2huaWNpYW5zLm1hcCh4ID0+IHtcclxuICAgICAgICAgICAgICAgIEVycm9yQ291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgbGV0IE9LQ291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgbGV0IGEgPSBMdXJlLkNsb25lKHgpO1xyXG4gICAgICAgICAgICAgICAgYS5MaWJzVmlldyA9ICcnO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLkxpYnJhcnlJRExpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgbGliID0gTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0RGljdFthLkxpYnJhcnlJRExpc3RbaV1dO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghbGliKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEVycm9yQ291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBPS0NvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGEuTGlic1ZpZXcgKz0gbGliLk5hbWVWaXN1YWwgfHwgbGliLk5hbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpID4gTElCUkFSWV9MSU1JVCkgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGEuTGlic1ZpZXcgKz0gJzsgJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKEVycm9yQ291bnQgPj0gYS5MaWJyYXJ5SURMaXN0Lmxlbmd0aCB8fCAoYS5MaWJzVmlldyA9PT0gJycpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IG51bSA9IGEuTGlicmFyeUlETGlzdC5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgYS5MaWJzVmlldyA9IG51bSArICcgJyArIChudW0gJSAxMCA9PT0gMSAmJiBudW0gJSAxMDAgIT09IDExID8gJ9Cx0LjQsdC70LjQvtGC0LXQutCwJyA6IChudW0gJSAxMCA+PSAyICYmIG51bSAlIDEwIDw9IDQgJiYgKG51bSAlIDEwMCA8IDExIHx8IG51bSAlIDEwMCA+IDE5KSkgPyAn0LHQuNCx0LvQuNC+0YLQtdC60LgnIDogJ9Cx0LjQsdC70LjQvtGC0LXQuicpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhLkxpYnJhcnlJRExpc3QubGVuZ3RoID4gTElCUkFSWV9MSU1JVClcclxuICAgICAgICAgICAgICAgICAgICBhLkxpYnNWaWV3ICs9ICcg0LggJyArIChhLkxpYnJhcnlJRExpc3QubGVuZ3RoIC0gT0tDb3VudCkgKyAnINC00YDRg9Cz0LjRhSc7XHJcblxyXG4gICAgICAgICAgICAgICAgYS5Jc0lUID0gYS5IZWxwUmVxdWVzdFR5cGVJRExpc3QuZmlsdGVyKG4gPT4gRC5IZWxwUmVxdWVzdFR5cGVJVExpc3QuaW5kZXhPZihuKSA+IC0xKS5sZW5ndGggPiA1O1xyXG4gICAgICAgICAgICAgICAgYS5Jc0FIRCA9IGEuSGVscFJlcXVlc3RUeXBlSURMaXN0LmZpbHRlcihuID0+IEQuSGVscFJlcXVlc3RUeXBlQUhETGlzdC5pbmRleE9mKG4pID4gLTEpLmxlbmd0aCA+IDI7XHJcbiAgICAgICAgICAgICAgICBpZiAoRXJyb3JDb3VudCA+IEVycm9yQ291bnRNYXgpIEVycm9yQ291bnRNYXggPSBFcnJvckNvdW50O1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGE7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpZiAoRXJyb3JDb3VudE1heCA+IDApIEx1cmUuU3lzdGVtLldhcm4oYNCS0J3QmNCc0JDQndCY0JUhINCc0J7QlNCV0KDQkNCi0J7QoCDQkdCV0Jcg0JHQmNCR0JvQmNCe0KLQldCaITxicj7QndC10LjQt9Cy0LXRgdGC0L3QviDQsdC40LHQu9C40L7RgtC10Lo6ICR7RXJyb3JDb3VudE1heH1gKTtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcztcclxuICAgICAgICB9KSgpLFxyXG4gICAgICAgIExpc3RFbGVtZW50OiBgPGRpdiBjbGFzcz1cInRlY2gtaW5zdCB7e0FIRFNob3d9fSB7e0lUU2hvd319IHt7T25seUFsbH19XCIgZGF0YS10ZWNoaWQ9XCJ7e0lEfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGVmdC1zaWRlIGZsZXgyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLXBob3RvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cImh0dHBzOi8vaS5lYmF5aW1nLmNvbS9pbWFnZXMvZy82RjRBQU9Td3I2cFo4d0pqL3MtbDMwMC5qcGdcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZWNoLWluZm9cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbmZvLW5hbWVcIj57e05hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImluZm8tcG9zaXRpb25cIj48c3Bhbj57e0lUQUhEfX08L3NwYW4+PHNwYW4+e3tQb3NpdGlvbn19PC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmlnaHQtc2lkZSBmbGV4NFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pnt7TGlic1ZpZXd9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGVjaC1hY3Rpb24tbGlzdCB7e05vbmVXaGVuTm90QWRtaW59fVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRlY2gtYWN0aW9uXCIgZGF0YS1hY3Rpb250eXBlPVwiZWRpdC1saWJzXCI+PGRpdiBjbGFzcz1cImNvbnRyb2xcIj7QmNC30LzQtdC90LjRgtGMINCx0LjQsdC70LjQvtGC0LXQutC4PC9kaXY+PGRpdiBjbGFzcz1cInRhcmdldFwiPjwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj58PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGVjaC1hY3Rpb25cIiBkYXRhLWFjdGlvbnR5cGU9XCJlZGl0LXR5cGVzXCI+PGRpdiBjbGFzcz1cImNvbnRyb2xcIj7RgtC40L/RiyDQt9Cw0Y/QstC+0Lo8L2Rpdj48ZGl2IGNsYXNzPVwidGFyZ2V0XCI+PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+YFxyXG4gICAgfSxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgLy8gVGVjaFN0YXROZXc6IDAsXHJcbiAgICAgICAgVGVjaFN0YXRBY3RpdmU6IDAsXHJcbiAgICAgICAgVGVjaFN0YXRDbG9zZWQ6IDAsXHJcbiAgICAgICAgVGVjaFN0YXRSZWplY3RlZDogMCxcclxuICAgICAgICBUZWNoU3RhdFJldHVybmVkOiAwLFxyXG4gICAgICAgIFN0YXQ6IHtcclxuICAgICAgICAgICAgQ29tcGxldGU6IDAsXHJcbiAgICAgICAgICAgIEFjdGl2ZTogMCxcclxuICAgICAgICAgICAgUmVqZWN0ZWQ6IDAsXHJcbiAgICAgICAgICAgIFJldHVybmVkOiAwXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBMaWJyYXJ5SURMaXN0OiB4ID0+IHguam9pbignLCAnKSxcclxuICAgICAgICBJVEFIRDogKHgsIHApID0+IChwLklzSVQgPyAn0JjQoicgOiAnJykgKyAoKHAuSXNJVCB8fCBwLklzQUhEKSA/ICcgJyA6ICcnKSArIChwLklzQUhEID8gJ9CQ0KXQlCcgOiAnJykgKyAoKHAuSXNJVCB8fCBwLklzQUhEKSA/ICcgfCAnIDogJycpLFxyXG4gICAgICAgIE9ubHlBbGw6ICh4LCBwKSA9PiAoIXAuSXNJVCAmJiAhcC5Jc0FIRCkgPyAnb25seS1hbGwnIDogJycsXHJcbiAgICAgICAgQUhEU2hvdzogKHgsIHApID0+IHAuSXNBSEQgPyAnYWhkLXNob3cnIDogJycsXHJcbiAgICAgICAgSVRTaG93OiAoeCwgcCkgPT4gcC5Jc0lUID8gJ2l0LXNob3cnIDogJycsXHJcbiAgICAgICAgTm9uZVdoZW5Ob3RBZG1pbjogKCkgPT4gTHVyZS5Vc2VyLlJvbGVzLmluZGV4T2YoRC5Sb2xlWydBZG1pblRlY2hNYW5hZ2VtZW50J10pID09PSAtMSA/ICdub25lJyA6ICcnXHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ2hhcnREYWlseVN0YXQuUmVmcmVzaCgpO1xyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5pc01vZGVyID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLlNlbGVjdGVkUmFuZ2VUeXBlID0gJ3RvZGF5JztcclxuXHJcbiAgICAgICAgbGV0IEdldENoYXJ0T3B0aW9ucyA9IGZ1bmN0aW9uICh0YXJnZXQsIHNlcmllcykge1xyXG4gICAgICAgICAgICBsZXQgcmVzID0ge1xyXG4gICAgICAgICAgICAgICAgVGFyZ2V0OiB0YXJnZXQsXHJcbiAgICAgICAgICAgICAgICBUeXBlOiAncGllJyxcclxuICAgICAgICAgICAgICAgIExhYmVsczoge1Zpc2libGU6IGZhbHNlfSxcclxuICAgICAgICAgICAgICAgIExlZ2VuZDoge1Zpc2libGU6IGZhbHNlfSxcclxuICAgICAgICAgICAgICAgIFNlcmllczogWyBdLFxyXG4gICAgICAgICAgICAgICAgR3JpZDoge1Zpc2libGU6IGZhbHNlLH0sXHJcbiAgICAgICAgICAgICAgICBUb29sdGlwOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgRm9ybWF0OiAoVGlwKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzdW0gPSBUaXAuRXBpc29kZS5EYXRhLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcGVyYyA9IE1hdGguZmxvb3Ioc3VtID09PSAwID8gMCA6IChUaXAuVmFsdWUgLyBzdW0pICogMTAwMDApIC8gMTAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYDxkaXYgY2xhc3M9XCJ0aXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLWJnXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpcC12YWx1ZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvdyBsLWZsZXhhLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLWljb25cIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICR7VGlwLkNvbG9yfVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLWxhYmVsXCI+JHtUaXAuTmFtZX06ICR7VGlwLlZhbHVlfSAoJHtwZXJjfSUpPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgQXhpc1k6IHtWaXNpYmxlOiBmYWxzZX1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgZm9yIChsZXQgZCBvZiBzZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgIGxldCBlID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIExhYmVsczoge0RhdGE6IGQuTGFiZWxzfSxcclxuICAgICAgICAgICAgICAgICAgICBEYXRhOiBkLkRhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgQ29sb3JzOiBkLkNvbG9ycyxcclxuICAgICAgICAgICAgICAgICAgICBUeXBlOiBkLlR5cGUgPyBkLlR5cGUgOiAncmluZycsXHJcbiAgICAgICAgICAgICAgICAgICAgQW5nbGVTdGFydDogLTkwXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgaWYgKGQuV2lkdGgpIGUuV2lkdGggPSBkLldpZHRoO1xyXG4gICAgICAgICAgICAgICAgaWYgKGQuTWFyZ2luKSBlLk1hcmdpbiA9IGQuTWFyZ2luO1xyXG4gICAgICAgICAgICAgICAgcmVzLlNlcmllcy5wdXNoKGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXM7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNoYXJ0RGFpbHlTdGF0ID0gbmV3IEx1cmUuQ2hhcnQoR2V0Q2hhcnRPcHRpb25zKFxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLnBpZS50b2RheS1zdGF0LWNoYXJ0JyksXHJcbiAgICAgICAgICAgIFt7XHJcbiAgICAgICAgICAgICAgICBMYWJlbHM6IFsn0JLRi9C/0L7Qu9C90LXQvdC+JywgJ9CSINGA0LDQsdC+0YLQtScsIC8qJ9Cf0YDQvtGB0YDQvtGH0LXQvdC+JywgJ9Ce0YLQu9C+0LbQtdC90L4nLCovICfQntGC0LrQu9C+0L3QtdC90L4nLCAn0JLQvtC30LLRgNCw0YnQtdC90L4nXSxcclxuICAgICAgICAgICAgICAgIERhdGE6IFsxLCAyLCAvKjMsIDQsKi8gNSwgNl0sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6IFsnIzUxQTFBNycsICcjNDE2RTc1JywgLyonIzc5Q0NEQScsICcjMjBBNEE0JywqLyAnIzRCNzc5OCcsICcjNDA2NjdGJ10sXHJcbiAgICAgICAgICAgICAgICBXaWR0aDogMzJcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbXCLQktGL0L/QvtC70L3QtdC90L5cIiwgXCLQntGB0YLQsNC70L7RgdGMXCJdLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogWzEwLCAyNV0sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6IFtcIiM1REE4NURcIiwgXCIjNEE4NDUzXCJdLFxyXG4gICAgICAgICAgICAgICAgV2lkdGg6IDIyLFxyXG4gICAgICAgICAgICAgICAgTWFyZ2luOiAzXHJcbiAgICAgICAgICAgIH1dXHJcbiAgICAgICAgKSk7XHJcblxyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlc2V0RGF0YSA9IGZ1bmN0aW9uICgpIHt9O1xyXG4gICAgICAgIHRoaXMuU2hvd1JlcXVlc3QgPSBmdW5jdGlvbiAoKSB7fTtcclxuXHJcbiAgICAgICAgbGV0IHRhcmcgPSB0aGlzLlNlbGVjdChgLmNvbHVtbi1sZWZ0IC5tdWx0aS1saWIgLmNsaWNrLWNvbnRyYCk7XHJcbiAgICAgICAgbGV0IHRhcmdTaW5nbGUgPSB0aGlzLlNlbGVjdChgLmNvbHVtbi1yaWdodCAubXVsdGktbGliIC5jbGljay1jb250cmApO1xyXG4gICAgICAgIHRoaXMuVGVjaENsaWNrID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgbGV0IG9sZCA9IHRoaXMuU2VsZWN0KCcudGVjaC1pbnN0LnNlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIGlmIChvbGQpIG9sZC5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICBlLmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIHRhcmdTaW5nbGUuaW5uZXJUZXh0ID0gJ9Cf0L7QtNGA0LDQt9C00LXQu9C10L3QuNGPOiDQstGB0LUnO1xyXG4gICAgICAgICAgICB0aGlzLlN0YXRDaGFydC5UYXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgndmlzLW5vbmUnKTtcclxuICAgICAgICAgICAgdGhpcy5TZWxlY3RlZFRlY2ggPSBwYXJzZUludChlLmRhdGFzZXRbJ3RlY2hpZCddKTtcclxuICAgICAgICAgICAgdGhpcy5SZWZyZXNoVGVjaERhdGEoKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLlJlZnJlc2hUZWNoRGF0YSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLlNlbGVjdGVkVGVjaCAmJiB0aGlzLlNlbGVjdGVkVGVjaCAhPT0gMCkgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLlN0YXRDaGFydC5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgbGV0IGRhdGVzID0gdGhpcy5HZXREYXRlUmFuZ2UoKTtcclxuICAgICAgICAgICAgYXBpLkhlbHBEZXNrX1RlY2huaWNpYW5TdGF0dXNlc0dldCh0aGlzLlNlbGVjdGVkVGVjaCwgZGF0ZXNbMF0sIGRhdGVzWzFdLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiByID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLlByb3RvLkRhdGEuVGVjaFN0YXROZXcgPSByWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ1RlY2hTdGF0QWN0aXZlJywgclsxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnVGVjaFN0YXRDbG9zZWQnLCByWzJdKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdUZWNoU3RhdFJlamVjdGVkJywgclszXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnVGVjaFN0YXRSZXR1cm5lZCcsIHJbNF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU3RhdENoYXJ0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGEgPSByO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLlN0YXRDaGFydC5BbHJlYWR5UmVkcmF3KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlN0YXRDaGFydC5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7dGhpcy5TdGF0Q2hhcnQuUmVkcmF3KCk7IHRoaXMuU3RhdENoYXJ0LkFscmVhZHlSZWRyYXcgPSB0cnVlO31cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKSA9PiB0aGlzLlN0YXRDaGFydC5Mb2FkLkhpZGUoKVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLkZpbHRlclRlY2hMaWJzID0gZnVuY3Rpb24gKGxpYnMpIHtcclxuICAgICAgICAgICAgdGFyZy5pbm5lclRleHQgPSAn0J/QvtC00YDQsNC30LTQtdC70LXQvdC40Y86ICcgKyAobGlicy5sZW5ndGggPT09IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5sZW5ndGggPyAn0LLRgdC1ICgnICsgbGlicy5sZW5ndGggKyAnKScgOiBsaWJzLmxlbmd0aCk7XHJcbiAgICAgICAgICAgIGZvciAobGV0IHRlY2ggb2YgdGhpcy5Db250cm9sbGVyLkRhdGFJdGVtcylcclxuICAgICAgICAgICAgICAgIGlmICh0ZWNoLkRhdGEuTGlicmFyeUlETGlzdC5maWx0ZXIobiA9PiBsaWJzLmluZGV4T2YobiArICcnKSAhPT0gLTEpLmxlbmd0aCA+IDAgJiYgbGlicy5sZW5ndGggIT09IDApXHJcbiAgICAgICAgICAgICAgICAgICAgdGVjaC5ET00uY2xhc3NMaXN0LnJlbW92ZSgnZmlsdGVyZWQnKTtcclxuICAgICAgICAgICAgICAgIGVsc2UgdGVjaC5ET00uY2xhc3NMaXN0LmFkZCgnZmlsdGVyZWQnKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGxpYnMpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5GaWx0ZXJUZWNoTGlic1NpbmdsZSA9IGZ1bmN0aW9uIChsaWJzKSB7XHJcbiAgICAgICAgICAgIHRhcmdTaW5nbGUuaW5uZXJUZXh0ID0gJ9Cf0L7QtNGA0LDQt9C00LXQu9C10L3QuNGPOiAnICsgbGlicy5sZW5ndGg7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlJlZnJlc2hDaGFydHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnREYWlseVN0YXQuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICBhcGkuSGVscERlc2tfVGVjaG5pY2lhblN0YXR1c2VzR2V0KC0xLCBMdXJlLkRhdGUoKS5EYXlTdGFydCwgTHVyZS5EYXRlKCkuRGF5RW5kLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiByID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0RGFpbHlTdGF0Lk9wdGlvbnMuU2VyaWVzWzBdLkRhdGEgPSBbclsxXSwgclsyXSwgclszXSwgcls0XV07XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydERhaWx5U3RhdC5PcHRpb25zLlNlcmllc1sxXS5EYXRhID0gW3JbMl0sIHJbM10gKyByWzRdICsgclsxXV07XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnU3RhdCcsIHtDb21wbGV0ZTogclsxXSwgQWN0aXZlOiByWzJdLCBSZWplY3RlZDogclszXSwgUmV0dXJuZWQ6IHJbNF19KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0RGFpbHlTdGF0LlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuR2V0RGF0ZVJhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgZGF0ZV9zdGFydCA9IEx1cmUuRGF0ZSgpO1xyXG4gICAgICAgICAgICBsZXQgZGF0ZV9lbmQgPSBMdXJlLkRhdGUoKTtcclxuICAgICAgICAgICAgc3dpdGNoICh0aGlzLlNlbGVjdGVkUmFuZ2VUeXBlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlICd0b2RheSc6XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZV9zdGFydCA9IGRhdGVfc3RhcnQuRGF5U3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQgPSBkYXRlX2VuZC5EYXlFbmQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICd5ZXN0ZXJkYXknOlxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQuQWRkRGF5cygtMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQuQWRkRGF5cygtMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZV9zdGFydCA9IGRhdGVfc3RhcnQuRGF5U3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQgPSBkYXRlX2VuZC5EYXlFbmQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICd3ZWVrJzpcclxuICAgICAgICAgICAgICAgICAgICBkYXRlX3N0YXJ0ID0gZGF0ZV9zdGFydC5XZWVrU3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQgPSBkYXRlX2VuZC5XZWVrRW5kO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnbW9udGgnOlxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQgPSBkYXRlX3N0YXJ0Lk1vbnRoU3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQgPSBkYXRlX2VuZC5Nb250aEVuZDtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ3F1YXJ0ZXInOlxyXG4gICAgICAgICAgICAgICAgICAgIGxldCBtb250aDtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgY20gPSBkYXRlX3N0YXJ0LkRhdGUuZ2V0TW9udGgoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY20gPD0gMilcclxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGggPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNtID49IDMgJiYgY20gPD0gNSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGggPSAzO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNtID49IDYgJiYgY20gPD0gOSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGggPSA2O1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgbW9udGggPSA5O1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQgPSBMdXJlLkRhdGUobmV3IERhdGUoZGF0ZV9zdGFydC5EYXRlLmdldEZ1bGxZZWFyKCksIG1vbnRoKSkuTW9udGhTdGFydDtcclxuICAgICAgICAgICAgICAgICAgICBkYXRlX2VuZCA9IEx1cmUuRGF0ZShuZXcgRGF0ZShkYXRlX2VuZC5EYXRlLmdldEZ1bGxZZWFyKCksIG1vbnRoICsgMikpLk1vbnRoRW5kO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAneWVhcic6XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0ZV9zdGFydCA9IG5ldyBEYXRlKGRhdGVfc3RhcnQuRGF0ZS5nZXRGdWxsWWVhcigpLCAwLCAxLCAwLCAwLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICBkYXRlX2VuZCA9IG5ldyBEYXRlKGRhdGVfZW5kLkRhdGUuZ2V0RnVsbFllYXIoKSwgMTEsIDMxLCAyMywgNTksIDU5KTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ3JhbmdlJzpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5EYXRlUGlja2VyLkRhdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIFtkYXRlX3N0YXJ0LCBkYXRlX2VuZF07XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNoYW5nZVJhbmdlID0gZnVuY3Rpb24gKHR5cGUpIHtcclxuICAgICAgICAgICAgdGhpcy5TZWxlY3RlZFJhbmdlVHlwZSA9IHR5cGU7XHJcbiAgICAgICAgICAgIGlmICh0eXBlICE9PSAncmFuZ2UnKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5SZWZyZXNoVGVjaERhdGEoKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hhbmdlSVRBSERUYWIgPSBmdW5jdGlvbih0eXBlKSB7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHR5cGUpXHJcbiAgICAgICAgICAgIGxldCBjbCA9IHRoaXMuQ29udHJvbGxlci5UYXJnZXQuY2xhc3NMaXN0O1xyXG5cclxuICAgICAgICAgICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdhbGwnOlxyXG4gICAgICAgICAgICAgICAgICAgIGNsLnJlbW92ZSgndGFiLWFoZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNsLnJlbW92ZSgndGFiLWl0Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdpdCc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2wucmVtb3ZlKCd0YWItYWhkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgY2wuYWRkKCd0YWItaXQnKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2FoZCc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2wucmVtb3ZlKCd0YWItaXQnKTtcclxuICAgICAgICAgICAgICAgICAgICBjbC5hZGQoJ3RhYi1haGQnKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGxldCBhcnJFcXVhbHMgPSAoYXJyMSwgYXJyMikgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWFycjEgfHwgIWFycjIpIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgaWYgKGFycjEubGVuZ3RoICE9PSBhcnIyLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICBhcnIxLnNvcnQoKTtcclxuICAgICAgICAgICAgYXJyMi5zb3J0KCk7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyMS5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgICAgIC8qaWYgKHRoaXNbaV0gaW5zdGFuY2VvZiBBcnJheSAmJiBhcnIyW2ldIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIWFycjFbaV0uZXF1YWxzKGFycjJbaV0pKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgKi9cclxuICAgICAgICAgICAgICAgIGlmIChhcnIxW2ldICE9PSBhcnIyW2ldKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBsZXQgVHlwZVRlY2hFZGl0b3JzID0ge30sIExpYlRlY2hFZGl0b3JzID0ge307XHJcbiAgICAgICAgdGhpcy5UZWNoQWN0aW9uID0gZnVuY3Rpb24gKGVsZW0sIHR5cGUsIHRlY2hJRCkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0eXBlLCB0ZWNoSUQpO1xyXG4gICAgICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2VkaXQtdHlwZXMnOlxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghVHlwZVRlY2hFZGl0b3JzW3RlY2hJRF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgVHlwZVRlY2hFZGl0b3JzW3RlY2hJRF0gPSBSZXFGaWx0ZXIoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBMdXJlLlNlbGVjdCgnLnRhcmdldCcsIGVsZW0pLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0YTogKCkgPT4gT2JqZWN0LmVudHJpZXMoRC5IZWxwUmVxdWVzdFR5cGVEaWN0KS5tYXAoeCA9PiAoe0lEOiB4WzBdLCBOYW1lOiB4WzFdLCBDaGVjazogTHVyZS5Vc2VyLkNhY2hlLlRlY2huaWNpYW5EaWN0W3RlY2hJRF0uSGVscFJlcXVlc3RUeXBlSURMaXN0LmluZGV4T2YocGFyc2VJbnQoeFswXSkpICE9PSAtMX0pKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEtleTogJ0lEJywgVmFsdWU6ICdOYW1lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbnRyb2w6IEx1cmUuU2VsZWN0KCcuY29udHJvbCcsIGVsZW0pLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWxsU2VsZWN0b3I6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZDogJ2tleScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVcGRhdGVMaXN0TGl2ZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAndG9wLXJpZ2h0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uT0s6IHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIgPSByLm1hcChlID0+IHBhcnNlSW50KGUpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXJyRXF1YWxzKHIsIEx1cmUuVXNlci5DYWNoZS5UZWNobmljaWFuRGljdFt0ZWNoSURdLkhlbHBSZXF1ZXN0VHlwZUlETGlzdCkpIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcGkuQWRtaW5fVGVjaG5pY2lhbkVkaXRfSGVscFJlcXVlc3RUeXBlcygxLCB0ZWNoSUQsIHIpLnRoZW4oeCA9PiBMdXJlLlN5c3RlbS5TdWNjZXNzKCfQotC40L/RiyDQt9Cw0Y/QstC+0Log0Y3RgtC+0LPQviDRgtC10YXQvdC40LrQsCDQuNC30LzQtdC90LXQvdGLJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHIsIEx1cmUuVXNlci5DYWNoZS5UZWNobmljaWFuRGljdFt0ZWNoSURdLkhlbHBSZXF1ZXN0VHlwZUlETGlzdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBUeXBlVGVjaEVkaXRvcnNbdGVjaElEXS5TaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFR5cGVUZWNoRWRpdG9yc1t0ZWNoSURdLlJlc2V0U2VsZWN0aW9uKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdlZGl0LWxpYnMnOlxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghTGliVGVjaEVkaXRvcnNbdGVjaElEXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMaWJUZWNoRWRpdG9yc1t0ZWNoSURdID0gUmVxRmlsdGVyKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldDogTHVyZS5TZWxlY3QoJy50YXJnZXQnLCBlbGVtKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERhdGE6ICgpID0+IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5tYXAoeCA9PiAoe0lEOiB4LklELCBOYW1lOiB4Lk5hbWVWaXN1YWwgfHwgeC5OYW1lLCBDaGVjazogTHVyZS5Vc2VyLkNhY2hlLlRlY2huaWNpYW5EaWN0W3RlY2hJRF0uTGlicmFyeUlETGlzdC5pbmRleE9mKHguSUQpICE9PSAtMX0pKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEtleTogJ0lEJywgVmFsdWU6ICdOYW1lJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbnRyb2w6IEx1cmUuU2VsZWN0KCcuY29udHJvbCcsIGVsZW0pLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWxsU2VsZWN0b3I6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZDogJ2tleScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVcGRhdGVMaXN0TGl2ZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAndG9wLXJpZ2h0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uT0s6IHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIgPSByLm1hcChlID0+IHBhcnNlSW50KGUpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXJyRXF1YWxzKHIsIEx1cmUuVXNlci5DYWNoZS5UZWNobmljaWFuRGljdFt0ZWNoSURdLkxpYnJhcnlJRExpc3QpKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBpLkFkbWluX1RlY2huaWNpYW5FZGl0X0xpYnJhcmllcygxLCB0ZWNoSUQsIHIpLnRoZW4oeCA9PiBMdXJlLlN5c3RlbS5TdWNjZXNzKCfQkdC40LHQu9C40L7RgtC10LrQuCDRjdGC0L7Qs9C+INGC0LXRhdC90LjQutCwINC40LfQvNC10L3QtdC90YsnKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIExpYlRlY2hFZGl0b3JzW3RlY2hJRF0uU2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBMaWJUZWNoRWRpdG9yc1t0ZWNoSURdLlJlc2V0U2VsZWN0aW9uKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGxldCByc3AgPSB0aGlzLlBhcmVudC5TZWxlY3QoJy5yZXEtc3BhY2UnKTtcclxuICAgICAgICByc3AuY2xhc3NMaXN0LmFkZCgnZmxleC1jb2wnKTtcclxuICAgICAgICByc3AuY2xhc3NMaXN0LmFkZCgnbW9kZXItc3BhY2UnKTtcclxuICAgICAgICB0aGlzLlBhcmVudC5TZWxlY3QoJy50YXJnZXQtbW9kZXJhdG9yJykuc3R5bGUuaGVpZ2h0ID0gJzUwdmgnO1xyXG4gICAgICAgIHRoaXMuUGFyZW50LlNlbGVjdCgnLm5lZWQtc29sdXRpb24tbXktcmVxcycpLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTtcclxuICAgICAgICB0aGlzLlBhcmVudC5TZWxlY3QoJy5yZXEtc2VhcmNoJykuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO1xyXG5cclxuICAgICAgICBsZXQgYWN0aW9uID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcudGVjaC1pbnN0IC50ZWNoLWFjdGlvbiAuY29udHJvbCcsIGUgPT4ge1xyXG4gICAgICAgICAgICBhY3Rpb24gPSB0cnVlO1xyXG4gICAgICAgICAgICBsZXQgZWxlbSA9IGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50O1xyXG4gICAgICAgICAgICB0aGlzLlRlY2hBY3Rpb24oZWxlbSwgZWxlbS5kYXRhc2V0W1wiYWN0aW9udHlwZVwiXSwgZWxlbS5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5kYXRhc2V0W1widGVjaGlkXCJdKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy50ZWNoLWluc3QgLnRlY2gtYWN0aW9uIC50YXJnZXQnLCBlID0+IGFjdGlvbiA9IHRydWUpO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnRlY2gtaW5zdCcsIGUgPT4gYWN0aW9uID8gYWN0aW9uID0gZmFsc2UgOiB0aGlzLlRlY2hDbGljayhlLmN1cnJlbnRUYXJnZXQpKTtcclxuXHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29sdW1uLWxlZnQgLm11bHRpLXNlbGVjdC5zZWxlY3RhYmxlIC5tdWx0aS1zZWwtcm93JywgZSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBvbGQgPSB0aGlzLlNlbGVjdCgnLmNvbHVtbi1sZWZ0IC5tdWx0aS1zZWxlY3QgLm11bHRpLXNlbC1yb3cuc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldCAhPT0gb2xkKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAob2xkKSBvbGQuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgIGxldCBjbCA9IGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgICAgICAgICAgICAgICBjbC5hZGQoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNoYW5nZUlUQUhEVGFiKGUuY3VycmVudFRhcmdldC5kYXRhc2V0Wyd0YWJ0eXBlJ10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29sdW1uLXJpZ2h0IC5tdWx0aS1zZWxlY3Quc2VsZWN0YWJsZSAubXVsdGktc2VsLXJvdycsIGUgPT4ge1xyXG4gICAgICAgICAgICBsZXQgb2xkID0gdGhpcy5TZWxlY3QoJy5jb2x1bW4tcmlnaHQgLm11bHRpLXNlbGVjdCAubXVsdGktc2VsLXJvdy5zZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0ICE9PSBvbGQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChvbGQpIG9sZC5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGNsID0gZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdDtcclxuICAgICAgICAgICAgICAgIGNsLmFkZCgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hhbmdlUmFuZ2UoZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ3R5cGUnXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkRhdGVQaWNrZXIgPSBuZXcgTHVyZS5QZXJpb2RQaWNrZXIoe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IHRoaXMuU2VsZWN0KCcuZGF0ZS1zZWxlY3QtcmFuZ2UnKSxcclxuICAgICAgICAgICAgT25Db25maXJtOiAoKSA9PiB0aGlzLlJlZnJlc2hUZWNoRGF0YSgpXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5EYXRlUGlja2VyLlJlc2V0KCk7XHJcblxyXG5cclxuICAgICAgICB0aGlzLlN0YXRDaGFydCA9IG5ldyBMdXJlLkNoYXJ0KHtcclxuICAgICAgICAgICAgVGFyZ2V0OiB0aGlzLlNlbGVjdCgnLnN0YXQtY2hhcnQnKSxcclxuICAgICAgICAgICAgVHlwZTogJ0JhcicsXHJcbiAgICAgICAgICAgIExlZ2VuZDoge1Zpc2libGU6IGZhbHNlfSxcclxuICAgICAgICAgICAgR3JpZDoge1Zpc2libGU6IGZhbHNlfSxcclxuICAgICAgICAgICAgQXhpc1g6IHtcclxuICAgICAgICAgICAgICAgIFZpc2libGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBTdGF0aWMuSGVscFJlcXVlc3RTdGF0dXNzLm1hcCh4ID0+IHguTmFtZSlcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgU2VyaWVzOiBbe1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cf0L7RgdC10YnQsNC10LzQvtGB0YLRjCcsXHJcbiAgICAgICAgICAgICAgICBDb2xvcjogJyM1RTk4QTcnLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogWzEsIDIsIDMsIDQsIDVdXHJcbiAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICBUb29sdGlwOiB7XHJcbiAgICAgICAgICAgICAgICBGb3JtYXQ6IFRpcCA9PiAvKntjb25zb2xlLmxvZyhUaXApfSovXHJcbiAgICAgICAgICAgICAgICAgICBgPGRpdiBjbGFzcz1cInRpcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLWJnXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXAtdmFsdWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXAtaWNvblwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogJHtUaXAuRXBpc29kZS5Db2xvcn1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3dcIj4ke1RpcC5WYWx1ZVh9OiAke1RpcC5WYWx1ZVl9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5TdGF0Q2hhcnQuTG9hZCA9IG5ldyBMdXJlLkxvYWQoe1RhcmdldDogdGhpcy5TZWxlY3QoJy5zdGF0LWNoYXJ0Jyl9KTtcclxuXHJcbiAgICAgICAgUmVxRmlsdGVyKHtcclxuICAgICAgICAgICAgdGFyZ2V0OiBgLmNvbHVtbi1sZWZ0IC5saWItc2VsZWN0b3JgLFxyXG4gICAgICAgICAgICBEYXRhOiBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3QubWFwKHggPT4gKHtJRDogeC5JRCwgTmFtZTogeC5OYW1lVmlzdWFsIHx8IHguTmFtZX0pKSwgS2V5OiAnSUQnLCBWYWx1ZTogJ05hbWUnLFxyXG4gICAgICAgICAgICBDb250cm9sOiB0aGlzLlNlbGVjdChgLmNvbHVtbi1sZWZ0IC5tdWx0aS1saWIgLmNsaWNrLWNvbnRyYCksXHJcbiAgICAgICAgICAgIG9uT0s6IHIgPT4gdGhpcy5GaWx0ZXJUZWNoTGlicyhyKVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5waWUtdG9kYXktc3RhdC13cmFwIC5yb3cnLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ3R5cGUnXSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGRhdGEgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndHlwZSddLnNwbGl0KCctJyk7XHJcbiAgICAgICAgICAgICAgICBkYXRhWzFdID0gcGFyc2VJbnQoZGF0YVsxXSk7XHJcbiAgICAgICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LnRvZ2dsZSgnc2VyaWVzLWhpZGUnKTtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhWzBdID09PSAnc3QnKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnREYWlseVN0YXQuU2VyaWVTd2l0Y2goMCwgZGF0YVsxXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLypSZXFGaWx0ZXIoe1xyXG4gICAgICAgICAgICB0YXJnZXQ6IGAuY29sdW1uLXJpZ2h0IC5saWItc2VsZWN0b3JgLFxyXG4gICAgICAgICAgICBEYXRhOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgdCA9IHRoaXMuQ29udHJvbGxlci5EYXRhLmZpbmQoeCA9PiB4LklEID09PSB0aGlzLlNlbGVjdGVkVGVjaCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodClcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdC5MaWJyYXJ5SURMaXN0Lm1hcCh4ID0+ICh7SUQ6IHgsIE5hbWVWaXN1YWw6IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdERpY3RbeF0uTmFtZVZpc3VhbCB8fCAn0YXQtyd9KSk7XHJcbiAgICAgICAgICAgICAgICBlbHNlIHJldHVybiBbXTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgS2V5OiAnSUQnLCBWYWx1ZTogJ05hbWVWaXN1YWwnLFxyXG4gICAgICAgICAgICBVcGRhdGVMaXN0TGl2ZTogdHJ1ZSxcclxuICAgICAgICAgICAgQ29udHJvbDogdGhpcy5TZWxlY3QoYC5jb2x1bW4tcmlnaHQgLm11bHRpLWxpYmApLFxyXG4gICAgICAgICAgICBvbk9LOiByID0+IHRoaXMuRmlsdGVyVGVjaExpYnNTaW5nbGUocilcclxuICAgICAgICB9KTsqL1xyXG4gICAgfVxyXG59KTtcclxuIiwiY29uc3QgSGlzdG9yeVN1YnNjcmlwdGlvbiA9IHJlcXVpcmUoJy4uLy4uLy4uL19jb21tb24vaGlzdG9yeS1tYXN0ZXIvaGlzdG9yeS1zdWJzY3JpcHRpb24nKTtcclxuY29uc3QgSW5wdXRCb3ggPSByZXF1aXJlKFwiLi4vLi4vLi4vX2NvbW1vbi9pbnB1dC1ib3gvaW5wdXQtYm94XCIpO1xyXG5cclxuLy8gRC5Sb2xlRGljdFs4XSAgLSDQv9C+0LvRjNC30L7QstCw0YLQtdC70YxcclxuLy8gRC5Sb2xlRGljdFs5XSAgLSDRgtC10YXQvdC40LpcclxuLy8gRC5Sb2xlRGljdFsyM10gLSDQvNC+0LTQtdGA0LDRgtC+0YBcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBUYXJnZXQ6ICcucmVxLXNwYWNlJyxcclxuICAgIFR5cGU6ICdoZWxwLWRlc2stc2lkZWJhcicsXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuSGVscGRlc2tdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXY+PC9kaXY+YCxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBsZXQgVVJvbGUgPSAwO1xyXG4gICAgICAgIGlmIChMdXJlLlVzZXIuUm9sZXMuaW5kZXhPZig4KSAhPT0gLTEpIFVSb2xlID0gODtcclxuICAgICAgICBpZiAoTHVyZS5Vc2VyLlJvbGVzLmluZGV4T2YoOSkgIT09IC0xKSBVUm9sZSA9IDk7XHJcbiAgICAgICAgaWYgKEx1cmUuVXNlci5Sb2xlcy5pbmRleE9mKDIzKSAhPT0gLTEpIFVSb2xlID0gMjM7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coVVJvbGUpO1xyXG4gICAgICAgIGxldCBDb250ZW50ID0gJyc7XHJcbiAgICAgICAgbGV0IEFuaW1hdGlvbiA9IHt9O1xyXG4gICAgICAgIGxldCB0YXJnZXQgPSAnLnJlcS1zcGFjZSc7XHJcbiAgICAgICAgbGV0IGFmdGVyRnVuID0gZnVuY3Rpb24gKCkge307XHJcbiAgICAgICAgLy8gVVJvbGUgPSAyMzsgLy8g0J/QvtGC0L7QvCDRg9Cx0YDQsNGC0YxcclxuXHJcbiAgICAgICAgc3dpdGNoIChVUm9sZSkge1xyXG4gICAgICAgICAgICBjYXNlIDIzOlxyXG4gICAgICAgICAgICAgICAgLy8g0Y3RgtC+INCx0YPQtNC10YIg0LTQu9GPINC80L7QtNC10YDQsNGC0L7RgNCwXHJcbiAgICAgICAgICAgICAgICBIZWxwRGVzay5NeVJlcXMuU3BlY2lhbE1vZGVyU2lkZWJhciA9IG5ldyBMdXJlLkNvbnRlbnQoTW9kZXJWaWV3KCkpO1xyXG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gJy50YXJnZXQtbW9kZXJhdG9yJztcclxuICAgICAgICAgICAgICAgIEFuaW1hdGlvbiA9IHtTaG93OiAndmVydGljYWwtYW5pbWF0aW9uLXNob3ctbm8tYW5pbScsIEhpZGU6ICd2ZXJ0aWNhbC1hbmltYXRpb24taGlkZS1uby1hbmltJ307XHJcbiAgICAgICAgICAgICAgICAvLyByZXR1cm47XHJcbiAgICAgICAgICAgIGNhc2UgOTpcclxuICAgICAgICAgICAgICAgIC8vINGN0YLQviDQsdGD0LTQtdGCINC00LvRjyDRgtC10YXQvdC40LrQsFxyXG4gICAgICAgICAgICAgICAgQ29udGVudCA9IGA8ZGl2IGNsYXNzPVwic2lkZWJhci1jb250YWluZXJcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJyZXEtc2lkZWJhciB0ZWNoLXZpZXcgbC1jb2xcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicmVxLXNpZGViYXItbGlzdCBmaWVsZC1saXN0IGZsZXg0XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLWNhcmQgZmxleDJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlclwiPtCa0KDQkNCi0JrQkNCvINCY0J3QpNCe0KDQnNCQ0KbQmNCvPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZnVsbC1jYXJkLWRhdGFcIj57e05hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtY2FyZCBmbGV4M1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtaGVhZGVyXCI+0J/QntCU0KDQntCR0J3QntCVINCe0J/QmNCh0JDQndCY0JU8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmdWxsLWNhcmQtZGF0YVwiPjxkaXY+e3tEZXNjcmlwdGlvbn19PC9kaXY+PGRpdiBjbGFzcz1cInN0YXR1cy1oaXN0b3J5XCI+PGRpdiBjbGFzcz1cImhpcy1oZWFkXCI+0JjRgdGC0L7RgNC40Y8g0YHRgtCw0YLRg9GB0L7QsjwvZGl2PjxkaXYgY2xhc3M9XCJoaXMtZGF0YVwiPjwvZGl2PjwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtY2FyZCBmbGV4NFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtaGVhZGVyXCI+0KTQkNCZ0JvQqzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZ1bGwtY2FyZC1kYXRhIGZpbGUtY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggRmlsZXNMaXN0fX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVwbG9hZGluZy1maWxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmlsZS1pY29uXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmlsZS1wYXJhbXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZS10eXBlXCI+PHNwYW4gY2xhc3M9XCJmaWxlbmFtZVwiIHRpdGxlPVwie3tOYW1lRnVsbH19XCI+e3tOYW1lU3VifX08L3NwYW4+LjxzcGFuIGNsYXNzPVwiZmlsZXR5cGVcIj57e0ZpbGVUeXBlfX08L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlbmFtZS1yZW1vdmVcIj48c3BhbiBjbGFzcz1cImRvd25sb2FkXCIgZGF0YS1maWxlaWQ9XCJ7e0lEfX1cIj7QodC60LDRh9Cw0YLRjDwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhdC1maWxlcy1ibG9jayBmbGV4MlwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2YtdGFiIGNoYXQtdGFiIGFjdGl2ZVwiPtCn0JDQoiDQoSDQn9Ce0JvQrNCX0J7QktCQ0KLQldCb0JXQnDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVxLWNoYXRcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlcy1ib3hcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1hcmVhXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibWVzcy1pbnB1dFwiIHBsYWNlaG9sZGVyPVwi0JLQstC10LTQuNGC0LUg0YHQvtC+0LHRidC10L3QuNC1Li4uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibm9uZSBtZXNzLWZpbGVzLWF0dGFjaFwiIHR5cGU9XCJmaWxlXCIgbXVsdGlwbGUgbmFtZT1cIm1lc3NhZ2UtZmlsZXNcIiBpZD1cIm1lc3MtZmlsZXMtYXR0YWNoXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiZmlsZXMtYXR0YWNoLWxhYmVsXCIgdGl0bGU9XCLQn9GA0LjQutGA0LXQv9C40YLRjCDRhNCw0LnQu9GLXCIgZm9yPVwibWVzcy1maWxlcy1hdHRhY2hcIj4mIzEyODIwNjs8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJzZW5kLW1lc3MgbC1idXR0b25cIiAgdGl0bGU9XCLQntGC0L/RgNCw0LLQuNGC0YxcIj4+PjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtc2lkZWJhci1jb250cm9sIGZsZXgxXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWluZm8gZmxleDNcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlclwiPtCY0J3QpNCe0KDQnNCQ0KbQmNCvINCeINCf0J7Qm9Cs0JfQntCS0JDQotCV0JvQlTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItbmFtZSBzdHJvbmdcIj57e1VzZXIuTmFtZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1wb3NpdGlvblwiPnt7VXNlci5Qb3NpdGlvbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1hZGRpdGlvbmFsXCI+0KLQtdC70LXRhNC+0L06IDxzcGFuPnt7VXNlci5QaG9uZX19PC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItYWRkaXRpb25hbFwiPkVtYWlsOiA8c3Bhbj57e1VzZXIuRW1haWx9fTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWFkZGl0aW9uYWxcIj4mbmJzcDs8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWFkZGl0aW9uYWxcIj7Qn9C+0LTRgNCw0LfQtNC10LvQtdC90LjQtTogPHNwYW4+e3tMaWJyYXJ5SUR9fTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWFkZGl0aW9uYWxcIj7QkNC00YDQtdGBOiA8c3Bhbj57e0xpYnJhcnlBZGRyZXNzfX08L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlja2V0LWV4ZWN1dGlvbiBmbGV4NCBmbGV4LWNvbFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtaGVhZGVyXCI+0JjQodCf0J7Qm9Cd0JXQndCY0JU8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbXNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1hZGRpdGlvbmFsXCI+0J/RgNC40L7RgNC40YLQtdGCOiA8c3Bhbj57e1ByaW9yaXR5SUR9fTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1hZGRpdGlvbmFsXCI+0JTQsNGC0LAg0L/QvtGB0YLRg9C/0LvQtdC90LjRjzogPHNwYW4+e3tEYXRlQ3JlYXRlZH19PC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWFkZGl0aW9uYWxcIj7QodGA0L7QuiDQuNGB0L/QvtC70L3QtdC90LjRjzogPHNwYW4+e3tFeGVjdXRpb25EYXRlfX08L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b25zIGZsZXgxXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdj57e1N0YXR1c0lEQnV0dG9ufX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2Pnt7RGlzYWJsZWRPbkFjY2VwdH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdj48YnV0dG9uIGNsYXNzPVwibC1idXR0b24gY2hhbmdlLWV4ZWMtdGltZVwiPtCY0JfQnNCV0J3QmNCi0Kwg0KHQoNCe0Jog0JjQodCf0J7Qm9Cd0JXQndCY0K88L2J1dHRvbj48ZGl2IGNsYXNzPVwibm9uZSBkYXRlLXRvLW1vdmVcIj48L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2PjxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBjbG9zZS10aWNrZXRcIj7Ql9CQ0JrQoNCr0KLQrCAo0JLQq9Cf0J7Qm9Cd0JXQndCeKTwvYnV0dG9uPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIHt7U3ByZWFkQnV0dG9ufX1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbnNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2PjxidXR0b24gY2xhc3M9XCJidXR0b24gYnV0dG9uMiBidG4tY2FuY2VsXCI+0JfQkNCa0KDQq9Ci0Kw8L2J1dHRvbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gO1xyXG4gICAgICAgICAgICAgICAgaWYgKFVSb2xlICE9PSAyMylcclxuICAgICAgICAgICAgICAgICAgICBBbmltYXRpb24gPSB7U2hvdzogJ3ZlcnRpY2FsLWFuaW1hdGlvbi1zaG93JywgSGlkZTogJ3ZlcnRpY2FsLWFuaW1hdGlvbi1oaWRlJ307XHJcbiAgICAgICAgICAgICAgICBhZnRlckZ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHRoaXMuUHJvdG87XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmwtYnV0dG9uLmFjY2VwdC10by13b3JrJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZSA9PiBhcGkuSGVscERlc2tfUmVxdWVzdEFwcGx5KHRoaXMuY3VyclJlcUlEKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUGFyZW50LkNoYW5nZVN0YXR1cyh0aGlzLmN1cnJSZXFJRCwgMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2Vzcygn0JfQsNGP0LLQutCwINC/0YDQuNC90Y/RgtCwINCyINGA0LDQsdC+0YLRgycpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBvbkNoYW5nZVN0YXR1cyA9IChlbGVtLCBzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjYXB0aW9uID0gJ9CY0LfQvC4g0YHRgtCw0YLRg9GBJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMgPT09IDIpIGNhcHRpb24gKz0gJzog0JfQsNC60YDRi9GC0YwnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocyA9PT0gMykgY2FwdGlvbiArPSAnOiDQntGC0LrQu9C+0L3QuNGC0YwnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBJbnB1dEJveC5SdW4oZWxlbSwgJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21tZW50ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKGVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzID09PSAyKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcGkuSGVscERlc2tfUmVxdWVzdEZpbmlzaCh0aGlzLmN1cnJSZXFJRCwgY29tbWVudCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlbjogciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHIgPT09IC0xKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93RXJyb3IoJ9Cn0YLQvi3RgtC+INC/0L7RiNC70L4g0L3QtSDRgtCw0LonKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHRoaXMuUGFyZW50LkNoYW5nZVN0YXR1cyh0aGlzLmN1cnJSZXFJRCwgcyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UoZWxlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuUGFyZW50LlNwZWNpYWxNb2RlclNpZGViYXIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUGFyZW50LlNwZWNpYWxNb2RlclNpZGViYXIuU2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2Vzcygn0JfQsNGP0LLQutCwINC30LDQutGA0YvRgtCwJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzID09PSAzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcGkuSGVscERlc2tfUmVxdWVzdFJlamVjdCh0aGlzLmN1cnJSZXFJRCwgY29tbWVudCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlbjogciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHIgPT09IC0yKSBMdXJlLlN5c3RlbS5TaG93RXJyb3IoJ9CX0LDRj9Cy0LrQsCDRg9C20LUg0L/RgNC40L3Rj9GC0LAg0LIg0YDQsNCx0L7RgtGDLCDQtdC1INC90LXQu9GM0LfRjyDQvtGC0LrQu9C+0L3QuNGC0YwnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChyID09PSAtMSkgTHVyZS5TeXN0ZW0uU2hvd0Vycm9yKCfQp9GC0L4t0YLQviDQv9C+0YjQu9C+INC90LUg0YLQsNC6Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB0aGlzLlBhcmVudC5DaGFuZ2VTdGF0dXModGhpcy5jdXJyUmVxSUQsIHMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlN1Y2Nlc3MoJ9CX0LDRj9Cy0LrQsCDQvtGC0LrQu9C+0L3QtdC90LAnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2FwdGlvbjogY2FwdGlvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUZXh0QXJlYTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5sLWJ1dHRvbi5yZWplY3QnLCAoKSA9PiBvbkNoYW5nZVN0YXR1cyh0aGlzLlNlbGVjdCgnLmwtYnV0dG9uLnJlamVjdCcpLCAzKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGIyID0gdGhpcy5TZWxlY3QoJy5sLWJ1dHRvbi5jbG9zZS10aWNrZXQnKTtcclxuICAgICAgICAgICAgICAgICAgICBiMi5vbmNsaWNrID0gKCkgPT4gb25DaGFuZ2VTdGF0dXMoYjIsIDIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdCgnLmwtYnV0dG9uLmNoYW5nZS1leGVjLXRpbWUnKS5vbmNsaWNrID0gKCkgPT4ge3RoaXMuRXhlY1RpbWVQaWNrZXIuRGF0ZSA9IEx1cmUuRGF0ZShwLkRhdGEuRXhlY3V0aW9uRGF0ZSB8fCBuZXcgRGF0ZSk7IHRoaXMuRXhlY1RpbWVQaWNrZXIuU2hvdygpfTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkV4ZWNUaW1lUGlja2VyID0gbmV3IEx1cmUuUGVyaW9kUGlja2VyKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGFyZ2V0OiB0aGlzLlNlbGVjdCgnLmRhdGUtdG8tbW92ZScpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBOb1JhbmdlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRlVGFyZ2V0OiBMdXJlLkRhdGUoKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQXV0b0NvbmZpcm06IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9uQ29uZmlybTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYXRlLnNldEhvdXJzKDE0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwaS5IZWxwRGVza19SZXF1ZXN0RWRpdF9FeGVjdXRpb25EYXRlKHAuRGF0YS5SZXFJRCwgdGhpcy5EYXRlKS50aGVuKHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuUGFyZW50LkNoYW5nZVJvd0RhdGEoc2VsZi5Sb3dJRCwgJ0V4ZWN1dGlvbkRhdGUnLCBMdXJlLkRhdGUodGhpcy5EYXRlKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcC5TZXRQcm9wZXJ0eSgnRXhlY3V0aW9uRGF0ZScsIEx1cmUuRGF0ZSh0aGlzLkRhdGUpLkRhdGVDcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uU3VjY2Vzcygn0KHRgNC+0Log0LjRgdC/0L7Qu9C90LXQvdC40Y8g0LjQt9C80LXQvdC10L0nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGxldCByc3AgPSB0aGlzLlBhcmVudC5TZWxlY3QoJy5yZXEtc3BhY2UnKTtcclxuICAgICAgICAgICAgICAgICAgICByc3AuY2xhc3NMaXN0LmFkZCgnZmxleC1jb2wnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoVVJvbGUgIT09IDIzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByc3AuY2xhc3NMaXN0LmFkZCgndGVjaC1zcGFjZScpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5zdGF0dXMtaGlzdG9yeScsIGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBlLmN1cnJlbnRUYXJnZXQuaW5uZXJIVE1MID0gJ9Ca0L7QvNC80LXQvdGCJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBpLkhlbHBEZXNrX1JlcXVlc3RTdGF0dXNDaGFuZ2VzR2V0KHAuRGF0YS5SZXFJRCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlbjogciA9PiB0aGlzLkhpc0RhdGEuaW5uZXJIVE1MID0gci5sZW5ndGggPiAwID8gci5tYXAoeCA9PiBgPGRpdj4ke0x1cmUuRGF0ZSh4LkRhdGVDcmVhdGVkKS5Gb3JtYXQoJ0RELk1NLllZWVknKX0gLT4gJHtELkhlbHBSZXF1ZXN0U3RhdHVzRGljdFt4LlN0YXR1c0lEXX06ICR7eC5Db21tZW50fTwvZGl2PmApLmpvaW4oJycpIDogJzxkaXY+0J3QtdGCINC40LfQvNC10L3QtdC90LjQuTwvZGl2PidcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuc3ByZWFkLXRpY2tldCcsIGUgPT4gdGhpcy5TcHJlYWRUaWNrZXRUb1RlY2hzKCkpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDg6XHJcbiAgICAgICAgICAgICAgICAvLyDRjdGC0L4g0LHRg9C00LXRgiDQtNC70Y8g0L7QsdGL0YfQvdC+0LPQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cclxuICAgICAgICAgICAgICAgIENvbnRlbnQgPSBgPGRpdiBzdHlsZT1cImRpc3BsYXk6IGZsZXhcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicmVxLXNpZGViYXIgbC1jb2xcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRcIj5cclxuICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cImgyXCI+0JjQvdGG0LjQtNC10L3RgiDihJZ7e1JlcUlEfX08L2gyPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlcS1zaWRlYmFyLWxpc3QgZmllbGQtbGlzdCBmbGV4MVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlclwiPtCa0KDQkNCi0JrQkNCvINCY0J3QpNCe0KDQnNCQ0KbQmNCvPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZGF0YS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtbmFtZVwiPtCi0LXQvNCwPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+e3tOYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1kYXRhLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1uYW1lXCI+0JTQsNGC0LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtdmFsdWVcIj57e0RhdGVDcmVhdGVkfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1kYXRhLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1uYW1lXCI+0J/RgNC40L7RgNC40YLQtdGCPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+e3tQcmlvcml0eUlEfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlclwiPtCf0J7QlNCg0J7QkdCd0J7QlSDQntCf0JjQodCQ0J3QmNCVPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZ1bGwtY2FyZC1kYXRhXCI+e3tEZXNjcmlwdGlvbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLWNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1oZWFkZXJcIj7QmNCh0J/QntCb0J3QldCd0JjQlTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWRhdGEtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLW5hbWVcIj7QodGC0LDRgtGD0YE8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtdmFsdWVcIj57e1N0YXR1c0lEfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1kYXRhLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1uYW1lXCI+0KHRgNC+0Log0LjRgdC/0L7Qu9C90LXQvdC40Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtdmFsdWVcIj57e0V4ZWN1dGlvbkRhdGV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWRhdGEtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLW5hbWVcIj7QmNGB0L/QvtC70L3QuNGC0LXQu9GMPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+e3tUZWNobmljaWFuSUR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXQtZmlsZXMtYmxvY2tcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNmLXRhYiBjaGF0LXRhYiBhY3RpdmVcIj7Qp9CQ0KIg0KEg0JjQodCf0J7Qm9Cd0JjQotCV0JvQldCcPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNmLXRhYiBmaWxlcy10YWJcIj7QpNCQ0JnQm9CrPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtY2hhdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlcy1ib3hcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtYXJlYVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJtZXNzLWlucHV0XCIgcGxhY2Vob2xkZXI9XCLQktCy0LXQtNC40YLQtSDRgdC+0L7QsdGJ0LXQvdC40LUuLi5cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibm9uZSBtZXNzLWZpbGVzLWF0dGFjaFwiIHR5cGU9XCJmaWxlXCIgbXVsdGlwbGUgbmFtZT1cIm1lc3NhZ2UtZmlsZXNcIiBpZD1cIm1lc3MtZmlsZXMtYXR0YWNoXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImZpbGVzLWF0dGFjaC1sYWJlbFwiIHRpdGxlPVwi0J/RgNC40LrRgNC10L/QuNGC0Ywg0YTQsNC50LvRi1wiIGZvcj1cIm1lc3MtZmlsZXMtYXR0YWNoXCI+JiMxMjgyMDY7PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInNlbmQtbWVzcyBsLWJ1dHRvblwiICB0aXRsZT1cItCe0YLQv9GA0LDQstC40YLRjFwiPj4+PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtZmlsZXMgbm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggRmlsZXNMaXN0fX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInVwbG9hZGluZy1maWxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmlsZS1pY29uXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmlsZS1wYXJhbXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZS10eXBlXCI+PHNwYW4gY2xhc3M9XCJmaWxlbmFtZVwiIHRpdGxlPVwie3tOYW1lRnVsbH19XCI+e3tOYW1lU3VifX08L3NwYW4+LjxzcGFuIGNsYXNzPVwiZmlsZXR5cGVcIj57e0ZpbGVUeXBlfX08L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlbmFtZS1yZW1vdmVcIj48c3BhbiBjbGFzcz1cImRvd25sb2FkXCIgZGF0YS1maWxlaWQ9XCJ7e0lEfX1cIj7QodC60LDRh9Cw0YLRjDwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvb3RcIj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gYnV0dG9uMiBidG4tY2FuY2VsXCI+0JfQkNCa0KDQq9Ci0Kw8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gYnRuLW5vdC1jb21wbGV0ZSB7e1N0YXR1c0lEQ2xhc3N9fVwiPtCX0JDQr9CS0JrQkCDQndCVINCS0KvQn9Ce0JvQndCV0J3QkDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PmA7XHJcbiAgICAgICAgICAgICAgICBBbmltYXRpb24gPSB7U2hvdzogJ2FuaW1hdGlvbi1zaG93JywgSGlkZTogJ2FuaW1hdGlvbi1oaWRlJ307XHJcbiAgICAgICAgICAgICAgICBhZnRlckZ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcnNwID0gdGhpcy5QYXJlbnQuU2VsZWN0KCcucmVxLXNwYWNlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcnNwLmNsYXNzTGlzdC5hZGQoJ3VzZXItc3BhY2UnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IE5vdENvbXBsZXRlID0gKGVsZW0pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgSW5wdXRCb3guUnVuKGVsZW0sICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coeCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBpLkhlbHBEZXNrX1JlcXVlc3RSZXR1cm4odGhpcy5jdXJyUmVxSUQsIHgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHIgPT09IC0yKSB7THVyZS5TeXN0ZW0uU2hvd0Vycm9yKCfQl9Cw0Y/QstC60LAg0LXRidC1INC90LUg0LfQsNC60YDRi9GC0LAnKTsgcmV0dXJuO31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyID09PSAtMSkge0x1cmUuU3lzdGVtLlNob3dFcnJvcign0KfRgtC+LdGC0L4g0L/QvtGI0LvQviDQvdC1INGC0LDQuicpOyByZXR1cm47fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJlbnQuQ2hhbmdlU3RhdHVzKHRoaXMuY3VyclJlcUlELCA0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuU3lzdGVtLlN1Y2Nlc3MoJ9CX0LDRj9Cy0LrQsCDQstC+0LfQstGA0LDRidC10L3QsCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtDYXB0aW9uOiAn0J/RgNC40YfQuNC90LAg0LLQvtC30LLRgNCw0YnQtdC90LjRjycsIFRleHRBcmVhOiB0cnVlfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYiA9IHRoaXMuU2VsZWN0KCcuYnRuLW5vdC1jb21wbGV0ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGIub25jbGljayA9IGUgPT4gTm90Q29tcGxldGUoYik7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChDb250ZW50Lmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xyXG4gICAgICAgIEhlbHBEZXNrLk15UmVxcy5TaWRlYmFyID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICAgICAgICAgIFRhcmdldDogdGFyZ2V0LFxyXG4gICAgICAgICAgICBUeXBlOiAnaGVscC1kZXNrLXNpZGViYXInLFxyXG4gICAgICAgICAgICBQYXJlbnQ6IEhlbHBEZXNrLk15UmVxcyxcclxuICAgICAgICAgICAgQ29udGVudDogQ29udGVudCxcclxuICAgICAgICAgICAgQW5pbWF0aW9uOiBBbmltYXRpb24sXHJcbiAgICAgICAgICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICAgICAgICAgIERhdGVDcmVhdGVkOiB4ID0+IEx1cmUuRGF0ZSh4KS5Gb3JtYXQoJ0RELk1NLllZWVknKSxcclxuICAgICAgICAgICAgICAgIEV4ZWN1dGlvbkRhdGU6ICh4LCBwKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlcztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAocC5Qcmlvcml0eUlEKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIEQuSGVscFJlcXVlc3RQcmlvcml0eS5Mb3c6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzID0gTHVyZS5EYXRlKHAuRGF0ZUNyZWF0ZWQpLkFkZEhvdXJzKDgpOyAvLyA4INGH0LDRgdC+0LJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgRC5IZWxwUmVxdWVzdFByaW9yaXR5Lk1pZDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgPSBMdXJlLkRhdGUocC5EYXRlQ3JlYXRlZCkuQWRkRGF5cygxKTsgLy8gMSDQtNC10L3RjFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBELkhlbHBSZXF1ZXN0UHJpb3JpdHkuSGlnaDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgPSBMdXJlLkRhdGUocC5EYXRlQ3JlYXRlZCkuQWRkRGF5cygzKTsgLy8gMyDQtNC90Y9cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgLypELkhlbHBSZXF1ZXN0UHJpb3JpdHlEaWN0LkV4YWN0RGF0ZSovOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAn0J3QtSDRg9GB0YLQsNC90L7QstC70LXQvdCwJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmVzID0gTHVyZS5EYXRlKHgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuRm9ybWF0KCdERC5NTS5ZWVlZIEhIOm1tJyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgUHJpb3JpdHlJRDogeCA9PiBELkhlbHBSZXF1ZXN0UHJpb3JpdHlEaWN0W3hdLFxyXG4gICAgICAgICAgICAgICAgU3RhdHVzSUQ6IHggPT4gKHsnMCc6ICfQndC+0LLQsNGPJywgJzEnOiAn0JIg0YDQsNCx0L7RgtC1JywgJzInOiAn0JfQsNC60YDRi9GC0LAnLCAnMyc6ICfQntGC0LrQu9C+0L3QtdC90LAnLCAnNCc6ICfQktC+0LfQstGA0LDRidC10L3QsCd9W3hdIHx8ICc/Pz8nKSxcclxuICAgICAgICAgICAgICAgIFRlY2huaWNpYW5JRDogeCA9PiAoTHVyZS5Vc2VyLkNhY2hlLlRlY2huaWNpYW5EaWN0W3hdIHx8IHtOYW1lOiAn0J3QtSDQvdCw0LfQvdCw0YfQtdC9J30pLk5hbWUsXHJcbiAgICAgICAgICAgICAgICBMaWJyYXJ5SUQ6IGlkID0+IChMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0W2lkXSB8fCB7TmFtZTogJyd9KS5OYW1lLFxyXG4gICAgICAgICAgICAgICAgTGlicmFyeUFkZHJlc3M6IChpZCwgcCkgPT4gKEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdERpY3RbcC5MaWJyYXJ5SURdIHx8IHtBZGRyZXNzOiAnJ30pLkFkZHJlc3MsXHJcbiAgICAgICAgICAgICAgICBTdGF0dXNJRENsYXNzOiAoeCwgcCkgPT4gcC5TdGF0dXNJRCA9PT0gMiA/ICcnIDogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgU3RhdHVzSURCdXR0b246ICh4LCBwKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHAuU3RhdHVzSUQgPT09IDApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGFjY2VwdC10by13b3JrXCIgc3R5bGU9XCJib3JkZXI6IDFweCBzb2xpZCAjMmU4M2I4XCI+0J/QoNCY0J3Qr9Ci0Kwg0JIg0KDQkNCR0J7QotCjPC9idXR0b24+JztcclxuICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGFjY2VwdGVkXCIgZGlzYWJsZWQ+0J/QoNCY0J3Qr9Ci0J4g0JIg0KDQkNCR0J7QotCjPC9idXR0b24+JztcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBEaXNhYmxlZE9uQWNjZXB0OiAoeCwgcCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwLlN0YXR1c0lEID09PSAwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJzxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiByZWplY3RcIiBzdHlsZT1cImJvcmRlcjogMXB4IHNvbGlkICNCODQ3NDFcIj7QntCi0JrQm9Ce0J3QmNCi0Kw8L2J1dHRvbj4nO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICc8YnV0dG9uIGNsYXNzPVwibC1idXR0b24gcmVqZWN0LW5vXCIgZGlzYWJsZWQ+0J7QotCa0JvQntCd0JjQotCsPC9idXR0b24+JztcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBTcHJlYWRCdXR0b246ICh4LCBwKSA9PiBVUm9sZSA9PT0gMjMgPyAnPGRpdj48YnV0dG9uIGNsYXNzPVwibC1idXR0b24gc3ByZWFkLXRpY2tldFwiPtCR0J7Qm9Cs0KjQlSDQotCV0KXQndCY0JrQntCSPC9idXR0b24+PGRpdiBjbGFzcz1cIm1vcmUtdGVjaG5pY3Mtc2VsZWN0XCI+PC9kaXY+PC9kaXY+JyA6ICcnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFByb3RvOiB7XHJcbiAgICAgICAgICAgICAgICBSZXFJRDogMCxcclxuICAgICAgICAgICAgICAgIFVzZXI6IHt9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEdldFNldDoge1xyXG4gICAgICAgICAgICAgICAgZ2V0IGN1cnJSZXFJRCgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5Qcm90by5EYXRhLlJlcUlEXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEhpZGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uLlVuc3Vic2NyaWJlKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5SZXNldFNlbGVjdGlvbigpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBTaG93OiBmdW5jdGlvbiAocGFyYW1zKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBcInBhcmFtPTEyMzQ1NlwiIC0g0LjQtyDQutC+0LzQsNC90LTQvdC+0Lkg0YHRgtGA0L7QutC4INC/0L7RgdC70LUg0L/QvtGB0LvQtdC00L3QtdC5IC8gW21haW4uaHRtbCNIZWxwRGVzay9NeVJlcXMvU2lkZWJhci9wYXJhbT0xMjNdXHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhwYXJhbXMpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TdWJzY3JpcHRpb24uU3Vic2NyaWJlKCk7XHJcbiAgICAgICAgICAgICAgICAvKiBpZiAoIXBhcmFtcyAmJiBwYXJhbXMgIT09ICcnKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICBpZiAocGFyYW1zID09PSAnJylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHBhcmFtcy5zcGxpdCgnPScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBuO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwWzBdID09PSAndGlja2V0JyAmJiAobiA9IHBhcnNlSW50KHBbMV0pKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJlbnQuUmVmcmVzaERhdGEobik7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB0aGlzLlBhcmVudC5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgICAgICAgICAgfSovXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLk1lc3NhZ2VDb250cm9sbGVyID0gbmV3IEx1cmUuQ29udHJvbGxlci5UZW1wbGF0b3Ioe1xyXG4gICAgICAgICAgICAgICAgICAgIFRhcmdldDogJy5yZXEtY2hhdCAubWVzc2FnZXMtYm94JyxcclxuICAgICAgICAgICAgICAgICAgICBEYXRhOiBbXSxcclxuICAgICAgICAgICAgICAgICAgICBMaXN0RWxlbWVudDogYFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtaW5zdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLXBob3RvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9pLmViYXlpbWcuY29tL2ltYWdlcy9nLzZGNEFBT1N3cjZwWjh3Smovcy1sMzAwLmpwZ1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWRhdGFcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWUtdGltZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ1c2VyLW5hbWVcIj57e0xvZ2luSUR9fTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGltZVwiXCI+e3tEYXRlfX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dFwiPnt7TWVzc2FnZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgICAgICAgICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXY+0KHQvtC+0LHRidC10L3QuNC5INC10YnQtSDQvdC10YIuLi48L2Rpdj5gLFxyXG4gICAgICAgICAgICAgICAgICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250ZW50LnNjcm9sbFRvKDAsIHRoaXMuQ29udGVudC5zY3JvbGxIZWlnaHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5IaXNEYXRhID0gdGhpcy5TZWxlY3QoJy5zdGF0dXMtaGlzdG9yeSAuaGlzLWRhdGEnKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHJmO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TaG93UmVxdWVzdCA9IGZ1bmN0aW9uIChyZXEsIHJvd0lEKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJmKSByZi5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Sb3dJRCA9IHJvd0lEO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ1JlcUlEJywgcmVxLklEKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLk1lc3NhZ2VDb250cm9sbGVyLlJlZnJlc2goW10pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXEuRmlsZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcS5GaWxlc0xpc3QgPSByZXEuRmlsZXMubWFwKGYgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5hbWUgPSBmLk5hbWUuc3BsaXQoJy4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmaWxldHlwZSA9IG5hbWUucG9wKCkudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgPSBuYW1lLmpvaW4oJy4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZUZ1bGw6IGYuTmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiBuYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZpbGVUeXBlOiBmaWxldHlwZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lU3ViOiBuYW1lLmxlbmd0aCA+IChVUm9sZSA9PT0gOSA/IDE1IDogMzApID8gbmFtZS5zdWJzdHIoMCwgKFVSb2xlID09PSA5ID8gMTUgOiAzMCkpICsgJy4uLicgOiBuYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElEOiBmLklEXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuUHJvdG8uRGF0YSwgcmVxKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2hNZXNzYWdlcygpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuU3RhcnRDaGVja2luZ01lc3NhZ2VzKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJlbnQuaXNSb3dTZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKFVSb2xlICE9PSA4KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhpc0RhdGEuaW5uZXJUZXh0ID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXEuVXNlciAmJiBVUm9sZSAhPT0gOClcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJlbnQuR2V0VXNlckluZm8odGhpcy5Qcm90by5EYXRhLlJlcUlELCByZXEuTG9naW5JRCkudGhlbih1ID0+IHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ1VzZXInLCB1KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TaG93KCk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5SZXNldERhdGEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZW5kTWVzc2FnZSA9IGZ1bmN0aW9uICh0ZXh0LCBmaWxlcyA9IFtdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dCA9IHRleHQudHJpbSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ZXh0ID09PSAnJykgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhcGkuSGVscERlc2tfUmVxdWVzdE1lc3NhZ2VBZGQodGhpcy5Qcm90by5EYXRhLlJlcUlELCB0ZXh0LCBmaWxlcylcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ociA9PiB0aGlzLlJlZnJlc2hNZXNzYWdlcyh0aGlzLkxhc3RNZXNJRCkpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuUmVmcmVzaE1lc3NhZ2VzID0gZnVuY3Rpb24gKGxhc3RJRCA9IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBpLkhlbHBEZXNrX1JlcXVlc3RNZXNzYWdlR2V0KHRoaXMuUHJvdG8uRGF0YS5SZXFJRCwgbGFzdElEKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbihhc3luYyBtZXNzID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZXNzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsYXN0SUQgPT09IC0xKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLk1lc3NhZ2VDb250cm9sbGVyLlJlZnJlc2goW10pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuTGFzdE1lc0lEID0gbWVzc1ttZXNzLmxlbmd0aCAtIDFdLklEO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgbSBvZiBtZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbS5EYXRlID0gTHVyZS5EYXRlKG0uRGF0ZUNyZWF0ZWQpLkZvcm1hdCgnREQuTU0uWVlZWSDQsiBISDptbScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtLkxvZ2luSUQgPT09IEx1cmUuVXNlci5JRClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbS5Mb2dpbklEID0gTHVyZS5Vc2VyLk5hbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBtLkxvZ2luSUQgPSAoYXdhaXQgdGhpcy5QYXJlbnQuR2V0VXNlckluZm8odGhpcy5Qcm90by5EYXRhLlJlcUlELCBtLkxvZ2luSUQpKS5OYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtLk1lc3NhZ2VGaWxlcyAhPT0gJycpIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBGaWxlc0FyciA9IEpTT04ucGFyc2UobS5NZXNzYWdlKS5GaWxlcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IEZpbGVJRHMgPSBtLk1lc3NhZ2VGaWxlcy5zcGxpdCgnLCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVzID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgRmlsZXNBcnIubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgKz0gYDxkaXYgY2xhc3M9XCJkb3dubG9hZFwiIGRhdGEtZmlsZWlkPVwiJHtGaWxlSURzW2ldfVwiPtCk0LDQudC7ICR7RmlsZXNBcnJbaV19ICjRgdC60LDRh9Cw0YLRjCk8L2Rpdj5gO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtLk1lc3NhZ2UgPSByZXM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsYXN0SUQgPT09IC0xKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuTWVzc2FnZUNvbnRyb2xsZXIuUmVmcmVzaChtZXNzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IG0gb2YgbWVzcylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5NZXNzYWdlQ29udHJvbGxlci5BZGQobSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5NZXNzYWdlQ29udHJvbGxlci5Db250ZW50LnNjcm9sbFRvKDAsIHRoaXMuTWVzc2FnZUNvbnRyb2xsZXIuQ29udGVudC5zY3JvbGxIZWlnaHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRGaWxlID0gZnVuY3Rpb24gKHJlcUlELCBmaWxlSUQpIHtcclxuICAgICAgICAgICAgICAgICAgICBhcGkuSGVscERlc2tfUmVxdWVzdEZpbGVHZXQocmVxSUQsIGZpbGVJRCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBUaGVuOiByID0+IEx1cmUuU2F2ZUJsb2IobmV3IEJsb2IoW25ldyBVaW50OEFycmF5KHIuRmlsZUJ5dGVzKV0pLCByLk5hbWUpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBFcnJvcjogY29uc29sZS5lcnJvcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgRmluYWxseTogKCkgPT4ge31cclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuTmV3TWVzc2FnZXMgPSBmdW5jdGlvbiAoYXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgbSBvZiBhcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG0uTWVzc2FnZVRleHQxID09PSAnJyAmJiBtLk1lc3NhZ2VUZXh0MiA9PT0gJycpIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLk1lc3NhZ2VDb250cm9sbGVyLkFkZChtKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5NZXNzYWdlQ29udHJvbGxlci5SZWZyZXNoKHRoaXMuTWVzc2FnZUNvbnRyb2xsZXIuRGF0YS5sZW5ndGggLSAxKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5NZXNzYWdlQ29udHJvbGxlci5Db250ZW50LnNjcm9sbFRvKDAsIHRoaXMuTWVzc2FnZUNvbnRyb2xsZXIuQ29udGVudC5zY3JvbGxIZWlnaHQpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuU3ByZWFkVGlja2V0VG9UZWNocyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghcmYpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmYgPSBSZXFGaWx0ZXIoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiAnLm1vcmUtdGVjaG5pY3Mtc2VsZWN0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERhdGE6IE9iamVjdC5lbnRyaWVzKEx1cmUuVXNlci5DYWNoZS5UZWNobmljaWFuRGljdCkubWFwKHggPT4geFsxXSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBLZXk6ICdJRCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWYWx1ZTogJ05hbWUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udHJvbDogdGhpcy5TZWxlY3QoJy5zcHJlYWQtdGlja2V0JyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBbGxTZWxlY3RvcjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uT0s6IGFzeW5jIHRlY2hzID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGVjaHMubGVuZ3RoIDwgMSkgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwID0gdGhpcy5Qcm90by5EYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZXMgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCB0ZWNoIG9mIHRlY2hzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMucHVzaChhd2FpdCBhcGkuSGVscERlc2tfUmVxdWVzdEFkZChwLkxpYnJhcnlJRCwgcC5IZWxwUmVxdWVzdFR5cGVJRCwgcC5OYW1lLCBwLkRlc2NyaXB0aW9uLCBwLlByaW9yaXR5SUQsIHAuRXhlY3V0aW9uRGF0ZSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXMubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNbaV0gIT09IC0xKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgYXBpLkhlbHBEZXNrX1JlcXVlc3RFZGl0X1RlY2huaWNpYW4ocmVzW2ldLypJRCovLCB0ZWNoc1tpXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJlbnQuUmVmcmVzaERhdGEoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TdWNjZXNzKCfQl9Cw0Y/QstC60LAg0L/RgNC+0LTRg9Cx0LvQuNGA0L7QstCw0L3QsCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmYuU2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZi5SZXNldFNlbGVjdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZWxlY3QoJy5idG4tY2FuY2VsJykub25jbGljayA9IGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLlBhcmVudC5TcGVjaWFsTW9kZXJTaWRlYmFyKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5TcGVjaWFsTW9kZXJTaWRlYmFyLlNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8qaWYgKCF0aGlzLk5lZWRSZWZyZXNoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5OZWVkUmVmcmVzaCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcmVudC5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSovXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgbGV0IFNNID0gdGhpcy5TZW5kTWVzc2FnZTtcclxuICAgICAgICAgICAgICAgIGxldCBpbnAgPSB0aGlzLlNlbGVjdCgnLm1lc3MtaW5wdXQnKTtcclxuICAgICAgICAgICAgICAgIGlucC5vbmtleXVwID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZS53aGljaCA9PT0gMTMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgU00odGhpcy52YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZWxlY3QoJ2J1dHRvbi5zZW5kLW1lc3MnKS5vbmNsaWNrID0gZSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgU00oaW5wLnZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICBpbnAudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgICAgICAgICBpbnAuZm9jdXMoKTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBsZXQgY2hhdFRhYiA9IHRoaXMuU2VsZWN0KCcuY2hhdC1maWxlcy1ibG9jayAucmVxLWNoYXQnKTtcclxuICAgICAgICAgICAgICAgIGxldCBmaWxlc1RhYiA9IHRoaXMuU2VsZWN0KCcuY2hhdC1maWxlcy1ibG9jayAucmVxLWZpbGVzJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdGVkQ0ZUYWIgPSB0aGlzLlNlbGVjdCgnLmNoYXQtZmlsZXMtYmxvY2sgLmNmLXRhYi5hY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmNoYXQtZmlsZXMtYmxvY2sgLmNmLXRhYicsIGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjbCA9IGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuU2VsZWN0ZWRDRlRhYiA9PT0gZS5jdXJyZW50VGFyZ2V0KSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TZWxlY3RlZENGVGFiLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWRDRlRhYiA9IGUuY3VycmVudFRhcmdldDtcclxuICAgICAgICAgICAgICAgICAgICBjbC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRUYWIuY2xhc3NMaXN0LnRvZ2dsZSgnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZpbGVzVGFiLmNsYXNzTGlzdC50b2dnbGUoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuZG93bmxvYWQnLCBlID0+IHRoaXMubG9hZEZpbGUodGhpcy5Qcm90by5EYXRhLlJlcUlELCBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsnZmlsZWlkJ10pKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uID0gbmV3IEhpc3RvcnlTdWJzY3JpcHRpb24oe1xyXG4gICAgICAgICAgICAgICAgICAgIE9uU3Vic2NyaWJlOiBhc3luYyBIaXN0TGlzdCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgSGlzdExpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBuYW1lID0gKGF3YWl0IHRoaXMuUGFyZW50LkdldFVzZXJJbmZvKHRoaXMuUHJvdG8uRGF0YS5SZXFJRCwgSGlzdExpc3RbaV0uTG9naW5JRCkpLk5hbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBIaXN0TGlzdFtpXSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEYXRlOiBMdXJlLkRhdGUoSGlzdExpc3RbaV0uRGF0ZUNyZWF0ZWQpLkZvcm1hdCgnREQuTU0uWVlZWSDQsiBISDptbScpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2luSUQ6IG5hbWUsIC8vLy8g0L/RgtC+0LDQu9C00L/QvtC00LDQvtC/0LLQsNC70LTQv9Cy0LBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZXNzYWdlOiBIaXN0TGlzdFtpXS5NZXNzYWdlVGV4dDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWVzc2FnZUZpbGVzOiBIaXN0TGlzdFtpXS5NZXNzYWdlVGV4dDJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5OZXdNZXNzYWdlcyhIaXN0TGlzdClcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIENvbmRpdGlvbjogaCA9PiBoLlR5cGVJRCA9PT0gRC5TdWJzY3JpYmVUeXBlLlN1cHBvcnRNZXNzYWdlQWRkICYmIGguTG9naW5JRCAhPT0gTHVyZS5Vc2VyLklEICYmIGguSXRlbUlEID09PSB0aGlzLmN1cnJSZXFJRFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBsZXQgbUZpbGVzID0gdGhpcy5TZWxlY3QoJyNtZXNzLWZpbGVzLWF0dGFjaCcpO1xyXG4gICAgICAgICAgICAgICAgbUZpbGVzLm9uY2hhbmdlID0gZSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cobUZpbGVzLmZpbGVzKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZmlsZXMgPSBBcnJheS5wcm90b3R5cGUubWFwLmNhbGwobUZpbGVzLmZpbGVzLCB4ID0+ICh7TmFtZTogeC5uYW1lLCBGaWxlOiB4fSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIEhlbHBEZXNrLk5ld1JlcS5SZXFTZW5kZXIuUmVxdWVzdFNlbmRGaWxlcyh0aGlzLmN1cnJSZXFJRCwgZmlsZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5QYXJlbnQuUGFyZW50Lk5ld1JlcS5SZXFTZW5kZXJcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ociA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLlNlbmRNZXNzYWdlKEpTT04uc3RyaW5naWZ5KHtGaWxlczogZmlsZXMubWFwKHggPT4geC5OYW1lKX0pLCByKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ociA9PiBtRmlsZXMudmFsdWUgPSAnJyk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgYWZ0ZXJGdW4uY2FsbCh0aGlzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59KTtcclxuXHJcbmxldCBNb2RlclZpZXcgPSByZXF1aXJlKCcuL21vZGVyLXNpZGViYXIuanMnKTtcclxubGV0IFJlcUZpbHRlciA9IHJlcXVpcmUoJy4uLy4uLy4uL19jb21tb24vZmlsdGVyLXNlbGVjdG9yL2ZpbHRlci1zZWxlY3Rvci5qcycpO1xyXG4iLCJIZWxwRGVzay5OZXdSZXEgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFRhcmdldDogJy5oZWxwLWRlc2stbmV3LXJlcXVlc3QnLFxyXG4gICAgVmlzaWJsZTogdHJ1ZSxcclxuICAgIFR5cGU6ICdoZWxwLWRlc2stY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWhlbHAtZGVzay1uZXctcmVxJ1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbiAgICAgICAgYDxkaXYgY2xhc3M9XCJuZXctcmVxdWVzdHMgbC1yZWxcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpYXJ5LWJyZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGlcIj5cclxuICAgICAgICAgICAgICAgICAgICDQn9C+0LTRgNCw0LfQtNC10LvQtdC90LjQtTogXHJcbiAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cImwtc2VsZWN0IHNlbGVjdCBoZWxwLWQgbGliLWxpc3RcIj48L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldHNcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0cyBsLXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQgZGlhcnktd2lkZ2V0IHJlZ2lzdGVyLXdpZGdldCAgbC10LWxpbmVcIiBkYXRhLWxpbmU9XCIwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC1oZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCe0KDQk9CQ0J3QmNCX0JDQptCY0K8g0KDQkNCR0J7Qp9CV0JPQniDQnNCV0KHQotCQPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiAgZGF0YS1wcm9ibGVtdHlwZT1cIjBcIiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInByb2JsZW0taWNvbiB3b3JrcGxhY2Utc2VydmljZVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWxpc3QtaGVhZFwiPtCi0LjQv9C+0LLRi9C1INC/0YDQvtCx0LvQtdC80Ys6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCS0L7RgdGB0YLQsNC90L7QstC70LXQvdC40LUg0L/QsNGA0L7Qu9C10Lk8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCj0YHRgtCw0L3QvtCy0LrQsC/Qv9C10YDQtdC80LXRidC10L3QuNC1INC60L7QvNC/0YzRjtGC0LXRgNC+0LI8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCj0YfQtdGC0L3Ri9C1INC30LDQv9C40YHQuCDQtNC70Y8g0L/RgNC40L3Rj9GC0YvRhSDRgNCw0LHQvtGC0L3QuNC60L7QsjwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJuZXctcmVxLWxpXCI+0KPQtNCw0LvQtdC90LjQtSDRg9GH0LXRgtC90YvRhSDQt9Cw0L/QuNGB0LXQuSDRg9Cy0L7Qu9C10L3QvdGL0YUg0YDQsNCx0L7RgtC90LjQutC+0LI8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCf0YDQuNC+0YHRgtCw0L3QvtCy0LrQsCDQtNC10LnRgdGC0LLQuNGPINGD0YfQtdGC0L3QvtC5INC30LDQv9C40YHQuCDRgNCw0LHQvtGC0L3QuNC60LA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cImJ1dHRvbi1wbHVzLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtY3V0dGVyIHJpZ2h0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cImJ1dHRvbi1wbHVzIGJ0bi1zd2l0Y2hlciBuZXctcmVxXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0IGRpYXJ5LXdpZGdldCByZWdpc3Rlci13aWRnZXQgIGwtdC1saW5lXCIgZGF0YS1saW5lPVwiMVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtdGl0bGUgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7QntCR0KHQm9Cj0JbQmNCS0JDQndCY0JUg0JrQntCc0J/QrNCu0KLQldCg0J7QkjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGRhdGEtcHJvYmxlbXR5cGU9XCIxXCIgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtdGV4dFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWljb24gcGMtc2VydmljZVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWxpc3QtaGVhZFwiPtCi0LjQv9C+0LLRi9C1INC/0YDQvtCx0LvQtdC80Ys6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCd0LUg0LLQutC70Y7Rh9Cw0LXRgtGB0Y8g0LrQvtC80L/RjNGO0YLQtdGAPC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QndC10YIg0LjQt9C+0LHRgNCw0LbQtdC90LjRjyDQvdCwINC80L7QvdC40YLQvtGA0LU8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCX0LDQvNC10L3QsCDQutC70LDQstC40LDRgtGD0YDRiy/QvNGL0YjQuDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJuZXctcmVxLWxpXCI+0J7Rh9C40YHRgtC60LAg0LrQvtC80L/RjNGO0YLQtdGA0LAg0L7RgiDQv9GL0LvQuDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJuZXctcmVxLWxpXCI+0J3QtSDRgNCw0LHQvtGC0LDQtdGCINC30LLRg9C6PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cy13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cImJ1dHRvbi1wbHVzLWN1dHRlciByaWdodFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cyBidG4tc3dpdGNoZXIgbmV3LXJlcVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldCBkaWFyeS13aWRnZXQgcmVnaXN0ZXItd2lkZ2V0ICBsLXQtbGluZVwiIGRhdGEtbGluZT1cIjJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC1jYXB0aW9uXCI+0J7QkdCh0JvQo9CW0JjQktCQ0J3QmNCVINCe0KDQk9Ci0JXQpdCd0JjQmtCYPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiAgZGF0YS1wcm9ibGVtdHlwZT1cIjJcIiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInByb2JsZW0taWNvbiBwcmludGVyLXNlcnZpY2VcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwicHJvYmxlbXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwicHJvYmxlbS1saXN0LWhlYWRcIj7QotC40L/QvtCy0YvQtSDQv9GA0L7QsdC70LXQvNGLOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QndC1INGA0LDQsdC+0YLQsNC10YIg0L/RgNC40L3RgtC10YA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCd0LUg0YDQsNCx0L7RgtCw0LXRgiDRgdC60LDQvdC10YA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCd0LDRgdGC0YDQvtC50LrQsCDQv9C10YfQsNGC0Lgv0YHQutCw0L3QuNGA0L7QstCw0L3QuNGPPC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7Ql9Cw0LzQtdC90LAg0LrQsNGA0YLRgNC40LTQttCwPC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QntGH0LjRgdGC0LrQsCDQvtGCINC/0YvQu9C4INGD0YHRgtGA0L7QudGB0YLQstCwINC/0LXRh9Cw0YLQuDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cy1jdXR0ZXIgcmlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMgYnRuLXN3aXRjaGVyIG5ldy1yZXFcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQgZGlhcnktd2lkZ2V0IHJlZ2lzdGVyLXdpZGdldCAgbC10LWxpbmVcIiBkYXRhLWxpbmU9XCIzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC1oZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCe0JHQodCb0KPQltCY0JLQkNCd0JjQlSDQn9Cg0J7Qk9Cg0JDQnNCc0J3QntCT0J4g0J7QkdCV0KHQn9CV0KfQldCd0JjQrzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGRhdGEtcHJvYmxlbXR5cGU9XCIzXCIgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtdGV4dFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWljb24gc29mdC1zZXJ2aWNlXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInByb2JsZW1zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInByb2JsZW0tbGlzdC1oZWFkXCI+0KLQuNC/0L7QstGL0LUg0L/RgNC+0LHQu9C10LzRizo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJuZXctcmVxLWxpXCI+0KPRgdGC0LDQvdC+0LLQutCwINCf0J48L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCj0LTQsNC70LXQvdC40LUgwqvQu9C40YjQvdC10LPQvsK7INCf0J48L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCd0LDRgdGC0YDQvtC50LrQsCDQsNC90YLQuNCy0LjRgNGD0YHQvdC+0Lkg0LfQsNGJ0LjRgtGLPC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QndC1INGF0LLQsNGC0LDQtdGCINC80LXRgdGC0LAg0L3QsCDQttC10YHRgtC60L7QvCDQtNC40YHQutC1PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QndCw0YHRgtGA0L7QudC60LAg0YHQtdGC0LXQstC+0Lkg0L/QsNC/0LrQuDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cy1jdXR0ZXIgcmlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMgYnRuLXN3aXRjaGVyIG5ldy1yZXFcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQgZGlhcnktd2lkZ2V0IHJlZ2lzdGVyLXdpZGdldCAgbC10LWxpbmVcIiBkYXRhLWxpbmU9XCI0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC1oZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCd0JDQkdCb0K7QlNCV0J3QmNCVLCDQodCn0JXQotCn0JjQmtCYLCDQodCY0JPQndCQ0JvQmNCX0JDQptCY0K88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBkYXRhLXByb2JsZW10eXBlPVwiNFwiIGNsYXNzPVwid2lkZ2V0LWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LXRleHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwicHJvYmxlbS1pY29uIGNvdW50ZXJzLXNlcnZpY2VcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwicHJvYmxlbXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwicHJvYmxlbS1saXN0LWhlYWRcIj7QotC40L/QvtCy0YvQtSDQv9GA0L7QsdC70LXQvNGLOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QndC1INGA0LDQsdC+0YLQsNC10YIg0LLQuNC00LXQvtC90LDQsdC70Y7QtNC10L3QuNC1PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QndC1INGA0LDQsdC+0YLQsNC10YIgwqvRgtGA0LXQstC+0LbQvdCw0Y8g0LrQvdC+0L/QutCwwrs8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCd0LUg0YDQsNCx0L7RgtCw0LXRgiDRgdC40LPQvdCw0LvQuNC30LDRhtC40Y88L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCd0LUg0YDQsNCx0L7RgtCw0LXRgiDRgdC40YHRgtC10LzQsCDQv9C+0LTRgdGH0LXRgtCwINC/0L7RgdC10YLQuNGC0LXQu9C10Lk8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCf0L7QtNGB0YfQtdGCINC/0L7RgdC10YLQuNGC0LXQu9C10Lkg0LLQtdC00LXRgtGB0Y8g0L3QtdC60L7RgNGA0LXQutGC0L3QvjwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cy1jdXR0ZXIgcmlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMgYnRuLXN3aXRjaGVyIG5ldy1yZXFcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQgZGlhcnktd2lkZ2V0IHJlZ2lzdGVyLXdpZGdldCAgbC10LWxpbmVcIiBkYXRhLWxpbmU9XCI1XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC1oZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCi0JXQpdCd0JjQp9CV0KHQmtCe0JUg0KHQntCf0KDQntCS0J7QltCU0JXQndCY0JUg0JzQldCg0J7Qn9Cg0JjQr9Ci0JjQmTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGRhdGEtcHJvYmxlbXR5cGU9XCI1XCIgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtdGV4dFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWljb24gZXZlbnQtc2VydmljZVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWxpc3QtaGVhZFwiPtCi0LjQv9C+0LLRi9C1INC/0YDQvtCx0LvQtdC80Ys6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCf0L7QtNCz0L7RgtC+0LLQutCwL9C90LDRgdGC0YDQvtC50LrQsCDQvtCx0L7RgNGD0LTQvtCy0LDQvdC40Y88L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCh0L7Qv9GA0L7QstC+0LbQtNC10L3QuNC1INC80LXRgNC+0L/RgNC40Y/RgtC40Y88L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCf0L7QtNCz0L7RgtC+0LLQutCwINCy0YvQtdC30LTQvdC+0LPQviDQutC+0LzQv9C70LXQutGC0LAg0L7QsdC+0YDRg9C00L7QstCw0L3QuNGPPC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cy13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cImJ1dHRvbi1wbHVzLWN1dHRlciByaWdodFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cyBidG4tc3dpdGNoZXIgbmV3LXJlcVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldCBkaWFyeS13aWRnZXQgcmVnaXN0ZXItd2lkZ2V0ICBsLXQtbGluZVwiIGRhdGEtbGluZT1cIjZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC1jYXB0aW9uXCI+0KDQldCc0J7QndCiPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiAgZGF0YS1wcm9ibGVtdHlwZT1cIjZcIiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInByb2JsZW0taWNvbiByZXBhaXItc2VydmljZVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWxpc3QtaGVhZFwiPtCi0LjQv9C+0LLRi9C1INC/0YDQvtCx0LvQtdC80Ys6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCi0LXRh9C10YIg0YHQvNC10YHQuNGC0LXQu9GML9C60YDQsNC9L9GB0LDQvdGC0LXRhdC90LjQutCwPC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QotC10YfQtdGCINC/0L7QtNCy0L7QtNC60LAv0YLRgNGD0LHQsC/QsdCw0YLQsNGA0LXRjzwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJuZXctcmVxLWxpXCI+0JfQsNGB0L7RgCDQsiDRgNCw0LrQvtCy0LjQvdC1L9C60LDQvdCw0LvQuNC30LDRhtC40Lg8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCd0LUg0YDQsNCx0L7RgtCw0LXRgiDRgNC+0LfQtdGC0LrQsDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJuZXctcmVxLWxpXCI+0J3QtSDRgNCw0LHQvtGC0LDQtdGCINGC0LXQu9C10YTQvtC9PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QoNC10LzQvtC90YIg0LTQstC10YDQtdC5PC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7QndC1INGA0LDQsdC+0YLQsNC10YIg0LLRi9Cy0LXRgdC60LA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cImJ1dHRvbi1wbHVzLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtY3V0dGVyIHJpZ2h0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cImJ1dHRvbi1wbHVzIGJ0bi1zd2l0Y2hlciBuZXctcmVxXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0IGRpYXJ5LXdpZGdldCByZWdpc3Rlci13aWRnZXQgIGwtdC1saW5lXCIgZGF0YS1saW5lPVwiN1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtdGl0bGUgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7Ql9CQ0JzQldCd0JAgLyDQo9Ch0KLQkNCd0J7QktCa0JA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBkYXRhLXByb2JsZW10eXBlPVwiN1wiIGNsYXNzPVwid2lkZ2V0LWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LXRleHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwicHJvYmxlbS1pY29uIHJlcGxhY2Utc2V0dXAtc2VydmljZVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWxpc3QtaGVhZFwiPtCi0LjQv9C+0LLRi9C1INC/0YDQvtCx0LvQtdC80Ys6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCX0LDQvNC10L3QsCDQu9Cw0LzQvzwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJuZXctcmVxLWxpXCI+0JfQsNC80LXQvdCwINGB0LLQtdGC0LjQu9GM0L3QuNC60LA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCj0YHRgtCw0L3QvtCy0LrQsCDRg9C90LjRgtCw0LfQsDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJuZXctcmVxLWxpXCI+0KPRgdGC0LDQvdC+0LLQutCwINGB0LzQtdGB0LjRgtC10LvRjy/QutGA0LDQvdCwPC9saT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5ldy1yZXEtbGlcIj7Qo9GB0YLQsNC90L7QstC60LAg0YDQvtC30LXRgtC60Lg8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwibmV3LXJlcS1saVwiPtCX0LDQvNC10L3QsCDQsNCy0YLQvtC80LDRgtC40YfQtdGB0LrQvtCz0L4g0LLRi9C60LvRjtGH0LDRgtC10LvRjzwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cy1jdXR0ZXIgcmlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMgYnRuLXN3aXRjaGVyIG5ldy1yZXFcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImRpc3BsYXk6IGZsZXg7XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQgZGlhcnktd2lkZ2V0IHJlZ2lzdGVyLXdpZGdldCBuYXJyb3cgbC10LWxpbmVcIiBkYXRhLWxpbmU9XCI4XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LXRpdGxlIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCU0KDQo9CT0J7QlTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGRhdGEtcHJvYmxlbXR5cGU9XCI4XCIgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LXRleHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInByb2JsZW0taWNvbiBcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInByb2JsZW1zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJvdGhlci1kZXBhcnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cImRlcGFydC1uYW1lXCI+0JjQojwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiZGVwYXJ0XCI+0L7RgtC00LXQuzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtY3V0dGVyIHJpZ2h0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cyBidG4tc3dpdGNoZXIgbmV3LXJlcVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0IGRpYXJ5LXdpZGdldCByZWdpc3Rlci13aWRnZXQgbmFycm93IGwtdC1saW5lXCIgZGF0YS1saW5lPVwiOVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7QlNCg0KPQk9Ce0JU8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBkYXRhLXByb2JsZW10eXBlPVwiOVwiIGNsYXNzPVwid2lkZ2V0LWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cIndpZGdldC10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtLWljb24gXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJwcm9ibGVtc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwib3RoZXItZGVwYXJ0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJkZXBhcnQtbmFtZVwiPtCQ0KXQlDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiZGVwYXJ0XCI+0L7RgtC00LXQuzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwiYnV0dG9uLXBsdXMtY3V0dGVyIHJpZ2h0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9XCJidXR0b24tcGx1cyBidG4tc3dpdGNoZXIgbmV3LXJlcVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwc2V1ZG8tZGl2XCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmV3LXJlcS1kaWFsb2ctd3JhcFwiPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PmAsXHJcbiAgICBDb250cm9sbGVyOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLm5ldy1yZXF1ZXN0cyAud2lkZ2V0cyAucHNldWRvLWRpdicsXHJcbiAgICAgICAgRGF0YTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J7QoNCT0JDQndCY0JfQkNCm0JjQryDQoNCQ0JHQntCn0JXQk9CeINCc0JXQodCi0JAnLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbV90eXBlOiAwLFxyXG4gICAgICAgICAgICAgICAgSWNvbjogJ3dvcmtwbGFjZS1zZXJ2aWNlJyxcclxuICAgICAgICAgICAgICAgIFByb2JsZW1zOiBbJ9CS0L7RgdGB0YLQsNC90L7QstC70LXQvdC40LUg0L/QsNGA0L7Qu9C10LknLCAn0KPRgdGC0LDQvdC+0LLQutCwL9C/0LXRgNC10LzQtdGJ0LXQvdC40LUg0LrQvtC80L/RjNGO0YLQtdGA0L7QsicsICfQo9GH0LXRgtC90YvQtSDQt9Cw0L/QuNGB0Lgg0LTQu9GPINC/0YDQuNC90Y/RgtGL0YUg0YDQsNCx0L7RgtC90LjQutC+0LInLCAn0KPQtNCw0LvQtdC90LjQtSDRg9GH0LXRgtC90YvRhSDQt9Cw0L/QuNGB0LXQuSDRg9Cy0L7Qu9C10L3QvdGL0YUg0YDQsNCx0L7RgtC90LjQutC+0LInLCAn0J/RgNC40L7RgdGC0LDQvdC+0LLQutCwINC00LXQudGB0YLQstC40Y8g0YPRh9C10YLQvdC+0Lkg0LfQsNC/0LjRgdC4INGA0LDQsdC+0YLQvdC40LrQsCddXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQntCR0KHQm9Cj0JbQmNCS0JDQndCY0JUg0JrQntCc0J/QrNCu0KLQldCg0J7QkicsXHJcbiAgICAgICAgICAgICAgICBQcm9ibGVtX3R5cGU6IDEsXHJcbiAgICAgICAgICAgICAgICBJY29uOiAncGMtc2VydmljZScsXHJcbiAgICAgICAgICAgICAgICBQcm9ibGVtczogWyfQndC1INCy0LrQu9GO0YfQsNC10YLRgdGPINC60L7QvNC/0YzRjtGC0LXRgCcsICfQndC10YIg0LjQt9C+0LHRgNCw0LbQtdC90LjRjyDQvdCwINC80L7QvdC40YLQvtGA0LUnLCAn0JfQsNC80LXQvdCwINC60LvQsNCy0LjQsNGC0YPRgNGLL9C80YvRiNC4JywgJ9Ce0YfQuNGB0YLQutCwINC60L7QvNC/0YzRjtGC0LXRgNCwINC+0YIg0L/Ri9C70LgnLCAn0J3QtSDRgNCw0LHQvtGC0LDQtdGCINC30LLRg9C6J11cclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Ce0JHQodCb0KPQltCY0JLQkNCd0JjQlSDQntCg0JPQotCV0KXQndCY0JrQmCcsXHJcbiAgICAgICAgICAgICAgICBQcm9ibGVtX3R5cGU6IDIsXHJcbiAgICAgICAgICAgICAgICBJY29uOiAncHJpbnRlci1zZXJ2aWNlJyxcclxuICAgICAgICAgICAgICAgIFByb2JsZW1zOiBbJ9Cd0LUg0YDQsNCx0L7RgtCw0LXRgiDQv9GA0LjQvdGC0LXRgCcsICfQndC1INGA0LDQsdC+0YLQsNC10YIg0YHQutCw0L3QtdGAJywgJ9Cd0LDRgdGC0YDQvtC50LrQsCDQv9C10YfQsNGC0Lgv0YHQutCw0L3QuNGA0L7QstCw0L3QuNGPJywgJ9CX0LDQvNC10L3QsCDQutCw0YDRgtGA0LjQtNC20LAnLCAn0J7Rh9C40YHRgtC60LAg0L7RgiDQv9GL0LvQuCDRg9GB0YLRgNC+0LnRgdGC0LLQsCDQv9C10YfQsNGC0LgnXVxyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0J7QkdCh0JvQo9CW0JjQktCQ0J3QmNCVINCf0KDQntCT0KDQkNCc0JzQndCe0JPQniDQntCR0JXQodCf0JXQp9CV0J3QmNCvJyxcclxuICAgICAgICAgICAgICAgIFByb2JsZW1fdHlwZTogMyxcclxuICAgICAgICAgICAgICAgIEljb246ICdzb2Z0LXNlcnZpY2UnLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbXM6IFsn0KPRgdGC0LDQvdC+0LLQutCwINCf0J4nLCAn0KPQtNCw0LvQtdC90LjQtSDCq9C70LjRiNC90LXQs9C+wrsg0J/QnicsICfQndCw0YHRgtGA0L7QudC60LAg0LDQvdGC0LjQstC40YDRg9GB0L3QvtC5INC30LDRidC40YLRiycsICfQndC1INGF0LLQsNGC0LDQtdGCINC80LXRgdGC0LAg0L3QsCDQttC10YHRgtC60L7QvCDQtNC40YHQutC1JywgJ9Cd0LDRgdGC0YDQvtC50LrQsCDRgdC10YLQtdCy0L7QuSDQv9Cw0L/QutC4J11cclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cd0JDQkdCb0K7QlNCV0J3QmNCVLCDQodCn0JXQotCn0JjQmtCYLCDQodCY0JPQndCQ0JvQmNCX0JDQptCY0K8nLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbV90eXBlOiA0LFxyXG4gICAgICAgICAgICAgICAgSWNvbjogJ2NvdW50ZXJzLXNlcnZpY2UnLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbXM6IFsn0J3QtSDRgNCw0LHQvtGC0LDQtdGCINCy0LjQtNC10L7QvdCw0LHQu9GO0LTQtdC90LjQtScsICfQndC1INGA0LDQsdC+0YLQsNC10YIgwqvRgtGA0LXQstC+0LbQvdCw0Y8g0LrQvdC+0L/QutCwwrsnLCAn0J3QtSDRgNCw0LHQvtGC0LDQtdGCINGB0LjQs9C90LDQu9C40LfQsNGG0LjRjycsICfQndC1INGA0LDQsdC+0YLQsNC10YIg0YHQuNGB0YLQtdC80LAg0L/QvtC00YHRh9C10YLQsCDQv9C+0YHQtdGC0LjRgtC10LvQtdC5JywgJ9Cf0L7QtNGB0YfQtdGCINC/0L7RgdC10YLQuNGC0LXQu9C10Lkg0LLQtdC00LXRgtGB0Y8g0L3QtdC60L7RgNGA0LXQutGC0L3QviddXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQotCV0KXQndCY0KfQldCh0JrQntCVINCh0J7Qn9Cg0J7QktCe0JbQlNCV0J3QmNCVINCc0JXQoNCe0J/QoNCY0K/QotCY0JknLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbV90eXBlOiA1LFxyXG4gICAgICAgICAgICAgICAgSWNvbjogJ2V2ZW50LXNlcnZpY2UnLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbXM6IFsn0J/QvtC00LPQvtGC0L7QstC60LAv0L3QsNGB0YLRgNC+0LnQutCwINC+0LHQvtGA0YPQtNC+0LLQsNC90LjRjycsICfQodC+0L/RgNC+0LLQvtC20LTQtdC90LjQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNGPJywgJ9Cf0L7QtNCz0L7RgtC+0LLQutCwINCy0YvQtdC30LTQvdC+0LPQviDQutC+0LzQv9C70LXQutGC0LAg0L7QsdC+0YDRg9C00L7QstCw0L3QuNGPJ11cclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cg0JXQnNCe0J3QoicsXHJcbiAgICAgICAgICAgICAgICBQcm9ibGVtX3R5cGU6IDYsXHJcbiAgICAgICAgICAgICAgICBJY29uOiAncmVwYWlyLXNlcnZpY2UnLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbXM6IFsn0KLQtdGH0LXRgiDRgdC80LXRgdC40YLQtdC70Ywv0LrRgNCw0L0v0YHQsNC90YLQtdGF0L3QuNC60LAnLCAn0KLQtdGH0LXRgiDQv9C+0LTQstC+0LTQutCwL9GC0YDRg9Cx0LAv0LHQsNGC0LDRgNC10Y8nLCAn0JfQsNGB0L7RgCDQsiDRgNCw0LrQvtCy0LjQvdC1L9C60LDQvdCw0LvQuNC30LDRhtC40LgnLCAn0J3QtSDRgNCw0LHQvtGC0LDQtdGCINGA0L7Qt9C10YLQutCwJywgJ9Cd0LUg0YDQsNCx0L7RgtCw0LXRgiDRgtC10LvQtdGE0L7QvScsICfQoNC10LzQvtC90YIg0LTQstC10YDQtdC5JywgJ9Cd0LUg0YDQsNCx0L7RgtCw0LXRgiDQstGL0LLQtdGB0LrQsCddXHJcbiAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQl9CQ0JzQldCd0JAgLyDQo9Ch0KLQkNCd0J7QktCa0JAnLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbV90eXBlOiA3LFxyXG4gICAgICAgICAgICAgICAgSWNvbjogJ3JlcGxhY2Utc2V0dXAtc2VydmljZScsXHJcbiAgICAgICAgICAgICAgICBQcm9ibGVtczogWyfQl9Cw0LzQtdC90LAg0LvQsNC80L8nLCAn0JfQsNC80LXQvdCwINGB0LLQtdGC0LjQu9GM0L3QuNC60LAnLCAn0KPRgdGC0LDQvdC+0LLQutCwINGD0L3QuNGC0LDQt9CwJywgJ9Cj0YHRgtCw0L3QvtCy0LrQsCDRgdC80LXRgdC40YLQtdC70Y8v0LrRgNCw0L3QsCcsICfQo9GB0YLQsNC90L7QstC60LAg0YDQvtC30LXRgtC60LgnLCAn0JfQsNC80LXQvdCwINCw0LLRgtC+0LzQsNGC0LjRh9C10YHQutC+0LPQviDQstGL0LrQu9GO0YfQsNGC0LXQu9GPJ11cclxuICAgICAgICAgICAgfSwvKntcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQmNCd0J7Qn9Cb0JDQndCV0KLQndCe0JUg0JLQotCe0KDQltCV0J3QmNCVJyxcclxuICAgICAgICAgICAgICAgIFByb2JsZW1fdHlwZTogNixcclxuICAgICAgICAgICAgICAgIFByb2JsZW1zOiBbJ9Cb0LXRgtCw0Y7RidC40LUg0YLQsNGA0LXQu9C60LgnXVxyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JDQn9Ce0JrQkNCb0JjQn9Ch0JjQoScsXHJcbiAgICAgICAgICAgICAgICBQcm9ibGVtX3R5cGU6IDcsXHJcbiAgICAgICAgICAgICAgICBQcm9ibGVtczogWyfQmNC30LLQtdGA0LbQtdC90LjQtSDQstGD0LvQutCw0L3QsCcsICfQnNC10YLQtdC+0YDQuNGC0L3Ri9C5INC00L7QttC00YwnLCAn0JLRgdC10LzQuNGA0L3Ri9C5INC/0L7RgtC+0L8nXVxyXG4gICAgICAgICAgICB9LCovIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQlNCg0KPQk9Ce0JUnLFxyXG4gICAgICAgICAgICAgICAgUHJvYmxlbV90eXBlOiA4LFxyXG4gICAgICAgICAgICAgICAgSWNvbjogJycsXHJcbiAgICAgICAgICAgICAgICBUeXBlOiAnbmFycm93JyxcclxuICAgICAgICAgICAgICAgIFRleHQ6ICfQmNCiJ1xyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JTQoNCj0JPQntCVJyxcclxuICAgICAgICAgICAgICAgIFByb2JsZW1fdHlwZTogOSxcclxuICAgICAgICAgICAgICAgIEljb246ICcnLFxyXG4gICAgICAgICAgICAgICAgVHlwZTogJ25hcnJvdycsXHJcbiAgICAgICAgICAgICAgICBUZXh0OiAn0JDQpdCUJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8c3Bhbj48L3NwYW4+YFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB0aGlzLldpZGdldENvbnRhaW5lciA9IHRoaXMuU2VsZWN0KCcud2lkZ2V0cycpO1xyXG4gICAgICAgIHRoaXMuTGliQ29udHJsID0gbmV3IEx1cmUuQ29udHJvbGxlci5UZW1wbGF0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6ICcuaGVscC1kLmxpYi1saXN0JyxcclxuICAgICAgICAgICAgRGF0YTogW10sXHJcbiAgICAgICAgICAgIExpc3RFbGVtZW50OiBgPG9wdGlvbiB2YWx1ZT1cInt7SUR9fVwiPnt7TmFtZX19PC9vcHRpb24+YFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuTGliU2VsZWN0ID0gdGhpcy5TZWxlY3QoJy5oZWxwLWQubGliLWxpc3QnKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5uZXdSZXF1ZXN0ID0gZnVuY3Rpb24odHlwZSwgcHJfaWQgPSAnLTEnLCAgdGV4dCA9ICcnKSB7XHJcbiAgICAgICAgICAgIHR5cGUgPSBwYXJzZUludCh0eXBlKTtcclxuICAgICAgICAgICAgcHJfaWQgPSBwYXJzZUludChwcl9pZCk7XHJcbiAgICAgICAgICAgIC8vaWYgKCF0eXBlICYmIHR5cGUgIT09IDApIHJldHVybjtcclxuICAgICAgICAgICAgaWYgKHRoaXMuUmVxU2VuZGVyLm5ld1JlcXVlc3QodHlwZSwgcHJfaWQsIHRleHQsIHRoaXMuQ29udHJvbGxlci5EYXRhW3R5cGVdLk5hbWUpKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5SZXFTZW5kZXIuU2hvdygpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5CbHVyV2lkZ2V0cyA9IGZ1bmN0aW9uIChtb2RlID0gdHJ1ZSkge1xyXG4gICAgICAgICAgICBpZiAobW9kZSlcclxuICAgICAgICAgICAgICAgIHRoaXMuV2lkZ2V0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm0tb3BlbmVkJyk7XHJcbiAgICAgICAgICAgIGVsc2UgdGhpcy5XaWRnZXRDb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnZm9ybS1vcGVuZWQnKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuT3JkZXJJbkNvbGwgPSBmdW5jdGlvbiAoZWxlbSkge1xyXG4gICAgICAgICAgICBsZXQgaSA9IDA7XHJcbiAgICAgICAgICAgIGZvciAobGV0IHggb2YgZWxlbS5wYXJlbnRFbGVtZW50LmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoeCA9PT0gZWxlbSlcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaTtcclxuICAgICAgICAgICAgICAgIGkrKztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnByb2JsZW1zIC5uZXctcmVxLWxpLCAud2lkZ2V0LWNvbnRlbnQgLm5ldy1yZXEnLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbmV3LXJlcS1saScpKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5uZXdSZXF1ZXN0KGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmRhdGFzZXRbJ3Byb2JsZW10eXBlJ10sIHRoaXMuT3JkZXJJbkNvbGwoZS5jdXJyZW50VGFyZ2V0KSwgZS5jdXJyZW50VGFyZ2V0LmlubmVyVGV4dCk7XHJcbiAgICAgICAgICAgIGlmIChlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCduZXctcmVxJykpXHJcbiAgICAgICAgICAgICAgICB0aGlzLm5ld1JlcXVlc3QoZS5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmRhdGFzZXRbJ3Byb2JsZW10eXBlJ10pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuTGliQ29udHJsLlJlZnJlc2goTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0KTtcclxuICAgIH1cclxufSk7XHJcblxyXG5yZXF1aXJlKCcuL3JlcXVlc3Qtc2VuZGVyL3JlcXVlc3Qtc2VuZGVyLmpzJyk7XHJcbiIsIkhlbHBEZXNrLk5ld1JlcS5SZXFTZW5kZXIgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdSZXF1ZXN0U2VuZGVyJyxcclxuICAgIC8vIFBhcmVudDogSGVscERlc2suTmV3UmVxLFxyXG4gICAgVmlzaWJsZTogZmFsc2UsXHJcbiAgICBSb3V0ZTogZmFsc2UsXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cInJlcXVlc3Qtb3ZlcmxheVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlcS1mb3JtLWNvbnRhaW5lciBzaGFkb3cwNCBcIj4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItaGVhZGVyIHN0cm9uZ1wiPtCd0J7QktCQ0K8g0JfQkNCv0JLQmtCQPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItYm9keVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1uYW1lXCI+0KLQtdC80LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJwcm9ibGVtLXRoZW1lXCIgdHlwZT1cInRleHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdy1uYW1lXCI+0J/RgNC40L7RgNC40YLQtdGCPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cInByaW9yaXR5LXNlbGVjdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMVwiPtCd0LjQt9C60LjQuTwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMlwiIHNlbGVjdGVkPtCh0YDQtdC00L3QuNC5PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIzXCI+0JLRi9GB0L7QutC40Lk8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjRcIj7QotC+0YfQvdCw0Y8g0LTQsNGC0LA8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tcm93IGV2ZW50LWRhdGUtcm93IG5vbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93LW5hbWVcIj7QlNCw0YLQsCDQuNGB0L/QvtC70L3QtdC90LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudC1kYXRlXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctbmFtZVwiPtCf0L7QtNGA0L7QsdC90L7QtSDQvtC/0LjRgdCw0L3QuNC1PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPVwicHJvYmxlbS1kZXNjcmlwdGlvblwiPjwvdGV4dGFyZWE+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3ctbmFtZVwiPtCk0LDQudC70Ys8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1maWxlc1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImZpbGUtaW5wdXQgbm9uZVwiIG5hbWU9XCJwcm9ibGVtLWZpbGVzXCIgaWQ9XCJwcm9ibGVtLWZpbGVzXCIgdHlwZT1cImZpbGVcIiBtdWx0aXBsZT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwicHJvYmxlbS1maWxlc1wiIGNsYXNzPVwiYWRkLW5ldy1maWxlIGwtYnV0dG9uXCI+0JfQkNCT0KDQo9CX0JjQotCsPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJvdHRvbS1idXR0b25zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiY2FuY2VsLWJ1dHRvbiBsLWJ1dHRvblwiPtCe0KLQnNCV0J3QkDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInNlbmQtYnV0dG9uIGwtYnV0dG9uXCI+0J7QotCf0KDQkNCS0JjQotCsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBUYXJnZXQ6ICcubmV3LXJlcS1kaWFsb2ctd3JhcCcsXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUHJvYmxlbVRoZW1lID0gdGhpcy5TZWxlY3QoJ2lucHV0LnByb2JsZW0tdGhlbWUnKTtcclxuICAgICAgICB0aGlzLlByb2JsZW1EZXNjcmlwdGlvbiA9IHRoaXMuU2VsZWN0KCd0ZXh0YXJlYS5wcm9ibGVtLWRlc2NyaXB0aW9uJyk7XHJcbiAgICAgICAgdGhpcy5Gb3JtRmlsZXMgPSB0aGlzLlNlbGVjdCgnLmZpbGUtaW5wdXQnKTtcclxuICAgICAgICB0aGlzLlRoZW1lVHlwZSA9IC0xO1xyXG4gICAgICAgIHRoaXMuYWxsb3dlZEZpbGVUeXBlcyA9IFsnZG9jJywgJ2RvY3gnLCAneGxzJywgJ3hsc3gnLCAnanBnJywgJ2pwZWcnLCAncG5nJywgJ3R4dCcsICd6aXAnLCAncmFyJ107XHJcbiAgICAgICAgdGhpcy5tYXhGaWxlU2l6ZSA9IDk5OTk5OTk7IC8vIDEwIE1iXHJcbiAgICAgICAgdGhpcy5TZW5kQnV0dG9uID0gdGhpcy5TZWxlY3QoJy5zZW5kLWJ1dHRvbicpO1xyXG4gICAgICAgIHRoaXMuRXZEYXRlUm93ID0gdGhpcy5TZWxlY3QoJy5ldmVudC1kYXRlLXJvdycpO1xyXG4gICAgICAgIHRoaXMuUHJpb3JpdHlTZWxlY3QgPSB0aGlzLlNlbGVjdCgnLnByaW9yaXR5LXNlbGVjdCcpO1xyXG5cclxuICAgICAgICB0aGlzLkZpbGVzQ29udHJvbGxlciA9IG5ldyBMdXJlLkNvbnRyb2xsZXIuVGVtcGxhdG9yKHtcclxuICAgICAgICAgICAgVGFyZ2V0OiAnLmZvcm0tZmlsZXMnLFxyXG4gICAgICAgICAgICBEYXRhOiBbXHJcbiAgICAgICAgICAgICAgICAvLyB7IE5hbWVGdWxsOiAnU2NyZWVuMScsIE5hbWVTdWI6ICdTY3IuLi4nLCBUeXBlOiAncG5nJywgRmlsZToge30sIE9yZGVyOiAwIH1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgTGlzdEVsZW1lbnQ6XHJcbiAgICAgICAgICAgICAgICBgPGRpdiBjbGFzcz1cInVwbG9hZGluZy1maWxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpbGUtaWNvblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7eyNpZiAoWydwbmcnLCAnanBnJywgJ2pwZWcnXS5pbmRleE9mKCR0aGlzLlR5cGUpICE9PSAtMSl9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGlkPVwiaW1nX3ByZXZpZXdfe3tPcmRlcn19XCIgc3JjPVwiI1wiIGFsdD1cInt7TmFtZVN1Yn19XCIgd2lkdGg9XCI4MFwiLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kaWZ9fVxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmaWxlLXBhcmFtc1wiIGRhdGEtb3JkZXI9XCJ7e09yZGVyfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWUtdHlwZVwiPjxzcGFuIGNsYXNzPVwiZmlsZW5hbWVcIiB0aXRsZT1cInt7TmFtZUZ1bGx9fS57e1R5cGV9fVwiPnt7TmFtZVN1Yn19PC9zcGFuPi48c3BhbiBjbGFzcz1cImZpbGV0eXBlXCI+e3tUeXBlfX08L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZW5hbWUtcmVtb3ZlXCI+PHNwYW4gY2xhc3M9XCJyZW1vdmVcIj7Rg9C00LDQu9C40YLRjDwvc3Bhbj4gSSA8c3BhbiBjbGFzcz1cInJlbmFtZVwiPtC/0LXRgNC10LjQvNC10L3QvtCy0LDRgtGMPC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgICAgICAgICAgRW1wdHlNZXNzYWdlOlxyXG4gICAgICAgICAgICAgICAgYDxkaXY+0JLRiyDQtdGJ0LUg0L3QtSDQt9Cw0LPRgNGD0LfQuNC70Lgg0L3QuCDQvtC00L3QvtCz0L4g0YTQsNC50LvQsDwvZGl2PmAsXHJcbiAgICAgICAgICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgb2YgdGhpcy5EYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKFsncG5nJywgJ2pwZycsICdqcGVnJ10uaW5kZXhPZihpLlR5cGUudG9Mb3dlckNhc2UoKSkgPT09IC0xKSBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICAgICAgICByZWFkZXIub25sb2FkID0gZSA9PiB7bGV0IHggPSBMdXJlLlNlbGVjdCgnI2ltZ19wcmV2aWV3XycgKyBpLk9yZGVyLCB0aGlzLkNvbnRlbnQpO3JldHVybiB4ID8geC5zcmMgPSBlLnRhcmdldC5yZXN1bHQgOiB7fX07XHJcbiAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoaS5GaWxlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkZpbGVzQ29udHJvbGxlci5SZWZyZXNoKFtdKTtcclxuICAgICAgICB0aGlzLlBhcmVudC5CbHVyV2lkZ2V0cygpO1xyXG4gICAgfSxcclxuICAgIEhpZGU6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5QYXJlbnQuQmx1cldpZGdldHMoZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuUHJvYmxlbURlc2NyaXB0aW9uLnZhbHVlID0gJyc7XHJcbiAgICAgICAgdGhpcy5Qcm9ibGVtVGhlbWUudmFsdWUgPSAnJztcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5uZXdSZXF1ZXN0ID0gZnVuY3Rpb24odHlwZSwgcHJfaWQsIHRleHQsIHByb2JOYW1lKSB7XHJcbiAgICAgICAgICAgIHRoaXMuVGhlbWVUeXBlID0gdHlwZTtcclxuICAgICAgICAgICAgdGhpcy5Qcm9iU3ViVHlwZSA9IHByX2lkO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuVGhlbWVUeXBlICYmIHRoaXMuVGhlbWVUeXBlICE9PSAwKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5Qcm9iU3ViVHlwZSAmJiB0aGlzLlByb2JTdWJUeXBlICE9PSAwKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvYmxlbVRoZW1lLnZhbHVlID0gcHJvYk5hbWUvKiArICh0ZXh0ID09PSAnJyA/ICcnIDogJyAoJyArIHRleHQgKyAnKScpKi87XHJcbiAgICAgICAgICAgIGlmICh0ZXh0ICE9PSAnJylcclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvYmxlbURlc2NyaXB0aW9uLnZhbHVlID0gdGV4dDtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5SZXF1ZXN0U2VuZEZpbGVzID0gZnVuY3Rpb24gKEhlbHBSZXF1ZXN0SUQsIEZpbGVMaXN0KSB7XHJcbiAgICAgICAgICAgIGxldCBGaWxlc1JlcSA9IFtdO1xyXG4gICAgICAgICAgICBsZXQgZmlsZXM7XHJcbiAgICAgICAgICAgIGlmIChGaWxlTGlzdClcclxuICAgICAgICAgICAgICAgIGZpbGVzID0gRmlsZUxpc3Q7XHJcbiAgICAgICAgICAgIGVsc2UgZmlsZXMgPSB0aGlzLkZpbGVzQ29udHJvbGxlci5EYXRhLm1hcCh4ID0+ICh7TmFtZTogeC5OYW1lRnVsbCArICcuJyArIHguVHlwZSwgRmlsZTogeC5GaWxlfSkpO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBmIG9mIGZpbGVzKVxyXG4gICAgICAgICAgICAgICAgRmlsZXNSZXEucHVzaCggYXBpLkhlbHBEZXNrX1JlcXVlc3RGaWxlQWRkKGYuRmlsZSwge2ZpbGVuYW1lOiB0aGlzLlRyYW5zbGl0ZXJhdGUoZi5OYW1lKSwgSGVscFJlcXVlc3RJRDogSGVscFJlcXVlc3RJRH0sIHt9KSApO1xyXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoRmlsZXNSZXEpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5SZXF1ZXN0U2VuZCA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uTG9jayh0aGlzLlNlbmRCdXR0b24pO1xyXG4gICAgICAgICAgICBsZXQgZXhlY0RhdGUgPSBMdXJlLkRhdGUoKTtcclxuICAgICAgICAgICAgbGV0IHByaW9yID0gcGFyc2VJbnQodGhpcy5Qcmlvcml0eVNlbGVjdC52YWx1ZSk7XHJcbiAgICAgICAgICAgIGlmIChwcmlvciA9PT0gNClcclxuICAgICAgICAgICAgICAgIGV4ZWNEYXRlID0gdGhpcy5FeGVjVGltZVBpY2tlci5EYXRlO1xyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChwcmlvciA9PT0gMSkgZXhlY0RhdGUuQWRkRGF5cygzKTtcclxuICAgICAgICAgICAgICAgIGlmIChwcmlvciA9PT0gMikgZXhlY0RhdGUuQWRkRGF5cygxKTtcclxuICAgICAgICAgICAgICAgIGlmIChwcmlvciA9PT0gMykgZXhlY0RhdGUuQWRkSG91cnMoOCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGxldCBIZWxwUmVxdWVzdElEID0gYXdhaXQgYXBpLkhlbHBEZXNrX1JlcXVlc3RBZGQoXHJcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VJbnQodGhpcy5QYXJlbnQuTGliU2VsZWN0LnZhbHVlKSxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlRoZW1lVHlwZSxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb2JsZW1UaGVtZS52YWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb2JsZW1EZXNjcmlwdGlvbi52YWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICBwcmlvcixcclxuICAgICAgICAgICAgICAgICAgICBleGVjRGF0ZSwge30pO1xyXG4gICAgICAgICAgICAgICAgaWYgKEhlbHBSZXF1ZXN0SUQgPT09IC0xKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uRXJyb3IoJ9Cf0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LAg0L/RgNC4INC+0YLQv9GA0LDQstC60LUhJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLlJlcXVlc3RTZW5kRmlsZXMoSGVscFJlcXVlc3RJRCk7XHJcbiAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TdWNjZXNzKCfQntCi0J/QoNCQ0JLQm9CV0J3QnicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcign0J7RiNC40LHQutCwINGB0LXRgNCy0LXRgNCwJywgZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZSh0aGlzLlNlbmRCdXR0b24pO1xyXG4gICAgICAgICAgICB0aGlzLkhpZGUoKTtcclxuICAgICAgICAgICAgdGhpcy5Qcm9ibGVtRGVzY3JpcHRpb24udmFsdWUgPSAnJztcclxuICAgICAgICAgICAgdGhpcy5Qcm9ibGVtVGhlbWUudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgSGVscERlc2suTXlSZXFzLlNob3coKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuVHJhbnNsaXRlcmF0ZSA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcclxuICAgICAgICAgICAgbGV0IHRyYW5zID0ge1wi0YlcIjpcInNoaFwiLFwi0YhcIjpcInNoXCIsXCLRh1wiOlwiY2hcIixcItGGXCI6XCJjelwiLFwi0Y5cIjpcInl1XCIsXCLRj1wiOlwieWFcIixcItGRXCI6XCJ5b1wiLFwi0LZcIjpcInpoXCIsXCLRilwiOlwiYGBcIixcItGLXCI6XCJ5XCIsXCLRjVwiOlwiZVwiLFwi0LBcIjpcImFcIixcItCxXCI6XCJiXCIsXCLQslwiOlwidlwiLFwi0LNcIjpcImdcIixcItC0XCI6XCJkXCIsXCLQtVwiOlwiZVwiLFwi0LdcIjpcInpcIixcItC4XCI6XCJpXCIsXCLQuVwiOlwialwiLFwi0LpcIjpcImtcIixcItC7XCI6XCJsXCIsXCLQvFwiOlwibVwiLFwi0L1cIjpcIm5cIixcItC+XCI6XCJvXCIsXCLQv1wiOlwicFwiLFwi0YBcIjpcInJcIixcItGBXCI6XCJzXCIsXCLRglwiOlwidFwiLFwi0YNcIjpcInVcIixcItGEXCI6XCJmXCIsXCLRhVwiOlwieFwiLFwi0YxcIjpcImBcIixcIiBcIjpcIl9cIn07XHJcbiAgICAgICAgICAgIGxldCByZXMgPSAnJztcclxuICAgICAgICAgICAgZm9yIChsZXQgYiBvZiBzdHJpbmcpXHJcbiAgICAgICAgICAgICAgICByZXMgKz0gdHJhbnNbYi50b0xvd2VyQ2FzZSgpXSB8fCBiO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5OZXdGaWxlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgZGF0YSA9IHRoaXMuRmlsZXNDb250cm9sbGVyLkRhdGE7XHJcbiAgICAgICAgICAgIGxldCBrID0gMDtcclxuICAgICAgICAgICAgZm9yIChsZXQgZCBvZiBkYXRhKVxyXG4gICAgICAgICAgICAgICAgZC5PcmRlciA9IGsrKztcclxuICAgICAgICAgICAgbGV0IG5vdEFsbG93ZWQgPSAnJztcclxuICAgICAgICAgICAgbGV0IGJpZ1NpemUgPSAnJztcclxuICAgICAgICAgICAgZm9yIChsZXQgZCBvZiB0aGlzLkZvcm1GaWxlcy5maWxlcykge1xyXG4gICAgICAgICAgICAgICAgbGV0IG5hbWUgPSBkLm5hbWUuc3BsaXQoJy4nKTtcclxuICAgICAgICAgICAgICAgIGxldCBmaWxldHlwZSA9IG5hbWUucG9wKCkudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmFsbG93ZWRGaWxlVHlwZXMuaW5kZXhPZihmaWxldHlwZSkgPT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbm90QWxsb3dlZCArPSAnLCAnICsgbmFtZSArICcuJyArIGZpbGV0eXBlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkLnNpemUgPiB0aGlzLm1heEZpbGVTaXplKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYmlnU2l6ZSArPSAnLCAnICsgbmFtZSArICcuJyArIGZpbGV0eXBlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbmFtZSA9IG5hbWUuam9pbignLicpO1xyXG4gICAgICAgICAgICAgICAgZGF0YS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBUeXBlOiBmaWxldHlwZSxcclxuICAgICAgICAgICAgICAgICAgICBOYW1lRnVsbDogbmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBOYW1lU3ViOiBuYW1lLmxlbmd0aCA+IDMwID8gbmFtZS5zdWJzdHIoMCwgMzApICsgJy4uLicgOiBuYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIEZpbGU6IGQsXHJcbiAgICAgICAgICAgICAgICAgICAgT3JkZXI6IGsrK1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG5vdEFsbG93ZWQpIEx1cmUuU3lzdGVtLlNob3dFcnJvcign0KHQu9C10LTRg9GO0YnQuNC1INGE0LDQudC70Ysg0L3QtSDRgNCw0LfRgNC10YjQtdC90Ysg0LTQu9GPINC30LDQs9GA0YPQt9C60Lg6IDxicj4nICsgbm90QWxsb3dlZC5zdWJzdHIoMikpO1xyXG4gICAgICAgICAgICBpZiAoYmlnU2l6ZSkgTHVyZS5TeXN0ZW0uU2hvd0Vycm9yKCfQoNCw0LfQvNC10YAg0YHQu9C10LTRg9GO0YnQuNGFINGE0LDQudC70L7QsiDQv9GA0LXQstGL0YjQsNC10YIg0LzQsNC60YHQuNC80LDQu9GM0L3QviDQtNC+0L/Rg9GB0YLQuNC80YvQuTogPGJyPicgKyBiaWdTaXplLnN1YnN0cigyKSk7XHJcbiAgICAgICAgICAgIHRoaXMuRmlsZXNDb250cm9sbGVyLlJlZnJlc2goZGF0YSk7XHJcbiAgICAgICAgICAgIHRoaXMuRm9ybUZpbGVzLnZhbHVlID0gJyc7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlJlbW92ZUZpbGUgPSBmdW5jdGlvbiAobikge1xyXG4gICAgICAgICAgICBsZXQgZGF0YSA9IHRoaXMuRmlsZXNDb250cm9sbGVyLkRhdGE7XHJcbiAgICAgICAgICAgIGRhdGEuc3BsaWNlKG4sIDEpO1xyXG4gICAgICAgICAgICBsZXQgayA9IDA7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGQgb2YgZGF0YSlcclxuICAgICAgICAgICAgICAgIGQuT3JkZXIgPSBrKys7XHJcbiAgICAgICAgICAgIHRoaXMuRmlsZXNDb250cm9sbGVyLlJlZnJlc2goZGF0YSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlJlbmFtZUZpbGUgPSBmdW5jdGlvbiAoZWxlbSwgbikge1xyXG4gICAgICAgICAgICBJbnB1dEJveC5SdW4oZWxlbSwgZGF0YVtuXS5OYW1lRnVsbCxcclxuICAgICAgICAgICAgICAgIG5ld05hbWUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghbmV3TmFtZSB8fCBuZXdOYW1lID09PSAnJykgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkYXRhID0gdGhpcy5GaWxlc0NvbnRyb2xsZXIuRGF0YTtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhW25dLk5hbWVGdWxsID0gbmV3TmFtZTtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhW25dLk5hbWVTdWIgPSBuZXdOYW1lLmxlbmd0aCA+IDMwID8gbmV3TmFtZS5zdWJzdHIoMCwgMzApICsgJy4uLicgOiBuZXdOYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuRmlsZXNDb250cm9sbGVyLlJlZnJlc2goZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9LCB7Q2FwdGlvbjogJ9Cf0LXRgNC10LjQvNC10L3QvtCy0LDRgtGMINGE0LDQudC7J30pO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5jYW5jZWwtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLkhpZGUoKSk7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5zZW5kLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5SZXF1ZXN0U2VuZCgpKTtcclxuXHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcucmVuYW1lLXJlbW92ZSAucmVtb3ZlLCAucmVuYW1lLXJlbW92ZSAucmVuYW1lJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3JlbW92ZScpKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5SZW1vdmVGaWxlKGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuZGF0YXNldFsnb3JkZXInXSk7XHJcbiAgICAgICAgICAgIGlmIChlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdyZW5hbWUnKSlcclxuICAgICAgICAgICAgICAgIHRoaXMuUmVuYW1lRmlsZShlLmN1cnJlbnRUYXJnZXQsIGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuZGF0YXNldFsnb3JkZXInXSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5Gb3JtRmlsZXMuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy5OZXdGaWxlKCkpO1xyXG4gICAgICAgIHRoaXMuUHJpb3JpdHlTZWxlY3Qub25jaGFuZ2UgPSBlID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuUHJpb3JpdHlTZWxlY3QudmFsdWUgKyAnJyA9PT0gJzQnKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5FeGVjVGltZVBpY2tlci5UYXJnZXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdub25lJyk7XHJcbiAgICAgICAgICAgIGVsc2UgdGhpcy5FeGVjVGltZVBpY2tlci5UYXJnZXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdub25lJyk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5FeGVjVGltZVBpY2tlciA9IG5ldyBMdXJlLlBlcmlvZFBpY2tlcih7XHJcbiAgICAgICAgICAgIFRhcmdldDogdGhpcy5TZWxlY3QoJy5ldmVudC1kYXRlJyksXHJcbiAgICAgICAgICAgIE5vUmFuZ2U6IHRydWUsXHJcbiAgICAgICAgICAgIERhdGVUYXJnZXQ6IEx1cmUuRGF0ZSgpLFxyXG4gICAgICAgICAgICBBdXRvQ29uZmlybTogdHJ1ZSxcclxuICAgICAgICAgICAgQnV0dG9uRnVsbHNjcmVlbjogZmFsc2UsXHJcbiAgICAgICAgICAgIE9uQ29uZmlybTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy8gRkQodGhpcy5EYXRlLCB0cnVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxuICAgIC8qLCBEaWFsb2c6IHtcclxuICAgICAgICBCbHVyOiAnLm5ldy1yZXF1ZXN0cyAud2lkZ2V0cycsIC8vSGVscERlc2suTmV3UmVxLkNvbnRlbnQgaXMgdW5kZWZpbmVkIHJpZ2h0IG5vd1xyXG4gICAgICAgIENsb3NlOiBmYWxzZVxyXG4gICAgfSovXHJcblxyXG59KTtcclxuIiwiY29uc3QgRCA9IHJlcXVpcmUoJy4uL19jb21tb24vZGljdGlvbmFyeScpO1xyXG5cclxuLyoqXHJcbiAqIEBjbGFzcyBNZXRlclxyXG4gKi9cclxubGV0IE1ldGVyID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnTWV0ZXInLFxyXG4gICAgVGFyZ2V0OiAnLmJvZHknLFxyXG4gICAgVHlwZTogJ2NvbnRlbnQnLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtbWV0ZXInXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRC5Sb2xlLk1ldGVyXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwibWV0ZXIgY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpYXJ5LWJyZWFkIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpIGRhdGUtcmFuZ2VcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhbGVuZGFyLWljb25cIj4mIzEyODE5ODs8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVzXCI+e3tEYXRlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGkgbC1yb3cgbC1mbGV4YS1jZW50ZXIgZmxleC0xMDBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7Qn9C+0LTRgNCw0LfQtNC10LvQtdC90LjQtTogJm5ic3A7Jm5ic3A7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTEwMCBsaWJyYXJ5LXRyZWUtY29udHJvbCBzdHJvbmdcIj5fXzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWJzIG1ldGVyLXdyYXAgbC1yb3cgbC1mbGV4LTEwMFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgTGlicmFyeU5hbWVWaXN1YWw6ICfQkdC40LHQu9C40L7RgtC10LrQsCDihJYxMyDQuNC80LXQvdC4INCdLtCTLiDQp9C10YDQvdGL0YjQtdCy0YHQutC+0LPQvicsXHJcbiAgICAgICAgRGF0ZTogTHVyZS5EYXRlKCkuRm9ybWF0KCdERCBNTU1NIFlZWVknLCB0cnVlKSxcclxuICAgICAgICBMaWJyYXJ5SURMaXN0U2VsZWN0ZWQ6IFtdXHJcbiAgICB9LFxyXG4gICAgLyoqIEBsZW5kcyBNZXRlciAqL1xyXG4gICAgR2V0U2V0OiB7XHJcbiAgICAgICAgZ2V0IEN1cnJlbnRMaWJyYXJ5SUQoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUlETGlzdFNlbGVjdGVkWzBdO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0IEN1cnJlbnRTdWJDb250ZW50KCl7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLkdldFN1YkNvbnRlbnRMaXN0KClcclxuICAgICAgICAgICAgICAgIC5XaGVyZSh4PT54LmlzQWN0aXZlKVxyXG4gICAgICAgICAgICAgICAgLkZpcnN0T3JEZWZhdWx0KCk7XHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBCZWZvcmVTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5TaG93U3ViQ29udGVudCgpO1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyB0aGlzLkdldFN1YkNvbnRlbnRMaXN0KClcclxuICAgICAgICAvLyAgICAgLldoZXJlKHg9PnguaXNBY3RpdmUpXHJcbiAgICAgICAgLy8gICAgIC5GaXJzdE9yRGVmYXVsdCgpXHJcbiAgICAgICAgLy8gICAgIC5SZWZyZXNoKCk7XHJcbiAgICAgICAgLy90aGlzLk1ldGVySW5jb21pbmcuUmVmcmVzaCgpO1xyXG5cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuVGFicyA9IHRoaXMuU2VsZWN0QWxsKCcucmVxLXRhYicpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyB0aGlzLlNldFRhYkZpbHRlciA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgLy8gICAgIGlmIChlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzZWxlY3RlZCcpKVxyXG4gICAgICAgIC8vICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIC8vICAgICBmb3IgKGxldCB0IG9mIHRoaXMuVGFicyl7XHJcbiAgICAgICAgLy8gICAgICAgICB0LmNsYXNzTGlzdC5yZW1vdmUoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyAgICAgZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgLy8gICAgIGxldCBNZXRlclR5cGVzID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ3R5cGUnXS5zcGxpdCgnLCcpLlNlbGVjdCh4PT5wYXJzZUludCh4KSk7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuQ3VycmVudFN1YkNvbnRlbnQuQ29udHJvbGxlci5GaWx0ZXIoKHgpPT5NZXRlclR5cGVzLmluZGV4T2YoeC5UeXBlSUQpPi0xIHx8IE1ldGVyVHlwZXMuaW5kZXhPZigtMSk+LTEpO1xyXG4gICAgICAgIC8vIH1cclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy9sZXQgU2VsZWN0ZWREZWZhdWx0ID0gWzIyXTtcclxuICAgICAgICBsZXQgU2VsZWN0ZWREZWZhdWx0ID0gW0x1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdC5TZWxlY3QoeD0+eC5JRCkuRmlyc3RPckRlZmF1bHQoKV07XHJcbiAgICAgICAgbmV3IExpYnJhcnlUcmVlKHRoaXMsIHRoaXMuU2VsZWN0KCcubGlicmFyeS10cmVlLWNvbnRyb2wnKSwge1xyXG4gICAgICAgICAgICBTZWxlY3RlZExpc3Q6IFNlbGVjdGVkRGVmYXVsdCxcclxuICAgICAgICAgICAgT25TZWxlY3Q6IChTZWxlY3RlZCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuU3RhdGUuTGlicmFyeUlETGlzdFNlbGVjdGVkID0gU2VsZWN0ZWQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuU3RhdGUuTGlicmFyeUlETGlzdFNlbGVjdGVkID0gU2VsZWN0ZWREZWZhdWx0O1xyXG5cclxuXHJcblxyXG4gICAgICAgIC8vdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcubWV0ZXItaGVhZGVyIC5yZXEtdGFiJywgKGUpPT50aGlzLlNldFRhYkZpbHRlcihlKSk7XHJcbiAgICB9XHJcbn0pO1xyXG53aW5kb3cuTWV0ZXIgPSBNZXRlcjtcclxubW9kdWxlLmV4cG9ydHMgPSBNZXRlcjtcclxuXHJcbnJlcXVpcmUoJy4vTWV0ZXJJbmNvbWluZy9NZXRlckluY29taW5nJyk7XHJcbnJlcXVpcmUoJy4vTWV0ZXJFZGl0b3IvTWV0ZXJFZGl0b3InKTtcclxucmVxdWlyZSgnLi9NZXRlckNvbW1vbkluZm8vTWV0ZXJDb21tb25JbmZvJyk7XHJcbiIsImNvbnN0IEQgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuTWV0ZXIuTWV0ZXJDb21tb25JbmZvID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IE1ldGVyLFxyXG4gICAgTmFtZTogJ01ldGVyQ29tbW9uSW5mbycsXHJcbiAgICBSb3V0ZTogZmFsc2UsXHJcbiAgICBUYXJnZXQ6ICcuc3VicycsXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cIm1ldGVyLWNvbW1vbi1pbmZvIG1ldGVyLXNpZGViYXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaWRlLXRvcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt7TGlicmFyeU5hbWV9fVxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLWNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtaGVhZGVyXCI+0JrQoNCQ0KLQmtCQ0K8g0JjQndCk0J7QoNCc0JDQptCY0K88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZGF0YS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLW5hbWVcIj7QmNC90LTQtdC60YE8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+e3tJbmRleH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1kYXRhLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtbmFtZVwiPtCQ0LTRgNC10YE8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+e3tBZGRyZXNzfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWRhdGEtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1uYW1lXCI+0J/Qu9C+0YnQsNC00Yw8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+e3tTcXVhcmV9fSDQvDxzcGFuIGNsYXNzPVwic3VwLXNtYWxsXCI+Mjwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1oZWFkZXJcIj7QrdCb0JXQmtCi0KDQmNCn0JXQodCi0JLQnjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1kYXRhLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtbmFtZVwiPtCU0L7Qs9C+0LLQvtGAPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS12YWx1ZVwiPnt7Q29udHJhY3R9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZGF0YS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLW5hbWVcIj7QndC+0LzQtdGAINCw0LHQvtC90LXQvdGC0LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+e3tDb250cmFjdFVzZXJOdW1iZXJ9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZGF0YS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLW5hbWVcIj7QotCw0YDQuNGEPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS12YWx1ZVwiPnt7VGFyaWZmRWxlY3RyaWNpdHl9fSDRgNGD0LEv0JrQktGC4ouF0Kc8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWRhdGEtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1uYW1lXCI+0KHRh9C10YLRh9C40LrQvtCyPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS12YWx1ZVwiPnt7TWV0ZXJFbGVjdHJpY2l0eUNvdW50fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1oZWFkZXJcIj7QktCe0JTQntCh0J3QkNCR0JbQldCd0JjQlTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1kYXRhLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtbmFtZVwiPtCU0L7Qs9C+0LLQvtGAPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS12YWx1ZVwiPnt7Q29udHJhY3R9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZGF0YS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLW5hbWVcIj7QotCw0YDQuNGEPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS12YWx1ZVwiPnt7VGFyaWZmV2F0ZXJDb2xkfX0g0YDRg9CxL9C8PHNwYW4gY2xhc3M9XCJzdXAtc21hbGxcIj4zPC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZGF0YS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLW5hbWVcIj7QodGH0LXRgtGH0LjQutC+0LI8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+0KXQktChOiB7e01ldGVyV2F0ZXJDb2xkQ291bnR9fSwg0JPQktChOiB7e01ldGVyV2F0ZXJIb3RDb3VudH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2lkZS1ib3R0b21cIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1jYXJkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlclwiPtCX0JDQktCV0JTQo9Cu0KnQmNCZINCR0JjQkdCb0JjQntCi0JXQmtCe0Jk8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZGF0YS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+e3tDb21tb25JbmZvLm1hbmFnZXJTdXJuYW1lfX0ge3tDb21tb25JbmZvLk1hbmFnZXJOYW1lfX0ge3tDb21tb25JbmZvLk1hbmFnZXJNaWRkbGVOYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWRhdGEtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YS1uYW1lXCI+0KLQtdC70LXRhNC+0L08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhLXZhbHVlXCI+Kzcge3tDb21tb25JbmZvLk1hbmFnZXJQaG9uZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1kYXRhLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtbmFtZVwiPmUtbWFpbDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGEtdmFsdWVcIj57e0NvbW1vbkluZm8uTWFuYWdlckVtYWlsfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIExvYWQ6ICcnLFxyXG4gICAgU3RhdGU6IHtcclxuICAgICAgICBEYXRlOiBMdXJlLkRhdGUoKS5Gb3JtYXQoJ0REIE1NTU0gWVlZWScsIHRydWUpLFxyXG4gICAgICAgIExpYnJhcnlOYW1lOiAn0JHQuNCx0LvQuNC+0YLQtdC60LAg4oSWMTMg0LjQvNC10L3QuCDQnS7Qky4g0KfQtdGA0L3Ri9GI0LXQstGB0LrQvtCz0L4nLFxyXG4gICAgICAgIEluZGV4OiAnMTE1MTg0JyxcclxuICAgICAgICBBZGRyZXNzOiAn0YPQuy4g0JHQvtC70YzRiNCw0Y8g0KLQsNGC0LDRgNGB0LrQsNGPLCDQtC4zMicsXHJcbiAgICAgICAgU3F1YXJlOiAzOTAsXHJcblxyXG4gICAgICAgIENvbW1vbkluZm86IHtcclxuICAgICAgICAgICAgTWFuYWdlck5hbWU6ICcnLFxyXG4gICAgICAgICAgICBNYW5hZ2VyTWlkZGxlTmFtZTogJycsXHJcbiAgICAgICAgICAgIG1hbmFnZXJTdXJuYW1lOiAnJyxcclxuICAgICAgICAgICAgTWFuYWdlclBob25lOiAnJyxcclxuICAgICAgICAgICAgTWFuYWdlckVtYWlsOiAnJyxcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBDb250cmFjdFVzZXJOdW1iZXI6ICc5ODctNjU0LTMyMScsXHJcbiAgICAgICAgQ29udHJhY3Q6ICfihJYxMjM0NTYgMDEuMDEuMTk3MCcsXHJcbiAgICAgICAgVGFyaWZmV2F0ZXJDb2xkOiAwLFxyXG4gICAgICAgIFRhcmlmZldhdGVySG90OiAwLFxyXG4gICAgICAgIFRhcmlmZkVsZWN0cmljaXR5OiAwLFxyXG4gICAgICAgIE1ldGVyV2F0ZXJDb2xkQ291bnQ6IDAsXHJcbiAgICAgICAgTWV0ZXJXYXRlckhvdENvdW50OiAwLFxyXG4gICAgICAgIE1ldGVyRWxlY3RyaWNpdHlDb3VudDogMCxcclxuXHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICBhcGkuUGFzc3BvcnRfR2V0KE1ldGVyLkN1cnJlbnRMaWJyYXJ5SUQsIHtcclxuICAgICAgICAgICAgVGhlbjogKHgpID0+IHtcclxuICAgICAgICAgICAgICAgIHggPSBKU09OLnBhcnNlKHgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKEx1cmUuT2JqZWN0LmlzRW1wdHkoeCkpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBTdCA9IHRoaXMuU3RhdGU7XHJcbiAgICAgICAgICAgICAgICBTdC5Db21tb25JbmZvID0geC5Db21tb25JbmZvO1xyXG4gICAgICAgICAgICAgICAgU3QuTGlicmFyeU5hbWUgPSB4LkNvbW1vbkluZm8uTGlicmFyeU5hbWU7XHJcbiAgICAgICAgICAgICAgICBTdC5TcXVhcmUgPSB4LlBvc2l0aW9uLkJ1aWxkaW5nU3F1YXJlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcblxyXG5cclxuXHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcblxyXG5cclxuICAgIH1cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE1ldGVyLk1ldGVyQ29tbW9uSW5mbztcclxuXHJcbiIsImNvbnN0IEhpc3RvcnlTdWJzY3JpcHRpb24gPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2hpc3RvcnktbWFzdGVyL2hpc3Rvcnktc3Vic2NyaXB0aW9uJyk7XHJcbmNvbnN0IEQgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuXHJcbi8qKlxyXG4gKiBAY2xhc3MgTWV0ZXJFZGl0b3JcclxuICovXHJcbmNvbnN0IE1ldGVyRWRpdG9yID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IE1ldGVyLFxyXG4gICAgTmFtZTogJ01ldGVyRWRpdG9yJyxcclxuICAgIFR5cGU6ICdtZXRlci1jb250ZW50JyxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LW1ldGVyLW1hbmFnZW1lbnQnXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRC5Sb2xlLk1ldGVyQ3JlYXRlLCBELlJvbGUuTWV0ZXJFZGl0XVxyXG4gICAgfSxcclxuICAgIFRhcmdldDogJy5zdWJzJyxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwibWV0ZXItZWRpdG9yIG1ldGVyLWNvbnRlbnQgbC1jb2xcIj5cclxuICAgICAgICAgICAgICAgIDxoMSBjbGFzcz1cImgxXCI+0KLQsNGA0LjRhNGLPC9oMT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YXJpZmYtbGlzdCBsLXJvd1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGgxIGNsYXNzPVwiaDFcIj7Qn9GA0LjQsdC+0YDRiyDRg9GH0LXRgtCwPC9oMT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXRlci1saXN0IGwtZmxleC0xMDBcIj48L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgTG9hZDogJycsXHJcbiAgICBTdGF0ZToge1xyXG4gICAgICAgIERhdGU6IEx1cmUuRGF0ZSgpLkZvcm1hdCgnREQgTU1NTSBZWVlZJywgdHJ1ZSksXHJcbiAgICAgICAgTGlicmFyeU5hbWVWaXN1YWw6ICcnLFxyXG4gICAgICAgIFRhcmlmZkxpc3Q6IFtdLFxyXG4gICAgfSxcclxuICAgIFByb3BUeXBlczoge1xyXG4gICAgICAgIERhdGVDcmVhdGVkOiBMdXJlLlByb3BUeXBlcy5EYXRlXHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgIFR5cGVJRDogICh0KT0+RC5NZXRlclR5cGVEaWN0W3RdLFxyXG4gICAgICAgIERhdGVDcmVhdGVkOiAoZCk9Pkx1cmUuRGF0ZShkKS5Gb3JtYXQoJ01NTU0gWVlZWScpLFxyXG4gICAgICAgIERhdGVWZXJpZmljYXRpb246IChkKT0+THVyZS5EYXRlKCkuRm9ybWF0KCdERC5NTS5ZWVlZJyksXHJcbiAgICAgICAgRGF0ZUV4cGlyZWQ6IChkKT0+THVyZS5EYXRlKGQpLkZvcm1hdCgnREQuTU0uWVlZWScpLFxyXG4gICAgICAgIERhdGVTdGFydDogKGQpPT5MdXJlLkRhdGUoZCkuRm9ybWF0KCdERC5NTS5ZWVlZJyksXHJcbiAgICB9LFxyXG4gICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgIFRhcmdldDogJy5tZXRlci1saXN0JyxcclxuICAgICAgICBMaXN0RWxlbWVudDogYDxkaXYgY2xhc3M9XCJtZXRlci1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCi0LjQvyDRgdGH0LXRgtGH0LjQutCwOiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7VHlwZUlEfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCd0L7QvNC10YA6IDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlIFwiPnt7TnVtYmVyfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCi0LjQvzogPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUgXCI+e3tNb2RlbH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QotC10LrRg9GJ0LXQtSDQt9C90LDRh9C10L3QuNC1OiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7VmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JLQstC+0LQg0LIg0Y3QutGB0L/Qu9GD0LDRgtCw0YbQuNGOOiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZSBcIj57e0RhdGVDcmVhdGVkfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gXHJcbiAgICB9LFxyXG4gICAgLyoqIEBwcml2YXRlICovXHJcbiAgICBCZWZvcmVTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuTG9hZC5TaG93KCk7XHJcblxyXG4gICAgICAgIEx1cmUuQ2FsbChcclxuICAgICAgICAgICAgUHJvbWlzZS5hbGwoW1xyXG4gICAgICAgICAgICAgICAgdGhpcy5HZXRNZXRlcnMoKSxcclxuICAgICAgICAgICAgICAgIHRoaXMuR2V0VGFyaWZmKCksXHJcbiAgICAgICAgICAgIF0pLCB7XHJcbiAgICAgICAgICAgICAgICBGaW5hbGx5OiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIC8qKiBAcHJpdmF0ZSAqL1xyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL2RlYnVnZ2VyXHJcbiAgICAgICAgdGhpcy5Db250cm9sbGVyVGFyaWZmID0gbmV3IEx1cmUuQ29udHJvbGxlci5UZW1wbGF0b3Ioe1xyXG4gICAgICAgICAgICBUYXJnZXQ6ICcudGFyaWZmLWxpc3QnLFxyXG4gICAgICAgICAgICBEYXRhOiB0aGlzLlN0YXRlLlRhcmlmZkxpc3QsXHJcbiAgICAgICAgICAgIExpc3RFbGVtZW50OiBgPGRpdiBjbGFzcz1cInRhcmlmZi1pdGVtIGwtZmxleC0xMDBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkXCI+e3tUeXBlSUR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCX0L3QsNGH0LXQvdC40LU6IDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7VmFsdWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JTQtdC50YHRgtCy0YPQtdGCINGBOiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e0RhdGVTdGFydH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QlNC10LnRgdGC0LLRg9C10YIg0LTQvjogPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tEYXRlRXhwaXJlZH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyIGwtcm93IGwtZmxleC1lbmRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGwtYnV0dG9uIGJ0bi10YXJpZmYtYWRkXCI+0JTQvtCx0LDQstC40YLRjCDRgtCw0YDQuNGEPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgICAgICAgICAgUHJvcFR5cGVzOiB7XHJcbiAgICAgICAgICAgICAgICBWYWx1ZTogTHVyZS5Qcm9wVHlwZXMuVUludCxcclxuICAgICAgICAgICAgICAgIERhdGVTdGFydDogTHVyZS5Qcm9wVHlwZXMuRGF0ZSxcclxuICAgICAgICAgICAgICAgIERhdGVFeHBpcmVkOiBMdXJlLlByb3BUeXBlcy5EYXRlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQcm9wRm9ybWF0OiB7XHJcbiAgICAgICAgICAgICAgICBUeXBlSUQ6ICAodCk9PkQuTWV0ZXJUeXBlRGljdFt0XSxcclxuICAgICAgICAgICAgICAgIFZhbHVlOiAodiwgbyk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAodiA9PT0gbnVsbClcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnPHNwYW4gY2xhc3M9XCJzcGFuLXNldHVwIGJ0bi1zZXQtdGFyaWZmIGwtaGludFwiIGRhdGEtaGludD1cItCX0LDQtNCw0YLRjCDRgtC10LrRg9GJ0LjQuSDRgtCw0YDQuNGEXCI+0L3QtSDQt9Cw0LTQsNC90L48L3NwYW4+JztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoby5UeXBlSUQgPT09IEQuTWV0ZXJUeXBlLldhdGVySG90IHx8IG8uVHlwZUlEID09PSBELk1ldGVyVHlwZS5XYXRlckNvbGQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYDxzcGFuPiR7dn0g0YDRg9CxL9C8PHNwYW4gZGF0YS1sc21hcnRpPVwiMjgxM1wiIGNsYXNzPVwic3VwLXNtYWxsXCI+Mzwvc3Bhbj48L3NwYW4+YFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChvLlR5cGVJRCA9PT0gRC5NZXRlclR5cGUuRWxlY3RyaWNpdHkpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYDxzcGFuPiR7dn0g0YDRg9CxL9C60JLRguKLhdGHPC9zcGFuPmBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAke3Z9INGA0YPQsS/QutCzYFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIERhdGVFeHBpcmVkOiAoZCk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZCAhPT0gbnVsbClcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuRGF0ZShkKS5Gb3JtYXQoJ0QgTU1NTU0gWVlZWScpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnPHNwYW4gY2xhc3M9XCJzcGFuLXNldHVwIGJ0bi1zZXQtbmV4dC10YXJpZmYgbC1oaW50XCIgZGF0YS1oaW50PVwi0JfQsNC00LDRgtGMINGB0LvQtdC00YPRjtGJ0LjQuSDRgtCw0YDQuNGEXCI+0YHQu9C10LTRg9GO0YnQuNC5INGC0LDRgNC40YQg0L3QtSDQt9Cw0LTQsNC9PC9zcGFuPic7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRGF0ZVN0YXJ0OiAoZCk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZCAhPT0gbnVsbClcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEx1cmUuRGF0ZShkKS5Gb3JtYXQoJ0QgTU1NTU0gWVlZWScpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAn0YLQsNGA0LjRhCDQvdC1INC30LDQtNCw0L0nO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgT3duZXI6IHRoaXNcclxuICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuVGFyaWZmQWRkVHlwZSA9IHtcclxuICAgICAgICAgICAgQ3VycmVudDogMCxcclxuICAgICAgICAgICAgTmV4dDogMSxcclxuICAgICAgICAgICAgTmV3T25lOiAyLFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKiogQHByaXZhdGUgKi9cclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkdldE1ldGVycyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGFwaS5NZXRlcl9NZXRlckxpc3RHZXQoMjIsIC0xLCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAobWV0ZXJzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKG1ldGVycyk7XHJcbiAgICAgICAgICAgICAgICAgICAgTWV0ZXIuTWV0ZXJDb21tb25JbmZvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICBNZXRlci5NZXRlckNvbW1vbkluZm8uUHJvdG8uU2V0UHJvcGVydHkoJ01ldGVyV2F0ZXJDb2xkQ291bnQnLCBtZXRlcnMuV2hlcmUobT0+bS5UeXBlSUQgPT09IEQuTWV0ZXJUeXBlLldhdGVyQ29sZCkubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICBNZXRlci5NZXRlckNvbW1vbkluZm8uUHJvdG8uU2V0UHJvcGVydHkoJ01ldGVyV2F0ZXJIb3RDb3VudCcsIG1ldGVycy5XaGVyZShtPT5tLlR5cGVJRCA9PT0gRC5NZXRlclR5cGUuV2F0ZXJIb3QpLmxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICAgICAgTWV0ZXIuTWV0ZXJDb21tb25JbmZvLlByb3RvLlNldFByb3BlcnR5KCdNZXRlckVsZWN0cmljaXR5Q291bnQnLCBtZXRlcnMuV2hlcmUobT0+bS5UeXBlSUQgPT09IEQuTWV0ZXJUeXBlLkVsZWN0cmljaXR5KS5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkdldFRhcmlmZiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGFwaS5NZXRlcl9UYXJpZmZHZXQoe1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKHRhcmlmZik9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2xsZXJUYXJpZmYuUmVmcmVzaCh0YXJpZmYpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5BZGRUYXJpZmYgPSBmdW5jdGlvbiAoTGluZUlELCBUYXJpZmZBZGRUeXBlKSB7XHJcbiAgICAgICAgICAgIGxldCBEYXRhID0gdGhpcy5Db250cm9sbGVyVGFyaWZmLkdldERhdGFJdGVtQnlMaW5lSUQoTGluZUlEKS5EYXRhO1xyXG4gICAgICAgICAgICBsZXQgRGF0ZU1pbiA9IG51bGw7XHJcbiAgICAgICAgICAgIGxldCBWYWx1ZSA9IDA7XHJcbiAgICAgICAgICAgIGlmIChUYXJpZmZBZGRUeXBlICE9PSB0aGlzLlRhcmlmZkFkZFR5cGUuQ3VycmVudCl7XHJcbiAgICAgICAgICAgICAgICBEYXRlTWluID0gTHVyZS5EYXRlKCkuQWRkRGF5cygxKS5EYXlTdGFydDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlRhcmlmZlNldHRlci5SdW4oe1xyXG4gICAgICAgICAgICAgICAgVHlwZUlEOiBEYXRhLlR5cGVJRCxcclxuICAgICAgICAgICAgICAgIFRhcmlmZkFkZFR5cGU6IFRhcmlmZkFkZFR5cGUsXHJcbiAgICAgICAgICAgICAgICBUYXJpZmZJRDogLTEsXHJcblxyXG4gICAgICAgICAgICAgICAgVmFsdWU6IFZhbHVlLFxyXG4gICAgICAgICAgICAgICAgRGF0ZVZhbHVlOiBEYXRlTWluICE9PSBudWxsID8gRGF0ZU1pbjogbmV3IERhdGUoKSxcclxuXHJcbiAgICAgICAgICAgICAgICBEYXRlTWluOiBEYXRlTWluLFxyXG4gICAgICAgICAgICAgICAgTGluZUlEOiBMaW5lSUQsXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBEYXRhLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfSxcclxuICAgIC8qKiBAcHJpdmF0ZSAqL1xyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmJ0bi1zZXQtdGFyaWZmJywgKGUsIHApPT50aGlzLkFkZFRhcmlmZihwLkxpbmVJRCwgdGhpcy5UYXJpZmZBZGRUeXBlLkN1cnJlbnQpKTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5idG4tc2V0LW5leHQtdGFyaWZmLCAuYnRuLXRhcmlmZi1hZGQnLCAoZSwgcCk9PnRoaXMuQWRkVGFyaWZmKHAuTGluZUlELCB0aGlzLlRhcmlmZkFkZFR5cGUuTmV4dCkpO1xyXG4gICAgfVxyXG59KTtcclxuTWV0ZXIuTWV0ZXJFZGl0b3IgPSBNZXRlckVkaXRvcjtcclxucmVxdWlyZSgnLi9UYXJpZmZTZXR0ZXIvVGFyaWZmU2V0dGVyJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE1ldGVyLk1ldGVyRWRpdG9yO1xyXG4iLCJjb25zdCBEID0gcmVxdWlyZSgnLi4vLi4vLi4vX2NvbW1vbi9kaWN0aW9uYXJ5Jyk7XHJcblxyXG4vKipcclxuICogQGNsYXNzIFRhcmlmZlNldHRlclxyXG4gKi9cclxuY29uc3QgVGFyaWZmU2V0dGVyID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IE1ldGVyLk1ldGVyRWRpdG9yLFxyXG4gICAgTmFtZTogJ1RhcmlmZlNldHRlcicsXHJcbiAgICBSb3V0ZTogZmFsc2UsXHJcbiAgICBEaWFsb2c6IHtcclxuXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJtZXRlci10YXJpZmYtc2V0dGVyXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZFwiPtCj0YHRgtCw0L3QvtCy0LrQsCDRgtCw0YDQuNGE0LAge3tUeXBlSUR9fTwvZGl2PiBcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjbG9zZSBsLWNsb3NlXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5uZXItY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JfQvdCw0YfQtdC90LjQtTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWUgbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaXZcIj48aW5wdXQgY2xhc3M9XCJ0ZXh0Ym94IGwtdGV4dGJveCB0YngtdmFsdWVcIiB0eXBlPVwibnVtYmVyXCIgIG1pbj1cIjBcIiB2YWx1ZT1cInt7VmFsdWV9fVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV4dGVuc2lvblwiPiZuYnNwO3t7RXh0ZW5zaW9ufX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QlNC10LnRgdGC0LLRg9C10YIg0YE8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+PGRpdiBjbGFzcz1cImRhdGUtcGlja2VyXCI+e3tEYXRlVmFsdWV9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyIGwtcm93IGwtZmxleC1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiBsLWJ1dHRvbiBidG4tY29tbWl0XCI+0JfQsNC/0LjRgdCw0YLRjCDRgtCw0YDQuNGEPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgU3RhdGU6IHtcclxuICAgICAgICBUeXBlSUQ6IC0xLFxyXG4gICAgICAgIFZhbHVlOiAwLFxyXG4gICAgICAgIERhdGVWYWx1ZTogMCxcclxuICAgICAgICBEYXRlTWluOiBudWxsLFxyXG4gICAgfSxcclxuICAgIFByb3BUeXBlczoge1xyXG4gICAgICAgIERhdGVWYWx1ZTogTHVyZS5Qcm9wVHlwZXMuRGF0ZVxyXG4gICAgfSxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBUeXBlSUQ6ICAodCk9PkQuTWV0ZXJUeXBlRGljdFt0XSxcclxuICAgICAgICBEYXRlVmFsdWU6IChkKT0+THVyZS5EYXRlKGQpLkZvcm1hdCgnREQgTU1NTU0gWVlZWScpLFxyXG4gICAgICAgIEV4dGVuc2lvbjogKHYsIG8pPT57XHJcbiAgICAgICAgICAgIGlmIChvLlR5cGVJRCA9PT0gRC5NZXRlclR5cGUuV2F0ZXJIb3QgfHwgby5UeXBlSUQgPT09IEQuTWV0ZXJUeXBlLldhdGVyQ29sZCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYDxzcGFuPtGA0YPQsS/QvDxzcGFuIGRhdGEtbHNtYXJ0aT1cIjI4MTNcIiBjbGFzcz1cInN1cC1zbWFsbFwiPjM8L3NwYW4+PC9zcGFuPmBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChvLlR5cGVJRCA9PT0gRC5NZXRlclR5cGUuRWxlY3RyaWNpdHkpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGA8c3Bhbj7RgNGD0LEv0LrQktGC4ouF0Yc8L3NwYW4+YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBgJHt2fSDRgNGD0LEv0LrQs2BcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIHRoaXMuVGV4dGJveFZhbHVlID0gdGhpcy5TZWxlY3QoJy50YngtdmFsdWUnKTtcclxuICAgICAgICB0aGlzLkJ1dHRvbkNvbW1pdCA9IHRoaXMuU2VsZWN0KCcuYnRuLWNvbW1pdCcpO1xyXG4gICAgICAgIHRoaXMuRGF0ZVBpY2tlciA9IG5ldyBMdXJlLlBlcmlvZFBpY2tlcih7XHJcbiAgICAgICAgICAgIFRhcmdldDogdGhpcy5TZWxlY3QoJy5kYXRlLXBpY2tlcicpLFxyXG4gICAgICAgICAgICBOb1JhbmdlOiB0cnVlLFxyXG4gICAgICAgICAgICBGb3JtYXQ6ICdERCBNTU1NTSBZWVlZJyxcclxuICAgICAgICAgICAgT25Db25maXJtOiAoZGF0ZSk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuU3RhdGUuRGF0ZVZhbHVlID0gZGF0ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5SdW4gPSBmdW5jdGlvbiAoUGFyYW1zKSB7XHJcbiAgICAgICAgICAgIHRoaXMuRGF0ZVBpY2tlci5NaW4gPSBQYXJhbXMuRGF0ZU1pbjtcclxuICAgICAgICAgICAgdGhpcy5EYXRlUGlja2VyLkRhdGUgPSBQYXJhbXMuRGF0ZVZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goUGFyYW1zKTtcclxuICAgICAgICAgICAgdGhpcy5TaG93KCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICAvKiogQHB1YmxpYyAqL1xyXG4gICAgICAgIC8qKiBAdGhpcyBUYXJpZmZTZXR0ZXIgKi9cclxuICAgICAgICB0aGlzLlNldFZhbHVlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgVmFsdWUgPSBwYXJzZUludCh0aGlzLlRleHRib3hWYWx1ZS52YWx1ZSk7XHJcbiAgICAgICAgICAgIGlmIChWYWx1ZSA8PSAwIHx8IGlzTmFOKFZhbHVlKSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uV2Fybign0JLQstC10LTQuNGC0LUg0LfQvdCw0YfQtdC90LjQtScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2sodGhpcy5CdXR0b25Db21taXQpO1xyXG4gICAgICAgICAgICBjb25zdCBTdCA9IHRoaXMuU3RhdGU7XHJcbiAgICAgICAgICAgIGFwaS5NZXRlcl9UYXJpZmZBZGQoU3QuVHlwZUlELCBTdC5UYXJpZmZJRCwgU3QuRGF0ZVZhbHVlLCBTdC5WYWx1ZSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKFRhcmlmZklEKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChUYXJpZmZJRCA+IDAgJiYgU3QuRGF0YS5UYXJpZmZJRCA9PT0gVGFyaWZmSUQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBTdC5EYXRhLlZhbHVlID0gU3QuVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFN0LkRhdGEuRGF0ZVN0YXJ0ID0gU3QuRGF0ZVZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoVGFyaWZmSUQgPiAwICYmIFN0LkRhdGEuVGFyaWZmTmV4dElEID09PSBUYXJpZmZJRCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFN0LkRhdGEuVmFsdWVOZXh0ID0gU3QuVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFN0LkRhdGEuRGF0ZUV4cGlyZWQgPSBTdC5EYXRlVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFyZW50LkNvbnRyb2xsZXJUYXJpZmYuUmVmcmVzaChTdC5MaW5lSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgIE1ldGVyLk1ldGVyRWRpdG9yLkdldFRhcmlmZigpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5CdXR0b24uUmVsZWFzZSh0aGlzLkJ1dHRvbkNvbW1pdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvKiogQHByaXZhdGUgKi9cclxuICAgICAgICAgICAgLyoqIEB0aGlzIFRhcmlmZlNldHRlciAqL1xyXG4gICAgICAgICAgICB0aGlzLlNldFZhbHVlUHJpdmF0ZVRlc3QgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkJ1dHRvbkNvbW1pdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT50aGlzLlNldFZhbHVlKCkpO1xyXG4gICAgICAgIHRoaXMuVGV4dGJveFZhbHVlLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKCk9PnRoaXMuU3RhdGUuVmFsdWU9cGFyc2VGbG9hdCh0aGlzLlRleHRib3hWYWx1ZS52YWx1ZSkpO1xyXG5cclxuICAgIH1cclxufSk7XHJcblxyXG5NZXRlci5UYXJpZmZTZXR0ZXIgPSBUYXJpZmZTZXR0ZXI7XHJcbm1vZHVsZS5leHBvcnRzID0gTWV0ZXIuVGFyaWZmU2V0dGVyO1xyXG5cclxuXHJcbiIsImNvbnN0IEhpc3RvcnlTdWJzY3JpcHRpb24gPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2hpc3RvcnktbWFzdGVyL2hpc3Rvcnktc3Vic2NyaXB0aW9uJyk7XHJcbmNvbnN0IEQgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuXHJcbk1ldGVyLk1ldGVySW5jb21pbmcgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogTWV0ZXIsXHJcbiAgICBOYW1lOiAnTWV0ZXJJbmNvbWluZycsXHJcbiAgICBUeXBlOiAnbWV0ZXItY29udGVudCcsXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1tZXRlci1pbmNvbWluZydcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtELlJvbGUuTWV0ZXJdXHJcbiAgICB9LFxyXG4gICAgVGFyZ2V0OiAnLnN1YnMnLFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJtZXRlci1lZGl0b3IgbWV0ZXItY29udGVudCBsLWNvbCBsLWZsZXgtMTAwXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWV0ZXItaGVhZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIG0tYWxsIGFjdGl2ZVwiICAgZGF0YS10eXBlPVwiLTFcIj7QktCh0JU8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgbS13YXRlci1jb2xkXCIgICBkYXRhLXR5cGU9XCIwXCI+0KXQktChPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIG0td2F0ZXItaG90XCIgICAgZGF0YS10eXBlPVwiMVwiPtCT0JLQoTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBtLWxpZ2h0XCIgICAgICAgIGRhdGEtdHlwZT1cIjJcIj7QrdCb0JXQmtCi0KDQmNCn0JXQodCi0JLQnjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWV0ZXItd2lkZ2V0LWxpc3QgbC1mbGV4LTEwMFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBUeXBlSUQ6ICAodCk9PkQuTWV0ZXJUeXBlRGljdFt0XSxcclxuICAgICAgICBEYXRlQ3JlYXRlZDogKGQpPT5MdXJlLkRhdGUoZCkuRm9ybWF0KCdNTU1NIFlZWVknKSxcclxuXHJcbiAgICAgICAgRGF0ZVZlcmlmaWNhdGlvbjogKGQpPT4gZD8gTHVyZS5EYXRlKCkuRm9ybWF0KCdERC5NTS5ZWVlZJykgOiAn0L3QtdGCINC00LDQvdC90YvRhScsXHJcbiAgICAgICAgRGF0ZUV4cGlyZWQ6IChkKT0+IGQ/IEx1cmUuRGF0ZShkKS5Gb3JtYXQoJ0RELk1NLllZWVknKTogJ9C90LXRgiDQtNCw0L3QvdGL0YUnLFxyXG4gICAgICAgIFRhcmlmZjogKHQsIG8pPT57XHJcbiAgICAgICAgICAgIGlmIChvLlR5cGVJRCA8IDIpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHQgKyBgINCg0YPQsS/QvDxzcGFuIGNsYXNzPVwic3VwLXNtYWxsXCI+Mzwvc3Bhbj5gXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHQgKyBgINCg0YPQsS/QutCS0YLii4XRh2BcclxuICAgICAgICB9LFxyXG4gICAgICAgIEZpbGVEYXRlQ3JlYXRlZDogKGQpPT5kP0x1cmUuRGF0ZShkKS5Gb3JtYXQoJ0RELk1NLllZWVknKTogJ9C90LXQuNC30LLQtdGB0YLQvdCw0Y8g0LTQsNGC0LAnLFxyXG4gICAgfSxcclxuICAgIENvbnRyb2xsZXI6IHtcclxuICAgICAgICBUYXJnZXQ6ICcubWV0ZXItd2lkZ2V0LWxpc3QnLFxyXG4gICAgICAgIExpc3RFbGVtZW50OiBgPGRpdiBjbGFzcz1cIm1ldGVyLXdpZGdldCB3aWRnZXRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1oZWFkXCI+4oSWe3tOdW1iZXJ9fSAoe3tUeXBlSUR9fSk8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1pbm5lci1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGF0IGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1ldGVyLWljb24gbWV0ZXItaWNvbi17eyR0aGlzLlR5cGVJRH19XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1ldGVyLWRlc2NyaXB0aW9uIGwtZmxleC0xMDBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpbmUgbC1yb3cgbC1mbGV4YS1jZW50ZXIgbC1mbGV4LWJldHdlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0JLQstC+0LQg0LIg0Y3QutGB0L/Qu9GD0LDRgtCw0YbQuNGOOjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+e3tEYXRlQ3JlYXRlZH19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZSBsLXJvdyBsLWZsZXhhLWNlbnRlciBsLWZsZXgtYmV0d2VlblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QotC40L86PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e01vZGVsfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lIGwtcm93IGwtZmxleGEtY2VudGVyIGwtZmxleC1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCf0L7RgdC70LXQtNC90Y/RjyDQv9C+0LLQtdGA0LrQsDo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2YWx1ZVwiPnt7RGF0ZVZlcmlmaWNhdGlvbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZSBsLXJvdyBsLWZsZXhhLWNlbnRlciBsLWZsZXgtYmV0d2VlblwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcHRpb25cIj7QodC70LXQtNGD0Y7RidCw0Y8g0L/QvtCy0LXRgNC60LA6PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj57e0RhdGVFeHBpcmVkfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmaWxlLXNsaWRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250cm9sLXNjcm9sbCBzY3JvbGwtbGVmdFwiPjw8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmlsZXMtbGlzdC13cmFwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggRmlsZXN9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXBsb2FkaW5nLWZpbGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmlsZS1pY29uXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpbGUtcGFyYW1zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lLXR5cGVcIj48c3BhbiBjbGFzcz1cImZpbGVuYW1lXCIgdGl0bGU9XCJ7e0ZpbGVOYW1lfX1cIj57e0ZpbGVOYW1lfX08L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZW5hbWUtcmVtb3ZlXCI+e3tGaWxlRGF0ZUNyZWF0ZWR9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVuYW1lLXJlbW92ZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJyZW1vdmUgYnRuLWZpbGUtcmVwbGFjZVwiIGRhdGEtaWQ9XCJ7e0ZpbGVJRH19XCI+0L7QsdC90L7QstC40YLRjDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicmVuYW1lIGJ0bi1maWxlLWRvd25sb2FkXCIgZGF0YS1pZD1cInt7RmlsZUlEfX1cIiBkYXRhLW5hbWU9XCJ7e0ZpbGVOYW1lfX1cIj7RgdC60LDRh9Cw0YLRjDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250cm9sLXNjcm9sbCBzY3JvbGwtcmlnaHRcIj4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YXJpZmYtaG9sZGVyIGwtcm93IGwtZmxleC1lbmRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFyaWZmXCI+e3tUYXJpZmZ9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQtdmFsdWVzXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWV0ZXItdmFsdWVzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZWFjaCBWYWx1ZXN9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXRlci1jb2xcIiBkYXRhLWRhdGU9XCJ7e0RhdGVWYWx1ZX19XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZWxsIG1ldGVyLWNhcHRpb25cIj57eyRnLkx1cmUuQ3VsdHVyZUluZm8ucnUuTW9udGhOYW1lc1Nob3J0W2pdfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbGwgbWV0ZXItdmFsdWVcIiB7eyNkYXRhLWxpbmV9fSBkYXRhLWo9XCJ7e2p9fVwiIHRpdGxlPVwie3tWYWx1ZX19XCI+e3tWYWx1ZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgIEVtcHR5TWVzc2FnZTogYDxkaXYgY2xhc3M9XCJsaXN0LWVtcHR5XCI+0L3QtdGCINGB0YfQtdGC0YfQuNC60L7QsiDQtNC70Y8g0L7RgtC+0LHRgNCw0LbQtdC90LjRjzwvZGl2PmAsXHJcbiAgICAgICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgV2dzID0gdGhpcy5Db250cm9sbGVyLkRhdGFJdGVtcztcclxuICAgICAgICAgICAgZm9yIChsZXQgdyBvZiBXZ3Mpe1xyXG4gICAgICAgICAgICAgICAgdy5DaGFydCA9IG5ldyBMdXJlLkNoYXJ0KHtcclxuICAgICAgICAgICAgICAgICAgICBUeXBlOiAnYmFyJyxcclxuICAgICAgICAgICAgICAgICAgICBUYXJnZXQ6IEx1cmUuU2VsZWN0KCcuY2hhcnQtdmFsdWVzJywgdy5ET00pLFxyXG4gICAgICAgICAgICAgICAgICAgIEF4aXNYOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFZpc2libGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL0RhdGE6IEx1cmUuQ3VsdHVyZUluZm8ucnUuTW9udGhOYW1lc1Nob3J0LlNlbGVjdCh4PT54LnRvVXBwZXJDYXNlKCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGE6IEx1cmUuQ3VsdHVyZUluZm8ucnUuTW9udGhOYW1lcy5TZWxlY3QoeD0+eCArICcgJyArIEx1cmUuRGF0ZSgpLlllYXIpXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBMZWdlbmQ6e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBWaXNpYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgICAgICBBeGlzWTp7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9TdGVwOiA1MCxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFNlcmllczogW3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ1ZhbHVlcycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGE6IHcuRGF0YS5WYWx1ZXMuU2VsZWN0KHg9PnguVmFsdWUpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2xvcjogJyM1QzlCQUEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDBcclxuICAgICAgICAgICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgICAgICAgICBHcmlkOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFZpc2libGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgU2VyaWVzT3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL0JhckdyYWRpZW50OiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gVG9vbHRpcDoge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBWaXNpYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHcuQ2hhcnQuUmVkcmF3KCk7IC8vY2F1c2VkIGJ5IGJ1ZyBpbiBjaGFydCB3aGlsZSBubyBBeGlzWFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIEJlZm9yZVNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5Db250cm9sbGVyLkRhdGEubGVuZ3RoIDwgMSlcclxuICAgICAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuR2V0TWV0ZXJzKCk7XHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlRhYnMgPSB0aGlzLlNlbGVjdEFsbCgnLnJlcS10YWInKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5HZXRNZXRlcnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIGFwaS5NZXRlcl9HZXQoTWV0ZXIuQ3VycmVudExpYnJhcnlJRCwgLTEsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IChtZXRlcnMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2gobWV0ZXJzKTtcclxuICAgICAgICAgICAgICAgICAgICBNZXRlci5NZXRlckNvbW1vbkluZm8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIE1ldGVyLk1ldGVyQ29tbW9uSW5mby5Qcm90by5TZXRQcm9wZXJ0eSgnTWV0ZXJXYXRlckNvbGRDb3VudCcsIG1ldGVycy5XaGVyZShtPT5tLlR5cGVJRCA9PT0gRC5NZXRlclR5cGUuV2F0ZXJDb2xkKS5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgICAgIE1ldGVyLk1ldGVyQ29tbW9uSW5mby5Qcm90by5TZXRQcm9wZXJ0eSgnTWV0ZXJXYXRlckhvdENvdW50JywgbWV0ZXJzLldoZXJlKG09Pm0uVHlwZUlEID09PSBELk1ldGVyVHlwZS5XYXRlckhvdCkubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICBNZXRlci5NZXRlckNvbW1vbkluZm8uUHJvdG8uU2V0UHJvcGVydHkoJ01ldGVyRWxlY3RyaWNpdHlDb3VudCcsIG1ldGVycy5XaGVyZShtPT5tLlR5cGVJRCA9PT0gRC5NZXRlclR5cGUuRWxlY3RyaWNpdHkpLmxlbmd0aCk7XHJcblxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5HZXRGaWxlID0gZnVuY3Rpb24gKEZpbGVJRCwgRmlsZU5hbWUpIHtcclxuICAgICAgICAgICAgYXBpLk1ldGVyX0dldEZpbGUoTWV0ZXIuQ3VycmVudExpYnJhcnlJRCwgRmlsZUlELCB7XHJcbiAgICAgICAgICAgICAgICBUaGVuOiAoYmxvYik9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJsb2IuU2F2ZUFzKGJsb2IsIEZpbGVOYW1lKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDYXRjaDogKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TeXN0ZW0uRXJyb3IoJ9Cd0LUg0YPQtNCw0LvQvtGB0Ywg0L/QvtC70YPRh9C40YLRjCDRhNCw0LnQuycsIGUpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlJlcGxhY2VGaWxlID0gZnVuY3Rpb24gKEZpbGVJRCkge1xyXG4gICAgICAgICAgICBMdXJlLlN5c3RlbS5Ob3RpY2UoJ9CX0LDQvNC10L3QsCDRhNCw0LnQu9C+0LIg0LLRgNC10LzQtdC90L3QviDQvdC10LTQvtGB0YLRg9C/0L3QsCcsIEZpbGVJRCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlNldFRhYkZpbHRlciA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGlmIChlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSlcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgZm9yIChsZXQgdCBvZiB0aGlzLlRhYnMpe1xyXG4gICAgICAgICAgICAgICAgdC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGxldCBUeXBlSUQgPSBwYXJzZUludChlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndHlwZSddKTtcclxuICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLkZpbHRlcigoeCk9PiB4LlR5cGVJRCA9PT0gVHlwZUlEIHx8IFR5cGVJRCA9PT0gLTEpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcubWV0ZXItaGVhZGVyIC5yZXEtdGFiJywgKGUpPT50aGlzLlNldFRhYkZpbHRlcihlKSk7XHJcblxyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLm1ldGVyLXZhbHVlJywgKGUsIHApPT57XHJcbiAgICAgICAgICAgIGxldCBEYXRhTGluZSA9IHRoaXMuQ29udHJvbGxlci5HZXREYXRhSXRlbUJ5TGluZUlEKHAuTGluZUlEKTtcclxuICAgICAgICAgICAgbGV0IGogPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsnaiddO1xyXG4gICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIHRoaXMuTWV0ZXJWYWx1ZUlucHV0LlJ1bihEYXRhTGluZSwgaiwgZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29udHJvbC1zY3JvbGwuc2Nyb2xsLWxlZnQnLCAoZSk9PntcclxuICAgICAgICAgICAgbGV0IFNjcm9sbENvbnRlbnQgPSBMdXJlLlNlbGVjdCgnLmZpbGVzLWxpc3Qtd3JhcCcsIGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50KTtcclxuICAgICAgICAgICAgU2Nyb2xsQ29udGVudC5zY3JvbGxMZWZ0ICs9IC0xNTA7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuY29udHJvbC1zY3JvbGwuc2Nyb2xsLXJpZ2h0JywgKGUpID0+IHtcclxuICAgICAgICAgICAgbGV0IFNjcm9sbENvbnRlbnQgPSBMdXJlLlNlbGVjdCgnLmZpbGVzLWxpc3Qtd3JhcCcsIGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50KTtcclxuICAgICAgICAgICAgU2Nyb2xsQ29udGVudC5zY3JvbGxMZWZ0ICs9IDE1MDtcclxuICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmJ0bi1maWxlLWRvd25sb2FkJywgKGUpPT57XHJcbiAgICAgICAgICAgIHRoaXMuR2V0RmlsZShlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsnaWQnXSwgZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ25hbWUnXSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuYnRuLWZpbGUtcmVwbGFjZScsIChlKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlJlcGxhY2VGaWxlKGUuY3VycmVudFRhcmdldC5kYXRhc2V0WydpZCddKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ3doZWVsJywgJy5maWxlcy1saXN0LXdyYXAnLCAoZSkgPT4ge1xyXG4gICAgICAgIC8vICAgICAvL2UucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAvLyAgICAgdGhpcy5GaWxlc1Njcm9sbChlLmN1cnJlbnRUYXJnZXQsICgtLjUgKyAoZS5kZWx0YVkgPiAwKSkgKiAxMDApO1xyXG4gICAgICAgIC8vICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgLy8gfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBNZXRlci5NZXRlckluY29taW5nO1xyXG5yZXF1aXJlKCcuL01ldGVyVmFsdWVJbnB1dC9NZXRlclZhbHVlSW5wdXQnKTtcclxuXHJcbiIsImNvbnN0IEQgPSByZXF1aXJlKCcuLi8uLi8uLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxuXHJcbk1ldGVyLk1ldGVySW5jb21pbmcuTWV0ZXJWYWx1ZUlucHV0ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBQYXJlbnQ6IE1ldGVyLk1ldGVySW5jb21pbmcsXHJcbiAgICBOYW1lOiAnTWV0ZXJWYWx1ZUlucHV0JyxcclxuICAgIFJvdXRlOiBmYWxzZSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0QuUm9sZS5NZXRlcl1cclxuICAgIH0sXHJcbiAgICBEaWFsb2c6IHtcclxuXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJtZXRlci12YWx1ZS1pbnB1dCBtZXRlci1jb250ZW50IGwtY29sIGRpYWxvZ1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRcIj7Qn9C+0LrQsNC30LDQvdC40Y8g0YHRh9C10YLRh9C40LrQsCDQvdCwIHt7RGF0ZVZhbHVlfX08L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2xvc2UgbC1jbG9zZVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlubmVyLWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCf0L7QutCw0LfQsNC90LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidmFsdWVcIj48aW5wdXQgY2xhc3M9XCJ0ZXh0Ym94IGwtdGV4dGJveCB0YngtdmFsdWVcIiB0eXBlPVwibnVtYmVyXCIgIG1pbj1cIjBcIiB2YWx1ZT1cInt7VmFsdWV9fVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaW5lIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXB0aW9uXCI+0J/RgNC40LrRgNC10L/QuNGC0Ywg0YTQsNC50Ls8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+PGlucHV0IGNsYXNzPVwiaW5wdXQtZmlsZVwiIHR5cGU9XCJmaWxlXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXIgbC1yb3cgbC1mbGV4LWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGwtYnV0dG9uIGJ0bi1jb21taXRcIj7QntGC0L/RgNCw0LLQuNGC0Yw8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBMb2FkOiAnJyxcclxuICAgIFN0YXRlOiB7XHJcbiAgICAgICAgVmFsdWU6IDAsXHJcbiAgICAgICAgRGF0ZVZhbHVlOiAwLFxyXG4gICAgICAgIEZpbGU6IG51bGxcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OntcclxuICAgICAgICBEYXRlVmFsdWU6IChkKT0+THVyZS5EYXRlKGQpLkZvcm1hdCgnTU1NTSBZWVlZJyksXHJcbiAgICB9LFxyXG5cclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5UZXh0Ym94VmFsdWUgPSB0aGlzLlNlbGVjdCgnLnRieC12YWx1ZScpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uQ29tbWl0ID0gdGhpcy5TZWxlY3QoJy5idG4tY29tbWl0Jyk7XHJcbiAgICAgICAgdGhpcy5GaWxlUGlja2VyID0gdGhpcy5TZWxlY3QoJy5pbnB1dC1maWxlJyk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUnVuID0gZnVuY3Rpb24gKERhdGFJdGVtLCBqLCB0YXJnZXQpIHtcclxuICAgICAgICAgICAgdGhpcy5fRGF0YUl0ZW0gPSBEYXRhSXRlbTtcclxuICAgICAgICAgICAgdGhpcy5faiA9IGo7XHJcbiAgICAgICAgICAgIHRoaXMuX1RhcmdldCA9IHRhcmdldDtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKERhdGFJdGVtLkRhdGEuVmFsdWVzW2pdKTtcclxuICAgICAgICAgICAgdGhpcy5TaG93KCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlNldFZhbHVlID0gYXN5bmMgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgVmFsdWUgPSBwYXJzZUludCh0aGlzLlRleHRib3hWYWx1ZS52YWx1ZSk7XHJcbiAgICAgICAgICAgIGlmIChWYWx1ZSA8PSAwIHx8IGlzTmFOKFZhbHVlKSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTHVyZS5TeXN0ZW0uV2Fybign0JLQstC10LTQuNGC0LUg0L/QvtC60LDQt9Cw0L3QuNC1INGB0YfQtdGC0YfQuNC60LAnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBMdXJlLkJ1dHRvbi5Mb2NrKHRoaXMuQnV0dG9uQ29tbWl0KTtcclxuICAgICAgICAgICAgbGV0IFJlc0lEID0gYXdhaXQgYXBpLk1ldGVyX0FkZFZhbHVlKHRoaXMuX0RhdGFJdGVtLkRhdGEuTGlicmFyeUlELCB0aGlzLl9EYXRhSXRlbS5EYXRhLklELCB0aGlzLlN0YXRlLkRhdGVWYWx1ZSwgVmFsdWUsIHt9KTtcclxuICAgICAgICAgICAgbGV0IEZpbGVJRCA9IC0xO1xyXG4gICAgICAgICAgICBpZiAoUmVzSUQgPiAwICYmIHRoaXMuRmlsZVBpY2tlci5maWxlcy5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgIEZpbGVJRCA9IGF3YWl0IGFwaS5NZXRlcl9BZGRGaWxlKHRoaXMuRmlsZVBpY2tlci5maWxlc1swXSwge0xpYnJhcnlNZXRlcklEOiB0aGlzLl9EYXRhSXRlbS5EYXRhLklEfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fRGF0YUl0ZW0uRGF0YS5WYWx1ZXNbdGhpcy5fal0uVmFsdWUgPSBWYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5fRGF0YUl0ZW0uQ2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YVt0aGlzLl9qXSA9IFZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLl9EYXRhSXRlbS5DaGFydC5SZWZyZXNoKHtBbmltYXRpb246ZmFsc2V9KTtcclxuICAgICAgICAgICAgTWV0ZXIuTWV0ZXJJbmNvbWluZy5Db250cm9sbGVyLlJlZnJlc2godGhpcy5fRGF0YUl0ZW0uTGluZUlEKTtcclxuICAgICAgICAgICAgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLlJlbGVhc2UodGhpcy5CdXR0b25Db21taXQpO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgQmVmb3JlSGlkZTogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLl9UYXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQnV0dG9uQ29tbWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PnRoaXMuU2V0VmFsdWUoKSk7XHJcbiAgICB9LFxyXG5cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE1ldGVyLk1ldGVyVmFsdWVJbnB1dDtcclxuXHJcbiIsImxldCBFbXB0eUxpYnJhcnlJbmZvID0gcmVxdWlyZSgnLi9kZWZhdWx0RGF0YS9kZWZhdWx0SlNPTi5qcycpO1xyXG5sZXQgUnVzc2lhblBhc3Nwb3J0RmllbGRzID0gcmVxdWlyZSgnLi9kZWZhdWx0RGF0YS9ydXNzaWFuRmllbGRzLmpzJyk7XHJcblxyXG5sZXQgUGFzc3BvcnQgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdQYXNzcG9ydCcsXHJcbiAgICBUYXJnZXQ6ICcuYm9keScsXHJcbiAgICBUeXBlOiAnY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LXBhc3Nwb3J0J1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0RpY3Rpb25hcnkuUm9sZS5QYXNzcG9ydF0sXHJcbiAgICAgICAgV3JpdGU6IFtEaWN0aW9uYXJ5LlJvbGUuUGFzc3BvcnRFZGl0XVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbiAgICAgICAgYDxkaXYgY2xhc3M9XCJwYXNzcG9ydCBjb250ZW50XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaWFyeS1icmVhZCBsLXJvdyBwYXNzcG9ydC1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaVwiPlxyXG4gICAgICAgICAgICAgICAgICAgINCf0L7QtNGA0LDQt9C00LXQu9C10L3QuNC1OiBcclxuICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwibC1zZWxlY3Qgc2VsZWN0IHBhc3Nwb3J0LWxpYiBsaWItbGlzdFwiPjwvc2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGlcIj48YnV0dG9uIGNsYXNzPVwic2F2ZS1idXR0b24gbC1idXR0b24gbm9uZVwiPtCh0L7RhdGA0LDQvdC40YLRjDwvYnV0dG9uPjwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhc3Nwb3J0LWRhdGFcIj5cclxuICAgICAgICAgICAgICAgIDxkaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8aDEgc3R5bGU9XCJjb2xvcjogcmVkO1wiPtCU0LDQvdC90YvQtSDQv9C+INGB0L7RgdGC0L7Rj9C90LjRjiDQvdCwIDIwMTUg0LPQvtC0PC9oMT5cclxuICAgICAgICAgICAgICAgIDxoMT7Qn9Cw0YHQv9C+0YDRgiDRg9GH0YDQtdC20LTQtdC90LjRjzwvaDE+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGlicmFyeS1uYW1lIHN0cm9uZyBlZGl0YWJsZVwiPnt7TGlicmFyeU5hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhc3Nwb3J0LWRhdGEtdGFibGVzXCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PmAsXHJcbiAgICBQcm90bzoge1xyXG4gICAgICAgIExpYnJhcnlOYW1lOiAnJ1xyXG4gICAgfSxcclxuICAgIENvbnRyb2xsZXI6IHtcclxuICAgICAgICBUYXJnZXQ6ICcucGFzc3BvcnQtZGF0YS10YWJsZXMnLFxyXG4gICAgICAgIERhdGE6IFsgXSxcclxuICAgICAgICBMaXN0RWxlbWVudDogYFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpYnJhcnktaW5mby10YWJsZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cInRhYmxlLXBhc3Nwb3J0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj48dGggY29sc3Bhbj1cIjJcIiBjbGFzcz1cInRhYmxlLXBhc3Nwb3J0LWhlYWRlciBzdHJvbmdcIj57e05hbWV9fTwvdGg+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIFZhbHVlfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cInBhcmFtLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInZpZXdzLWZpZWxkIHBhcmFtLW5hbWUgc3Ryb25nXCI+e3tOYW1lfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInZpZXdzLWZpZWxkIHBhcmFtLXZhbHVlIGVkaXRhYmxlXCI+e3tWYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5gXHJcbiAgICB9LC8qIGVkaXRhYmxlLXNwZWNpYWwgLSDRgdCy0L7QuSDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyDQvdCwINC60LvQuNC6Ki9cclxuICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICBOYW1lOiBmdW5jdGlvbih4KSB7cmV0dXJuIFJ1c3NpYW5QYXNzcG9ydEZpZWxkc1t4XSA/IFJ1c3NpYW5QYXNzcG9ydEZpZWxkc1t4XSA6IHh9XHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlNhdmVCdXR0b24gPSB0aGlzLlNlbGVjdCgnLnNhdmUtYnV0dG9uJyk7XHJcbiAgICAgICAgdGhpcy5MaWJTZWxlY3QgPSB0aGlzLlNlbGVjdCgnLnBhc3Nwb3J0LWxpYi5saWItbGlzdCcpO1xyXG4gICAgICAgIHRoaXMuTGlicmFyeUlEID0gdGhpcy5MaWJTZWxlY3QudmFsdWU7XHJcbiAgICAgICAgdGhpcy5Db250cm9sbGVyTGliTGlzdCA9IG5ldyBMdXJlLkNvbnRyb2xsZXIuVGVtcGxhdG9yKHtcclxuICAgICAgICAgICAgT3duZXI6IHRoaXMsXHJcbiAgICAgICAgICAgIFRhcmdldDogJy5wYXNzcG9ydC1saWIubGliLWxpc3QnLFxyXG4gICAgICAgICAgICBEYXRhOiBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3QsXHJcbiAgICAgICAgICAgIExpc3RFbGVtZW50OiBgPG9wdGlvbiB2YWx1ZT1cInt7SUR9fVwiPnt7TmFtZX19PC9vcHRpb24+YFxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgdGhpcy5QYXNzcG9ydE9iamVjdFRvQXJyYXkgPSBmdW5jdGlvbiAocGFzc3BfSlNPTikge1xyXG5cclxuICAgICAgICAgICAgaWYgKEx1cmUuT2JqZWN0LmlzRW1wdHkocGFzc3BfSlNPTikpXHJcbiAgICAgICAgICAgICAgICBwYXNzcF9KU09OID0gRW1wdHlMaWJyYXJ5SW5mbztcclxuICAgICAgICAgICAgbGV0IGRhdGEgPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIHBhc3NwX0pTT04pIHtcclxuICAgICAgICAgICAgICAgIGlmICghcGFzc3BfSlNPTi5oYXNPd25Qcm9wZXJ0eShrZXkpKSBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIGxldCBpdGVtID0gW107XHJcbiAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSAnUG9zaXRpb24nICYmICFwYXNzcF9KU09OLlBvc2l0aW9uLkNpdHlEaXN0cmljdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXNzcF9KU09OLlJlYWRpbmdIYWxsLkNpdHlEaXN0cmljdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXNzcF9KU09OLlBvc2l0aW9uLkNpdHlEaXN0cmljdCA9IHBhc3NwX0pTT04uUmVhZGluZ0hhbGwuQ2l0eURpc3RyaWN0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgcGFzc3BfSlNPTi5SZWFkaW5nSGFsbC5DaXR5RGlzdHJpY3Q7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHBhc3NwX0pTT04uUG9zaXRpb24uQ2l0eURpc3RyaWN0ID0gJyc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBrZXkyIGluIHBhc3NwX0pTT05ba2V5XSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChrZXkyID09PSAnTGlicmFyeU5hbWUnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdMaWJyYXJ5TmFtZScsIHBhc3NwX0pTT04uQ29tbW9uSW5mby5MaWJyYXJ5TmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhc3NwX0pTT05ba2V5XS5oYXNPd25Qcm9wZXJ0eShrZXkyKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5wdXNoKHtOYW1lOiBrZXkyLCBWYWx1ZTogcGFzc3BfSlNPTltrZXldW2tleTJdfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgZGF0YS5wdXNoKHtOYW1lOiBrZXksIFZhbHVlOiBpdGVtfSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gZGVidWdnZXI7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuTGlicmFyeU5hbWUgPT09ICcnKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnTGlicmFyeU5hbWUnLCB0aGlzLkNvbnRyb2xsZXJMaWJMaXN0LkNvbnRlbnQuc2VsZWN0ZWRPcHRpb25zWzBdLmlubmVyVGV4dCk7XHJcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5QYXNzcG9ydEFycmF5VG9PYmplY3QgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBsZXQgSlNPTiA9IHt9O1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpdGVtIG9mIGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIEpTT05baXRlbS5OYW1lXSA9IHt9O1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaXRlbTIgb2YgaXRlbS5WYWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICBKU09OW2l0ZW0uTmFtZV1baXRlbTIuTmFtZV0gPSBpdGVtMi5WYWx1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gSlNPTjtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLk9uTGlicmFyeUNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IElEID0gcGFyc2VJbnQodGhpcy5MaWJTZWxlY3QudmFsdWUpO1xyXG4gICAgICAgICAgICB0aGlzLkxpYnJhcnlJRCA9IElEO1xyXG4gICAgICAgICAgICB0aGlzLlNhdmVCdXR0b24uY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgICAgICBhcGkuUGFzc3BvcnRfR2V0KElELCB7fSlcclxuICAgICAgICAgICAgICAgIC50aGVuKEpTT04ucGFyc2UpXHJcbiAgICAgICAgICAgICAgICAudGhlbihyZXN1bHQgPT4gdGhpcy5Db250cm9sbGVyLlJlZnJlc2godGhpcy5QYXNzcG9ydE9iamVjdFRvQXJyYXkocmVzdWx0KSkpXHJcbiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCcgJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRVJST1InLCBlcnJvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJyAnKTtcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5TaG93RXJyb3IoXCLQn9GA0L7QuNC30L7RiNC70LAg0L7RiNC40LHQutCwINC/0YDQuCDQv9C+0LvRg9GH0LXQvdC40Lgg0LTQsNC90L3Ri9GFIVwiKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5PbkNsaWNrU2F2ZUJ1dHRvbiA9ICBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGFwaS5QYXNzcG9ydF9TZXQoXHJcbiAgICAgICAgICAgICAgICB0aGlzLkxpYnJhcnlJRCxcclxuXHJcbiAgICAgICAgICAgICAgICBKU09OLnN0cmluZ2lmeSh0aGlzLlBhc3Nwb3J0QXJyYXlUb09iamVjdCh0aGlzLkNvbnRyb2xsZXIuRGF0YSkpLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgVGhlbjogKCkgPT4gTHVyZS5TeXN0ZW0uU2hvd1N1Y2Nlc3MoJ9Ch0L7RhdGA0LDQvdC10L3QvicpLFxyXG4gICAgICAgICAgICAgICAgICAgIENhdGNoOiAoKSA9PiBMdXJlLlN5c3RlbS5TaG93RXJyb3IoJ9Ce0YjQuNCx0LrQsCDRgdC+0YXRgNCw0L3QtdC90LjRjycpLFxyXG4gICAgICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpID0+IHRoaXMuU2F2ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdub25lJylcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIHRoaXMuTGliU2VsZWN0LnZhbHVlID0gdGhpcy5MaWJyYXJ5SUQ7XHJcbiAgICAgICAgdGhpcy5PbkxpYnJhcnlDaGFuZ2UoKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5Db250cm9sbGVyLkNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy5TYXZlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKSk7XHJcbiAgICAgICAgdGhpcy5Db250cm9sbGVyTGliTGlzdC5SZWZyZXNoKCk7XHJcbiAgICAgICAgdGhpcy5Db250cm9sbGVyTGliTGlzdC5Db250ZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuT25MaWJyYXJ5Q2hhbmdlKCkpO1xyXG4gICAgICAgIHRoaXMuU2F2ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuT25DbGlja1NhdmVCdXR0b24oKSk7XHJcbiAgICB9XHJcbn0pO1xyXG53aW5kb3cuUGFzc3BvcnQgPSBQYXNzcG9ydDtcclxubW9kdWxlLmV4cG9ydHMgPSBQYXNzcG9ydDsiLCJtb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIENvbW1vbkluZm86IHtcclxuICAgICAgICBMaWJyYXJ5TmFtZTogXCJcIixcclxuICAgICAgICBEZXNjcmlwdGlvbjogXCJcIixcclxuICAgICAgICBBZHJlc3M6IFwiXCIsXHJcbiAgICAgICAgTGliUGhvbmU6IFwiXCIsXHJcbiAgICAgICAgRW1haWw6IFwiXCIsXHJcbiAgICAgICAgbWFuYWdlclN1cm5hbWU6IFwiXCIsXHJcbiAgICAgICAgTWFuYWdlck1pZGRsZU5hbWU6IFwiXCIsXHJcbiAgICAgICAgTWFuYWdlck5hbWU6IFwiXCIsXHJcbiAgICAgICAgTWFuYWdlclBob25lOiBcIlwiLFxyXG4gICAgICAgIE1hbmFnZXJFbWFpbDogXCJcIixcclxuICAgICAgICBGdW5kU2l6ZTogXCJcIixcclxuICAgIH0sIFBvc2l0aW9uOiB7XHJcbiAgICAgICAgQnVpbGRpbmdTcXVhcmU6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdZZWFyOiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nRGlzdHJpY3Q6IFwiXCIsXHJcbiAgICB9LCBTdGFmZjoge1xyXG4gICAgICAgIFN0YWZmU2l6ZTogXCJcIixcclxuICAgIH0sIEdvc1JlZ2lzdGVyOiB7XHJcbiAgICAgICAgU3RhdGVSZWdpc3RlckNlcnRpZmljYXRlOiBcIlwiLFxyXG4gICAgfSwgU3BlY2lhbGlzYXRpb246IHtcclxuICAgICAgICBTcGVjaWFsaXphdGlvbjogXCJcIixcclxuICAgIH0sIFJlYWRpbmdIYWxsOiB7XHJcbiAgICAgICAgQ2l0eURpc3RyaWN0OiBcIlwiLFxyXG4gICAgICAgIEhhbGxBdmFpbGFibGU6IFwiXCIsXHJcbiAgICAgICAgUmVhZGluZ0hhbGxBdmlsYWJsZTogXCJcIixcclxuICAgICAgICBSZWFkaW5nSGFsbFNxdWFyZTogXCJcIixcclxuICAgICAgICBSZWFkaW5nSGFsbFN0b3JlU3F1YXJlOiBcIlwiLFxyXG4gICAgICAgIFJlYWRpbmdIYWxsRnVuZENvdW50OiBcIlwiLFxyXG4gICAgfSwgSXNBYm9uZW1lbnQ6IHtcclxuICAgICAgICBBYm9uZW1lbnQ6IFwiXCIsXHJcbiAgICAgICAgQWJvbmVtZW50U3F1YXJlOiBcIlwiLFxyXG4gICAgICAgIEFib25lbWVudEZ1bmRTcXVhcmU6IFwiXCIsXHJcbiAgICAgICAgQWJvbmVtZW50RnVuZENvdW50OiBcIlwiLFxyXG4gICAgfSwgRnVuZDoge1xyXG4gICAgICAgIEZ1bmREZXBhcnRtZW50OiBcIlwiLFxyXG4gICAgICAgIEZ1bmREZXBhcnRtZW50U3F1YXJlOiBcIlwiLFxyXG4gICAgICAgIEZ1bmRTcXVhcmU6IFwiXCIsXHJcbiAgICAgICAgRnVuZENvdW50OiBcIlwiLFxyXG4gICAgICAgIEZ1bmRDbG9zZWQ6IFwiXCIsXHJcbiAgICAgICAgRnVuZENsb3NlZFNxdWFyZTogXCJcIixcclxuICAgICAgICBGdW5kQ2xvc2VkU3RvcmVTcXVhcmU6IFwiXCIsXHJcbiAgICAgICAgRnVuZENsb3NlZERvY3NDb3VudDogXCJcIixcclxuICAgIH0sIENvbXB1dGVyczoge1xyXG4gICAgICAgIENvbXB1dGVyc0NvdW50OiBcIlwiLFxyXG4gICAgICAgIENvbXB1dGVyc0RpZ2l0YWxSZXNBY2Nlc3M6IFwiXCIsXHJcbiAgICAgICAgQ29tcHV0ZXJzSW50ZXJuZXRBY2Nlc3M6IFwiXCIsXHJcbiAgICB9LCBJc1NwZWNpYWxGdW5kOiB7XHJcbiAgICAgICAgU3BlY2lhbEZ1bmQ6IFwiXCIsXHJcbiAgICB9LCBPdXRkb29yOiB7XHJcbiAgICAgICAgT3V0ZG9vck1haW50ZW5hbmNlOiBcIlwiLFxyXG4gICAgICAgIEhvbWVTZXJ2aWNlTG93TW9iaWxpdHk6IFwiXCIsXHJcbiAgICAgICAgTG93TW9iaWxpdHlDb3VudDogXCJcIixcclxuICAgIH0sIERpc2FibGVkOiB7XHJcbiAgICAgICAgRWFzeVRlcnJpdG9yeUVudGVyOiBcIlwiLFxyXG4gICAgICAgIERpc2FibGVkUGFya2luZzogXCJcIixcclxuICAgICAgICBEaXNhYmxlZE91dFN0YWlyczogXCJcIixcclxuICAgICAgICBPdXRkb29yU3RhaXJzSGFuZHJhaWxzOiBcIlwiLFxyXG4gICAgICAgIE91dGRvb3JSYW1wOiBcIlwiLFxyXG4gICAgICAgIE91dGRvb3JSYW1wSGFuZHJhaWxzOiBcIlwiLFxyXG4gICAgICAgIEVudHJhbmNlRG9vcjogXCJcIixcclxuICAgICAgICBJbmRvb3JTdGFpcnM6IFwiXCIsXHJcbiAgICAgICAgSW5kb29yU3RhaXJzSGFuZHJhaWxzOiBcIlwiLFxyXG4gICAgICAgIERvb3JzV2lkdGg6IFwiXCIsXHJcbiAgICAgICAgSW5kb29yT2JzdGFjbGVzOiBcIlwiLFxyXG4gICAgICAgIExpZnQ6IFwiXCIsXHJcbiAgICAgICAgRXNjYWxhdG9yOiBcIlwiLFxyXG4gICAgICAgIExpZnRpbmdQbGF0Zm9ybTogXCJcIixcclxuICAgICAgICBEaXNhYmxlZEV2YWN1YXRpb25zOiBcIlwiLFxyXG4gICAgICAgIERpc2FibGVkWm9uZTogXCJcIixcclxuICAgICAgICBEaXNhYmxlZFBsdW1iaW5nOiBcIlwiLFxyXG4gICAgICAgIFRhY3RpbGVJbmZvcm1hdGlvbkZhY2lsaXRpZXM6IFwiXCIsXHJcbiAgICAgICAgQWNvdXN0aWNJbmZvcm1hdGlvbkZhY2lsaXRpZXM6IFwiXCIsXHJcbiAgICAgICAgVmlzdWFsSW5mb3JtYXRpb25GYWNpbGl0aWVzOiBcIlwiLFxyXG4gICAgICAgIEFkZExpZ2h0c0ZvckRpc2FibGVkOiBcIlwiLFxyXG4gICAgICAgIFNlcnZpY2VBY2Nlc3NpYmlsaXR5Rm9yRGlzYWJsZWQ6IFwiXCIsXHJcbiAgICAgICAgQnJhaWxsZUxpdGVyYXR1cmU6IFwiXCIsXHJcbiAgICB9LCBPcGVuaW5nOiB7XHJcbiAgICAgICAgT3BlbmluZ01vbmRheTogXCJcIixcclxuICAgICAgICBPcGVuaW5nVHVlc2RheTogXCJcIixcclxuICAgICAgICBPcGVuaW5nV2VkbmVzZGF5OiBcIlwiLFxyXG4gICAgICAgIE9wZW5pbmdUaHVyc2RheTogXCJcIixcclxuICAgICAgICBPcGVuaW5nRnJpZGF5OiBcIlwiLFxyXG4gICAgICAgIE9wZW5pbmdTYXR1cmRheTogXCJcIixcclxuICAgICAgICBPcGVuaW5nU3VuZGF5OiBcIlwiLFxyXG4gICAgICAgIFNhbml0YXJ5RGF5OiBcIlwiLFxyXG4gICAgfSwgRm9yVmlzaXRvcnM6IHtcclxuICAgICAgICBDb21wc0ZvclZpc2l0b3JzOiBcIlwiLFxyXG4gICAgICAgIFdpRmlWaXNpdG9yczogXCJcIixcclxuICAgICAgICBGb29kOiBcIlwiLFxyXG4gICAgICAgIFBhcmtpbmc6IFwiXCIsXHJcbiAgICB9LCAgQnVpbGRpbmdJbmZvOiB7XHJcbiAgICAgICAgQnVpbGRpbmdUeXBlOiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nQ29uc3RydWN0aXZlOiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nRmxvb3JzOiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nUm9vZjogXCJcIixcclxuICAgICAgICBCdWlsZGluZ1Jvb2ZNYXRlcmlhbDogXCJcIixcclxuICAgICAgICBCdWlsZGluZ0lzTW9udW1lbnQ6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdVc2VmdWxsU3F1YXJlOiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nQ2F0ZWdvcnk6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdSZW5vdmF0aW9uWWVhcjogXCJcIixcclxuICAgICAgICBCdWlsZGluZ05vdFVzZWZ1bGxTcXVhcmU6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdSb29tc0NvdW50QlRJOiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nUm9vbXNVc3RhdkNvdW50OiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nRmxvb3JzVXNpbmc6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdTdGF0dXM6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdCYXNlbWVudDogXCJcIixcclxuICAgICAgICBCdWlsZGluZ1NlcGFyYXRlSW5wdXQ6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdFbGVjdHJpY2l0eTogXCJcIixcclxuICAgIH0sIEFpcmluZzoge1xyXG4gICAgICAgIEJ1aWxkaW5nQWlyaW5nOiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nQWlyaW5nQ29uZGl0aW9uOiBcIlwiLFxyXG4gICAgICAgIEJ1aWxkaW5nQ29uZGl0aW9uZXI6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdDb211bmFsU2VydmljZXNDb250cmFjdHM6IFwiXCIsXHJcbiAgICAgICAgQnVpbGRpbmdFbmdpbmVlckNvbnRyYWN0czogXCJcIixcclxuICAgIH0sIEhlYXRXYXRlclByZXBhcmF0aW9uOiB7XHJcbiAgICAgICAgU3lzdGVtc1dhc2hpbmc6IFwiXCIsXHJcbiAgICAgICAgU3lzdGVtc1JlcGFpcjogXCJcIixcclxuICAgICAgICBTeXN0ZW1zQWRqdXN0bWVudDogXCJcIixcclxuICAgICAgICBTeXN0ZW1IeWRyYXVsaWNUZXN0OiBcIlwiLFxyXG4gICAgICAgIFN5c3RlbVJlYWR5QWN0OiBcIlwiLFxyXG4gICAgICAgIFN5c3RlbU90aGVyV29yazogXCJcIixcclxuICAgIH0sIFdpbnRlcldvcmtzOiB7XHJcbiAgICAgICAgV2ludGVyQ2xlYXJpbmdXYXRlclJvb2Y6IFwiXCIsXHJcbiAgICAgICAgV2ludGVyQ2xlYXJpbmdSb29mOiBcIlwiLFxyXG4gICAgICAgIFdpbnRlckxvZnRXYXJtaW5nOiBcIlwiLFxyXG4gICAgICAgIFdpbnRlckhlYXRpbmdSb29mR3V0dGVyczogXCJcIixcclxuICAgICAgICBXaW50ZXJMb2Z0SGVhcmluZ1dpbmRvd3M6IFwiXCIsXHJcbiAgICAgICAgV2ludGVyV2luZG93c1dhcm1pbmc6IFwiXCIsXHJcbiAgICAgICAgV2ludGVyQmFsY29ueURvb3JzV2FybWluZzogXCJcIixcclxuICAgICAgICBXaW50ZXJFbnRyeURvb3JzOiBcIlwiLFxyXG4gICAgICAgIFdpbnRlcklzb2xhdGlvbkVsZWN0cmljV2lyZXM6IFwiXCIsXHJcbiAgICAgICAgV2ludGVyRml4SGVhdEN1cnRhaW5zOiBcIlwiLFxyXG4gICAgICAgIFdpbnRlck90aGVyOiBcIlwiLFxyXG4gICAgfSwgQWRqVGVycml0b3J5OiB7XHJcbiAgICAgICAgQWRqYWNlbnRUZXJyaXRvcnlBdmFpbGFiaWxpdHk6IFwiXCJcclxuICAgIH1cclxuXHJcbn07IiwibW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBJRDogXCJJRFwiLFxyXG4gICAgTGlicmFyeU5hbWU6IFwi0J3QsNC30LLQsNC90LjQtVwiLFxyXG4gICAgRGVzY3JpcHRpb246IFwi0J7Qv9C40YHQsNC90LjQtVwiLFxyXG4gICAgQWRyZXNzOiBcItCQ0LTRgNC10YFcIixcclxuICAgIExpYlBob25lOiBcItCi0LXQu9C10YTQvtC9INCx0LjQsdC70LjQvtGC0LXQutC4XCIsXHJcbiAgICBFbWFpbDogXCLQktC10LEt0YHQsNC50YJcIixcclxuICAgIG1hbmFnZXJTdXJuYW1lOiBcItCk0LDQvNC40LvQuNGPINC30LDQstC10LTRg9GO0YnQtdC5XCIsXHJcbiAgICBNYW5hZ2VyTWlkZGxlTmFtZTogXCLQntGC0YfQtdGB0YLQstC+XCIsXHJcbiAgICBNYW5hZ2VyTmFtZTogXCLQmNC80Y9cIixcclxuICAgIE1hbmFnZXJQaG9uZTogXCLQotC10LvQtdGE0L7QvSDRgNGD0LrQvtCy0L7QtNC40YLQtdC70Y9cIixcclxuICAgIE1hbmFnZXJFbWFpbDogXCLQn9C+0YfRgtCwINGA0YPQutC+0LLQvtC00LjRgtC10LvRj1wiLFxyXG4gICAgRnVuZFNpemU6IFwi0KDQsNC30LzQtdGAINGE0L7QvdC00LBcIixcclxuICAgIEJ1aWxkaW5nU3F1YXJlOiBcItCf0LvQvtGJ0LDQtNGMXCIsXHJcbiAgICBCdWlsZGluZ1llYXI6IFwi0JPQvtC0INC/0L7RgdGC0YDQvtC50LrQuFwiLFxyXG4gICAgQnVpbGRpbmdEaXN0cmljdDogXCLQoNCw0LnQvtC9XCIsXHJcbiAgICBTdGFmZlNpemU6IFwi0KjRgtCw0YIg0YHQvtGC0YDRg9C00L3QuNC60L7QslwiLFxyXG4gICAgU3RhdGVSZWdpc3RlckNlcnRpZmljYXRlOiBcItCh0LLQuNC00LXRgtC10LvRjNGB0YLQstC+INC+INCz0L7RgdGD0LTQsNGA0YHRgtCy0LXQvdC90L4g0YDQtdCz0LjRgdGC0YDQsNGG0LjQuCDQv9GA0LDQstCwXCIsXHJcbiAgICBTcGVjaWFsaXphdGlvbjogXCLQodC/0LXRhtC40LDQu9C40LfQsNGG0LjRj1wiLFxyXG4gICAgQ2l0eURpc3RyaWN0OiBcItCe0LrRgNGD0LNcIixcclxuICAgIEhhbGxBdmFpbGFibGU6IFwi0J3QsNC70LjRh9C40LUg0LfQsNC70LBcIixcclxuICAgIFJlYWRpbmdIYWxsQXZpbGFibGU6IFwi0JjQvNC10LXRgtGB0Y8g0LvQuCDRh9C40YLQsNC70YzQvdGL0Lkg0LfQsNC7XCIsXHJcbiAgICBSZWFkaW5nSGFsbFNxdWFyZTogXCLQntCx0YnQsNGPINC/0LvQvtGJ0LDQtNGMINGH0LjRgtCw0LvRjNC90L7Qs9C+INC30LDQu9CwXCIsXHJcbiAgICBSZWFkaW5nSGFsbFN0b3JlU3F1YXJlOiBcItCf0LvQvtGJ0LDQtNGMINC00LvRjyDRhdGA0LDQvdC10L3QuNGPINGE0L7QvdC00LAg0LIg0YfQuNGC0LDQu9GM0L3QvtC8INC30LDQu9C1XCIsXHJcbiAgICBSZWFkaW5nSGFsbEZ1bmRDb3VudDogXCLQmtC+0Lst0LLQviDRhNC+0L3QtNCwINCyINGH0LjRgtCw0LvRjNC90L7QvCDQt9Cw0LvQtVwiLFxyXG4gICAgQWJvbmVtZW50OiBcItCY0LzQtdC10YLRgdGPINC70Lgg0LDQsdC+0L3QtdC80LXQvdGCXCIsXHJcbiAgICBBYm9uZW1lbnRTcXVhcmU6IFwi0J7QsdGJ0LDRjyDQv9C70L7RidCw0LTRjCDQsNCx0L7QvdC10LzQtdC90YLQsFwiLFxyXG4gICAgQWJvbmVtZW50RnVuZFNxdWFyZTogXCLQn9C70L7RidCw0LTRjCDQtNC70Y8g0YXRgNCw0L3QtdC90LjRjyDRhNC+0L3QtNCwINCyINCw0LHQvtC90LXQvNC10L3RgtC1XCIsXHJcbiAgICBBYm9uZW1lbnRGdW5kQ291bnQ6IFwi0JrQvtC7LdCy0L4g0YTQvtC90LTQsCDQsiDQsNCx0L7QvdC10LzQtdC90YLQtVwiLFxyXG4gICAgRnVuZERlcGFydG1lbnQ6IFwi0J3QsNC70LjRh9C40LUg0L7RgtC00LXQu9CwLCDQs9C00LUg0YDQsNGB0L/QvtC70LDQs9Cw0LXRgtGB0Y8g0YTQvtC90LRcIixcclxuICAgIEZ1bmREZXBhcnRtZW50TmFtZTogXCLQndCw0LfQstCw0L3QuNC1INC+0YLQtNC10LvQsFwiLFxyXG4gICAgRnVuZERlcGFydG1lbnRTcXVhcmU6IFwi0J7QsdGJ0LDRjyDQv9C70L7RidCw0LTRjFwiLFxyXG4gICAgRnVuZFNxdWFyZTogXCLQn9C70L7RidCw0LTRjCDQtNC70Y8g0YXRgNCw0L3QtdC90LjRjyDRhNC+0L3QtNCwXCIsXHJcbiAgICBGdW5kQ291bnQ6IFwi0JrQvtC7LdCy0L4g0YTQvtC90LRcIixcclxuICAgIEZ1bmRDbG9zZWQ6IFwi0JjQvNC10LXRgtGB0Y8g0LvQuCDRhNC+0L3QtCDRgSDQt9Cw0LrRgNGL0YLRi9C8INC00L7RgdGC0YPQv9C+0Lwg0LTQu9GPINC/0L7RgdC10YLQuNGC0LXQu9C10LlcIixcclxuICAgIEZ1bmRDbG9zZWRTcXVhcmU6IFwi0J/Qu9C+0YnQsNC00Ywg0L/QvtC80LXRidC10L3QuNGPINGBINC30LDQutGA0YvRgtGL0Lwg0LTQvtGB0YLRg9C/0L7QvCDQtNC70Y8g0L/QvtGB0LXRgtC40YLQtdC70LXQuVwiLFxyXG4gICAgRnVuZENsb3NlZFN0b3JlU3F1YXJlOiBcItCf0LvQvtGJ0LDQtNGMINC00LvRjyDRhdGA0LDQvdC10L3QuNGPINGE0L7QvdC00LAg0YEg0LfQsNC60YDRi9GC0YvQvCDQtNC+0YHRgtGD0L/QvtC8INC00LvRjyDQv9C+0YHQtdGC0LjRgtC10LvQtdC5XCIsXHJcbiAgICBGdW5kQ2xvc2VkRG9jc0NvdW50OiBcItCe0LHRidC10LUg0LrQvtC70LjRh9C10YHRgtCy0L4g0LTQvtC60YPQvNC10L3RgtC+0LIg0LIg0YTQvtC90LTQtSDRgSDQt9Cw0LrRgNGL0YLRi9C8INC00L7RgdGC0YPQv9C+0LxcIixcclxuICAgIEZ1bmRDbG9zZWRXaGF0OiBcItCn0YLQviDRhdGA0LDQvdC40YLRgdGPINCyINGE0L7QvdC00LUg0LfQsNC60YDRi9GC0L7Qs9C+INC00L7RgdGC0YPQv9CwXCIsXHJcbiAgICBGdW5kQ2xvc2VkUm9vbVR5cGU6IFwi0JLQuNC0INC/0L7QvNC10YnQtdC90LjRj1wiLFxyXG4gICAgRnVuZENsb3NlZFdob0FjY2VzczogXCLQmtGC0L4g0LjQvNC10LXRgiDQtNC+0YHRgtGD0L9cIixcclxuICAgIENvbXB1dGVyc0NvdW50OiBcItCS0YHQtdCz0L4g0LIg0L/QvtC80LXRidC10L3QuNC4XCIsXHJcbiAgICBDb21wdXRlcnNEaWdpdGFsUmVzQWNjZXNzOiBcItCY0Lcg0L3QuNGFINC60L7QvNC/0YzRjtGC0LXRgNC40LfQuNGA0L7QstCw0L3QvdGL0YUg0YEg0LLQvtC30LzQvtC20L3QvtGB0YLRjNGOINC00L7RgdGC0YPQv9CwINC6INGN0LvQtdC60YLRgNC+0L3QvdGL0Lwg0YDQtdGB0YPRgNGB0LDQvFwiLFxyXG4gICAgQ29tcHV0ZXJzSW50ZXJuZXRBY2Nlc3M6IFwi0JjQtyDQvtCx0YnQtdCz0L4g0YfQuNGB0LvQsCDRgSDQstC+0LfQvNC+0LbQvdC+0YHRgtGM0Y4g0LLRi9GF0L7QtNCwINCyINC40L3RgtC10YDQvdC10YJcIixcclxuICAgIFNwZWNpYWxGdW5kOiBcItCY0LzQtdC10YLRgdGPINC70Lgg0YHQv9C10YbQuNCw0LvRjNC90YvQuSDRhNC+0L3QtFwiLFxyXG4gICAgT3V0ZG9vck1haW50ZW5hbmNlOiBcItCS0L3QtdGB0YLQsNGG0LjQvtC90LDRgNC90L7QtSDQvtCx0YHQu9GD0LbQuNCy0LDQvdC40LVcIixcclxuICAgIEhvbWVTZXJ2aWNlTG93TW9iaWxpdHk6IFwi0J7RgdGD0YnQtdGB0YLQstC70Y/QtdGC0YHRjyDQu9C4INC+0LHRgdC70YPQttC40LLQsNC90LjQtSDQvNCw0LvQvtC80L7QsdC40LvRjNC90YvRhSDQs9GA0LDQttC00LDQvSDQvdCwINC00L7QvNGDXCIsXHJcbiAgICBMb3dNb2JpbGl0eUNvdW50OiBcItCa0L7Quy3QstC+INC+0LHRgdC70YPQttC40LLQsNC10LzRi9GFINC80LDQu9C+0LzQvtCx0LjQu9GM0L3Ri9GFINCz0YDQsNC20LTQsNC9INC90LAg0LTQvtC80YNcIixcclxuICAgIEVhc3lUZXJyaXRvcnlFbnRlcjogXCLQkdC10YHQv9GA0LXQv9GP0YLRgdGC0LLQtdC90L3Ri9C5INCy0YXQvtC0INC90LAg0YLQtdGA0YDQuNGC0L7RgNC40Y5cIixcclxuICAgIERpc2FibGVkUGFya2luZzogXCLQn9Cw0YDQutC+0LLQvtGH0L3Ri9C1INC80LXRgdGC0LAg0LTQu9GPINC40L3QstCw0LvQuNC00L7QslwiLFxyXG4gICAgRGlzYWJsZWRPdXRTdGFpcnM6IFwi0J3QsNGA0YPQttC90LDRjyDQu9C10YHRgtC90LjRhtCwXCIsXHJcbiAgICBPdXRkb29yU3RhaXJzSGFuZHJhaWxzOiBcItCf0L7RgNGD0YfQvdC4INC00LvRjyDQvdCw0YDRg9C20L3QvtC5INC70LXRgdGC0L3QuNGG0YtcIixcclxuICAgIE91dGRvb3JSYW1wOiBcItCd0LDRgNGD0LbQvdGL0Lkg0L/QsNC90LTRg9GBXCIsXHJcbiAgICBPdXRkb29yUmFtcEhhbmRyYWlsczogXCLQn9C+0YDRg9GH0L3QuCDQtNC70Y8g0L3QsNGA0YPQttC90L7Qs9C+INC/0LDQvdC00YPRgdCwXCIsXHJcbiAgICBFbnRyYW5jZURvb3I6IFwi0JLRhdC+0LTQvdCw0Y8g0LTQstC10YDRjCDQsiDQt9C00LDQvdC40LVcIixcclxuICAgIEluZG9vclN0YWlyczogXCLQktC90YPRgtGA0LXQvdC90LjQtSDQu9C10YHRgtC90LjRhtGLXCIsXHJcbiAgICBJbmRvb3JTdGFpcnNIYW5kcmFpbHM6IFwi0J/QvtGA0YPRh9C90Lgg0LTQu9GPINCy0L3Rg9GC0YDQtdC90L3QuNGFINC70LXRgdGC0L3QuNGGXCIsXHJcbiAgICBEb29yc1dpZHRoOiBcItCo0LjRgNC40L3QsCDQtNCy0LXRgNC90YvRhSDQv9GA0L7QtdC80L7QslwiLFxyXG4gICAgSW5kb29yT2JzdGFjbGVzOiBcItCf0YDQtdC/0Y/RgtGB0YLQstC40Y8g0LLQvdGD0YLRgNC4INC/0L7QvNC10YnQvdC40LlcIixcclxuICAgIExpZnQ6IFwi0JvQuNGE0YJcIixcclxuICAgIEVzY2FsYXRvcjogXCLQrdGB0LrQsNC70LDRgtC+0YBcIixcclxuICAgIExpZnRpbmdQbGF0Zm9ybTogXCLQn9C+0LTRitC10LzQvdCw0Y8g0L/Qu9Cw0YLRhNC+0YDQvNCwXCIsXHJcbiAgICBEaXNhYmxlZEV2YWN1YXRpb25zOiBcItCf0YPRgtC4INGN0LLQsNC60YPQsNGG0LjQuCDQtNC70Y8g0LjQvdCy0LDQu9C40LTQvtCyXCIsXHJcbiAgICBEaXNhYmxlZFpvbmU6IFwi0KHQv9C10YbQuNCw0LvRjNC90LDRjyDQvdC10L/RgNC+0YXQvtC00L3QsNGPINC30L7QvdCwINC00LvRjyDRgNCw0LfQvNC10YnQtdC90LjRjyDQuNC90LLQsNC70LjQtNC+0LJcIixcclxuICAgIERpc2FibGVkUGx1bWJpbmc6IFwi0JTQvtGB0YLRg9C/0L3QvtGB0YLRjCDRgdCw0L3RgtC10YXQvdC40YfQtdGB0LrQvtCz0L4g0L7QsdC+0YDRg9C00L7QstCw0L3QuNGPINC00LvRjyDQuNC90LLQsNC70LjQtNC+0LJcIixcclxuICAgIFRhY3RpbGVJbmZvcm1hdGlvbkZhY2lsaXRpZXM6IFwi0KLQsNC60YLQuNC70YzQvdGL0LUg0YHRgNC10LTRgdGC0LLQsCDQuNC90YTQvtGA0LzQsNGG0LjQuFwiLFxyXG4gICAgQWNvdXN0aWNJbmZvcm1hdGlvbkZhY2lsaXRpZXM6IFwi0JDQutGD0YHRgtC40YfQtdGB0LrQuNC1INGB0YDQtdC00YHRgtCy0LAg0LjQvdGE0L7RgNC80LDRhtC40LhcIixcclxuICAgIFZpc3VhbEluZm9ybWF0aW9uRmFjaWxpdGllczogXCLQktC40LfRg9Cw0LvRjNC90YvQtSDRgdGA0LXQtNGB0YLQstCwINC40L3RhNC+0YDQvNCw0YbQuNC4XCIsXHJcbiAgICBBZGRMaWdodHNGb3JEaXNhYmxlZDogXCLQlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INC40YHRgtC+0YfQvdC40LrQuCDRgdCy0LXRgtCwINC00LvRjyDQuNC90LLQsNC70LjQtNC+0LJcIixcclxuICAgIFNlcnZpY2VBY2Nlc3NpYmlsaXR5Rm9yRGlzYWJsZWQ6IFwi0JTQvtGB0YLRg9C/0L3QvtGB0YLRjCDQv9GA0LXQtNC+0YHRgtCw0LLQu9GP0LXQvNGL0YUg0YPRgdC70YPQsyDQtNC70Y8g0LjQvdCy0LDQu9C40LTQvtCyXCIsXHJcbiAgICBCcmFpbGxlTGl0ZXJhdHVyZTogXCLQndCw0LvQuNGH0LjQtSDQu9C40YLQtdGA0LDRgtGD0YDRiyDRgdC+INGI0YDQuNGE0YLQvtC8INCR0YDQsNC50LvRj1wiLFxyXG4gICAgT3BlbmluZ01vbmRheTogXCLQn9C+0L3QtdC00LXQu9GM0L3QuNC6XCIsXHJcbiAgICBPcGVuaW5nVHVlc2RheTogXCLQktGC0L7RgNC90LjQulwiLFxyXG4gICAgT3BlbmluZ1dlZG5lc2RheTogXCLQodGA0LXQtNCwXCIsXHJcbiAgICBPcGVuaW5nVGh1cnNkYXk6IFwi0KfQtdGC0LLQtdGA0LNcIixcclxuICAgIE9wZW5pbmdGcmlkYXk6IFwi0J/Rj9GC0L3QuNGG0LBcIixcclxuICAgIE9wZW5pbmdTYXR1cmRheTogXCLQodGD0LHQsdC+0YLQsFwiLFxyXG4gICAgT3BlbmluZ1N1bmRheTogXCLQktC+0YHQutGA0LXRgdC10L3RjNC1XCIsXHJcbiAgICBTYW5pdGFyeURheTogXCLQodCw0L3QuNGC0LDRgNC90YvQuSDQtNC10L3RjFwiLFxyXG4gICAgQ29tcHNGb3JWaXNpdG9yczogXCLQmtC+0LzQv9GM0Y7RgtC10YDRiyDQtNC70Y8g0L/QvtGB0LXRgtC40YLQtdC70LXQuVwiLFxyXG4gICAgV2lGaVZpc2l0b3JzOiBcIldpRmkg0LTQu9GPINC/0L7RgdC10YLQuNGC0LXQu9C10LlcIixcclxuICAgIEZvb2Q6IFwi0J7RgNCz0LDQvdC40LfQsNGG0LjRjyDQv9C40YLQsNC90LjRj1wiLFxyXG4gICAgUGFya2luZzogXCLQndCw0LvQuNGH0LjQtSDQv9Cw0YDQutC+0LLQutC4XCIsXHJcbiAgICBCdWlsZGluZ1R5cGU6IFwi0KLQuNC/XCIsXHJcbiAgICBCdWlsZGluZ0NvbnN0cnVjdGl2ZTogXCLQmtC+0L3RgdGC0YDRg9C60YLQuNCyINC30LTQsNC90LjRj1wiLFxyXG4gICAgQnVpbGRpbmdGbG9vcnM6IFwi0JrQvtC70LjRh9C10YHRgtCy0L4g0Y3RgtCw0LbQtdC5INC30LTQsNC90LjRj1wiLFxyXG4gICAgQnVpbGRpbmdSb29mOiBcItCi0LjQvyDQutGA0L7QstC70Lgg0LfQtNCw0L3QuNGPXCIsXHJcbiAgICBCdWlsZGluZ1Jvb2ZNYXRlcmlhbDogXCLQnNCw0YLQtdGA0LjQsNC7INC60YDQvtCy0LvQuFwiLFxyXG4gICAgQnVpbGRpbmdJc01vbnVtZW50OiBcItCv0LLQu9GP0LXRgtGB0Y8g0LvQuCDQv9Cw0LzRj9GC0L3QuNC60L7QsiDQsNGA0YXQuNGC0LXQutGC0YPRgNGLL9Ce0LHRitC10LrRgtC+0Lwg0LrRg9C70YzRgtGD0YDQvdC+0LPQviDQvdCw0YHQu9C10LTQuNGPXCIsXHJcbiAgICBCdWlsZGluZ1VzZWZ1bGxTcXVhcmU6IFwi0J/QvtC70LXQt9C90LDRjyDQv9C70L7RidCw0LTRjFwiLFxyXG4gICAgQnVpbGRpbmdDYXRlZ29yeTogXCLQmtCw0YLQtdCz0L7RgNC40Y8g0L/QvtC80LXRidC10L3QuNGPXCIsXHJcbiAgICBCdWlsZGluZ1Jlbm92YXRpb25ZZWFyOiBcItCf0LXRgNC40L7QtCDQv9GA0L7QstC10LTQtdC90LjRjyDQv9C+0YHQu9C10LTQvdC10LPQviDQutCw0L/QuNGC0LDQu9GM0L3QvtCz0L4g0YDQtdC80L7QvdGC0LBcIixcclxuICAgIEJ1aWxkaW5nTm90VXNlZnVsbFNxdWFyZTogXCLQn9C70L7RidCw0LTRjCwg0LjRgdC/0L7Qu9GM0LfRg9C10LzQsNGPINC90LUg0L/QviDQvdCw0LfQvdCw0YfQtdC90LjRjiBcIixcclxuICAgIEJ1aWxkaW5nUm9vbXNDb3VudEJUSTogXCLQntCx0YnQtdC1INC60L7Qu9C40YfQtdGB0YLQstC+INC/0L7QvNC10YnQtdC90LjQuSDQv9C+INC/0LvQsNC90YMg0JHQotCYXCIsXHJcbiAgICBCdWlsZGluZ1Jvb21zVXN0YXZDb3VudDogXCLQmtC+0LvQuNGH0LXRgdGC0LLQviDQv9C+0LzQtdGJ0LXQvdC40LksINC/0YDQuNGB0L/QvtGB0L7QsdC70LXQvdC90YvRhSDQtNC70Y8g0LLQtdC00LXQvdC40Y8g0YPRgdGC0LDQstC90L7QuSDQtNC10Y/RgtC10LvRjNC90L7RgdGC0LhcIixcclxuICAgIEJ1aWxkaW5nRmxvb3JzVXNpbmc6IFwi0JrQvtC70LjRh9C10YHRgtCy0L4g0LfQsNC90LjQvNCw0LXQvNGL0YUg0Y3RgtCw0LbQtdC5XCIsXHJcbiAgICBCdWlsZGluZ1N0YXR1czogXCLQodC+0YHRgtC+0Y/QvdC40LUg0L/QvtC80LXRidC10L3QuNGPXCIsXHJcbiAgICBCdWlsZGluZ0Jhc2VtZW50OiBcItCf0L7QtNCy0LDQu1wiLFxyXG4gICAgQnVpbGRpbmdTZXBhcmF0ZUlucHV0OiBcItCd0LDQu9C40YfQuNC1INC+0YLQtNC10LvRjNC90L7Qs9C+INCy0YXQvtC00LBcIixcclxuICAgIEJ1aWxkaW5nRWxlY3RyaWNpdHk6IFwi0JrQvtC7LdCy0L4g0LXQtNC40L3QvtCy0YDQtdC80LXQvdC90L4g0L7RgtC/0YPRidC10L3QvdC+0Lkg0Y3Qu9C10LrRgtGA0LjRh9C10YHQutC+0Lkg0LzQvtGJ0L3QvtGB0YLQuFwiLFxyXG4gICAgQnVpbGRpbmdBaXJpbmc6IFwi0J3QsNC70LjRh9C40LUg0YHQuNGB0YLQtdC80Ysg0LLQtdC90YLQuNC70Y/RhtC40LhcIixcclxuICAgIEJ1aWxkaW5nQWlyaW5nQ29uZGl0aW9uOiBcItCh0L7RgdGC0L7Rj9C90LjQtSDRgdC40YHRgtC10LzRiyDQstC10L3RgtC40LvRj9GG0LjQuFwiLFxyXG4gICAgQnVpbGRpbmdDb25kaXRpb25lcjogXCLQndCw0LvQuNGH0LjQtSDRgdC40YHRgtC10LzRiyDRhtC10L3RgtGA0LDQu9C40LfQvtCy0LDQvdC90L7Qs9C+INC60L7QvdC00LjRhtC40L7QvdC40YDQvtCy0LDQvdC40Y9cIixcclxuICAgIEJ1aWxkaW5nQ29tdW5hbFNlcnZpY2VzQ29udHJhY3RzOiBcItCa0L7QvdGC0YDQsNC60YLRiyDQvdCwINC60L7QvNC80YPQvdCw0LvRjNC90YvQtSDRg9GB0LvRg9Cz0LhcIixcclxuICAgIEJ1aWxkaW5nRW5naW5lZXJDb250cmFjdHM6IFwi0JrQvtC90YLRgNCw0LrRgtGLINC90LAg0L7QsdGB0LvRg9C20LjQstCw0L3QuNC1INC40L3QttC10L3QtdGA0L3Ri9GFINGB0LjRgdGC0LXQvFwiLFxyXG4gICAgU3lzdGVtc1dhc2hpbmc6IFwi0J/RgNC+0LzRi9Cy0LrQsFwiLFxyXG4gICAgU3lzdGVtc1JlcGFpcjogXCLQoNC10LzQvtC90YIg0Lgg0LfQsNC80LXQvdCwINGC0YDRg9Cx0L7Qv9GA0L7QstC+0LTQvtCyINC4INC+0LHQvtGA0YPQtNC+0LLQsNC90LjRj1wiLFxyXG4gICAgU3lzdGVtc0FkanVzdG1lbnQ6IFwi0J3QsNC70LDQtNC+0YfQvdC+LdGA0LXQs9GD0LvQuNGA0L7QstC+0YfQvdGL0LUg0YDQsNCx0L7RgtGLXCIsXHJcbiAgICBTeXN0ZW1IeWRyYXVsaWNUZXN0OiBcItCf0YDQvtCy0LXQtNC10L3QuNC1INCz0LjQtNGA0LDQstC70LjRh9C10YHQutC40YUg0LjRgdC/0YvRgtCw0L3QuNC5XCIsXHJcbiAgICBTeXN0ZW1SZWFkeUFjdDogXCLQn9C+0LvRg9GH0LXQvdC40LUg0JDQutGC0LAg0LPQvtGC0L7QstC90L7RgdGC0LhcIixcclxuICAgIFN5c3RlbU90aGVyV29yazogXCLQlNGA0YPQs9C40LUg0YDQsNCx0L7RgtGLXCIsXHJcbiAgICBXaW50ZXJDbGVhcmluZ1dhdGVyUm9vZjogXCLQntGH0LjRgdGC0LrQsCDRgdC40YHRgtC10LzRiyDQstC+0LTQvtGB0YLQvtC60LAg0LrRgNC+0LLQu9C4XCIsXHJcbiAgICBXaW50ZXJDbGVhcmluZ1Jvb2Y6IFwi0J7Rh9C40YHRgtC60LAg0LrRgNC+0LLQu9C4XCIsXHJcbiAgICBXaW50ZXJMb2Z0V2FybWluZzogXCLQo9GC0LXQv9C70LXQvdC40LUg0YfQtdGA0LTQsNC60L7QsiDQuCDQv9C+0LTQstCw0LvQvtCyXCIsXHJcbiAgICBXaW50ZXJIZWF0aW5nUm9vZkd1dHRlcnM6IFwi0J7QsdGB0LvRg9C20LjQstCw0L3QuNC1INGB0LjRgdGC0LXQvNGLINGN0LvQtdC60YLRgNC+0L7QsdC+0LPRgNC10LLQsCDQttC10LvQvtCx0L7QsiDQstC+0LTQvtGB0YLQvtC60LAg0LrRgNGL0YjQuFwiLFxyXG4gICAgV2ludGVyTG9mdEhlYXJpbmdXaW5kb3dzOiBcItCe0LHRgdC70YPQttC40LLQsNC90LjQtSDQuCDRg9GC0LXQv9C70LXQvdC40LUg0YHQu9GD0YXQvtCy0YvRhSDQvtC60L7QvSDRh9C10YDQtNCw0LrQsFwiLFxyXG4gICAgV2ludGVyV2luZG93c1dhcm1pbmc6IFwi0KPRgtC10L/Qu9C10L3QuNC1INC+0LrQvtC9XCIsXHJcbiAgICBXaW50ZXJCYWxjb255RG9vcnNXYXJtaW5nOiBcItCj0YLQtdC/0LvQtdC90LjQtSDQsdCw0LvQutC+0L3QvdGL0YUg0LTQstC10YDQtdC5XCIsXHJcbiAgICBXaW50ZXJFbnRyeURvb3JzOiBcItCj0YLQtdC/0LvQtdC90LjQtSDQstGF0L7QtNC90YvRhSDQtNCy0LXRgNC10LksINC90LDRgdGC0YDQvtC50LrQsCDQtNC+0LLQvtC00YfQuNC60L7QslwiLFxyXG4gICAgV2ludGVySXNvbGF0aW9uRWxlY3RyaWNXaXJlczogXCLQn9GA0L7QstC10YDQutCwINGB0L7Qv9GA0L7RgtC40LLQu9C10L3QuNGPINC40LfQvtC70Y/RhtC40Lgg0Y3Qu9C10LrRgtGA0L7Qv9GA0L7QstC+0LTQutC4INC4INGN0LvQtdC60YLRgNC+0L7QsdC+0YDRg9C00L7QstCw0L3QuNGPXCIsXHJcbiAgICBXaW50ZXJGaXhIZWF0Q3VydGFpbnM6IFwi0J7QsdGB0LvRg9C20LjQstCw0L3QuNC1INGC0LXQv9C70L7QstGL0YUg0LfQsNCy0LXRgSDQuCDQutCw0LvQvtGA0LjRhNC10YDQvtCyXCIsXHJcbiAgICBXaW50ZXJPdGhlcjogXCLQlNGA0YPQs9C40LUg0YDQsNCx0L7RgtGLXCIsXHJcbiAgICBBZGphY2VudFRlcnJpdG9yeUF2YWlsYWJpbGl0eTogXCLQndCw0LvQuNGH0LjQtSDQv9GA0LjQu9C10LPQsNGO0YnQtdC5INGC0LXRgNGA0LjRgtC+0YDQuNC4XCIsXHJcblxyXG4gICAgQ29tbW9uSW5mbzogXCLQntCx0YnQsNGPINC40L3RhNC+0YDQvNCw0YbQuNGPXCIsXHJcbiAgICBQb3NpdGlvbjogXCLQnNC10YHRgtC+0L/QvtC70L7QttC10L3QuNC1XCIsXHJcbiAgICBTdGFmZjogXCLQn9C10YDRgdC+0L3QsNC7XCIsXHJcbiAgICBHb3NSZWdpc3RlcjogXCLQk9C+0YHRg9C00LDRgNGB0YLQstC10L3QvdCw0Y8g0YDQtdCz0LjRgdGC0YDQsNGG0LjRj1wiLFxyXG4gICAgU3BlY2lhbGlzYXRpb246IFwi0KHQv9C10YbQuNCw0LvQuNC30LDRhtC40Y9cIixcclxuICAgIFJlYWRpbmdIYWxsOiBcItCn0LjRgtCw0YLQtdC70YzRgdC60LjQuSDQt9Cw0LtcIixcclxuICAgIElzQWJvbmVtZW50OiBcItCQ0LHQvtC90LXQvNC10L3RglwiLFxyXG4gICAgRnVuZDogXCLQpNC+0L3QtFwiLFxyXG4gICAgQ29tcHV0ZXJzOiBcItCa0L7RgdC/0YzRjtGC0LXRgNC40LfQsNGG0LjRj1wiLFxyXG4gICAgSXNTcGVjaWFsRnVuZDogXCLQodC/0LXRhtC40LDQu9GM0L3Ri9C5INGE0L7QvdC0XCIsXHJcbiAgICBPdXRkb29yOiBcItCS0L3QtdGB0YLQsNGG0LjQvtC90LDRgFwiLFxyXG4gICAgRGlzYWJsZWQ6IFwi0JTQu9GPINC/0L7RgdC10YLQuNGC0LXQu9C10Lkg0YEg0L7Qs9GA0LDQvdC40YfQtdC90L3Ri9C80Lgg0LLQvtC30LzQvtC20L3QvtGB0YLRj9C80LhcIixcclxuICAgIE9wZW5pbmc6IFwi0JLRgNC10LzRjyDRgNCw0LHQvtGC0YtcIixcclxuICAgIEZvclZpc2l0b3JzOiBcItCj0YHQu9GD0LPQuCDQtNC70Y8g0L/QvtGB0LXRgtC40YLQtdC70LXQuVwiLFxyXG4gICAgQnVpbGRpbmdJbmZvOiBcItCY0L3RhNC+0YDQvNCw0YbQuNGPINC+INC30LTQsNC90LjQuFwiLFxyXG4gICAgQWlyaW5nOiBcItCS0LXQvdGC0LjQu9GP0YbQuNGPINC4INC60L7QvdGC0YDQsNC60YLRi1wiLFxyXG4gICAgSGVhdFdhdGVyUHJlcGFyYXRpb246IFwi0J7QsdGB0LvRg9C20LjQstCw0L3QuNC1INC40L3QttC10L3QtdGA0L3Ri9GFINGB0LjRgdGC0LXQvFwiLFxyXG4gICAgV2ludGVyV29ya3M6IFwi0KDQsNCx0L7RgtGLINC/0L4g0L/QvtC00LPQvtGC0L7QstC60LUg0Log0LfQuNC80LVcIixcclxuICAgIEFkalRlcnJpdG9yeTogXCLQn9GA0LjQu9C10LPQsNGO0YnQsNGPINGC0LXRgNGA0LjRgtC+0YDQuNGPXCJcclxufTsiLCJjb25zdCBEaWN0aW9uYXJ5ID0gcmVxdWlyZShcIi4uL19jb21tb24vZGljdGlvbmFyeVwiKTtcclxuLyoqXHJcbiAqIEBjbGFzcyBUZXN0bmF2XHJcbiAqL1xyXG5cclxubGV0IFRlc3RuYXYgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdUZXN0bmF2JyxcclxuICAgIFRhcmdldDogJy5ib2R5JyxcclxuICAgIFR5cGU6ICdjb250ZW50JyxcclxuXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LXRlc3QnXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuVGVzdGVyUGFuZWxdXHJcbiAgICB9LFxyXG5cclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgLy8gZGVidWdnZXJcclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cInRlc3RuYXYgY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgPGgxPtCh0YLRgNCw0L3QuNGG0LAg0L3QsNGF0L7QtNC40YLRgdGPINCyINGA0LDQt9GA0LDQsdC+0YLQutC1PC9oMT5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBMaWJyYXJ5TmFtZTogJydcclxuICAgIH0sXHJcbn0pO1xyXG5cclxud2luZG93LlRlc3RuYXYgPSBUZXN0bmF2O1xyXG5yZXF1aXJlKCcuL3Rlc3QtbWFpbi90ZXN0LW1haW4uanMnKTtcclxucmVxdWlyZSgnLi90ZXN0LW1haW4yL3Rlc3QtbWFpbjIuanMnKTtcclxubW9kdWxlLmV4cG9ydHMgPSBUZXN0bmF2O1xyXG4iLCJUZXN0bmF2LlRlc3RNYWluMi5MZXZlbDN2MiA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBUZXN0bmF2LlRlc3RNYWluMixcclxuICAgIE5hbWU6ICdMZXZlbDN2MicsXHJcbiAgICBUeXBlOiAnZGlhcnktc3VtbWFyeS1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtdGVzdC1tYWluMi0xJyxcclxuICAgIH0sXHJcbiAgICAvLyBWaXNpYmxlOiB0cnVlLFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJzdW1tYXJ5LXBhcnRcIj5cclxuICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9XCJwYWRkaW5nLXRvcDogMjBweFwiPtCS0YLQvtGA0L7QuSDRgdGC0L7QuyAtINCf0LDRgNCw0LPRgNCw0YQgMVc8L3A+XHJcbiAgICAgICAgICAgICAgICAgIDxwPtCS0YLQvtGA0L7QuSDRgdGC0L7QuyAtINCf0LDRgNCw0LPRgNCw0YQgMlc8L3A+XHJcbiAgICAgICAgICAgICAgICAgIDxwPtCS0YLQvtGA0L7QuSDRgdGC0L7QuyAtINCf0LDRgNCw0LPRgNCw0YQgM1c8L3A+XHJcbiAgICAgICAgICAgICAgICAgIDxwPtCS0YLQvtGA0L7QuSDRgdGC0L7QuyAtINCf0LDRgNCw0LPRgNCw0YQgNFc8L3A+XHJcbiAgICAgICAgICAgICAgICAgIDxwPtCS0YLQvtGA0L7QuSDRgdGC0L7QuyAtINCf0LDRgNCw0LPRgNCw0YQgNVc8L3A+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuXHJcbiAgICAvLyBTaG93KCl7XHJcbiAgICAvLyAgICAgdGhpcy5QYXJlbnQuU3Vic2NyaXB0aW9uLlN1YnNjcmliZSgpO1xyXG4gICAgLy8gfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IHllYXJNb3VudGggPSB7XHJcbiAgICAgICAgICAgIDA6ICfQr9C90LLQsNGA0YwnLFxyXG4gICAgICAgICAgICAxOiAn0KTQtdCy0YDQsNC70YwnLFxyXG4gICAgICAgICAgICAyOiAn0JzQsNGA0YInLFxyXG4gICAgICAgICAgICAzOiAn0JDQv9GA0LXQu9GMJyxcclxuICAgICAgICAgICAgNDogJ9Cc0LDQuScsXHJcbiAgICAgICAgICAgIDU6ICfQmNGO0L3RjCcsXHJcbiAgICAgICAgICAgIDY6ICfQmNGO0LvRjCcsXHJcbiAgICAgICAgICAgIDc6ICfQkNCy0LPRg9GB0YInLFxyXG4gICAgICAgICAgICA4OiAn0KHQtdC90YLRj9Cx0YDRjCcsXHJcbiAgICAgICAgICAgIDk6ICfQntC60YLRj9Cx0YDRjCcsXHJcbiAgICAgICAgICAgIDEwOiAn0J3QvtGP0LHRgNGMJyxcclxuICAgICAgICAgICAgMTE6ICfQlNC10LrQsNCx0YDRjCcsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgJHtuZXcgRGF0ZSgpLmdldE1vbnRoKCkgKyAxfSDRh9C40YHQu9C+INGN0YLQviAtICR7eWVhck1vdW50aFtuZXcgRGF0ZSgpLmdldE1vbnRoKCkgXX1gKTtcclxuICAgIH1cclxufSk7IiwiVGVzdG5hdi5UZXN0TWFpbjIgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIC8vRGlzYWJsZWQ6IHRydWUsXHJcbiAgICBOYW1lOiAnVGVzdE1haW4yJyxcclxuICAgIFRhcmdldDogJycsXHJcbiAgICBUeXBlOiAnVGVzdG5hdi1jb250ZW50JyxcclxuICAgIC8vVmlzaWJsZTogdHJ1ZSxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtdGVzdC1tYWluMidcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuVGVzdGVyUGFuZWxdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXY+XHJcbiAgICAgICAgICAgICAgICA8aDI+0JLRgtC+0YDQvtC5INGB0YLQvtC7PC9oMj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG5cclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgIH0sXHJcblxyXG59KTtcclxucmVxdWlyZShcIi4vbGV2ZWwtdGhyZWUvbGV2ZWwtdGhyZWVcIik7XHJcbiIsIlRlc3RuYXYuVGVzdE1haW4uTGV2ZWwzdjEgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIC8vRGlzYWJsZWQ6IHRydWUsXHJcbiAgICBOYW1lOiAnTGV2ZWwzdjEnLFxyXG4gICAgVGFyZ2V0OiAnJyxcclxuICAgIFR5cGU6ICdkYXNoLWNvbnRlbnQnLFxyXG4gICAgLy8gVmlzaWJsZTogdHJ1ZSxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtdGVzdC1tYWluLWxldmVsMy0xJ1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0RpY3Rpb25hcnkuUm9sZS5UZXN0ZXJQYW5lbF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxwPtCg0LDQsdC+0YfQuNC5INGB0YLQvtC7IC0gTGV2ZWwgMy0xPC9wPlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcblxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgfSxcclxuXHJcbn0pOyIsIlRlc3RuYXYuVGVzdE1haW4gPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogVGVzdG5hdixcclxuICAgIC8vRGlzYWJsZWQ6IHRydWUsXHJcbiAgICBOYW1lOiAnVGVzdE1haW4nLFxyXG4gICAgVHlwZTogJ1Rlc3RuYXYtY29udGVudCcsXHJcbiAgICAvL1Zpc2libGU6IHRydWUsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LXRlc3QtbWFpbidcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuVGVzdGVyUGFuZWxdLFxyXG4gICAgICAgIFJ1bGVzOiB7XHJcbiAgICAgICAgICAgIGpvam86IHtcclxuICAgICAgICAgICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLkFkbWluXSxcclxuICAgICAgICAgICAgICAgIFdyaXRlOiBbXSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OiBgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxoMj7QoNCw0LHQvtGH0LjQuSDRgdGC0L7QuyBwPC9oMj5cclxuICAgICAgICAgICAgICAgIDxoMiBkYXRhLXBlcm1pc2lvbj1cImpvam9cIj7QoNCw0LHQvtGH0LjQuSDRgdGC0L7QuyBjINCw0YLRgNC40LHRg9GC0LDQvNC4INC90LAg0YfRgtC10L3QuNC1PC9oMj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG5cclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgIH0sXHJcblxyXG59KTtcclxucmVxdWlyZShcIi4vbGV2ZWwzL2xldmVsM1wiKTtcclxuLy8gd2luZG93LkRhc2guRGFzaE1haW4gPSBEYXNoTWFpbjtcclxuLy8gbW9kdWxlLmV4cG9ydHMgPSBEYXNoO1xyXG5MdXJlLlNldHRpbmdzIiwiV0Rhc2guU2l4TksuU2l4TktNYWluID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TktNYWluJyxcclxuICAgIFRhcmdldDogJycsXHJcbiAgICBUeXBlOiAnU2l4TkstY29udGVudCcsXHJcbiAgICBQYXJlbnQ6IFdEYXNoLlNpeE5LLFxyXG4gICAgVmlzaWJsZTogdHJ1ZSxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcuc2l4LW5rIC5yZXEtdGFiLm1haW4nXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuYDxkaXYgY2xhc3M9XCJkYXRhLXBhcnRcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJzdHJvbmcgY2VudGVyIGJvcmRlclwiPtCk0JXQlNCV0KDQkNCb0KzQndCe0JUg0KHQotCQ0KLQmNCh0KLQmNCn0JXQodCa0J7QlSDQndCQ0JHQm9Cu0JTQldCd0JjQlTwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImNlbnRlciBib3JkZXJcIj7QmtCe0J3QpNCY0JTQldCd0KbQmNCQ0JvQrNCd0J7QodCi0Kwg0JPQkNCg0JDQndCi0JjQoNCj0JXQotCh0K8g0J/QntCb0KPQp9CQ0KLQldCb0JXQnCDQmNCd0KTQntCg0JzQkNCm0JjQmDwvZGl2Plx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFxyXG4gICAgPGRpdiBjbGFzcz1cImdyZXktYmFjayBjZW50ZXIgYm9yZGVyXCI+0J3QsNGA0YPRiNC10L3QuNC1INC/0L7RgNGP0LTQutCwINC/0YDQtdC00YHRgtCw0LLQu9C10L3QuNGPINGB0YLQsNGC0LjRgdGC0LjRh9C10YHQutC+0Lkg0LjQvdGE0L7RgNC80LDRhtC40LgsINCwINGA0LDQstC90L4g0L/RgNC10LTRgdGC0LDQstC70LXQvdC40LUg0L3QtdC00L7RgdGC0L7QstC10YDQvdC+0Lkg0YHRgtCw0YLQuNGB0YLQuNGH0LXRgdC60L7QuSDQuNC90YTQvtGA0LzQsNGG0LjQuDxicj5cclxuICAgINCy0LvQtdGH0LXRgiDQvtGC0LLQtdGC0YHRgtCy0LXQvdC90L7RgdGC0YwsINGD0YHRgtCw0L3QvtCy0LvQtdC90L3Rg9GOINGB0YLQsNGC0YzQtdC5IDEzLjE5INCa0L7QtNC10LrRgdCwINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuCDQvtCxINCw0LTQvNC40L3QuNGB0YLRgNCw0YLQuNCy0L3Ri9GFINC/0YDQsNCy0L7QvdCw0YDRg9GI0LXQvdC40Y/RhTxicj5cclxuICAgINC+0YIgMzAuMTIuMjAwMSDihJYgMTk1LdCk0JcsINCwINGC0LDQutC20LUg0YHRgtCw0YLRjNC10LkgMyDQl9Cw0LrQvtC90LAg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4INC+0YIgMTMuMDUuOTIg4oSWIDI3NjEtMSBcItCe0LEg0L7RgtCy0LXRgtGB0YLQstC10L3QvdC+0YHRgtC4INC30LAg0L3QsNGA0YPRiNC10L3QuNC1PGJyPlxyXG4gICAg0L/QvtGA0Y/QtNC60LAg0L/RgNC10LTRgdGC0LDQstC70LXQvdC40Y8g0LPQvtGB0YPQtNCw0YDRgdGC0LLQtdC90L3QvtC5INGB0YLQsNGC0LjRgdGC0LjRh9C10YHQutC+0Lkg0L7RgtGH0LXRgtC90L7RgdGC0LhcIjwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImNlbnRlciBib3JkZXJcIj7QktCe0JfQnNCe0JbQndCeINCf0KDQldCU0J7QodCi0JDQktCb0JXQndCY0JUg0JIg0K3Qm9CV0JrQotCg0J7QndCd0J7QnCDQktCY0JTQlTwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImNlbnRlciBncmV5LWJhY2sgYm9yZGVyXCI+0KHQktCV0JTQldCd0JjQryDQntCRINCe0JHQqdCV0JTQntCh0KLQo9Cf0J3QntCZICjQn9Cj0JHQm9CY0KfQndCe0JkpINCR0JjQkdCb0JjQntCi0JXQmtCVPGJyPtC30LAgJHsobmV3IERhdGUpLmdldEZ1bGxZZWFyKCl9INCz0L7QtDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImZsZXhcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleDRcIj5cclxuICAgICAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0J/RgNC10LTQvtGB0YLQsNCy0LvRj9GO0YI6PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoPtCh0YDQvtC60Lgg0L/RgNC10LTQvtGB0YLQsNCy0LvQtdC90LjRjzwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cIjJcIj7RjtGA0LjQtNC40YfQtdGB0LrQuNC1INC70LjRhtCwIC0g0L7QsdGJ0LXQtNC+0YHRgtGD0L/QvdGL0LUg0LHQuNCx0LvQuNC+0YLQtdC60LgsINC/0L7QtNCy0LXQtNC+0LzRgdGC0LLQtdC90L3Ri9C1OiDQvtGA0LPQsNC90YMg0LzQtdGB0YLQvdC+0LPQviDRgdCw0LzQvtGD0L/RgNCw0LLQu9C10L3QuNGPLCDQvtGB0YPRidC10YHRgtCy0LvRj9GO0YnQtdC80YMg0YPQv9GA0LDQstC70LXQvdC40LUg0LIg0YHRhNC10YDQtSDQutGD0LvRjNGC0YPRgNGLOyDQvtGA0LPQsNC90YMg0LjRgdC/0L7Qu9C90LjRgtC10LvRjNC90L7QuSDQstC70LDRgdGC0Lgg0YHRg9Cx0YrQtdC60YLQsCDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40LgsINC+0YHRg9GJ0LXRgdGC0LLQu9GP0Y7RidC10LzRgyDRg9C/0YDQsNCy0LvQtdC90LjQtSDQsiDRgdGE0LXRgNC1INC60YPQu9GM0YLRg9GA0Ys7INCc0LjQvdC40YHRgtC10YDRgdGC0LLRgyDQutGD0LvRjNGC0YPRgNGLINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuDo8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xNSDRj9C90LLQsNGA0Y88L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdHI+IFxyXG4gICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XCIyXCI+LSDRgdC+0L7RgtCy0LXRgtGB0YLQstGD0Y7RidC10LzRgyDQvtGA0LPQsNC90YMg0YPQv9GA0LDQstC70LXQvdC40Y8g0LIg0YHRhNC10YDQtSDQutGD0LvRjNGC0YPRgNGLICjQv9C+INC/0YDQuNC90LDQtNC70LXQttC90L7RgdGC0LgpOyDRjtGA0LjQtNC40YfQtdGB0LrQuNC1INC70LjRhtCwIC0g0L7QsdGJ0LXQtNC+0YHRgtGD0L/QvdGL0LUg0LHQuNCx0LvQuNC+0YLQtdC60LgsINC60YDQvtC80LUg0L/QvtC00LLQtdC00L7QvNGB0YLQstC10L3QvdGL0YU6INC+0YDQs9Cw0L3RgyDQvNC10YHRgtC90L7Qs9C+INGB0LDQvNC+0YPQv9GA0LDQstC70LXQvdC40Y8sINC+0YHRg9GJ0LXRgdGC0LLQu9GP0Y7RidC10LzRgyDRg9C/0YDQsNCy0LvQtdC90LjQtSDQsiDRgdGE0LXRgNC1INC60YPQu9GM0YLRg9GA0Ys7INC+0YDQs9Cw0L3RgyDQuNGB0L/QvtC70L3QuNGC0LXQu9GM0L3QvtC5INCy0LvQsNGB0YLQuCDRgdGD0LHRitC10LrRgtCwINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuCwg0L7RgdGD0YnQtdGB0YLQstC70Y/RjtGJ0LXQvNGDINGD0L/RgNCw0LLQu9C10L3QuNC1INCyINGB0YTQtdGA0LUg0LrRg9C70YzRgtGD0YDRizsg0JzQuNC90LjRgdGC0LXRgNGB0YLQstGDINC60YPQu9GM0YLRg9GA0Ysg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4OjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjE1INGP0L3QstCw0YDRjzwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMlwiPi3RgtC10YDRgNC40YLQvtGA0LjQsNC70YzQvdC+0LzRgyDQvtGA0LPQsNC90YMg0KDQvtGB0YHRgtCw0YLQsCDQsiDRgdGD0LHRitC10LrRgtC1INCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuCDQv9C+INGD0YHRgtCw0L3QvtCy0LvQtdC90L3QvtC80YMg0LjQvCDQsNC00YDQtdGB0YM7INC+0YDQs9Cw0L0g0LzQtdGB0YLQvdC+0LPQviDRgdCw0LzQvtGD0L/RgNCw0LLQu9C10L3QuNGPLCDQvtGB0YPRidC10YHRgtCy0LvRj9GO0YnQuNC5INGD0L/RgNCw0LLQu9C10L3QuNC1INCyINGB0YTQtdGA0LUg0LrRg9C70YzRgtGD0YDRiywg0YHQstC+0LTQvdGL0LUg0L7RgtGH0LXRgtGLINC/0L4g0L/QvtC00LLQtdC00L7QvNGB0YLQstC10L3QvdGL0Lwg0YPRh9GA0LXQttC00LXQvdC40Y/QvDo8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4yMCDRhNC10LLRgNCw0LvRjzwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMlwiPi3QvtGA0LPQsNC90YMg0LjRgdC/0L7Qu9C90LjRgtC10LvRjNC90L7QuSDQstC70LDRgdGC0Lgg0YHRg9Cx0YrQtdC60YLQsCDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40LgsINC+0YHRg9GJ0LXRgdGC0LLQu9GP0Y7RidC10LzRgyDRg9C/0YDQsNCy0LvQtdC90LjQtSDQsiDRgdGE0LXRgNC1INC60YPQu9GM0YLRg9GA0Ys7INC+0YDQs9Cw0L3RiyDQuNGB0L/QvtC70L3QuNGC0LXQu9GM0L3QvtC5INCy0LvQsNGB0YLQuCDRgdGD0LHRitC10LrRgtCwINCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuCwg0L7RgdGD0YnQtdGB0YLQstC70Y/RjtGJ0LjQtSDRg9C/0YDQsNCy0LvQtdC90LjQtSDQsiDRgdGE0LXRgNC1INC60YPQu9GM0YLRg9GA0YssINGB0LLQvtC00L3Ri9C1INC+0YLRh9C10YLRiyDQv9C+INGB0YPQsdGK0LXQutGC0YMg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4OiAt0JzQuNC90LjRgdGC0LXRgNGB0YLQstGDINC60YPQu9GM0YLRg9GA0Ysg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4OzwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjEwINC80LDRgNGC0LA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdHI+IFxyXG4gICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XCIyXCI+0KDQvtGB0YHRgtCw0YIsINGB0LLQvtC00L3Ri9C1INC+0YLRh9C10YLRiyDQv9C+INC+0YHQvdC+0LLQvdGL0Lwg0L/QvtC60LDQt9Cw0YLQtdC70Y/QvCDQtNC10Y/RgtC10LvRjNC90L7RgdGC0Lgg0L7QsdGJ0LXQtNC+0YHRgtGD0L/QvdGL0YUgINCx0LjQsdC70LjQvtGC0LXQuiwg0L3QtSDQvtGC0L3QvtGB0Y/RidC40YXRgdGPINC6INGB0YTQtdGA0LUg0LLQtdC00LXQvdC40Y8g0JzQuNC90LjRgdGC0LXRgNGB0YLQstCwINC60YPQu9GM0YLRg9GA0Ysg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4OiAt0JzQuNC90LjRgdGC0LXRgNGB0YLQstGDINC60YPQu9GM0YLRg9GA0Ysg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MzAg0LDQv9GA0LXQu9GPPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleDEgbWFyLTctYWxsXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZW50ZXIgc3Ryb25nIGdyZXktYmFjayBib3JkZXJcIj7QpNC+0YDQvNCwIOKEliA2LdCd0Jo8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPtCf0YDQuNC60LDQtyDQoNC+0YHRgdGC0LDRgtCwOjxicj7QntCxINGD0YLQstC10YDQttC00LXQvdC40Lgg0YTQvtGA0LzRizxicj7QvtGCIDA4LjEwLjIwMTUg4oSWIDQ2NDxicj7QniDQstC90LXRgdC10L3QuNC4INC40LfQvNC10L3QtdC90LjQuSAo0L/RgNC4INC90LDQu9C40YfQuNC4KTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+0L7RgiBfX19fX19fX18g4oSWIF9fX188L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPtC+0YIgX19fX19fX19fIOKEliBfX19fPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZW50ZXIgYm9yZGVyIGdyZXktYmFja1wiIHN0eWxlPVwicGFkZGluZzogN3B4O1wiPnt7RGF0ZVJhbmdlfX08L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImZsZXgtcm93IHdpZC0xMDBcIj48ZGl2PtCd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDQvtGC0YfQuNGC0YvQstCw0Y7RidC10LnRgdGPINC+0YDQs9Cw0L3QuNC30LDRhtC40Lg8L2Rpdj48ZGl2IGNsYXNzPVwidW5kZXJsaW5lIGZsZXgxXCI+PC9kaXY+PC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZmxleC1yb3cgd2lkLTEwMFwiPjxkaXY+0J/QvtGH0YLQvtCy0YvQuSDQsNC00YDQtdGBPC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MVwiPjwvZGl2PjwvZGl2PlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QmtC+0LQg0YTQvtGA0LzRiyDQv9C+INCe0JrQo9CUPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7QmtC+0LQ8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L7RgtGH0LjRgtGL0LLQsNGO0YnQtdC50YHRjyDQvtGA0LPQsNC90LjQt9Cw0YbQuNC4INC/0L4g0J7QmtCf0J48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD48L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+MTwvdGg+PHRoPjI8L3RoPjx0aD4zPC90aD48dGg+NDwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MDYwOTUyMTwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtcm93XCI+PGRpdiBjbGFzcz1cImZsZXgxXCI+0J3QsNC40LzQtdC90L7QstCw0L3QuNC1INGD0YfRgNC10LTQuNGC0LXQu9GPPC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MVwiPtCU0LXQv9Cw0YDRgtCw0LzQtdC90YIg0LrRg9C70YzRgtGD0YDRiyDQs9C+0YDQvtC00LAg0JzQvtGB0LrQstGLPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtcm93XCI+PGRpdiBjbGFzcz1cImZsZXgxXCI+0J3QsNC40LzQtdC90L7QstCw0L3QuNC1INGG0LXQvdGC0YDQsNC70LjQt9C+0LLQsNC90L3QvtC5INGB0LjRgdGC0LXQvNGLLCDQsiDQutC+0YLQvtGA0YPRjiDQstGF0L7QtNC40YIg0LHQuNCx0LvQuNC+0YLQtdC60LA8L2Rpdj48ZGl2IGNsYXNzPVwidW5kZXJsaW5lIGZsZXgxXCI+0JPQvtGB0YPQtNCw0YDRgdGC0LLQtdC90L3QviDQsdGO0LTQttC10YLQvdC+0LUg0YPRh9GA0LXQttC00LXQvdC40LUg0LrRg9C70YzRgtGD0YDRiyDQs9C+0YDQvtC00LAg0JzQvtGB0LrQstGLIFwi0KbQtdC90YLRgNCw0LvQuNC30L7QstCw0L3QvdCw0Y8g0LHQuNCx0LvQuNC+0YLQtdGH0L3QsNGPINGB0LjRgdGC0LXQvNCwINCm0LXQvdGC0YDQsNC70YzQvdC+0LPQviDQsNC00LzQuNC90LjRgdGC0YDQsNGC0LjQstC90L7Qs9C+INC+0LrRgNGD0LPQsFwiPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtcm93XCI+PGRpdiBjbGFzcz1cImZsZXgxXCI+0J3QsNC40LzQtdC90L7QstCw0L3QuNC1INC4INGC0LjQvyDQsdC40LHQu9C40L7RgtC10LrQuCAo0LHQuNCx0LvQuNC+0YLQtdC60Lgt0YTQuNC70LjQsNC70LApPC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MVwiPjwvZGl2PjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXJvd1wiPjxkaXYgY2xhc3M9XCJmbGV4MVwiPtCd0LDQv9GA0LDQstC70LXQvdC40LUg0L7RgdC90L7QstC90L7QuSDQtNC10Y/RgtC10LvRjNC90L7RgdGC0Lgg0LPQvtC70L7QstC90L7QuSDQvtGA0LPQsNC90LjQt9Cw0YbQuNC4PC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MVwiPtCe0JrQktCt0JQgOTIuNTE8L2Rpdj48L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBEYXRlUmFuZ2U6ICh7MTogJzEg0JrQstCw0YDRgtCw0LsnLCAyOiAnMiDQmtCy0LDRgNGC0LDQuycsIDM6ICczINCa0LLQsNGA0YLQsNC7JywgNDogJzQg0JrQstCw0YDRgtCw0LsnLCB9KVtNYXRoLmZsb29yKCgobmV3IERhdGUpLmdldE1vbnRoKCkpIC8gMykgKyAxXVxyXG4gICAgfS8qLFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgIERhdGVSYW5nZTogZnVuY3Rpb24gKHgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuUGFyZW50LlByb3RvLkRhdGEuRGF0ZXNSZXN1bHQ7XHJcbiAgICAgICAgfVxyXG4gICAgfSovXHJcbn0pO1xyXG4iLCJXRGFzaC5TaXhOSy5TaXhOS1BhcnQxID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TktQYXJ0MScsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ1NpeE5LLWNvbnRlbnQnLFxyXG4gICAgUGFyZW50OiBXRGFzaC5TaXhOSyxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcuc2l4LW5rIC5yZXEtdGFiLnAxJ1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwiZGF0YS1wYXJ0XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY2VudGVyIGJvcmRlciBzdHJvbmdcIj4xLiDQnNCw0YLQtdGA0LjQsNC70YzQvdC+LdGC0LXRhdC90LjRh9C10YHQutCw0Y8g0LHQsNC30LA8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+0JrQvtC00Ysg0L/QviDQntCa0JXQmDog0LXQtNC40L3QuNGG0LAgLSA2NDI7INC60LLQsNC00YDQsNGC0L3Ri9C5INC80LXRgtGAIC0gMDU1PC9kaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0J7QsdGK0LXQutGC0Ysg0LrRg9C70YzRgtGD0YDQvdC+0LPQviDQvdCw0YHQu9C10LTQuNGPPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7Ql9C00LDQvdC40Y8gKNC/0L7QvNC10YnQtdC90LjRjykg0LTQvtGB0YLRg9C/0L3RiyDQtNC70Y8g0LvQuNGGINGBINC90LDRgNGD0YjQtdC90LjRj9C80Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiPtCf0LvQvtGJ0LDQtNGMINC/0L7QvNC10YnQtdC90LjQuSw8YnI+INC60LIuINC8PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7Qn9C70L7RidCw0LTRjCDQv9C+0LzQtdGJ0LXQvdC40Lkg0L/QviDRhNC+0YDQvNC1IDxicj4g0L/QvtC70YzQt9C+0LLQsNC90LjRjyAo0LjQtyDQs9GALiA3KSwg0LrQsi4g0Lw8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiPtCi0LXRhdC90LjRh9C10YHQutC+0LUg0YHQvtGB0YLQvtGP0L3QuNC1INC/0L7QvNC10YnQtdC90LjQuSAo0LjQtyDQs9GALiAxMCksINC60LIuINC8PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtGE0LXQtNC10YDQsNC70YzQvdC+0LPQviDQt9C90LDRh9C10L3QuNGPICjQtNCwIC0gMSwg0L3QtdGCIC0gMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7RgNC10LPQuNC+0L3QsNC70YzQvdC+0LPQviDQt9C90LDRh9C10L3QuNGPICjQtNCwIC0gMSwgICAgINC90LXRgiAtIDApPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LfRgNC10L3QuNGPICjQtNCwIC0gMSwg0L3QtdGCIC0gMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7RgdC70YPRhdCwICAgKNC00LAgLSAxLCDQvdC10YIgLSAwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC+0L/QvtGA0L3QvtC00LLQuNCz0LDRgtC10LvRjNC90L7Qs9C+INCw0L/Qv9Cw0YDQsNGC0LAgKNC00LAgLTEsINC90LXRgiAtIDApPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC00LvRjyDRhdGA0LDQvdC10L3QuNGPINGE0L7QvdC00L7QsiAo0LjQtyDQs9GALiA3KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC00LvRjyDQvtCx0YHQu9GD0LbQuNCy0LDQvdC40Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10LkgKNC40Lcg0LPRgC4gNyk8L3RoPlx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QsiDQvtC/0LXRgNCw0YLQuNCy0L3QvtC8INGD0L/RgNCw0LLQu9C10L3QuNC4PC90aD5cdFxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7Qv9C+INC00L7Qs9C+0LLQvtGA0YMg0LDRgNC10L3QtNGLPC90aD5cdFx0XHRcdFx0XHRcdFxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7Qv9GA0L7Rh9C40LU8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7RgtGA0LXQsdGD0LXRgiDQutCw0L/QuNGC0LDQu9GM0L3QvtCz0L4g0YDQtdC80L7QvdGC0LA8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QsNCy0LDRgNC40LnQvdC+0LU8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+MTwvdGg+PHRoPjI8L3RoPjx0aD4zPC90aD48dGg+NDwvdGg+PHRoPjU8L3RoPjx0aD42PC90aD48dGg+NzwvdGg+PHRoPjg8L3RoPjx0aD45PC90aD48dGg+MTA8L3RoPjx0aD4xMTwvdGg+PHRoPjEyPC90aD48dGg+MTM8L3RoPjx0aD4xNDwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MDE8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICA8L3RhYmxlPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPuKEliDRgdGC0YDQvtC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtCn0LjRgdC70L4g0L/Rg9C90LrRgtC+0LIg0LLQvdC1INGB0YLQsNGG0LjQvtC90LDRgNC90L7Qs9C+INC+0LHRgdC70YPQttC40LLQsNC90LjRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuSDQsdC40LHQu9C40L7RgtC10LrQuCw8YnI+0LXQtNC40L3QuNGGPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIj7Qp9C40YHQu9C+INC/0L7RgdCw0LTQvtGH0L3Ri9GFINC80LXRgdGCINC00LvRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuSwg0LXQtNC40L3QuNGGPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjRcIj7QndCw0LvQuNGH0LjQtSDQsNCy0YLQvtC80LDRgtC40LfQuNGA0L7QstCw0L3QvdGL0YUg0YLQtdGF0L3QvtC70L7Qs9C40LkgKNC00LAgLSAxLCDQvdC10YIgLSAwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUgKNC40Lcg0LPRgC4xNikg0LrQvtC80L/RjNGO0YLQtdGA0LjQt9C+0LLQsNC90L3Ri9GFLCDRgSDQstC+0LfQvNC+0LbQvdC+0YHRgtGM0Y4g0LTQvtGB0YLRg9C/0LAgPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUgKNC40Lcg0LPRgC4xNikgPGJyPtGBINCy0L7Qt9C80L7QttC90L7RgdGC0YzRjiDQstGL0YXQvtC00LAg0LIg0JjQvdGC0LXRgNC90LXRgjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC+0LHRgNCw0LHQvtGC0LrQuCDQv9C+0YHRgtGD0L/Qu9C10L3QuNC5IDxicj7QuCDQstC10LTQtdC90LjRjyDRjdC70LXQutGC0YDQvtC90L3QvtCz0L4g0LrQsNGC0LDQu9C+0LPQsCAo0LrQsNGC0LDQu9C+0LPQuNC30LDRhtC40Y8g0Lgg0L3QsNGD0YfQvdCw0Y8g0L7QsdGA0LDQsdC+0YLQutCwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC+0YDQs9Cw0L3QuNC30LDRhtC40Lgg0Lgg0YPRh9C10YLQsCDQstGL0LTQsNGH0Lgg0YTQvtC90LTQvtCyICjQutC90LjQs9C+0LLRi9C00LDRh9CwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC+0YDQs9Cw0L3QuNC30LDRhtC40Lgg0Lgg0YPRh9C10YLQsCDQtNC+0YHRgtGD0L/QsCDQv9C+0YHQtdGC0LjRgtC10LvQtdC5ICjQvtCx0YHQu9GD0LbQuNCy0LDQvdC40LUpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0YPRh9C10YLQsCDQtNC+0LrRg9C80LXQvdGC0L7QsiDQsdC40LHQu9C40L7RgtC10YfQvdC+0LPQviDRhNC+0L3QtNCwICjRg9GH0LXRgiDRhNC+0L3QtNC+0LIpPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPjE8L3RoPjx0aD4xNTwvdGg+PHRoPjE2PC90aD48dGg+MTc8L3RoPjx0aD4xODwvdGg+PHRoPjE5PC90aD48dGg+MjA8L3RoPjx0aD4yMTwvdGg+PHRoPjIyPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4wMTwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuICAgIFxyXG4gICAgPGRpdj5cclxuICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7ihJYg0YHRgtGA0L7QutC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7Qp9C40YHQu9C+INC10LTQuNC90LjRhiDRgdC/0LXRhtC40LDQu9C40LfQuNGA0L7QstCw0L3QvdC+0LPQviDQvtCx0L7RgNGD0LTQvtCy0LDQvdC40Y8g0LTQu9GPINC40L3QstCw0LvQuNC00L7QsjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0YfQuNGB0LvQviDQtdC00LjQvdC40YYg0LrQvtC/0LjRgNC+0LLQsNC70YzQvdC+LdC80L3QvtC20LjRgtC10LvRjNC90L7QuSDRgtC10YXQvdC40LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0YfQuNGB0LvQviDRgtGA0LDQvdGB0L/QvtGA0YLQvdGL0YUg0YHRgNC10LTRgdGC0LIsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LTQu9GPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5INCx0LjQsdC70LjQvtGC0LXQutC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LTQu9GPINC+0YbQuNGE0YDQvtCy0LrQuCDRhNC+0L3QtNCwPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40Lcg0L3QuNGFINGH0LjRgdC70L4g0YHQv9C10YbQuNCw0LvQuNC30LjRgNC+0LLQsNC90L3Ri9GFINGC0YDQsNC90YHQv9C+0YDRgtC90YvRhSDRgdGA0LXQtNGB0YLQsjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MjM8L3RoPjx0aD4yNDwvdGg+PHRoPjI1PC90aD48dGg+MjY8L3RoPjx0aD4yNzwvdGg+PHRoPjI4PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4wMTwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YFxyXG59KTsiLCJXRGFzaC5TaXhOSy5TaXhOS1BhcnQyID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TktQYXJ0MicsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ1NpeE5LLWNvbnRlbnQnLFxyXG4gICAgUGFyZW50OiBXRGFzaC5TaXhOSyxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcuc2l4LW5rIC5yZXEtdGFiLnAyJ1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwiZGF0YS1wYXJ0XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwic3Ryb25nIGJvcmRlclwiPjIuINCk0L7RgNC80LjRgNC+0LLQsNC90LjQtSDQuCDQuNGB0L/QvtC70YzQt9C+0LLQsNC90LjQtSDQsdC40LHQu9C40L7RgtC10YfQvdC+0LPQviDRhNC+0L3QtNCwINC90LAg0YTQuNC30LjRh9C10YHQutC40YUgKNC80LDRgtC10YDQuNCw0LvRjNC90YvRhSkg0L3QvtGB0LjRgtC10LvRj9GFPC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyaWdodFwiPtCa0L7QtCDQv9C+INCe0JrQldCYOiDQtdC00LjQvdC40YbQsCAtIDY0MjwvZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtCd0LDQuNC80LXQvdC+0LLQsNC90LjQtSDQv9C+0LrQsNC30LDRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7ihJYg0YHRgtGA0L7QutC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QktGB0LXQs9C+ICjRgdGD0LzQvNCwINCz0YAuIDQgLSA3KSDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNFwiPtCSINGC0L7QvCDRh9C40YHQu9C1ICjQuNC3INCz0YAuIDMpLCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtCU0L7QutGD0LzQtdC90YLRiyDQsiDRgdC/0LXRhtC40LDQu9GM0L3Ri9GFINGE0L7RgNC80LDRgtCw0YUg0LTQu9GPINGB0LvQtdC/0YvRhSDQuCDRgdC70LDQsdC+0LLQuNC00Y/RidC40YUsINC10LTQuNC90LjRhiAo0LjQtyDQs9GALiAzKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0JjQtyDQvtCx0YnQtdCz0L4g0L7QsdGK0LXQvNCwINGE0L7QvdC00LAgKNC40Lcg0LPRgC4gMyksINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7Qv9C10YfQsNGC0L3Ri9C1ICDQuNC30LTQsNC90LjRjyDQuCDQvdC10L7Qv9GD0LHQu9C40LrQvtCy0LDQvS3QvdGL0LUg0LTQvtC60YPQvNC10L3RgtGLPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0Y3Qu9C10LrRgtGA0L7QvdC90YvQtSDQtNC+0LrRg9C80LXQvdGC0Ysg0L3QsCDRgdGK0LXQvNC90YvRhSDQvdC+0YHQuNGC0LXQu9GP0YU8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QtNC+0LrRg9C80LXQvdGC0Ysg0L3QsCDQvNC40LrRgNC+0YTQvtGA0LzQsNGFPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LTQvtC60YPQvNC10L3RgtGLINC90LAg0LTRgNGD0LPQuNGFINCy0LjQtNCw0YUg0L3QvtGB0LjRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L3QsCDRj9C30YvQutCw0YUg0L3QsNGA0L7QtNC+0LIg0KDQvtGB0YHQuNC4PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L3QsCDQuNC90L7RgdGC0YDQsNC90L3Ri9GFINGP0LfRi9C60LDRhTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MjwvdGg+PHRoPjM8L3RoPjx0aD40PC90aD48dGg+NTwvdGg+PHRoPjY8L3RoPjx0aD43PC90aD48dGg+ODwvdGg+PHRoPjwvdGg+PHRoPjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcblxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZD7Qn9C+0YHRgtGD0L/QuNC70L4g0LTQvtC60YPQvNC10L3RgtC+0LIg0LfQsCDQvtGC0YfQtdGC0L3Ri9C5INCz0L7QtCwg0LXQtNC40L3QuNGGPC90ZD48dGQgIGNsYXNzPVwiY2VudGVyXCI+MDI8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0JLRi9Cx0YvQu9C+INC00L7QutGD0LzQtdC90YLQvtCyINC30LAg0L7RgtGH0LXRgtC90YvQuSDQs9C+0LQsINC10LTQuNC90LjRhjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+MDM8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0KHQvtGB0YLQvtC40YIg0LTQvtC60YPQvNC10L3RgtC+0LIg0L3QsCDQutC+0L3QtdGGINC+0YLRh9C10YLQvdC+0LPQviDQs9C+0LTQsCwg0LXQtNC40L3QuNGGPC90ZD48dGQgY2xhc3M9XCJjZW50ZXJcIj4wNDwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZD7Qn9C10YDQtdCy0LXQtNC10L3QviDQsiDRjdC70LXQutGC0YDQvtC90L3Rg9GOINGE0L7RgNC80YMg0LfQsCDQvtGC0YfQtdGC0L3Ri9C5INCz0L7QtCwg0LXQtNC40L3QuNGGPC90ZD48dGQgY2xhc3M9XCJjZW50ZXJcIj4wNTwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+PHRkPjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YFxyXG59KTsiLCJXRGFzaC5TaXhOSy5TaXhOS1BhcnQzID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TktQYXJ0MycsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ1NpeE5LLWNvbnRlbnQnLFxyXG4gICAgUGFyZW50OiBXRGFzaC5TaXhOSyxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcuc2l4LW5rIC5yZXEtdGFiLnAzJ1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwiZGF0YS1wYXJ0XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwic3Ryb25nIGJvcmRlclwiPjMuINCt0LvQtdC60YLRgNC+0L3QvdGL0LUgKNGB0LXRgtC10LLRi9C1KSDRgNC10YHRg9GA0YHRizwvZGl2PlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicmlnaHRcIj7QmtC+0LQg0L/QviDQntCa0JXQmDog0LXQtNC40L3QuNGG0LAgLSA2NDI8L2Rpdj5cclxuICAgICAgICA8dGFibGU+XHJcbiAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QndCw0LjQvNC10L3QvtCy0LDQvdC40LUg0L/QvtC60LDQt9Cw0YLQtdC70LXQuTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0J7QsdGK0LXQvCDRjdC70LXQutGC0YDQvtC90L3QvtCz0L4g0LrQsNGC0LDQu9C+0LPQsDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0J7QsdGK0LXQvCDRjdC70LXQutGC0YDQvtC90L3QvtC5ICjRhtC40YTRgNC+0LLQvtC5KSDQsdC40LHQu9C40L7RgtC10LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0JjQvdGB0YLQsNC70LvQuNGA0L7QstCw0L3QvdGL0LUg0LTQvtC60YPQvNC10L3RgtGLPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIj7QodC10YLQtdCy0YvQtSDRg9C00LDQu9C10L3QvdGL0LUg0LvQuNGG0LXQvdC30LjQvtC90L3Ri9C1INC00L7QutGD0LzQtdC90YLRizwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QvtCx0YnQtdC1INGH0LjRgdC70L4g0LfQsNC/0LjRgdC10LksINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40Lcg0L3QuNGFICjQuNC3INCz0YAuIDMpINGH0LjRgdC70L4g0LfQsNC/0LjRgdC10LksINC00L7RgdGC0YPQv9C90YvRhSDQsiDQmNC90YLQtdGA0L3QtdGC0LUsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC+0LHRidC10LUg0YfQuNGB0LvQviDRgdC10YLQtdCy0YvRhSDQu9C+0LrQsNC70YzQvdGL0YUg0LTQvtC60YPQvNC10L3RgtC+0LIsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40Lcg0L3QuNGFICjQuNC3INCz0YAuIDUpINGH0LjRgdC70L4g0LTQvtC60YPQvNC10L3RgtC+0LIg0LIg0L7RgtC60YDRi9GC0L7QvCDQtNC+0YHRgtGD0L/QtSwg0LXQtNC40L3QuNGGPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0YfQuNGB0LvQviDQsdCw0Lcg0LTQsNC90L3Ri9GFLCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QsiDQvdC40YUg0L/QvtC70YLQvdC+0YLQtdC60YHRgtC+0LLRi9GFINC00L7QutGD0LzQtdC90YLQvtCyLCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7Rh9C40YHQu9C+INCx0LDQtyDQtNCw0L3QvdGL0YUsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCyINC90LjRhSDQv9C+0LvRgtC90L7RgtC10LrRgdGC0L7QstGL0YUg0LTQvtC60YPQvNC10L3RgtC+0LIsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MjwvdGg+PHRoPjM8L3RoPjx0aD40PC90aD48dGg+NTwvdGg+PHRoPjY8L3RoPjx0aD43PC90aD48dGg+ODwvdGg+PHRoPjk8L3RoPjx0aD4xMDwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkPtCh0L7Qt9C00LDQvdC+LCDQv9GA0LjQvtCx0YDQtdGC0LXQvdC+INC30LAg0L7RgtGH0LXRgtC90YvQuSDQs9C+0LQsINC10LTQuNC90LjRhjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+MDY8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0JLRi9Cx0YvQu9C+INC30LAg0L7RgtGH0LXRgtC90YvQuSDQs9C+0LQsINC10LTQuNC90LjRhjwvdGQ+PHRkIGNsYXNzPVwiY2VudGVyXCI+MDc8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0J7QsdGK0LXQvCDQvdCwINC60L7QvdC10YYg0L7RgtGH0LXRgtC90L7Qs9C+INCz0L7QtNCwLCDQtdC00LjQvdC40YY8L3RkPjx0ZCBjbGFzcz1cImNlbnRlclwiPjA4PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cIndpZC0xMDBcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1yb3dcIj48ZGl2PtCd0LDQu9C40YfQuNC1INC00L7RgdGC0YPQv9CwINCyINCY0L3RgtC10YDQvdC10YIgKNC00LAgLSAxLCDQvdC10YIgLSAwKSAoMDkpPC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MSBjZW50ZXJcIj4xPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtcm93XCI+PGRpdj7QndCw0LvQuNGH0LjQtSDQstC+0LfQvNC+0LbQvdC+0YHRgtC4INC00L7RgdGC0YPQv9CwINCyINCY0L3RgtC10YDQvdC10YIg0LTQu9GPINC/0L7RgdC10YLQuNGC0LXQu9C10LkgKNC00LAgLSAxLCDQvdC10YIgLSAwKSAoMTApPC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MSBjZW50ZXJcIj4xPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtcm93XCI+PGRpdj7QndCw0LvQuNGH0LjQtSDRgdC+0LHRgdGC0LLQtdC90L3QvtCz0L4g0JjQvdGC0LXRgNC90LXRgi3RgdCw0LnRgtCwINC40LvQuCDQmNC90YLQtdGA0L3QtdGCLdGB0YLRgNCw0L3QuNGG0Ysg0LHQuNCx0LvQuNC+0YLQtdC60LggKNC00LAgLSAxLCDQvdC10YIgLSAwKSAoMTEpPC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MSBjZW50ZXJcIj4wPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtcm93XCI+PGRpdj7QndCw0LvQuNGH0LjQtSDQmNC90YLQtdGA0L3QtdGCLdGB0LDQudGC0LAg0LjQu9C4INCY0L3RgtC10YDQvdC10YIt0YHRgtGA0LDQvdC40YbRiywg0LTQvtGB0YLRg9C/0L3QvtCz0L4g0LTQu9GPINGB0LvQtdC/0YvRhSDQuCDRgdC70LDQsdC+0LLQuNC00Y/RidC40YUgKNC00LAgLSAxLCDQvdC10YIgLSAwKSAoMTIpPC9kaXY+PGRpdiBjbGFzcz1cInVuZGVybGluZSBmbGV4MSBjZW50ZXJcIj4wPC9kaXY+PC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YFxyXG59KTsiLCJXRGFzaC5TaXhOSy5TaXhOS1BhcnQ0ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TktQYXJ0NCcsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ1NpeE5LLWNvbnRlbnQnLFxyXG4gICAgUGFyZW50OiBXRGFzaC5TaXhOSyxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcuc2l4LW5rIC5yZXEtdGFiLnA0J1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwiZGF0YS1wYXJ0XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwic3Ryb25nIGJvcmRlclwiPjQuINCn0LjRgdC70L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10Lkg0Lgg0L/QvtGB0LXRidC10L3QuNC5INCx0LjQsdC70LjQvtGC0LXQutC4PC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPuKEliDRgdGC0YDQvtC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNVwiPtCn0LjRgdC70L4g0LfQsNGA0LXQs9C40YHRgtGA0LjRgNC+0LLQsNC90L3Ri9GFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5INCx0LjQsdC70LjQvtGC0LXQutC4LCDRh9C10LvQvtCy0LXQujwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0KfQuNGB0LvQviDQv9C+0YHQtdGJ0LXQvdC40Lkg0LHQuNCx0LvQuNC+0YLQtdC60LgsINC/0L7RgdC10YnQtdC90LjQuTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0KfQuNGB0LvQviDQvtCx0YDQsNGJ0LXQvdC40LkgPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0LIg0YLQvtC8INGH0LjRgdC70LUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10LksINC+0LHRgdC70YPQttC10L3QvdGL0YUg0LIg0YHRgtC10L3QsNGFINCx0LjQsdC70LjQvtGC0LXQutC4ICjQuNC3INCz0YAuIDIpPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QsiDRgtC+0Lwg0YfQuNGB0LvQtSDRg9C00LDQu9C10L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10LkgKNC40Lcg0LPRgC4gMik8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtCy0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtC40Lcg0L3QuNGFINC00LvRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0LHQuNCx0LvQuNC+0YLQtdGH0L3Qvi3QuNC90YTQvtGA0LzQsNGG0LjQvtC90L3Ri9GFINGD0YHQu9GD0LMgKNC40Lcg0LPRgC4gNyk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtGH0LjRgdC70L4g0L/QvtGB0LXRidC10L3QuNC5INC80LDRgdGB0L7QstGL0YUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuSAo0LjQtyDQs9GALiA3KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0LjQtyDQvdC40YUg0L7QsdGA0LDRidC10L3QuNC5INC6INCy0LXQsS3RgdCw0LnRgtGDICjQuNC3INCz0YAuIDEwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUgKNC40Lcg0LPRgC4gMykg0LTQtdGC0Lgg0LTQviAxNCDQu9C10YIg0LLQutC70Y7Rh9C40YLQtdC70YzQvdC+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUgKNC40Lcg0LPRgC4gMykg0LzQvtC70L7QtNC10LbRjCAxNSAtIDMwINC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MjwvdGg+PHRoPjM8L3RoPjx0aD40PC90aD48dGg+NTwvdGg+PHRoPjY8L3RoPjx0aD43PC90aD48dGg+ODwvdGg+PHRoPjk8L3RoPjx0aD4xMDwvdGg+PHRoPjExPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xMjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNEwxMlYyfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDRMMTJWM319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A0TDEyVjR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNEwxMlY1fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDRMMTJWNn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A0TDEyVjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNEwxMlY4fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDRMMTJWOX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A0TDEyVjEwfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDRMMTJWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YCxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgUDRMMTJWMjogMCxcclxuICAgICAgICBQNEwxMlYzOiAwLFxyXG4gICAgICAgIFA0TDEyVjQ6IDAsXHJcbiAgICAgICAgUDRMMTJWNTogMCxcclxuICAgICAgICBQNEwxMlY2OiAwLFxyXG4gICAgICAgIFA0TDEyVjc6IDAsXHJcbiAgICAgICAgUDRMMTJWODogMCxcclxuICAgICAgICBQNEwxMlY5OiAwLFxyXG4gICAgICAgIFA0TDEyVjEwOiAwLFxyXG4gICAgICAgIFA0TDEyVjExOiAwLFxyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoIXRoaXMuUGFyZW50LlVwZGF0ZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5QYXJlbnQuUmVmcmVzaERhdGEoKTtcclxuICAgICAgICAgICAgdGhpcy5QYXJlbnQuVXBkYXRlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIExvYWQ6ICd0YWJsZScsXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoRGF0YSA9IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiB0aGlzLlByb3RvLkRhdGEpXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5Qcm90by5EYXRhLmhhc093blByb3BlcnR5KGtleSkpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhW2tleV0gPSBkYXRhW2tleV07XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSk7IiwiV0Rhc2guU2l4TksuU2l4TktQYXJ0NSA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ1NpeE5LUGFydDUnLFxyXG4gICAgVGFyZ2V0OiAnJyxcclxuICAgIFR5cGU6ICdTaXhOSy1jb250ZW50JyxcclxuICAgIFBhcmVudDogV0Rhc2guU2l4TkssXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnNpeC1uayAucmVxLXRhYi5wNSdcclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdiBjbGFzcz1cImRhdGEtcGFydFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cInN0cm9uZyBib3JkZXJcIj41LiDQkdC40LHQu9C40L7RgtC10YfQvdC+LdC40L3RhNC+0YDQvNCw0YbQuNC+0L3QvdC+0LUg0L7QsdGB0LvRg9C20LjQstCw0L3QuNC1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5PC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyaWdodFwiPtCa0L7QtCDQv9C+INCe0JrQldCYOiDQtdC00LjQvdC40YbQsCAtIDY0MjwvZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtCa0LDRgtC10LPQvtGA0LjQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI1XCI+0JLRi9C00LDQvdC+ICjQv9GA0L7RgdC80L7RgtGA0LXQvdC+KSDQtNC+0LrRg9C80LXQvdGC0L7QsiDQuNC3INGE0L7QvdC00L7QsiDQtNCw0L3QvdC+0Lkg0LHQuNCx0LvQuNC+0YLQtdC60LgsINC10LTQuNC90LjRhjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0JLRi9C00LDQvdC+ICjQv9GA0L7RgdC80L7RgtGA0LXQvdC+KSDQtNC+0LrRg9C80LXQvdGC0L7QsiDQuNC3INGE0L7QvdC00L7QsiDQtNGA0YPQs9C40YUg0LHQuNCx0LvQuNC+0YLQtdC6LCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtCY0LfQs9C+0YLQvtCy0LvQtdC90L4g0LTQu9GPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7QktGL0L/QvtC70L3QtdC90L4g0YHQv9GA0LDQstC+0Log0Lgg0LrQvtC90YHRg9C70YzRgtCw0YbQuNC5LCDQtdC00LjQvdC40YY8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjJcIj7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjRcIj7QsiDRgtC+0Lwg0YfQuNGB0LvQtSAo0LjQtyDQs9GALiAzKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0LLRgdC10LPQvjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0LIg0YLQvtC8INGH0LjRgdC70LUgKNC40Lcg0LPRgC4gOCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDRhNC+0L3QtNCwINC90LAg0YTQuNC30LjRh9C10YHQutC40YUg0L3QvtGB0LjRgtC10LvRj9GFPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5ICjRhtC40YTRgNC+0LLQvtC5KSDQsdC40LHQu9C40L7RgtC10LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40L3RgdGC0LDQu9C70LjRgNC+0LLQsNC90L3Ri9GFINC00L7QutGD0LzQtdC90YLQvtCyPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0YHQtdGC0LXQstGL0YUg0YPQtNCw0LvQtdC90L3Ri9GFINC70LjRhtC10L3Qt9C40L7QvdC90YvRhSDQtNC+0LrRg9C80LXQvdGC0L7QsjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC/0L7Qu9GD0YfQtdC90L3Ri9GFINC/0L4g0YHQuNGB0YLQtdC80LUg0JzQkdCQINC4INCc0JzQkdCQPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LTQvtGB0YLRg9C/0L3Ri9GFINCyINCy0LjRgNGC0YPQsNC70YzQvdGL0YUg0YfQuNGC0LDQu9GM0L3Ri9GFINC30LDQu9Cw0YU8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+MTwvdGg+PHRoPjI8L3RoPjx0aD4zPC90aD48dGg+NDwvdGg+PHRoPjU8L3RoPjx0aD42PC90aD48dGg+NzwvdGg+PHRoPjg8L3RoPjx0aD45PC90aD48dGg+MTA8L3RoPjx0aD4xMTwvdGg+PHRoPjEyPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0JIg0YHRgtCw0YbQuNC+0L3QsNGA0L3QvtC8INGA0LXQttC40LzQtTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTM8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTNWM319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDEzVjR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxM1Y1fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTNWNn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDEzVjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxM1Y4fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTNWOX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDEzVjEwfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTNWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxM1YxMn19PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkPtCyINGC0L7QvCDRh9C40YHQu9C1INC00LXRgtC4INC00L4gMTQg0LvQtdGCPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xNDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNFYzfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTRWNH19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE0VjV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNFY2fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTRWN319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE0Vjh9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNFY5fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTRWMTB9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNFYxMX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE0VjEyfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0LIg0YLQvtC8INGH0LjRgdC70LUg0LzQvtC70L7QtNC10LbRjCAxNCAtIDMwINC70LXRgjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTU8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTVWM319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE1VjR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNVY1fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTVWNn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE1Vjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNVY4fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTVWOX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE1VjEwfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTVWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNVYxMn19PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkPtCj0LTQsNC70LXQvdC90YvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Lg8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjE2PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE2VjN9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNlY0fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTZWNX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj5YPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE2Vjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+WDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxNlYxMX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE2VjEyfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQ+0JLRgdC10LPQviAo0YHRg9C80LzQsCDRgdGC0YDQvtC6IDEzINC4IDE2KTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTc8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTdWM319PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE3VjR9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxN1Y1fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTdWNn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE3Vjd9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxN1Y4fX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTdWOX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj57e1A1TDE3VjEwfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPnt7UDVMMTdWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+e3tQNUwxN1YxMn19PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gLFxyXG4gICAgUHJvdG86IHtcclxuICAgICAgICBQNUwxM1YzOiAwLFxyXG4gICAgICAgIFA1TDEzVjQ6IDAsXHJcbiAgICAgICAgUDVMMTNWNTogMCxcclxuICAgICAgICBQNUwxM1Y2OiAwLFxyXG4gICAgICAgIFA1TDEzVjc6IDAsXHJcbiAgICAgICAgUDVMMTNWODogMCxcclxuICAgICAgICBQNUwxM1Y5OiAwLFxyXG4gICAgICAgIFA1TDEzVjEwOiAwLFxyXG4gICAgICAgIFA1TDEzVjExOiAwLFxyXG4gICAgICAgIFA1TDEzVjEyOiAwLFxyXG5cclxuICAgICAgICBQNUwxNFYzOiAwLFxyXG4gICAgICAgIFA1TDE0VjQ6IDAsXHJcbiAgICAgICAgUDVMMTRWNTogMCxcclxuICAgICAgICBQNUwxNFY2OiAwLFxyXG4gICAgICAgIFA1TDE0Vjc6IDAsXHJcbiAgICAgICAgUDVMMTRWODogMCxcclxuICAgICAgICBQNUwxNFY5OiAwLFxyXG4gICAgICAgIFA1TDE0VjEwOiAwLFxyXG4gICAgICAgIFA1TDE0VjExOiAwLFxyXG4gICAgICAgIFA1TDE0VjEyOiAwLFxyXG5cclxuICAgICAgICBQNUwxNVYzOiAwLFxyXG4gICAgICAgIFA1TDE1VjQ6IDAsXHJcbiAgICAgICAgUDVMMTVWNTogMCxcclxuICAgICAgICBQNUwxNVY2OiAwLFxyXG4gICAgICAgIFA1TDE1Vjc6IDAsXHJcbiAgICAgICAgUDVMMTVWODogMCxcclxuICAgICAgICBQNUwxNVY5OiAwLFxyXG4gICAgICAgIFA1TDE1VjEwOiAwLFxyXG4gICAgICAgIFA1TDE1VjExOiAwLFxyXG4gICAgICAgIFA1TDE1VjEyOiAwLFxyXG5cclxuICAgICAgICBQNUwxNlYzOiAwLFxyXG4gICAgICAgIFA1TDE2VjQ6IDAsXHJcbiAgICAgICAgUDVMMTZWNTogMCxcclxuICAgICAgICBQNUwxNlY2OiAwLFxyXG4gICAgICAgIFA1TDE2Vjc6IDAsXHJcbiAgICAgICAgUDVMMTZWODogMCxcclxuICAgICAgICBQNUwxNlY5OiAwLFxyXG4gICAgICAgIFA1TDE2VjEwOiAwLFxyXG4gICAgICAgIFA1TDE2VjExOiAwLFxyXG4gICAgICAgIFA1TDE2VjEyOiAwLFxyXG5cclxuICAgICAgICBQNUwxN1YzOiAwLFxyXG4gICAgICAgIFA1TDE3VjQ6IDAsXHJcbiAgICAgICAgUDVMMTdWNTogMCxcclxuICAgICAgICBQNUwxN1Y2OiAwLFxyXG4gICAgICAgIFA1TDE3Vjc6IDAsXHJcbiAgICAgICAgUDVMMTdWODogMCxcclxuICAgICAgICBQNUwxN1Y5OiAwLFxyXG4gICAgICAgIFA1TDE3VjEwOiAwLFxyXG4gICAgICAgIFA1TDE3VjExOiAwLFxyXG4gICAgICAgIFA1TDE3VjEyOiAwXHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5QYXJlbnQuVXBkYXRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLlBhcmVudC5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgICAgICB0aGlzLlBhcmVudC5VcGRhdGVkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgTG9hZDogJ3RhYmxlJyxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlJlZnJlc2hEYXRhID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMuUHJvdG8uRGF0YSlcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLlByb3RvLkRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGFba2V5XSA9IGRhdGFba2V5XTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTsiLCJXRGFzaC5TaXhOSy5TaXhOS1BhcnQ2ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnU2l4TktQYXJ0NicsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ1NpeE5LLWNvbnRlbnQnLFxyXG4gICAgUGFyZW50OiBXRGFzaC5TaXhOSyxcclxuICAgIENvbnRyb2w6IHtcclxuICAgICAgICBUYXJnZXQ6ICcuc2l4LW5rIC5yZXEtdGFiLnA2J1xyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2IGNsYXNzPVwiZGF0YS1wYXJ0XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwic3Ryb25nIGJvcmRlclwiPjYuINCf0LXRgNGB0L7QvdCw0Lsg0LHQuNCx0LvQuNC+0YLQtdC60Lg8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+0JrQvtC0INC/0L4g0J7QmtCV0Jg6INC10LTQuNC90LjRhtCwIC0gNjQyPC9kaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCI1XCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCI1XCI+0KjRgtCw0YIg0LHQuNCx0LvQuNC+0YLQtdC60Lgg0L3QsCDQutC+0L3QtdGGINC+0YLRh9C10YLQvdC+0LPQviDQs9C+0LTQsCwg0LXQtNC40L3QuNGGPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjE0XCI+0KfQuNGB0LvQtdC90L3QvtGB0YLRjCDRgNCw0LHQvtGC0L3QuNC60L7Qsiwg0YfQtdC70L7QstC10Lo8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjRcIj7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjRcIj7QuNC3INC90LjRhSDQuNC80LXRjtGCINC40L3QstCw0LvQuNC0LdC90L7RgdGC0Yw8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNlwiPtC40Lcg0L3QuNGFICjQuNC3INCz0YAuIDMpINC+0YHQvdC+0LLQvdC+0Lkg0L/QtdGA0YHQvtC90LDQuyDQsdC40LHQu9C40L7RgtC10LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0LIg0YLQvtC8INGH0LjRgdC70LUg0YHQviDRgdGC0LDQttC10Lwg0YDQsNCx0L7RgtGLINCyINCx0LjQsdC70LjQvtGC0LXQutCw0YUgKNC40Lcg0LPRgC4gNSk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiPtCyINGC0L7QvCDRh9C40YHQu9C1INC/0L4g0LLQvtC30YDQsNGB0YLRgyAo0LjQtyDQs9GALiA1KTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtCy0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtCY0Lcg0L3QuNGFINC/0YDQvtGI0LvQuCDQvtCx0YPRh9C10L3QuNC1ICjQuNC90YHRgtGA0YPQutGC0LjRgNC+LdCy0LDQvdC40LUpINC/0L4g0LLQvtC/0YDQvtGB0LDQvCwg0YHQstGP0LfQsNC90L3Ri9C8INGBINC/0YDQtdC00L7RgdGC0LDQstC70LUt0L3QuNC10Lwg0YPRgdC70YPQsyDQuNC90LLQsNC70LjQtNCw0LwgKNC40Lcg0LPRgC4gMyk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNFwiPtC40Lcg0L3QuNGFINC40LzQtdGO0YIg0L7QsdGA0LDQt9C+0LLQsNC90LjQtSAo0LjQtyDQs9GALiA1KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+0L7RgiAwINC00L4gMyDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtC+0YIgMyDQtNC+IDEwINC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+0YHQstGL0YjQtSAxMCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPtC00L4gMzAg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj7QvtGCIDMwINC00L4gNTUg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggcm93c3Bhbj1cIjNcIj41NSDQu9C10YIg0Lgg0YHRgtCw0YDRiNC1PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0LLRi9GB0YjQtdC1PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIj7RgdGA0LXQtNC90LXQtSDQv9GA0L7RhNC10YHRgdC40L7QvdCw0LvRjNC90L7QtTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QstGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LHQuNCx0LvQuNC+LdGC0LXRh9C90L7QtSAo0LjQtyDQs9GALiA3KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCy0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQsdC40LHQu9C40L4t0YLQtdGH0L3QvtC1ICjQuNC3INCz0YAuIDkpPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPjE8L3RoPjx0aD4yPC90aD48dGg+MzwvdGg+PHRoPjQ8L3RoPjx0aD41PC90aD48dGg+NjwvdGg+PHRoPjc8L3RoPjx0aD44PC90aD48dGg+OTwvdGg+PHRoPjEwPC90aD48dGg+MTE8L3RoPjx0aD4xMjwvdGg+PHRoPjEzPC90aD48dGg+MTQ8L3RoPjx0aD4xNTwvdGg+PHRoPjE2PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xODwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG5cclxuICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICA8L3RhYmxlPlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PmBcclxufSk7IiwiV0Rhc2guU2l4TksuU2l4TktQYXJ0NyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ1NpeE5LUGFydDcnLFxyXG4gICAgVGFyZ2V0OiAnJyxcclxuICAgIFR5cGU6ICdTaXhOSy1jb250ZW50JyxcclxuICAgIFBhcmVudDogV0Rhc2guU2l4TkssXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnNpeC1uayAucmVxLXRhYi5wNydcclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdiBjbGFzcz1cImRhdGEtcGFydFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cInN0cm9uZyBib3JkZXJcIj43LiDQn9C+0YHRgtGD0L/Qu9C10L3QuNC1INC4INC40YHQv9C+0LvRjNC30L7QstCw0L3QuNC1INGE0LjQvdCw0L3RgdC+0LLRi9GFINGB0YDQtdC00YHRgtCyPC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyaWdodFwiPtCa0L7QtCDQv9C+INCe0JrQldCYOiDRgtGL0YHRj9GH0LAg0YDRg9Cx0LvQtdC5IC0gMzg0PC9kaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+0J/QvtGB0YLRg9C/0LjQu9C+INC30LAg0LPQvtC0INCy0YHQtdCz0L4gKNGB0YPQvNC80LAg0LPRgNCw0YQgMywgNCwgNSwgOSk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiN1wiPtC40Lcg0L3QuNGFICjQuNC3INCz0YAuIDIpPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0LHRjtC00LbQtdGC0L3Ri9C1INCw0YHRgdC40LPQvdC+0LLQsNC90LjRjyAg0YPRh9GA0LXQtNC40YLQtdC70Y88L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPtGE0LjQvdCw0L3RgdC40YDQvtCy0LDQvdC40LUg0LjQtyDQsdGO0LTQttC10YLQvtCyINC00YDRg9Cz0LjRhSDRg9GA0L7QstC90LXQuTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0L7RgiDQv9GA0LjQvdC+0YHRj9GJ0LXQuSDQtNC+0YXQvtC0INC00LXRj9GC0LXQu9GM0L3QvtGB0YLQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0LjQtyDQvdC40YUgKNC40Lcg0LPRgC41KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIyXCI+0L7RgiDRgdC00LDRh9C4INC40LzRg9GJ0LXRgdGC0LLQsCDQsiDQsNGA0LXQvdC00YM8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L7RgiDQvtGB0L3QvtCy0L3Ri9GFINCy0LjQtNC+0LIg0YPRgdGC0LDQstC90L7QuSDQtNC10Y/RgtC10LvRjNC90L7RgdGC0Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QsdC70LDQs9C+0YLQstC+0YDQuNGC0LXQu9GM0L3Ri9C1INC4INGB0L/QvtC90YHQvtGA0YHQutC40LUg0LLQutC70LDQtNGLPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0L7RgiDQuNC90L7QuSDQv9GA0LjQvdC+0YHRj9GJ0LXQuSDQtNC+0YXQvtC0INC00LXRj9GC0LXQu9GM0L3QvtGB0YLQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD4xPC90aD48dGg+MjwvdGg+PHRoPjM8L3RoPjx0aD40PC90aD48dGg+NTwvdGg+PHRoPjY8L3RoPjx0aD43PC90aD48dGg+ODwvdGg+PHRoPjk8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbnRlclwiPjE5PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD48dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcblxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+4oSWINGB0YLRgNC+0LrQuDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHJvd3NwYW49XCIzXCI+0JjQt9GA0LDRgdGF0L7QtNC+0LLQsNC90L4sINCy0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNlwiPtC40Lcg0L3QuNGFICjQuNC3INCz0YAuIDEwKTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiPtGA0LDRgdGF0L7QtNGLINC90LAg0L7Qv9C70LDRgtGDINGC0YDRg9C00LA8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiPtC90LAg0LrQvtC80L/Qu9C10LrRgtC+0LLQsNC90LjQtSDRhNC+0L3QtNCwPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCy0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC+0LHRidC40YUg0YDQsNGB0YXQvtC00L7QsiDQvdCwINC+0L/Qu9Cw0YLRgyDRgtGA0YPQtNCwICjQuNC3INCz0YAuIDExKSDQvtGB0L3QvtCy0L3QvtC80YMg0L/QtdGA0YHQvtC90LDQu9GDPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LfQsCDRgdGH0LXRgiDRgdC+0LHRgdGC0LLQtdC90L3Ri9GFINGB0YDQtdC00YHRgtCyICjQuNC3INCz0YAuIDEyKTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCy0YHQtdCz0L4gKNC40Lcg0LPRgC4gMTApPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0L3QsCDQv9C+0LTQv9C40YHQutGDINC90LAg0LTQvtGB0YLRg9C/INC6INGD0LTQsNC70LXQvdC90YvQvCDRgdC10YLQtdCy0YvQvCDRgNC10YHRg9GA0YHQsNC8ICjQuNC3INCz0YAuIDE0KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtC40Lcg0L3QuNGFINC30LAg0YHRh9C10YIg0YHQvtCx0YHRgtCy0LXQvdC90YvRhSDRgdGA0LXQtNGB0YLQsiAo0LjQtyDQs9GALiAxNSk8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+MTwvdGg+PHRoPjEwPC90aD48dGg+MTE8L3RoPjx0aD4xMjwvdGg+PHRoPjEzPC90aD48dGg+MTQ8L3RoPjx0aD4xNTwvdGg+PHRoPjE2PC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjZW50ZXJcIj4xOTwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+PHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG5cclxuICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICA8L3RhYmxlPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDx0YWJsZT5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiM1wiPuKEliDRgdGC0YDQvtC60Lg8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiOVwiPtC40Lcg0L3QuNGFPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0YDQsNGB0YXQvtC00Ysg0L3QsCDQutCw0L/QuNGC0LDQu9GM0L3Ri9C5INGA0LXQvNC+0L3RgiDQuCDRgNC10LrQvtC90YHRgtGA0YPQutGG0LjRjjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCI+0YDQsNGB0YXQvtC00Ysg0L3QsCDQv9GA0LjQvtCx0YDQtdGC0LXQvdC40LUgKNC30LDQvNC10L3Rgykg0L7QsdC+0YDRg9C00L7QstCw0L3QuNGPPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIj7QvdCwINC+0YDQs9Cw0L3QuNC30LDRhtC40Y4g0Lgg0L/RgNC+0LLQtdC00LXQvdC40LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCI+0L3QsCDQuNC90YTQvtGA0LzQsNGC0LjQt9Cw0YbQuNGOINCx0LjQsdC70LjQvtGC0LXRh9C90L7QuSDQtNC10Y/RgtC10LvRjNC90L7RgdGC0LgsINCyINGCLtGHLiDRgdC+0LfQtNCw0L3QuNC1INGN0LvQtdC60YLRgNC+0L3QvdGL0YUg0LrQsNGC0LDQu9C+0LPQvtCyINC4INC+0YbQuNGE0YDQvtCy0LrRgyDQsdC40LHQu9C40L7RgtC10YfQvdC+0LPQviDRhNC+0L3QtNCwPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCy0YHQtdCz0L4gKNC40Lcg0LPRgC4gMTApPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LfQsCDRgdGH0LXRgiDRgdC+0LHRgdGC0LLQtdC90L3Ri9GFINGB0YDQtdC00YHRgtCyPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQviAo0LjQtyDQs9GALiAxMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQtNC70Y8g0YPQu9GD0YfRiNC10L3QuNGPINGD0YHQu9C+0LLQuNC5INC00L7RgdGC0YPQv9C90L7RgdGC0Lgg0LTQu9GPINC40L3QstCw0LvQuNC00L7QsiDQuCDQu9C40YYg0YEg0J7QktCXPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LfQsCDRgdGH0LXRgiDRgdC+0LHRgdGC0LLQtdC90L3Ri9GFINGB0YDQtdC00YHRgtCyICjQuNC3INCz0YAuIDE5KTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoPtCy0YHQtdCz0L4gKNC40Lcg0LPRgC4gMTApPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LjQtyDQvdC40YUg0LfQsCDRgdGH0LXRgiDRgdC+0LHRgdGC0LLQtdC90L3Ri9GFINGB0YDQtdC00YHRgtCyPC90aD5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+0LLRgdC10LPQviAo0LjQtyDQs9GALiAxMCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aD7QuNC3INC90LjRhSDQt9CwINGB0YfQtdGCINGB0L7QsdGB0YLQstC10L3QvdGL0YUg0YHRgNC10LTRgdGC0LI8L3RoPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICA8dGg+MTwvdGg+PHRoPjE3PC90aD48dGg+MTg8L3RoPjx0aD4xOTwvdGg+PHRoPjIwPC90aD48dGg+MjE8L3RoPjx0aD4yMjwvdGg+PHRoPjIzPC90aD48dGg+MjQ8L3RoPjx0aD4yNTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VudGVyXCI+MTk8L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPjx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuXHJcbiAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImZsZXgtcm93IHdpZC0xMDBcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleDFcIj7QlNC+0LvQttC90L7RgdGC0L3QvtC1INC70LjRhtC+LCDQvtGC0LLQtdGC0YHRgtCy0LXQvdC90L7QtSDQt9CwINC/0YDQtdC00L7RgdGC0LDQstC70LXQvdC40LUg0YHRgtCw0YLQuNGB0YLQuNGH0LXRgdC60L7QuSDQuNC90YTQvtGA0LzQsNGG0LjQuCAo0LvQuNGG0L4sINGD0L/QvtC70L3QvtC80L7Rh9C10L3QvdC+0LUg0L/RgNC10LTQvtGB0YLQsNCy0LvRj9GC0Ywg0YHRgtCw0YLQuNGB0YLQuNGH0LXRgdC60YPRjiDQuNC90YTQvtGA0LzQsNGG0LjRjiDQvtGCINC40LzQtdC90Lgg0Y7RgNC40LTQuNGH0LXRgdC60L7Qs9C+INC70LjRhtCwKTwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJkaXZpZGUgbWFyLTcgZmxleDFcIj48ZGl2IGNsYXNzPVwidW5kZXJsaW5lIGNlbnRlclwiPtCX0LDQstC10LTRg9GO0YnQuNC5INCx0LjQsdC70LjQvtGC0LXQutC+0Lk8L2Rpdj48ZGl2IGNsYXNzPVwiZGl2aWRlLXN1YlwiPijQtNC+0LvQttC90L7RgdGC0YwpPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImRpdmlkZSBtYXItNyBmbGV4MVwiPjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmVcIj48L2Rpdj48ZGl2IGNsYXNzPVwiZGl2aWRlLXN1YlwiPijQpC7QmC7Qni4pPC9kaXY+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImRpdmlkZSBtYXItNyBmbGV4MVwiPjxkaXYgY2xhc3M9XCJ1bmRlcmxpbmVcIj48L2Rpdj48ZGl2IGNsYXNzPVwiZGl2aWRlLXN1YlwiPijQv9C+0LTQv9C40YHRjCk8L2Rpdj48L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImZsZXgtcm93IHdpZC0xMDBcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleDFcIj48L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZGl2aWRlIG1hci03IGZsZXgxXCI+PGRpdiBjbGFzcz1cInVuZGVybGluZVwiPjwvZGl2PjxkaXYgY2xhc3M9XCJkaXZpZGUtc3ViXCI+KNC90L7QvNC10YAg0LrQvtC90YLQsNC60YLQvdC+0LPQviDRgtC10LvQtdGE0L7QvdCwKTwvZGl2PjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJkaXZpZGUgbWFyLTcgZmxleDFcIj48ZGl2IGNsYXNzPVwidW5kZXJsaW5lXCI+PC9kaXY+PGRpdiBjbGFzcz1cImRpdmlkZS1zdWJcIj4oRS1tYWlsKTwvZGl2PjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJkaXZpZGUgbWFyLTcgZmxleDFcIj48ZGl2IGNsYXNzPVwiY2VudGVyIHVuZGVybGluZVwiPsKrX19fX19fwrsgX19fX19fX19fX19fX19fXyAyMF9fX19fINCz0L7QtDwvZGl2PjxkaXYgY2xhc3M9XCJkaXZpZGUtc3ViXCI+KNC00LDRgtCwINGB0L7RgdGC0LDQstC70LXQvdC40Y8g0LTQvtC60YPQvNC10L3RgtCwKTwvZGl2PjwvZGl2PlxyXG4gICAgICAgIFxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PmBcclxuXHJcbn0pOyIsImxldCBDaGVja0JveFNlbGVjdG9yID0gcmVxdWlyZSgnLi4vLi4vX2NvbW1vbi9maWx0ZXItc2VsZWN0b3IvZmlsdGVyLXNlbGVjdG9yLmpzJyk7XHJcbmxldCBTaXhOSyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ1NpeE5LJyxcclxuICAgIFRhcmdldDogJycsXHJcbiAgICBUeXBlOiAnd2Rhc2gtY29udGVudCcsXHJcbiAgICBQYXJlbnQ6IFdEYXNoLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtd3NpeC1uaydcclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdiBjbGFzcz1cInNpeC1ua1wiPlxyXG4gICAgPGRpdiBjbGFzcz1cImRpYXJ5LWJyZWFkIGwtcm93XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImxpIGRhdGUtcmFuZ2VcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhbGVuZGFyLWljb25cIj4mIzEyODE5ODs8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVzXCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRlcy1yZXN1bHRcIj5cclxuICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJzZWxlY3Qtc2l4LW5rLXJhbmdlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjBcIj7Qk9C+0LQ8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMVwiIHt7U2VsZWN0ZWRRMX19PjEg0JrQstCw0YDRgtCw0Ls8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMlwiIHt7U2VsZWN0ZWRRMn19PjIg0JrQstCw0YDRgtCw0Ls8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiM1wiIHt7U2VsZWN0ZWRRM319PjMg0JrQstCw0YDRgtCw0Ls8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiNFwiIHt7U2VsZWN0ZWRRNH19PjQg0JrQstCw0YDRgtCw0Ls8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibGkgbC1yb3cgbC1mbGV4YS1jZW50ZXIgZmxleC0xMDBcIj5cclxuICAgICAgICAgICAgPGRpdj7Qn9C+0LTRgNCw0LfQtNC10LvQtdC90LjQtTogJm5ic3A7Jm5ic3A7PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTEwMCBsaWJyYXJ5LXRyZWUtY29udHJvbCBzdHJvbmdcIj5fXzwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJsaSBidXR0b24taG9sZGVyIGwtcm93XCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnRuLXJlZnJlc2hcIj7QntCx0L3QvtCy0LjRgtGMPC9idXR0b24+IFxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJsaSBidXR0b24taG9sZGVyIGwtcm93XCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJsLWJ1dHRvbiBidXR0b24gYnV0dG9uLWdldC14bHNcIj7QrdC60YHQv9C+0YDRgjwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PiBcclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cInBhcnQtaGVhZGVyXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgYWN0aXZlIG1haW5cIj7Qk9Cb0JDQktCd0JDQrzwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHAxXCI+0JzQkNCi0JXQoNCY0JDQm9Cs0J3Qni3QotCV0KXQndCY0KfQldCh0JrQkNCvINCR0JDQl9CQPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDJcIj7QpNCe0KDQnNCY0KDQntCS0JDQndCY0JUg0KTQntCd0JTQkCDQndCQINCk0JjQl9CY0KfQldCh0JrQmNClINCd0J7QodCY0KLQldCb0K/QpTwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHAzXCI+0K3Qm9CV0JrQotCg0J7QndCd0KvQlSDQoNCV0KHQo9Cg0KHQqzwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHA0XCI+0J/QntCh0JXQqdCV0J3QmNCvINCR0JjQkdCb0JjQntCi0JXQmtCYPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDVcIj7QmNCd0KTQntCg0JzQkNCm0JjQntCd0J3QntCVINCe0JHQodCb0KPQltCY0JLQkNCd0JjQlTwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHA2XCI+0J/QldCg0KHQntCd0JDQmzwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHA3XCI+0KTQmNCd0JDQndCh0Ks8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImRhdGEtdGFibGVzXCI+XHJcbiAgICAgICAgXHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+YCxcclxuICAgIEdldFNldDoge1xyXG4gICAgICAgIGdldCBDdXJyZW50TGlicmFyaWVzKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5Qcm90by5EYXRhLkxpYnJhcnlJRExpc3RTZWxlY3RlZDtcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgRGF0ZXNSZXN1bHQ6ICh7MTogJzEg0JrQstCw0YDRgtCw0LsnLCAyOiAnMiDQmtCy0LDRgNGC0LDQuycsIDM6ICczINCa0LLQsNGA0YLQsNC7JywgNDogJzQg0JrQstCw0YDRgtCw0LsnLCB9KVtNYXRoLmZsb29yKCgobmV3IERhdGUpLmdldE1vbnRoKCkpIC8gMykgKyAxXSxcclxuICAgICAgICBTZWxlY3RlZFExOiBNYXRoLmZsb29yKCgobmV3IERhdGUpLmdldE1vbnRoKCkpIC8gMykgKyAxID09PSAxID8gJ3NlbGVjdGVkJyA6ICcnLFxyXG4gICAgICAgIFNlbGVjdGVkUTI6IE1hdGguZmxvb3IoKChuZXcgRGF0ZSkuZ2V0TW9udGgoKSkgLyAzKSArIDEgPT09IDIgPyAnc2VsZWN0ZWQnIDogJycsXHJcbiAgICAgICAgU2VsZWN0ZWRRMzogTWF0aC5mbG9vcigoKG5ldyBEYXRlKS5nZXRNb250aCgpKSAvIDMpICsgMSA9PT0gMyA/ICdzZWxlY3RlZCcgOiAnJyxcclxuICAgICAgICBTZWxlY3RlZFE0OiBNYXRoLmZsb29yKCgobmV3IERhdGUpLmdldE1vbnRoKCkpIC8gMykgKyAxID09PSA0ID8gJ3NlbGVjdGVkJyA6ICcnXHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaERhdGEoKTtcclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLkJ1dHRvbkdldFhMUyA9IHRoaXMuU2VsZWN0KCcuYnV0dG9uLWdldC14bHMnKTtcclxuICAgICAgICB0aGlzLkJ1dHRvblJlZnJlc2ggPSB0aGlzLlNlbGVjdCgnLmJ0bi1yZWZyZXNoJyk7XHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmlzVmlzaWJsZSlcclxuICAgICAgICAgICAgdGhpcy5SZWZyZXNoRGF0YSgpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uICgpIHtcclxuLyogICAgICAgIHRoaXMuRGF0ZUNoYW5nZWQgPSBmdW5jdGlvbiAodmFsKSB7XHJcbiAgICAgICAgICAgY29uc29sZS5sb2codmFsKTtcclxuICAgICAgICB9OyovXHJcbiAgICAgICAgdGhpcy5SZWZyZXNoRGF0YSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gdGhpcy5Qcm90by5EYXRhLkRhdGVzUmVzdWx0ID0gKHsxOiAnMSDQmtCy0LDRgNGC0LDQuycsIDI6ICcyINCa0LLQsNGA0YLQsNC7JywgMzogJzMg0JrQstCw0YDRgtCw0LsnLCA0OiAnNCDQmtCy0LDRgNGC0LDQuycsIH0pW3BhcnNlSW50KHRoaXMuUmFuZ2VTZWxlY3Rvci52YWx1ZSldO1xyXG4gICAgICAgICAgICB0aGlzLlNpeE5LTWFpbi5Qcm90by5TZXRQcm9wZXJ0eSgnRGF0ZVJhbmdlJywgICh7MDogJ9CT0L7QtNC+0LLQsNGPJywgMTogJzEg0JrQstCw0YDRgtCw0LsnLCAyOiAnMiDQmtCy0LDRgNGC0LDQuycsIDM6ICczINCa0LLQsNGA0YLQsNC7JywgNDogJzQg0JrQstCw0YDRgtCw0LsnLCB9KVtwYXJzZUludCh0aGlzLlJhbmdlU2VsZWN0b3IudmFsdWUpXSk7XHJcbiAgICAgICAgICAgIHRoaXMuU2l4TktQYXJ0NC5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgdGhpcy5TaXhOS1BhcnQ1LkxvYWQuU2hvdygpO1xyXG4gICAgICAgICAgICBhcGkuRGlhcnlfU3VtbWFyeV82TktfR2V0KHRoaXMuQ3VycmVudExpYnJhcmllcywgKG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpLCB0aGlzLlJhbmdlU2VsZWN0b3IudmFsdWUsIHtcclxuICAgICAgICAgICAgICAgIFRoZW46IHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2l4TktQYXJ0NC5SZWZyZXNoRGF0YShyWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNpeE5LUGFydDUuUmVmcmVzaERhdGEoclswXSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2l4TktQYXJ0NC5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNpeE5LUGFydDUuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0aGlzLlVwZGF0ZWQgPSB0cnVlO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5HZXRYTFMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vSW5wdXRCb3guSGlkZSgpO1xyXG4gICAgICAgICAgICAvL3RoaXMuTG9hZC5TaG93KCk7XHJcbiAgICAgICAgICAgIEx1cmUuQnV0dG9uLkxvY2sodGhpcy5CdXR0b25HZXRYTFMpO1xyXG4gICAgICAgICAgICBsZXQgRHQgPSBMdXJlLkRhdGUoKTtcclxuICAgICAgICAgICAgYXBpLkRpYXJ5X1N1bW1hcnlfNk5LX0dldFhMUyh0aGlzLkN1cnJlbnRMaWJyYXJpZXMsIER0LlllYXIsIHRoaXMuUmFuZ2VTZWxlY3Rvci52YWx1ZSwge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKEJsb2IpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgTHVyZS5TYXZlQmxvYihCbG9iLCBgNi3QndCaICR7RHQuRm9ybWF0KCdZWVlZJyl9Lnhsc3hgKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDYXRjaDogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLlN5c3RlbS5FcnJvcign0J3QtdCy0L7Qt9C80L7QttC90L4g0L/QvtC70YPRh9C40YLRjCDQvtGC0YfQtdGCJyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRmluYWxseTogKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBMdXJlLkJ1dHRvbi5SZWxlYXNlKHRoaXMuQnV0dG9uR2V0WExTKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkxvYWQuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBuZXcgTGlicmFyeVRyZWUodGhpcywgdGhpcy5TZWxlY3QoJy5saWJyYXJ5LXRyZWUtY29udHJvbCcpLCB7TXVsdGlTZWxlY3Q6IHRydWV9KTtcclxuICAgICAgICAvLyB0aGlzLlNpeE5LTWFpbi5Qcm90by5TZXRQcm9wZXJ0eSgnRGF0ZVJhbmdlJywgICh7MDogJ9CT0L7QtNC+0LLQsNGPJywgMTogJzEg0JrQstCw0YDRgtCw0LsnLCAyOiAnMiDQmtCy0LDRgNGC0LDQuycsIDM6ICczINCa0LLQsNGA0YLQsNC7JywgNDogJzQg0JrQstCw0YDRgtCw0LsnLCB9KVt0aGlzLlByb3RvLkRhdGEuRGF0ZXNSZXN1bHRdKTtcclxuXHJcbiAgICAgICAgdGhpcy5SYW5nZVNlbGVjdG9yID0gdGhpcy5TZWxlY3QoJy5zZWxlY3Qtc2l4LW5rLXJhbmdlJyk7XHJcbiAgICAgICAgdGhpcy5SYW5nZVNlbGVjdG9yLm9uY2hhbmdlID0gKCkgPT4gdGhpcy5SZWZyZXNoRGF0YSgpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uR2V0WExTLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5HZXRYTFMpO1xyXG4gICAgICAgIHRoaXMuQnV0dG9uUmVmcmVzaC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuUmVmcmVzaERhdGEpO1xyXG4gICAgfVxyXG59KTtcclxud2luZG93LldEYXNoLlNpeE5LID0gU2l4Tks7XHJcbnJlcXVpcmUoJy4vcGFydHMvbWFpbi1wYXJ0LmpzJyk7XHJcbnJlcXVpcmUoJy4vcGFydHMvcGFydDEuanMnKTtcclxucmVxdWlyZSgnLi9wYXJ0cy9wYXJ0Mi5qcycpO1xyXG5yZXF1aXJlKCcuL3BhcnRzL3BhcnQzLmpzJyk7XHJcbnJlcXVpcmUoJy4vcGFydHMvcGFydDQuanMnKTtcclxucmVxdWlyZSgnLi9wYXJ0cy9wYXJ0NS5qcycpO1xyXG5yZXF1aXJlKCcuL3BhcnRzL3BhcnQ2LmpzJyk7XHJcbnJlcXVpcmUoJy4vcGFydHMvcGFydDcuanMnKTtcclxuIiwiV0Rhc2guV0Rhc2hTdW1tYXJ5LlBhcnQxID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnRGFzaFBhcnQxJyxcclxuICAgIFRhcmdldDogJy5zdW1tYXJ5LWNvbnRlbnQnLFxyXG4gICAgVHlwZTogJ2Rhc2gtc3VtbWFyeS1jb250ZW50JyxcclxuICAgIFZpc2libGU6IHRydWUsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LXdkYXNoLXN1bW0tcDEnXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLkRhc2hib2FyZF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdj5cclxuICAgPGRpdiBjbGFzcz1cInBhcnQtaGVhZGVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHNlbGVjdGVkIHAxMVwiPtCX0JDQn9CY0KHQrCDQmCDQn9Ce0KHQldCp0JXQndCY0K88L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDEyXCI+0JzQldCg0J7Qn9Cg0JjQr9Ci0JjQryDQmCDQmtCb0KPQkdCrPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlIHAxMSBmaXhlZC1oZWlnaHRcIj5cclxuICAgICAgPHRoZWFkIGNsYXNzPVwidGhlYWRcIj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTFcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JTQsNGC0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLQvdC+0LLRjCDQt9Cw0L/QuNGB0LDQstGI0LjRhdGB0Y88L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+INGB0YLQsNGG0LjQvtC90LDRgDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiIHJvd3NwYW49XCIxXCIgPtCS0L7Qt9GA0LDRgdGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0KPQtNCw0LvQtdC90L3Ri9C1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNVwiIHJvd3NwYW49XCIxXCIgPtCo0LrQvtC70YzQvdC40LrQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNFwiIHJvd3NwYW49XCIxXCIgPtCe0YLQtNC10LvRjNC90YvQtSDQs9GA0YPQv9C/0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+INC/0L7RgdC10YnQtdC90LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiIHJvd3NwYW49XCIxXCIgPtCSINGC0L7QvCDRh9C40YHQu9C1PC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0LTQviAxNCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID4xNC0zMCDQu9C10YI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QtC/RiDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPjctMTAg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+MTEtMTQg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHRgtCw0YDRiNC10LrQu9Cw0YHRgdC90LjQutC4PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KDQlNCnPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/QtdC90YHQuNC+0L3QtdGA0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QodC70YPQttCw0YnQuNC1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHRgtGD0LTQtdC90YLRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0YDQvtGH0LjQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCh0YLQsNGG0LjQvtC90LDRgDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCS0L3QtdGB0YLQsNGG0LjQvtC90LDRgDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0L3RgtC10YDQvdC10YI8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICA8L3RoZWFkPlxyXG4gICAgICA8dGJvZHk+XHJcbiAgICAgICAgIHt7I2VhY2ggcDExfX1cclxuICAgICAgICAgPHRyIGNsYXNzPVwie3sjaWYgKCR0aGlzLlFRUT09PS0yKSA/ICdzcGVjaWFsLWRheScgOiAnJ319IHt7I2lmICgkdGhpcy5Jc0RheU9mZikgPyAnZGF5LW9mZicgOiAnJ319XCI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJEVlwiPnt7RGF0ZVZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMlwiPnt7UDFWMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAxVjNcIj57e1AxVjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVY0XCI+e3tQMVY0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWNVwiPnt7UDFWNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAxVjZcIj57e1AxVjZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVY3XCI+e3tQMVY3fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWOFwiPnt7UDFWOH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAxVjlcIj57e1AxVjl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxMFwiPnt7UDFWMTB9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxMVwiPnt7UDFWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxMlwiPnt7UDFWMTJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxM1wiPnt7UDFWMTN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxNFwiPnt7UDFWMTR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxNVwiPnt7UDFWMTV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxNlwiPnt7UDFWMTZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxN1wiPnt7UDFWMTd9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxOFwiPnt7UDFWMTh9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYxOVwiPnt7UDFWMTl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMVYyMFwiPnt7UDFWMjB9fTwvdGQ+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICA8L3RhYmxlPlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlIHAxMiBmaXhlZC1oZWlnaHQgbm9uZVwiPlxyXG4gICAgICA8dGhlYWQgY2xhc3M9XCJ0aGVhZFwiPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMVwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QlNCw0YLQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCS0YHQtdCz0L4g0L/QvtGB0LXRidC10L3QuNC5INC80LXRgNC+0L/RgNC40Y/RgtC40Y8g0YHRgtCw0YbQuNC+0L3QsNGAPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCIgcm93c3Bhbj1cIjFcIiA+0J/QvtGB0LXRidC10L3QuNGPINC80LXRgNC+0L/RgNC40Y/RgtC40Lk8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QktGB0LXQs9C+INC80LXRgNC+0L/RgNC40Y/RgtC40Lk8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7QmtC+0LvQuNGH0LXRgdGC0LLQviDQvNC10YDQvtC/0YDQuNGP0YLQuNC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLRgdC10LPQviDQv9C+0YHQtdGJ0LXQvdC40Lkg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjyDQstC90LXRgdGC0LDRhtC40L7QvdCw0YA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7Qn9C+0YHQtdGJ0LXQvdC40Y8g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCS0YHQtdCz0L4g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuSDQstC90LXRgdGC0LDRhtC40L7QvdCw0YA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7Qn9C+0YHQtdGJ0LXQvdC40Y8g0LzQtdGA0L7Qv9GA0LjRj9GC0LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiIHJvd3NwYW49XCIxXCIgPtCR0LXRgdC/0LvQsNGC0L3Ri9C1INC60LvRg9Cx0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjJcIiByb3dzcGFuPVwiMVwiID7Qn9C70LDRgtC90YvQtSDQutC70YPQsdGLPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTJcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JHQtdGB0L/Qu9Cw0YLQvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9C70LDRgtC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCR0LXRgdC/0LvQsNGC0L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/Qu9Cw0YLQvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QkdC10YHQv9C70LDRgtC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0LvQsNGC0L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JHQtdGB0L/Qu9Cw0YLQvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9C70LDRgtC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCa0L7Qu9C40YfQtdGB0YLQstC+INC30LDRgdC10LTQsNC90LjQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCn0LjRgdC70L4g0L/QvtGB0LXRidC10L3QuNC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JrQvtC70LjRh9C10YHRgtCy0L4g0LfQsNGB0LXQtNCw0L3QuNC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KfQuNGB0LvQviDQv9C+0YHQtdGJ0LXQvdC40Lk8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICA8L3RoZWFkPlxyXG4gICAgICA8dGJvZHk+XHJcbiAgICAgICAgIHt7I2VhY2ggcDEyfX1cclxuICAgICAgICAgPHRyIGNsYXNzPVwie3sjaWYgKCR0aGlzLlFRUT09PS0yKSA/ICdzcGVjaWFsLWRheScgOiAnJ319IHt7I2lmICgkdGhpcy5Jc0RheU9mZikgPyAnZGF5LW9mZicgOiAnJ319XCI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJEVlwiPnt7RGF0ZVZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjFcIj57e1AxVjIxfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjJcIj57e1AxVjIyfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjNcIj57e1AxVjIzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjRcIj57e1AxVjI0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjVcIj57e1AxVjI1fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjZcIj57e1AxVjI2fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjdcIj57e1AxVjI3fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjhcIj57e1AxVjI4fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMjlcIj57e1AxVjI5fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzBcIj57e1AxVjMwfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzFcIj57e1AxVjMxfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzJcIj57e1AxVjMyfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzNcIj57e1AxVjMzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzRcIj57e1AxVjM0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzVcIj57e1AxVjM1fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDFWMzZcIj57e1AxVjM2fX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuPC9kaXY+YCxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKVxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5TZWxlY3RlZFRhYiA9IHRoaXMuU2VsZWN0KCcucmVxLXRhYi5zZWxlY3RlZCcpO1xyXG4gICAgICAgIHRoaXMuVF9wMTEgPSB0aGlzLlNlbGVjdCgndGFibGUucDExJyk7XHJcbiAgICAgICAgdGhpcy5UX3AxMiA9IHRoaXMuU2VsZWN0KCd0YWJsZS5wMTInKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcucGFydC1oZWFkZXIgLnJlcS10YWInLCBlID0+IHtcclxuICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldCA9PT0gdGhpcy5TZWxlY3RlZFRhYikgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdGVkVGFiLmNsYXNzTGlzdC5yZW1vdmUoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWRUYWIgPSBlLmN1cnJlbnRUYXJnZXQ7XHJcbiAgICAgICAgICAgIGxldCBjbCA9IGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgICAgICAgICAgIGNsLmFkZCgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgaWYgKGNsLmNvbnRhaW5zKCdwMTEnKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3AxMS5jbGFzc0xpc3QucmVtb3ZlKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDEyLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY2wuY29udGFpbnMoJ3AxMicpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDExLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wMTIuY2xhc3NMaXN0LnJlbW92ZSgnbm9uZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufSk7IiwiV0Rhc2guV0Rhc2hTdW1tYXJ5LlBhcnQyID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnRGFzaFBhcnQyJyxcclxuICAgIFRhcmdldDogJy5zdW1tYXJ5LWNvbnRlbnQnLFxyXG4gICAgVHlwZTogJ2Rhc2gtc3VtbWFyeS1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtd2Rhc2gtc3VtbS1wMidcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuRGFzaGJvYXJkXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2PlxyXG4gICA8ZGl2IGNsYXNzPVwicGFydC1oZWFkZXJcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgc2VsZWN0ZWQgcDIxXCI+0JrQndCY0JPQmCDQmCDQkdCg0J7QqNCu0KDQqzwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBwMjJcIj7QlNCe0JrQo9Cc0JXQndCi0Ksg0Jgg0JrQntCf0JjQmDwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBwMjNcIj7QodCf0KDQkNCS0JrQmCDQmCDQmtCe0J3QodCj0JvQrNCi0JDQptCY0Jg8L2Rpdj5cclxuICAgPC9kaXY+XHJcbiAgIDx0YWJsZSBjbGFzcz1cImRhdGEtdGFibGUgZml4ZWQtaGVpZ2h0IHAyMVwiPlxyXG4gICAgICA8dGhlYWQgY2xhc3M9XCJ0aGVhZFwiPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMVwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QlNCw0YLQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCS0YHQtdCz0L4g0LLRi9C00LDQvdC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI1XCIgcm93c3Bhbj1cIjFcIiA+0J/QviDRgtC40L/RgyDQvdC+0YHQuNGC0LXQu9GPPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxMVwiIHJvd3NwYW49XCIxXCIgPtCf0L4g0YHQvtC00LXRgNC20LDQvdC40Y48L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMlwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QndCwINGE0LjQtyDQvdC+0YHQuNGC0LXQu9GP0YU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QktC90LXRgdGC0LDRhtC40L7QvdCw0YAg0Lgg0L3QsCDQtNC+0LzRgyAoNi4xLCA2LjIpPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5INCx0LjQsdC70LjQvtGC0LXQutC4PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQvdGB0YLQsNC70LjRgNC+0LLQsNC90L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KPQtNCw0LvQtdC90L3Ri9C1INC70LjRhtC10L3Qt9C40L7QvdC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCe0J/QmzwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCVL9C30L08L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QotC10YXQvdC40LrQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtChL9GFPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjRgdC60YPRgdGB0YLQstC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHQv9C+0YDRgjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPjgxLjgzPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHQv9GA0LDQstC+0YfQvdC40LrQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCU0LXRgi4g0LvQuNGCLdGA0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QpdGD0LQuINC70LjRgi3RgNCwPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JTQvtC/0L7Qu9C90LjRgi48L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICA8L3RoZWFkPlxyXG4gICAgICA8dGJvZHk+XHJcbiAgICAgICAgIHt7I2VhY2ggcDIxfX1cclxuICAgICAgICAgPHRyIGNsYXNzPVwie3sjaWYgKCR0aGlzLlFRUT09PS0yKSA/ICdzcGVjaWFsLWRheScgOiAnJ319IHt7I2lmICgkdGhpcy5Jc0RheU9mZikgPyAnZGF5LW9mZicgOiAnJ319XCI+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJEVlwiPnt7RGF0ZVZhbHVlfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWMlwiPnt7UDJWMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjNcIj57e1AyVjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY0XCI+e3tQMlY0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWNVwiPnt7UDJWNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjZcIj57e1AyVjZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY3XCI+e3tQMlY3fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDJWOFwiPnt7UDJWOH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjlcIj57e1AyVjl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxMFwiPnt7UDJWMTB9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxMVwiPnt7UDJWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxMlwiPnt7UDJWMTJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxM1wiPnt7UDJWMTN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxNFwiPnt7UDJWMTR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxNVwiPnt7UDJWMTV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxNlwiPnt7UDJWMTZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxN1wiPnt7UDJWMTd9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYxOFwiPnt7UDJWMTh9fTwvdGQ+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICA8L3RhYmxlPlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlIHAyMiBmaXhlZC1oZWlnaHQgbm9uZVwiPlxyXG4gICAgICA8dGhlYWQgY2xhc3M9XCJ0aGVhZFwiPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMVwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QlNCw0YLQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNlwiIHJvd3NwYW49XCIxXCIgPtCS0YvQtNCw0L3QviDQtNC+0LrRg9C80LXQvdGC0L7QsiDQtNC10YLRj9C8INC00L4gMTQg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI2XCIgcm93c3Bhbj1cIjFcIiA+0JLRi9C00LDQvdC+INC00L7QutGD0LzQtdC90YLQvtCyINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj9C8IDE0LTMwINC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiIHJvd3NwYW49XCIxXCIgPtCY0LfQs9C+0YLQvtCy0LvQtdC90L4g0Lgg0LLRi9C00LDQvdC+INC60L7Qv9C40Lk8L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMlwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QktGB0LXQs9C+INCy0YvQtNCw0L3QvjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCd0LAg0YTQuNC3INC90L7RgdC40YLQtdC70Y/RhTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCS0L3QtdGB0YLQsNGG0LjQvtC90LDRgCDQuCDQvdCwINC00L7QvNGDICg2LjEsIDYuMik8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmNC3INGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0LHQuNCx0LvQuNC+0YLQtdC60Lg8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmNC90YHRgtCw0LvQuNGA0L7QstCw0L3QvdGL0LU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qo9C00LDQu9C10L3QvdGL0LUg0LvQuNGG0LXQvdC30LjQvtC90L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JLRgdC10LPQviDQstGL0LTQsNC90L48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QndCwINGE0LjQtyDQvdC+0YHQuNGC0LXQu9GP0YU8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QktC90LXRgdGC0LDRhtC40L7QvdCw0YAg0Lgg0L3QsCDQtNC+0LzRgyAoNi4xLCA2LjIpPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5INCx0LjQsdC70LjQvtGC0LXQutC4PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQvdGB0YLQsNC70LjRgNC+0LLQsNC90L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KPQtNCw0LvQtdC90L3Ri9C1INC70LjRhtC10L3Qt9C40L7QvdC90YvQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCS0YHQtdCz0L48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QlNC10YLRj9C8INC00L4gMTQg0LvQtdGCPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/QvtC70YzQt9C+0LLQsNGC0LXQu9GP0LwgMTQtMzAg0LvQtdGCPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgICB7eyNlYWNoIHAyMn19XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInt7I2lmICgkdGhpcy5RUVE9PT0tMikgPyAnc3BlY2lhbC1kYXknIDogJyd9fSB7eyNpZiAoJHRoaXMuSXNEYXlPZmYpID8gJ2RheS1vZmYnIDogJyd9fVwiPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiRFZcIj57e0RhdGVWYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjE5XCI+e3tQMlYxOX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjIwXCI+e3tQMlYyMH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjIxXCI+e3tQMlYyMX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjIyXCI+e3tQMlYyMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjIzXCI+e3tQMlYyM319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjI0XCI+e3tQMlYyNH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjI1XCI+e3tQMlYyNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjI2XCI+e3tQMlYyNn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjI3XCI+e3tQMlYyN319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjI4XCI+e3tQMlYyOH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjI5XCI+e3tQMlYyOX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjMwXCI+e3tQMlYzMH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjMxXCI+e3tQMlYzMX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjMyXCI+e3tQMlYzMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAyVjMzXCI+e3tQMlYzM319PC90ZD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgIDwvdGJvZHk+XHJcbiAgIDwvdGFibGU+XHJcbiAgIDx0YWJsZSBjbGFzcz1cImRhdGEtdGFibGUgcDIzIGZpeGVkLWhlaWdodCBub25lXCI+XHJcbiAgICAgIDx0aGVhZCBjbGFzcz1cInRoZWFkXCI+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0xXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCU0LDRgtCwPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLRgdC10LPQviDQstGL0LTQsNC90L4g0LjQtyDRhNC+0L3QtNC+0LIg0LTRgNGD0LPQuNGFINCx0LjQsdC70LjQvtGC0LXQujwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiIHJvd3NwYW49XCIxXCIgPtCS0YvQtNCw0L3QviAo0L/RgNC+0YHQvNC+0YLRgNC10L3Qvikg0LTQvtC6LdC+0LIg0LjQtyDRhNC+0L3QtNC+0LIg0LTRgNGD0LPQuNGFINCx0LjQsdC70LjQvtGC0LXQuiwg0LXQtNC40L3QuNGGPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLRgdC10LPQviDQstGL0L/QvtC70L3QtdC90L4g0YHQv9GA0LDQstC+0Log0Lgg0LrQvtC90YHRg9C70YzRgtCw0YbQuNC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIyXCIgcm93c3Bhbj1cIjFcIiA+0J/QviDQstC+0LfRgNCw0YHRgtGDPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCI1XCIgcm93c3Bhbj1cIjFcIiA+0J/QviDRgtC40L/RgzwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0yXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0L4g0YHQuNGB0YLQtdC80LUg0JzQkdCQINC4INCc0JzQkdCQPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JLQuNGA0YLRg9Cw0LvRjNC90YvQtSDRh9C40YLQsNC70YzQvdGL0LUg0LfQsNC70Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QtNC+IDE0INC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPjE0LTMwINC70LXRgjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCi0LXQvNCw0YLQuNGH0LXRgdC60LjQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCk0LDQutGC0L7Qs9GA0LDRhNC40YcuPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JHQuNCx0LvQuNC+0LPRgNCw0YTQuNGHLjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCa0L7QvdGB0YPQu9GM0YLQsNGG0LjQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCj0LTQsNC70LXQvdC90YvQtSDRgdC/0YDQsNCy0LrQuDwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgIDwvdGhlYWQ+XHJcbiAgICAgIDx0Ym9keT5cclxuICAgICAgICAge3sjZWFjaCBwMjN9fVxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ7eyNpZiAoJHRoaXMuUVFRPT09LTIpID8gJ3NwZWNpYWwtZGF5JyA6ICcnfX0ge3sjaWYgKCR0aGlzLklzRGF5T2ZmKSA/ICdkYXktb2ZmJyA6ICcnfX1cIj5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIkRWXCI+e3tEYXRlVmFsdWV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzNFwiPnt7UDJWMzR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzNVwiPnt7UDJWMzV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzNlwiPnt7UDJWMzZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzN1wiPnt7UDJWMzd9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzOFwiPnt7UDJWMzh9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlYzOVwiPnt7UDJWMzl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY0MFwiPnt7UDJWNDB9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY0MVwiPnt7UDJWNDF9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY0MlwiPnt7UDJWNDJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY0M1wiPnt7UDJWNDN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQMlY0NFwiPnt7UDJWNDR9fTwvdGQ+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICA8L3RhYmxlPlxyXG48L2Rpdj5gLFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuU2VsZWN0ZWRUYWIgPSB0aGlzLlNlbGVjdCgnLnJlcS10YWIuc2VsZWN0ZWQnKTtcclxuICAgICAgICB0aGlzLlRfcDIxID0gdGhpcy5TZWxlY3QoJ3RhYmxlLnAyMScpO1xyXG4gICAgICAgIHRoaXMuVF9wMjIgPSB0aGlzLlNlbGVjdCgndGFibGUucDIyJyk7XHJcbiAgICAgICAgdGhpcy5UX3AyMyA9IHRoaXMuU2VsZWN0KCd0YWJsZS5wMjMnKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcucGFydC1oZWFkZXIgLnJlcS10YWInLCBlID0+IHtcclxuICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldCA9PT0gdGhpcy5TZWxlY3RlZFRhYikgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdGVkVGFiLmNsYXNzTGlzdC5yZW1vdmUoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWRUYWIgPSBlLmN1cnJlbnRUYXJnZXQ7XHJcbiAgICAgICAgICAgIGxldCBjbCA9IGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgICAgICAgICAgIGNsLmFkZCgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgaWYgKGNsLmNvbnRhaW5zKCdwMjEnKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3AyMS5jbGFzc0xpc3QucmVtb3ZlKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDIyLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wMjMuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjbC5jb250YWlucygncDIyJykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wMjEuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3AyMi5jbGFzc0xpc3QucmVtb3ZlKCdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDIzLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY2wuY29udGFpbnMoJ3AyMycpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDIxLmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wMjIuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3AyMy5jbGFzc0xpc3QucmVtb3ZlKCdub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59KTsiLCJXRGFzaC5XRGFzaFN1bW1hcnkuUGFydDMgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdEYXNoUGFydDMnLFxyXG4gICAgVGFyZ2V0OiAnLnN1bW1hcnktY29udGVudCcsXHJcbiAgICBUeXBlOiAnZGFzaC1zdW1tYXJ5LWNvbnRlbnQnLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi13ZGFzaC1zdW1tLXAzJ1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0RpY3Rpb25hcnkuUm9sZS5EYXNoYm9hcmRdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDpcclxuYDxkaXY+XHJcbiAgIDxkaXYgY2xhc3M9XCJwYXJ0LWhlYWRlclwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwicmVxLXRhYiBzZWxlY3RlZFwiPtCj0KfQldCiINCS0KvQlNCQ0KfQmCDQrdCb0JXQmtCi0KDQntCd0J3Qq9ClINCg0JXQodCj0KDQodCe0JI8L2Rpdj5cclxuICAgPC9kaXY+XHJcbiAgIDx0YWJsZSBjbGFzcz1cImRhdGEtdGFibGUgZml4ZWQtaGVpZ2h0XCI+XHJcbiAgICAgIDx0aGVhZCBjbGFzcz1cInRoZWFkXCI+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0xXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCU0LDRgtCwPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLRgdC10LPQviDQstGL0LTQsNC90L48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjRcIiByb3dzcGFuPVwiMVwiID7Qn9C+INGC0LjQv9GDINC90L7RgdC40YLQtdC70Y88L3RoPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMlwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmNC90YHRgtCw0LvQu9C40YDQvtCy0LDQvdC90YvQtSDQtNC+0LrRg9C80LXQvdGC0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QodC10YLQtdCy0YvQtSDRg9C00LDQu9C10L3QvdGL0LUg0LvQuNGG0LXQvdC30LjQvtC90L3Ri9C1PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQtyDRjdC70LXQutGC0YDQvtC90L3QvtC5ICjRhtC40YTRgNC+0LLQvtC5KSDQsdC40LHQu9C40L7RgtC10LrQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPkRWRCAvIENELVJPTTwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgIDwvdGhlYWQ+XHJcbiAgICAgIDx0Ym9keT5cclxuICAgICAgICAge3sjZWFjaCBwM319XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInt7I2lmICgkdGhpcy5RUVE9PT0tMikgPyAnc3BlY2lhbC1kYXknIDogJyd9fSB7eyNpZiAoJHRoaXMuSXNEYXlPZmYpID8gJ2RheS1vZmYnIDogJyd9fVwiPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiRFZcIj57e0RhdGVWYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAzVjJcIj57e1AzVjJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQM1YzXCI+e3tQM1YzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDNWNFwiPnt7UDNWNH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlAzVjVcIj57e1AzVjV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQM1Y2XCI+e3tQM1Y2fX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuPC9kaXY+YCxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9XHJcbn0pOyIsIldEYXNoLldEYXNoU3VtbWFyeS5QYXJ0NCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0Rhc2hQYXJ0NCcsXHJcbiAgICBUYXJnZXQ6ICcuc3VtbWFyeS1jb250ZW50JyxcclxuICAgIFR5cGU6ICdkYXNoLXN1bW1hcnktY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LXdkYXNoLXN1bW0tcDQnXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLkRhc2hib2FyZF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdj5cclxuICAgPGRpdiBjbGFzcz1cInBhcnQtaGVhZGVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHNlbGVjdGVkXCI+0JrQo9Cb0KzQotCj0KDQndCeLdCc0JDQodCh0J7QktCQ0K8g0KDQkNCR0J7QotCQPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlXCI+XHJcbiAgICAgIDx0aGVhZCBjbGFzcz1cInRoZWFkXCI+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0xXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCU0LDRgtGLINC/0YDQvtCy0LXQtNC10L3QuNGPPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0J3QsNC30LLQsNC90LjQtSDQvNC10YDQvtC/0YDQuNGP0YLQuNGPPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0KTQvtGA0LzQsCDQv9GA0L7QstC10LTQtdC90LjRjzwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNVwiIHJvd3NwYW49XCIxXCIgPtCh0YLQsNGG0LjQvtC90LDRgDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiNVwiIHJvd3NwYW49XCIxXCIgPtCS0L3QtdGB0YLQsNGG0LjQvtC90LDRgDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiM1wiIHJvd3NwYW49XCIxXCIgPtCR0LXRgdC/0LvQsNGC0L3Ri9C1INC60LvRg9Cx0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjNcIiByb3dzcGFuPVwiMVwiID7Qn9C70LDRgtC90YvQtSDQutC70YPQsdGLPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLRi9C10LfQtNC90L7QtSAo0L3QsNC30LLQsNC90LjQtSk8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QntGC0LLQtdGC0YHRgtCy0LXQvdC90YvQuTwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0yXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCR0LXRgdC/0LvQsNGC0L3QvjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0LvQsNGC0L3QvjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0L3QstCw0LvQuNC00Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QnNC40LPRgNCw0L3RgtGLPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/RgNC+0YQuINGB0LXQvNC40L3QsNGA0YssINC70LXQutGG0LjQuCwg0Lgg0YIu0L8uPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JHQtdGB0L/Qu9Cw0YLQvdC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J/Qu9Cw0YLQvdC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjQvdCy0LDQu9C40LTRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCc0LjQs9GA0LDQvdGC0Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9GA0L7RhC4g0YHQtdC80LjQvdCw0YDRiywg0LvQtdC60YbQuNC4LCDQuCDRgi7Qvy48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9C+0YHQtdGJ0LXQvdC40Y88L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmNC90LLQsNC70LjQtNGLPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JzQuNCz0YDQsNC90YLRizwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0L7RgdC10YnQtdC90LjRjzwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCY0L3QstCw0LvQuNC00Ys8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QnNC40LPRgNCw0L3RgtGLPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgICB7e0lzRW1wdHl9fVxyXG4gICAgICAgICB7eyNlYWNoIFBhcnQ0fX1cclxuICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDRWMVwiPnt7RGF0ZVN0YXJ0fX08YnI+e3tEYXRlRmluaXNofX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDRWMlwiIHN0eWxlPVwid2hpdGUtc3BhY2U6IHByZS13cmFwO1wiPnt7UDRWMn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjNcIj57e1A0VjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFY0XCI+e3tQNFY0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDRWNVwiPnt7UDRWNX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjZcIj57e1A0VjZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFY3XCI+e3tQNFY3fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDRWOFwiPnt7UDRWOH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA0VjlcIj57e1A0Vjl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxMFwiPnt7UDRWMTB9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxMVwiPnt7UDRWMTF9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxMlwiPnt7UDRWMTJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxM1wiPnt7UDRWMTN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxNFwiPnt7UDRWMTR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxNVwiPnt7UDRWMTV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxNlwiPnt7UDRWMTZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxN1wiPnt7UDRWMTd9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxOFwiPnt7UDRWMTh9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYxOVwiPnt7UDRWMTl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNFYyMFwiIHRpdGxlPSd7e1A0VjIwfX0nIGNsYXNzPVwiY3V0LWNlbGxcIj57e1A0VjIwfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDRWMjFcIiB0aXRsZT0ne3tQNFYyMX19JyBjbGFzcz1cImN1dC1jZWxsXCI+e3tQNFYyMX19PC90ZD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgIDwvdGJvZHk+XHJcbiAgIDwvdGFibGU+XHJcbjwvZGl2PmAsXHJcbiAgICBQcm90bzoge1xyXG4gICAgICAgIElzRW1wdHk6ICcnXHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgIERhdGVTdGFydDogeCA9PiBMdXJlLkRhdGUoeCkuRm9ybWF0KCdERC5NTS5ZWVlZJyksXHJcbiAgICAgICAgRGF0ZUZpbmlzaDogeCA9PiBMdXJlLkRhdGUoeCkuRm9ybWF0KCdERC5NTS5ZWVlZJyksXHJcbiAgICAgICAgUDRWMzogeCA9PiBEaWN0aW9uYXJ5LkV2ZW50VHlwZURpY3RbeF0gfHwgeCxcclxuICAgICAgICAnSXNFbXB0eSc6ICh4LCBwKSA9PiAocC5QYXJ0NCB8fCBbXSkubGVuZ3RoID4gMCA/ICcnIDogYDx0cj48dGQgY2xhc3M9XCJlbXB0eS1yb3dcIiBjb2xzcGFuPVwiMjFcIj7QndC10YIg0LTQsNC90L3Ri9GFPC90ZD48L3RyPmAsXHJcbiAgICAgICAgJ1A0VjIxJzogKFVzZXJJRCk9PntcclxuICAgICAgICAgICAgbGV0IFVzZXIgPSBMdXJlLlVzZXIuQ2FjaGUuVXNlckxpc3QuV2hlcmUoeD0+eC5JRCA9PT0gVXNlcklEKS5GaXJzdE9yRGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBpZiAoVXNlciA9PT0gbnVsbClcclxuICAgICAgICAgICAgICAgIHJldHVybiAn0J3QtSDQt9Cw0LTQsNC9IConO1xyXG4gICAgICAgICAgICByZXR1cm4gVXNlci5OYW1lXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9XHJcbn0pOyIsIldEYXNoLldEYXNoU3VtbWFyeS5QYXJ0NSA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0Rhc2hQYXJ0NScsXHJcbiAgICBUYXJnZXQ6ICcuc3VtbWFyeS1jb250ZW50JyxcclxuICAgIFR5cGU6ICdkYXNoLXN1bW1hcnktY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LXdkYXNoLXN1bW0tcDUnXHJcbiAgICB9LFxyXG4gICAgUGVybWlzc2lvbjoge1xyXG4gICAgICAgIFJvbGVzOiBbRGljdGlvbmFyeS5Sb2xlLkRhc2hib2FyZF1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG5gPGRpdj5cclxuICAgPGRpdiBjbGFzcz1cInBhcnQtaGVhZGVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJyZXEtdGFiIHNlbGVjdGVkXCI+0JLQq9Ch0KLQkNCS0JrQmDwvZGl2PlxyXG4gICA8L2Rpdj5cclxuICAgPHRhYmxlIGNsYXNzPVwiZGF0YS10YWJsZVwiPlxyXG4gICAgICA8dGhlYWQ+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0xXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCU0LDRgtCwPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J3QsNC30LLQsNC90LjQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCa0L7Qu9C40YfQtdGB0YLQstC+INC/0YDQtdC00YHRgtCw0LLQu9C10L3QvdGL0YUg0LTQvtC60YPQvNC10L3RgtC+0LI8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmtC+0LvQuNGH0LXRgdGC0LLQviDQstGL0LTQsNC90L3Ri9GFINC00L7QutGD0LzQtdC90YLQvtCyPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0J7RgtCy0LXRgtGB0YLQstC10L3QvdGL0Lk8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7Qn9GA0LjQvNC10YfQsNC90LjRjzwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgIDwvdGhlYWQ+XHJcbiAgICAgIDx0Ym9keT5cclxuICAgICAgICAge3tJc0VtcHR5fX1cclxuICAgICAgICAge3sjZWFjaCBQYXJ0NX19XHJcbiAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIkRBVEVTXCI+e3tEYXRlU3RhcnR9fSAtIHt7RGF0ZUZpbmlzaH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA1VjJcIj57e1A1VjJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNVYzXCI+e3tQNVYzfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDVWNFwiPnt7UDVWNH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA1VjVcIj57e1A1VjV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNVY2XCI+e3tQNVY2fX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuPC9kaXY+YCxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgSXNFbXB0eTogJydcclxuICAgIH0sXHJcbiAgICBQcm9wRm9ybWF0OiB7XHJcbiAgICAgICAgSXNFbXB0eTogKHgsIHApID0+IChwLlBhcnQ1IHx8IFtdKS5sZW5ndGggPiAwID8gJycgOiBgPHRyPjx0ZCBjbGFzcz1cImVtcHR5LXJvd1wiIGNvbHNwYW49XCI2XCI+0J3QtdGCINC00LDQvdC90YvRhTwvdGQ+PC90cj5gLFxyXG4gICAgICAgIERhdGVTdGFydDogKGQpPT5MdXJlLkRhdGUoZCkuRm9ybWF0KCdERC5NTS5ZWVlZJyksXHJcbiAgICAgICAgRGF0ZUZpbmlzaDogKGQpPT5MdXJlLkRhdGUoZCkuRm9ybWF0KCdERC5NTS5ZWVlZJyksXHJcbiAgICAgICAgJ1A1VjUnOiAoVXNlcklEKT0+e1xyXG4gICAgICAgICAgICBsZXQgVXNlciA9IEx1cmUuVXNlci5DYWNoZS5Vc2VyTGlzdC5XaGVyZSh4PT54LklEID09PSBVc2VySUQpLkZpcnN0T3JEZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGlmIChVc2VyID09PSBudWxsKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICfQndC1INC30LDQtNCw0L0gKic7XHJcbiAgICAgICAgICAgIHJldHVybiBVc2VyLk5hbWVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH1cclxufSk7IiwiV0Rhc2guV0Rhc2hTdW1tYXJ5LlBhcnQ2ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICBOYW1lOiAnRGFzaFBhcnQ2JyxcclxuICAgIFRhcmdldDogJy5zdW1tYXJ5LWNvbnRlbnQnLFxyXG4gICAgVHlwZTogJ2Rhc2gtc3VtbWFyeS1jb250ZW50JyxcclxuICAgIENvbnRyb2w6e1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtd2Rhc2gtc3VtbS1wNidcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuRGFzaGJvYXJkXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbmA8ZGl2PlxyXG4gICA8ZGl2IGNsYXNzPVwicGFydC1oZWFkZXJcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgc2VsZWN0ZWQgcDYxXCI+0J/QntCb0KzQl9Ce0JLQkNCi0JXQm9CYINCd0JAg0JTQntCc0KM8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cInJlcS10YWIgcDYyXCI+0KDQkNCR0J7QotCQINCf0JXQoNCV0JTQktCY0JbQldCaPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG4gICA8dGFibGUgY2xhc3M9XCJkYXRhLXRhYmxlIHA2MSBmaXhlZC1oZWlnaHRcIj5cclxuICAgICAgPHRoZWFkPlxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ0cm93IGhlYWQtMVwiPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QlNCw0YLQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCX0LDRgNC10LPQtdGB0YLRgNC40YDQvtCy0LDQvdC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JjQtyDQvdC40YUg0LjQvdCy0LDQu9C40LTQvtCyPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JLRi9C00LDQvdC+INC60L3QuNCzINC90LAg0LTQvtC8PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIzXCIgcm93c3Bhbj1cIjFcIiA+0KDQsNCx0L7RgtCwINGBINC/0LXRgNC10LTQstC40LbQutCw0LzQuDwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0yXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCf0L7RgdC10YnQtdC90LjQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCa0L7QvdGB0YPQu9GM0YLQsNGG0LjRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70LXQuTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCh0LXQvNC40L3QsNGAINC/0LXRgNC10LTQstC40LbQvdC40LrQvtCyPC90aD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgICB7eyNlYWNoIHA2MX19XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInt7I2lmICgkdGhpcy5RUVE9PT0tMikgPyAnc3BlY2lhbC1kYXknIDogJyd9fSB7eyNpZiAoJHRoaXMuSXNEYXlPZmYpID8gJ2RheS1vZmYnIDogJyd9fVwiPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiRFZcIj57e0RhdGVWYWx1ZX19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2VjJcIj57e1A2MVYyfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDZWM1wiPnt7UDYxVjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNlY0XCI+e3tQNjFWNH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2VjVcIj57e1A2MVY1fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDZWNlwiPnt7UDYxVjZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNlY3XCI+e3tQNjFWN319PC90ZD5cclxuICAgICAgICAgPC90cj5cclxuICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgIDwvdGJvZHk+XHJcbiAgIDwvdGFibGU+XHJcbiAgIDx0YWJsZSBjbGFzcz1cImRhdGEtdGFibGUgcDYyIGZpeGVkLWhlaWdodCBub25lXCI+XHJcbiAgICAgIDx0aGVhZD5cclxuICAgICAgICAgPHRyIGNsYXNzPVwidHJvdyBoZWFkLTFcIj5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjJcIiA+0JTQsNGC0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMlwiID7QmtC+0LvQuNGH0LXRgdGC0LLQviDQv9C10YDQtdC00LLQuNC20LXQujwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCn0LjRgdC70L4g0YfQuNGC0LDRgtC10LvQtdC5INCyINC90LjRhTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIyXCIgPtCS0YHQtdCz0L4g0LLRi9C00LDQvdC+INC60L3QuNCzPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxMVwiIHJvd3NwYW49XCIxXCIgPtCf0L4g0YLQtdC80LDRgtC40LrQtTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMlwiIHJvd3NwYW49XCIxXCIgPtCc0LDRgdGB0L7QstGL0LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjRjzwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgIDx0ciBjbGFzcz1cInRyb3cgaGVhZC0yXCI+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCe0J/QmzwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCVL9C30L08L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QotC10YXQvdC40LrQsDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtChL9GFPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JjRgdC60YPRgdGB0YLQstC+PC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHQv9C+0YDRgjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPjgxLjgzPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0KHQv9GA0LDQstC+0YfQvdC40LrQuDwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCU0LXRgi4g0LvQuNGCLdGA0LA8L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QpdGD0LQuINC70LjRgi3RgNCwPC90aD5cclxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XCIxXCIgcm93c3Bhbj1cIjFcIiA+0JTQvtC/0L7Qu9C90LjRgi48L3RoPlxyXG4gICAgICAgICAgICA8dGggY29sc3Bhbj1cIjFcIiByb3dzcGFuPVwiMVwiID7QmtC+0LvQuNGH0LXRgdGC0LLQvjwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjb2xzcGFuPVwiMVwiIHJvd3NwYW49XCIxXCIgPtCn0LjRgdC70L4g0L7QsdGB0LvRg9C20LXQvdC90YvRhTwvdGg+XHJcbiAgICAgICAgIDwvdHI+XHJcbiAgICAgIDwvdGhlYWQ+XHJcbiAgICAgIDx0Ym9keT5cclxuICAgICAgICAge3sjZWFjaCBwNjJ9fVxyXG4gICAgICAgICA8dHIgY2xhc3M9XCJ7eyNpZiAoJHRoaXMuUVFRPT09LTIpID8gJ3NwZWNpYWwtZGF5JyA6ICcnfX0ge3sjaWYgKCR0aGlzLklzRGF5T2ZmKSA/ICdkYXktb2ZmJyA6ICcnfX1cIj5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIkRWXCI+e3tEYXRlVmFsdWV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWMlwiPnt7UDYyVjJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWM1wiPnt7UDYyVjN9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWNFwiPnt7UDYyVjR9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWNVwiPnt7UDYyVjV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWNlwiPnt7UDYyVjZ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWN1wiPnt7UDYyVjd9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWOFwiPnt7UDYyVjh9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWOVwiPnt7UDYyVjl9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWMTBcIj57e1A2MlYxMH19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlYxMVwiPnt7UDYyVjExfX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDYyVjEyXCI+e3tQNjJWMTJ9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWMTNcIj57e1A2MlYxM319PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlYxNFwiPnt7UDYyVjE0fX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgZGF0YS1wcm9wPVwiUDYyVjE1XCI+e3tQNjJWMTV9fTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBkYXRhLXByb3A9XCJQNjJWMTZcIj57e1A2MlYxNn19PC90ZD5cclxuICAgICAgICAgICAgPHRkIGRhdGEtcHJvcD1cIlA2MlYxN1wiPnt7UDYyVjE3fX08L3RkPlxyXG4gICAgICAgICA8L3RyPlxyXG4gICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgPC90Ym9keT5cclxuICAgPC90YWJsZT5cclxuPC9kaXY+YCxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLlNlbGVjdGVkVGFiID0gdGhpcy5TZWxlY3QoJy5yZXEtdGFiLnNlbGVjdGVkJyk7XHJcbiAgICAgICAgdGhpcy5UX3A2MSA9IHRoaXMuU2VsZWN0KCd0YWJsZS5wNjEnKTtcclxuICAgICAgICB0aGlzLlRfcDYyID0gdGhpcy5TZWxlY3QoJ3RhYmxlLnA2MicpO1xyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5wYXJ0LWhlYWRlciAucmVxLXRhYicsIGUgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0ID09PSB0aGlzLlNlbGVjdGVkVGFiKSByZXR1cm47XHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWRUYWIuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgdGhpcy5TZWxlY3RlZFRhYiA9IGUuY3VycmVudFRhcmdldDtcclxuICAgICAgICAgICAgbGV0IGNsID0gZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdDtcclxuICAgICAgICAgICAgY2wuYWRkKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICBpZiAoY2wuY29udGFpbnMoJ3A2MScpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRfcDYxLmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wNjIuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjbC5jb250YWlucygncDYyJykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuVF9wNjEuY2xhc3NMaXN0LmFkZCgnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5UX3A2Mi5jbGFzc0xpc3QucmVtb3ZlKCdub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufSk7IiwibGV0IENoZWNrQm94U2VsZWN0b3IgPSByZXF1aXJlKCcuLi8uLi9fY29tbW9uL2ZpbHRlci1zZWxlY3Rvci9maWx0ZXItc2VsZWN0b3IuanMnKTtcclxuV0Rhc2guV0Rhc2hTdW1tYXJ5ID0gbmV3IEx1cmUuQ29udGVudCh7XHJcbiAgICAvL0Rpc2FibGVkOiB0cnVlLFxyXG4gICAgTmFtZTogJ1dEYXNoU3VtbWFyeScsXHJcbiAgICBUYXJnZXQ6ICcnLFxyXG4gICAgVHlwZTogJ3dkYXNoLWNvbnRlbnQnLFxyXG4gICAgQ29udHJvbDoge1xyXG4gICAgICAgIFRhcmdldDogJyNuYXYtd2Rhc2gtc3VtbWFyeSdcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuRGFzaGJvYXJkXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6XHJcbiAgICAgICAgYDxkaXYgY2xhc3M9XCJ3ZGFzaC1zdW1tYXJ5XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaWFyeS1icmVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpIGRhdGUtcmFuZ2VcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FsZW5kYXItaWNvblwiPiYjMTI4MTk4OzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRlc1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRlcy1yZXN1bHRcIj57e0RhdGVzUmVzdWx0fX08L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpIGwtcm93IGwtZmxleGEtY2VudGVyIGZsZXgtMTAwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdj7Qn9C+0LTRgNCw0LfQtNC10LvQtdC90LjQtTogJm5ic3A7Jm5ic3A7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtMTAwIGxpYnJhcnktdHJlZS1jb250cm9sIHN0cm9uZ1wiPl9fPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaSBidXR0b24taG9sZGVyIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGJ1dHRvbiBidG4tcmVmcmVzaFwiPtCe0LHQvdC+0LLQuNGC0Yw8L2J1dHRvbj4gXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaSBidXR0b24taG9sZGVyIGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGJ1dHRvbiBidXR0b24tZ2V0LXhsc1wiPtCt0LrRgdC/0L7RgNGCPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3VtbWFyeS1jb250ZW50XCI+PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3RvOiB7XHJcbiAgICAgICAgLy8gTW9udGhzOiAobmV3IEFycmF5KChuZXcgRGF0ZSkuZ2V0TW9udGgoKSArIDEpKS5TZWxlY3QoKHgsIGkpID0+ICh7TU51bTogaSArIDEsIE5hbWU6IEx1cmUuRGF0ZShMdXJlLkRhdGUoKS5Nb250aFN0YXJ0LnNldE1vbnRoKGkpKS5Gb3JtYXQoJ01NTU0gWVlZWScpLCBOb3c6IChuZXcgRGF0ZSkuZ2V0TW9udGgoKSA9PT0gaSA/ICdzZWxlY3RlZCcgOiAnJ30pKSxcclxuICAgICAgICBQYXJ0MTIzNjogW10sXHJcbiAgICAgICAgUGFydDQ6IFtdLFxyXG4gICAgICAgIFBhcnQ1OiBbXSxcclxuICAgICAgICBEYXRlc1Jlc3VsdDogWyhuZXcgRGF0ZSkuZ2V0TW9udGgoKSArIDFdXHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgIERhdGVzUmVzdWx0OiAoeCkgPT4geC5sZW5ndGggPiAwID8geC5tYXAobSA9PiBMdXJlLkRhdGUoTHVyZS5EYXRlKCkuTW9udGhTdGFydC5zZXRNb250aChtIC0gMSkpLkZvcm1hdCgnTU1NTScpKS5qb2luKCcsICcpIDogJ9Cd0LUg0LLRi9Cx0YDQsNC90L4nXHJcbiAgICB9LFxyXG4gICAgR2V0U2V0OiB7XHJcbiAgICAgICAgZ2V0IEN1cnJlbnRMaWJyYXJpZXMoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlByb3RvLkRhdGEuTGlicmFyeUlETGlzdFNlbGVjdGVkO1xyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdSRUZSRVNIJyk7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNWaXNpYmxlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuUmVmcmVzaERhdGEoKTtcclxuICAgICAgICAgICAgdGhpcy5pc1JlZnJlc2hlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnU0hPVycpO1xyXG4gICAgICAgIGlmICghdGhpcy5pc1JlZnJlc2hlZCkge1xyXG4gICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgdGhpcy5pc1JlZnJlc2hlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIExvYWQ6ICcnLFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBsZXQgbSA9IChuZXcgRGF0ZSgpKS5nZXRNb250aCgpO1xyXG4gICAgICAgIHRoaXMuRGF0ZVNlbGVjdG9yID0gdGhpcy5TZWxlY3QoJy5kYXRlcy1zZWxlY3RvcicpO1xyXG4gICAgICAgIHRoaXMuQ3VyRGF0ZXMgPSBbKChuZXcgRGF0ZSkuZ2V0TW9udGgoKSArIDEpICsgJyddO1xyXG5cclxuICAgICAgICB0aGlzLkJ1dHRvbkV4cG9ydCA9IHRoaXMuU2VsZWN0KCcuYnV0dG9uLWdldC14bHMnKTtcclxuICAgICAgICB0aGlzLkJ1dHRvblJlZnJlc2ggPSB0aGlzLlNlbGVjdCgnLmJ0bi1yZWZyZXNoJyk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaERhdGEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLkN1cnJlbnRMaWJyYXJpZXMubGVuZ3RoIDwgMSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgbGV0IFtkYXRlU3RhcnQsIGRhdGVFbmRdID0gW0x1cmUuRGF0ZShMdXJlLkRhdGUoKS5Nb250aFN0YXJ0LnNldE1vbnRoKHRoaXMuQ3VyRGF0ZXNbMF0gLSAxKSkuRGF0ZSwgTHVyZS5EYXRlKEx1cmUuRGF0ZSgpLk1vbnRoU3RhcnQuc2V0TW9udGgodGhpcy5DdXJEYXRlcy5MYXN0KCkgLSAxKSkuTW9udGhFbmRdO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhbZGF0ZVN0YXJ0LCBkYXRlRW5kXSk7XHJcblxyXG4gICAgICAgICAgICBhcGkuRGlhcnlfU3VtbWFyeV9QYXJ0MTIzNlZpZXdfR2V0KHRoaXMuQ3VycmVudExpYnJhcmllcywgKG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpLCB0aGlzLkN1ckRhdGVzLCB7fSlcclxuICAgICAgICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCByZXMgPSB7cDExOiBbXSwgcDEyOiBbXSwgcDIxOiBbXSwgcDIyOiBbXSwgcDIzOiBbXSwgcDM6IFtdLCBwNjE6IFtdLCBwNjI6IFtdfTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCByIG9mIGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChyLkRhdGVWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAtMTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByLkRhdGVWYWx1ZSA9ICfQoNCw0L3QtdC1JztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByLlFRUSA9IC0yO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgci5EYXRlVmFsdWUgPSAn0JzQtdGB0Y/Rhic7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgci5RUVEgPSAtMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTAxOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIuRGF0ZVZhbHVlID0gJ9Ch0YPQvNC80LAnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIuUVFRID0gLTI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IFtwMTEsIHAxMiwgcDIxLCBwMjIsIHAyMywgcDMsIHA2MSwgcDYyXSA9IChuZXcgQXJyYXkoOCkpLlNlbGVjdCh4ID0+ICh7RGF0ZVZhbHVlOiByLkRhdGVWYWx1ZSwgUVFROiByLlFRUSwgSXNEYXlPZmY6IHIuSXNEYXlPZmZ9KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGsgaW4gcilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyLmhhc093blByb3BlcnR5KGspKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoa1sxXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICcxJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlSW50KGsuc3Vic3RyKDMpKSA+PSAyMSA/IHAxMltrXSA9IHJba10gOiBwMTFba10gPSByW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJzInOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnNlSW50KGsuc3Vic3RyKDMpKSA+PSAzNClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwMjNba10gPSByW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnNlSW50KGsuc3Vic3RyKDMpKSA8PSAxOClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcDIxW2tdID0gcltrXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHAyMltrXSA9IHJba107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnMyc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwM1trXSA9IHJba107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnNic6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoa1syXSA9PT0gJzEnKSBwNjFba10gPSByW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGtbMl0gPT09ICcyJykgcDYyW2tdID0gcltrXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5wMTEucHVzaChwMTEpOyAgLy8gUDFWMiAuLiBQMVYyMCAtIHAxMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucDEyLnB1c2gocDEyKTsgIC8vIFAxVjIxIC4uIFAxVjM2IC0gcDEyXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5wMjEucHVzaChwMjEpOyAgLy8gUDJWMiAuLiBQMlYxOCAtIHAyMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucDIyLnB1c2gocDIyKTsgIC8vIFAyVjE5IC4uIFAyVjMzIC0gcDIyXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5wMjMucHVzaChwMjMpOyAgLy8gUDJWMzQgLi4gUDJWNDQgLSBwMjNcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnAzLnB1c2gocDMpOyAgICAvLyBQM1YyIC4uIFAzVjYgLSBwM1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucDYxLnB1c2gocDYxKTsgIC8vIFA2MVYyIC4uIFA2MVY3IC0gcDYxXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5wNjIucHVzaChwNjIpOyAgLy8gUDYyVjIgLi4gUDYyVjE3IC0gcDYyXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcnQxLlByb3RvLkRhdGEucDExID0gcmVzLnAxMTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcnQxLlByb3RvLkRhdGEucDEyID0gcmVzLnAxMjtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcnQxLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcnQyLlByb3RvLkRhdGEucDIxID0gcmVzLnAyMTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcnQyLlByb3RvLkRhdGEucDIyID0gcmVzLnAyMjtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcnQyLlByb3RvLkRhdGEucDIzID0gcmVzLnAyMztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcnQyLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlBhcnQzLlByb3RvLkRhdGEucDMgPSByZXMucDM7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0My5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0Ni5Qcm90by5EYXRhLnA2MSA9IHJlcy5wNjE7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0Ni5Qcm90by5EYXRhLnA2MiA9IHJlcy5wNjI7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0Ni5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gYXBpLkRpYXJ5X1N1bW1hcnlQYXJ0NF9HZXQodGhpcy5DdXJyZW50TGlicmFyaWVzLCBkYXRlU3RhcnQsIGRhdGVFbmQpKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0NC5Qcm90by5EYXRhLlBhcnQ0ID0gZGF0YS5maWx0ZXIoeCA9PiB0aGlzLkN1ckRhdGVzLmluZGV4T2YoKEx1cmUuRGF0ZSh4LkRhdGVTdGFydCkuTW9udGggKyAxKSArICcnKSAhPT0gLTEgfHwgdGhpcy5DdXJEYXRlcy5pbmRleE9mKChMdXJlLkRhdGUoeC5EYXRlRmluaXNoKS5Nb250aCArIDEpICsgJycpICE9PSAtMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0NC5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gYXBpLkRpYXJ5X1N1bW1hcnlQYXJ0NV9HZXQodGhpcy5DdXJyZW50TGlicmFyaWVzLCBkYXRlU3RhcnQsIGRhdGVFbmQpKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0NS5Qcm90by5EYXRhLlBhcnQ1ID0gZGF0YS5maWx0ZXIoeCA9PiB0aGlzLkN1ckRhdGVzLmluZGV4T2YoKEx1cmUuRGF0ZSh4LkRhdGVTdGFydCkuTW9udGggKyAxKSArICcnKSAhPT0gLTEgfHwgdGhpcy5DdXJEYXRlcy5pbmRleE9mKChMdXJlLkRhdGUoeC5EYXRlRmluaXNoKS5Nb250aCArIDEpICsgJycpICE9PSAtMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QYXJ0NS5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gdGhpcy5Mb2FkLkhpZGUoKSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaChlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuR2V0WExTID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgICAgICBsZXQgRHQgPSBMdXJlLkRhdGUodGhpcy5DdXJyZW50RGF0ZSk7XHJcbiAgICAgICAgICAgIC8vIGxldCBbZGF0ZVN0YXJ0LCBkYXRlRW5kXSA9IHRoaXMuQ3VyRGF0ZXM7XHJcbiAgICAgICAgICAgIGFwaS5EaWFyeV9TdW1tYXJ5X0dldFhMUyh0aGlzLkN1cnJlbnRMaWJyYXJpZXMsIChuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSwgdGhpcy5DdXJEYXRlcywge1xyXG4gICAgICAgICAgICAgICAgVGhlbjogKEJsb2IpID0+IEx1cmUuU2F2ZUJsb2IoQmxvYiwgYNCh0LLQvtC00L3QsNGPINGC0LDQsdC70LjRhtCwICR7RHQuRm9ybWF0KCdNTU1NIFlZWVknKX0ueGxzeGApLFxyXG4gICAgICAgICAgICAgICAgQ2F0Y2g6ICgpID0+IEx1cmUuU3lzdGVtLkVycm9yKCfQndC10LLQvtC30LzQvtC20L3QviDQv9C+0LvRg9GH0LjRgtGMINC+0YLRh9C10YInKSxcclxuICAgICAgICAgICAgICAgIEZpbmFsbHk6ICgpID0+IHRoaXMuTG9hZC5IaWRlKCksXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkRhdGVDaGFuZ2VkID0gZnVuY3Rpb24gKG1vbnRocykge1xyXG4gICAgICAgICAgICBpZiAobW9udGhzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdEYXRlc1Jlc3VsdCcsIG1vbnRocyk7XHJcbiAgICAgICAgICAgIHRoaXMuQ3VyRGF0ZXMgPSBtb250aHM7XHJcbiAgICAgICAgICAgIHRoaXMuUmVmcmVzaERhdGEoKTtcclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIG5ldyBMaWJyYXJ5VHJlZSh0aGlzLCB0aGlzLlNlbGVjdCgnLmxpYnJhcnktdHJlZS1jb250cm9sJyksIHtNdWx0aVNlbGVjdDogdHJ1ZX0pO1xyXG4gICAgICAgIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5SURMaXN0U2VsZWN0ZWQgPSBbTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0Lkxhc3QoKS5JRF07XHJcbiAgICAgICAgLy8gdGhpcy5EYXRlU2VsZWN0b3Iub25jaGFuZ2UgPSAoKSA9PiB0aGlzLlJlZnJlc2hEYXRhKCk7XHJcbiAgICAgICAgdGhpcy5CdXR0b25FeHBvcnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLkdldFhMUygpKTtcclxuICAgICAgICB0aGlzLkJ1dHRvblJlZnJlc2guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLlJlZnJlc2goKSk7XHJcblxyXG4gICAgICAgIHRoaXMuRGF0ZXNTZWxlY3RvciA9IENoZWNrQm94U2VsZWN0b3Ioe1xyXG4gICAgICAgICAgICB0YXJnZXQ6IHRoaXMuU2VsZWN0KCcuZGF0ZXMnKSxcclxuICAgICAgICAgICAgRGF0YTogKCkgPT4gKG5ldyBBcnJheSgobmV3IERhdGUpLmdldE1vbnRoKCkgKyAxKSkuU2VsZWN0KCh4LCBpKSA9PiAoe01OdW06IGkgKyAxLCBOYW1lOiBMdXJlLkRhdGUoTHVyZS5EYXRlKCkuTW9udGhTdGFydC5zZXRNb250aChpKSkuRm9ybWF0KCdNTU1NIFlZWVknKSwgQ2hlY2s6IGkgPT09IChuZXcgRGF0ZSkuZ2V0TW9udGgoKX0pKSxcclxuICAgICAgICAgICAgS2V5OiAnTU51bScsXHJcbiAgICAgICAgICAgIFZhbHVlOiAnTmFtZScsXHJcbiAgICAgICAgICAgIENvbnRyb2w6IHRoaXMuU2VsZWN0KCcuZGF0ZS1yYW5nZSAuZGF0ZXMtcmVzdWx0JyksXHJcbiAgICAgICAgICAgIG9uT0s6IHIgPT4gdGhpcy5EYXRlQ2hhbmdlZChyKSxcclxuICAgICAgICAgICAgY2hlY2tlZDogJ2tleSdcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcblxyXG5yZXF1aXJlKFwiLi9wYXJ0cy9wYXJ0MS5qc1wiKTtcclxucmVxdWlyZShcIi4vcGFydHMvcGFydDIuanNcIik7XHJcbnJlcXVpcmUoXCIuL3BhcnRzL3BhcnQzLmpzXCIpO1xyXG5yZXF1aXJlKFwiLi9wYXJ0cy9wYXJ0NC5qc1wiKTtcclxucmVxdWlyZShcIi4vcGFydHMvcGFydDUuanNcIik7XHJcbnJlcXVpcmUoXCIuL3BhcnRzL3BhcnQ2LmpzXCIpO1xyXG4iLCJXRGFzaC5XRGFzaE1haW4gPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIC8vRGlzYWJsZWQ6IHRydWUsXHJcbiAgICBOYW1lOiAnV0Rhc2hNYWluJyxcclxuICAgIFRhcmdldDogJycsXHJcbiAgICBUeXBlOiAnd2Rhc2gtY29udGVudCcsXHJcbiAgICBWaXNpYmxlOiB0cnVlLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi13ZGFzaC1tYWluJ1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0RpY3Rpb25hcnkuUm9sZS5EYXNoYm9hcmRdXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYFxyXG48ZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cImRpYXJ5LWJyZWFkIGwtcm93XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImxpIGwtcm93IGwtZmxleGEtY2VudGVyIGZsZXgtMTAwXCI+XHJcbiAgICAgICAgICAgIDxkaXY+0J/QvtC00YDQsNC30LTQtdC70LXQvdC40LU6ICZuYnNwOyZuYnNwOzwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC0xMDAgbGlicmFyeS10cmVlLWNvbnRyb2wgc3Ryb25nXCI+X188L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgXHJcbiAgICA8ZGl2IGNsYXNzPVwicGVyaW9kLXBpY2tlclwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwZXJpb2RzXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZXIgdG9kYXkgc2VsZWN0ZWRcIj7QodC10LPQvtC00L3RjzwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGVyIHllc3RlcmRheVwiPtCS0YfQtdGA0LA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBlciB3ZWVrXCI+0J3QtdC00LXQu9GPPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZXIgbW9udGhcIj7QnNC10YHRj9GGPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZXIgcXVhcnRlclwiPtCa0LLQsNGA0YLQsNC7PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZXIgeWVhclwiPtCT0L7QtDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwZXIgY2FsZW5kYXItcGVyaW9kXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpY29uXCI+JiMxMjgxOTg7PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRlc1wiPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZGFpbHktY2hhcnRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQtaGVhZGVyXCI+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LXdyYXBcIj48L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cInBpZXNcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicGllLXZpc2l0b3JzLXdyYXBcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LWhlYWRlclwiPtCf0L7RgdC10YnQsNC10LzQvtGB0YLRjDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGllLXZpc2l0b3JzXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGllIHZpc2l0b3JzLWNoYXJ0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhcnQtc3Vic2NyaXB0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Yi1pY29uIHBhcmFtLWljb25cIj48c3Bhbj57e1Zpc2l0b3JzLlN1bX19PC9zcGFuPjxzcGFuPnt7RGl2aWRlcn19PC9zcGFuPjxzcGFuPnt7VmlzaXRvcnMuVGFyZ2V0fX08L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Yi1jYXB0aW9uXCI+0LLRi9C/0L7Qu9C90LXQvdC40LU8YnI+0LPQvtGB0LfQsNC00LDQvdC40Y88L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtZXRlcnNcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLXRleHRcIj4mbmJzcDs8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGVyY2VudC0xMjNcIiBkYXRhLXR5cGU9XCJWaXNpdG9yc1wiPjxzcGFuIGNsYXNzPVwibnVtYmVycyBzZWxlY3RlZFwiPjEyMzwvc3Bhbj4gSSA8c3BhbiBjbGFzcz1cInBlcmNlbnRzXCI+JTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInYtMFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG5ldy1yZWdcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7QstC90L7QstGMINC30LDQv9C40YHQsNCy0YjQuNC10YHRjzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1Zpc2l0b3JzLk5ld319PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwidi0xXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgc3RhdGlvbmFyeVwiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtGB0YLQsNGG0LjQvtC90LDRgDwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1Zpc2l0b3JzLlN0YXRpb25hcnl9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInYtMlwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGV2ZW50c1wiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC80LXRgNC+0L/RgNC40Y/RgtC40Y88L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLXZhbHVlXCI+e3tWaXNpdG9ycy5FdmVudHN9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInYtM1wiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGNsdWJzXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0LrQu9GD0LHRizwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1Zpc2l0b3JzLkNsdWJzfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInBpZS1yZWdpc3RlcnMtZG91YmxlXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaGFydC1oZWFkZXJcIj7Ql9Cw0L/QuNGB0LDQstGI0LjQtdGB0Y88L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZS1yZWdpc3RlcnMtZG91YmxlLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwaWUtcmVnaXN0ZXJzLXdyYXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGllLXJlZ2lzdGVyc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGllIHNvY2lhbC1ncm91cHMtY2hhcnRcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LXN1YnNjcmlwdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Yi1pY29uIHBhcmFtLWljb25cIj48c3Bhbj57e1JlZ2lzdGVycy5TdW19fTwvc3Bhbj48c3Bhbj57e0RpdmlkZXJ9fTwvc3Bhbj48c3Bhbj57e1JlZ2lzdGVycy5UYXJnZXR9fTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWItY2FwdGlvblwiPtCy0YvQv9C+0LvQvdC10L3QuNC1PGJyPtCz0L7RgdC30LDQtNCw0L3QuNGPPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbWV0ZXJzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXItdGV4dFwiPtCh0L7RhtC40LDQu9GM0L3Ri9C1INCz0YDRg9C/0L/RizwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBlcmNlbnQtMTIzXCIgZGF0YS10eXBlPVwiUmVnaXN0ZXJzXCI+PHNwYW4gY2xhc3M9XCJudW1iZXJzIHNlbGVjdGVkXCI+MTIzPC9zcGFuPiBJIDxzcGFuIGNsYXNzPVwicGVyY2VudHNcIj4lPC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInNnLTBcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBwZW5zaW9uZXJcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7Qv9C10L3RgdC40L7QvdC10YDRizwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1JlZ2lzdGVycy5wZW5zaW9uZXJ9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic2ctMVwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGVtcGxveWVlXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0YHQu9GD0LbQsNGJ0LjQtTwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1JlZ2lzdGVycy5lbXBsb3llZX19PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIiBkYXRhLXR5cGU9XCJzZy0yXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgc3R1ZGVudHNcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7RgdGC0YPQtNC10L3RgtGLPC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7UmVnaXN0ZXJzLnN0dWRlbnRzfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInNnLTNcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBzY2hvb2xzXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0YjQutC+0LvRjNC90LjQutC4PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7UmVnaXN0ZXJzLnNjaG9vbHN9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic2ctNFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIHVuZGVyLXNjaG9vbFwiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC00L7RiNC60L7Qu9GM0L3QuNC60Lg8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLXZhbHVlXCI+e3tSZWdpc3RlcnMudW5kZXJfc2Nob29sfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cInNnLTVcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayByZGNoXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0YDQtNGHPC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7UmVnaXN0ZXJzLnJkY2h9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwic2ctNlwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG90aGVyc1wiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC/0YDQvtGH0LjQtTwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1JlZ2lzdGVycy5vdGhlcnN9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgYWxsLXJlZ2lzdGVyXCI+Jm5ic3A7PC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci1uYW1lXCI+0LLRgdC10LPQvjwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e1JlZ2lzdGVycy5TdW1QZXJjfX08L2Rpdj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZS1yZWdpc3RlcnMgcm90b3JcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2VuZGVyLWFnZS1jaGFydC13cmFwIHJvdG9yLWZsaXAgY3Vycl9zaWRlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzPVwicGllIGdlbmRlci1hZ2UtY2hhcnRcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtZXRlcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLXRleHQgZG91YmxlLWNoYXJ0XCI+0J/QvtC70L7QstC+0LfRgNCw0YHRgtC90LDRjyDRgdGC0YDRg9C60YLRg9GA0LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGVyY2VudC0xMjNcIiBkYXRhLXR5cGU9XCJHZW5kZXJBZ2VcIj48c3BhbiBjbGFzcz1cIm51bWJlcnMgc2VsZWN0ZWRcIj4xMjM8L3NwYW4+IEkgPHNwYW4gY2xhc3M9XCJwZXJjZW50c1wiPiU8L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cImdlbmRlci1hZ2UtdGFibGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cImhlYWRcIj48dGQgY2xhc3M9XCJuby1ib3JkZXJcIj48L3RkPjx0ZD7QltC10L3RidC40L3RizwvdGQ+PHRkPtCc0YPQttGH0LjQvdGLPC90ZD48dGQ+0JLRgdC10LPQvjwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjMwKzwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJnYS0wXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS53b21lbl8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJnYS0zXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgbWVuLTMwXCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2UubWVuXzMwfX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e0dlbmRlckFnZS5fMzB9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xNC0zMDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJnYS0xXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tMTQtMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS53b21lbl8xNF8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJnYS00XCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgbWVuLTE0LTMwXCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2UubWVuXzE0XzMwfX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e0dlbmRlckFnZS5fMTRfMzB9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4wLTE0PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiIGRhdGEtdHlwZT1cImdhLTJcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayB3b21lbi0xNFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLndvbWVuXzE0fX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiIGRhdGEtdHlwZT1cImdhLTVcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBtZW4tMTRcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS5tZW5fMTR9fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7R2VuZGVyQWdlLl8xNH19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPtCS0YHQtdCz0L48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwic2Vjb25kXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tYWxsXCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2Uud29tZW59fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwic2Vjb25kXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgbWVuLWFsbFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLm1lbn19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJuby1ib3JkZXJcIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2VuZGVyLWFnZS1jaGFydC0yLXdyYXAgcm90b3ItZmxpcCBuZXh0IG5leHRfc2lkZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz1cInBpZSBnZW5kZXItYWdlLWNoYXJ0LTJcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtZXRlcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYXJhbS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLXRleHQgZG91YmxlLWNoYXJ0XCI+0J/QvtC70L7QstC+0LfRgNCw0YHRgtC90LDRjyDRgdGC0YDRg9C60YLRg9GA0LA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGVyY2VudC0xMjNcIiBkYXRhLXR5cGU9XCJHZW5kZXJBZ2VcIj48c3BhbiBjbGFzcz1cIm51bWJlcnMgc2VsZWN0ZWRcIj4xMjM8L3NwYW4+IEkgPHNwYW4gY2xhc3M9XCJwZXJjZW50c1wiPiU8L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cImdlbmRlci1hZ2UtdGFibGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cImhlYWRcIj48dGQgY2xhc3M9XCJuby1ib3JkZXJcIj48L3RkPjx0ZD4wIC0gMTQ8L3RkPjx0ZD4xNCAtIDMwPC90ZD48dGQ+MzArPC90ZD48dGQ+0JLRgdC10LPQvjwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPtCW0LXQvdGJ0LjQvdGLPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiIGRhdGEtdHlwZT1cImFnLTRcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayB3b21lbi0xNFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLndvbWVuXzE0fX08L3NwYW4+PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJhZy0yXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tMTQtMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS53b21lbl8xNF8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJhZy0wXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgd29tZW4tMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS53b21lbl8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tHZW5kZXJBZ2Uud29tZW59fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD7QnNGD0LbRh9C40L3RizwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIiBkYXRhLXR5cGU9XCJhZy01XCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgbWVuLTE0XCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2UubWVuXzE0fX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiIGRhdGEtdHlwZT1cImFnLTNcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBtZW4tMTQtMzBcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS5tZW5fMTRfMzB9fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwic2Vjb25kXCIgZGF0YS10eXBlPVwiYWctMVwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG1lbi0zMFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLm1lbl8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tHZW5kZXJBZ2UubWVufX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+0JLRgdC10LPQvjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJzZWNvbmRcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBhbGwtMTRcIj4mbmJzcDs8L2Rpdj48c3Bhbj57e0dlbmRlckFnZS5fMTR9fTwvc3Bhbj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwic2Vjb25kXCI+PGRpdiBjbGFzcz1cImNvbG9yLW1hcmsgYWxsLTE0LTMwXCI+Jm5ic3A7PC9kaXY+PHNwYW4+e3tHZW5kZXJBZ2UuXzE0XzMwfX08L3NwYW4+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInNlY29uZFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGFsbC0zMFwiPiZuYnNwOzwvZGl2PjxzcGFuPnt7R2VuZGVyQWdlLl8zMH19PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJuby1ib3JkZXJcIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBcclxuICAgICAgICA8ZGl2IGNsYXNzPVwicGllLWJvb2stZ2l2aW5nLXdyYXBcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LWhlYWRlclwiPtCa0L3QuNCz0L7QstGL0LTQsNGH0LA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZS1ib29rLWdpdmluZ1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpZSBib29rLWdpdmluZy1jaGFydFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXJ0LXN1YnNjcmlwdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdWItaWNvbiBwYXJhbS1pY29uXCI+PHNwYW4+e3tCb29rR2l2aW5nLlN1bX19PC9zcGFuPjxzcGFuPnt7RGl2aWRlcn19PC9zcGFuPjxzcGFuPnt7Qm9va0dpdmluZy5UYXJnZXR9fTwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ViLWNhcHRpb25cIj7QstGL0L/QvtC70L3QtdC90LjQtTxicj7Qs9C+0YHQt9Cw0LTQsNC90LjRjzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFyYW1ldGVyc1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhcmFtLWhlYWRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXItdGV4dFwiPtCa0LDRgtC10LPQvtGA0LjQuDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZXJjZW50LTEyM1wiIGRhdGEtdHlwZT1cIkJvb2tHaXZpbmdcIj48c3BhbiBjbGFzcz1cIm51bWJlcnMgc2VsZWN0ZWRcIj4xMjM8L3NwYW4+IEkgPHNwYW4gY2xhc3M9XCJwZXJjZW50c1wiPiU8L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwiYmctMFwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIG5ldy1yZWdcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7QutC90LjQs9C4INC4INCx0YDQvtGI0Y7RgNGLPC9kaXY+PGRpdiBjbGFzcz1cInBhcmFtZXRlci12YWx1ZVwiPnt7Qm9va0dpdmluZy5Cb29rc319PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwiYmctMVwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIHN0YXRpb25hcnlcIj4mbmJzcDs8L2Rpdj48ZGl2IGNsYXNzPVwicGFyYW1ldGVyLW5hbWVcIj7QtNC+0LrRg9C80LXQvdGC0Ysg0Lgg0LrQvtC/0LjQuDwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e0Jvb2tHaXZpbmcuRG9jc0NvcGllc319PC9kaXY+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCIgZGF0YS10eXBlPVwiYmctMlwiPjxkaXYgY2xhc3M9XCJjb2xvci1tYXJrIGV2ZW50c1wiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtGB0L/RgNCw0LLQutC4INC4INC60L7QvdGB0YPQu9GM0YLQsNGG0LjQuDwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e0Jvb2tHaXZpbmcuQ29uc3VsdHN9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiIGRhdGEtdHlwZT1cImJnLTNcIj48ZGl2IGNsYXNzPVwiY29sb3ItbWFyayBjbHVic1wiPiZuYnNwOzwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItbmFtZVwiPtC/0YDQvtGH0LXQtTwvZGl2PjxkaXYgY2xhc3M9XCJwYXJhbWV0ZXItdmFsdWVcIj57e0Jvb2tHaXZpbmcuT3RoZXJ9fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBcclxuICAgIDwvZGl2PlxyXG4gICAgXHJcbjwvZGl2PmAsXHJcbiAgICBQcm90bzp7XHJcbiAgICAgICAgVmlzaXRvcnM6IHtcclxuICAgICAgICAgICAgTmV3OiAxMCxcclxuICAgICAgICAgICAgU3RhdGlvbmFyeTogMjAsXHJcbiAgICAgICAgICAgIEV2ZW50czogMzAsXHJcbiAgICAgICAgICAgIENsdWJzOiA0MCxcclxuICAgICAgICAgICAgVGFyZ2V0OiAzMDAsXHJcbiAgICAgICAgICAgIFN1bTogZnVuY3Rpb24oKSB7IGxldCBzID0gMDsgZm9yIChsZXQgayBpbiB0aGlzKSBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eShrKSAmJiBrICE9PSAnU3VtJyAmJiBrICE9PSAnVGFyZ2V0JykgcyArPSB0aGlzW2tdOyByZXR1cm4gczsgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgUmVnaXN0ZXJzOiB7XHJcbiAgICAgICAgICAgIHBlbnNpb25lcjogNSxcclxuICAgICAgICAgICAgZW1wbG95ZWU6IDEwLFxyXG4gICAgICAgICAgICBzdHVkZW50czogMTUsXHJcbiAgICAgICAgICAgIHNjaG9vbHM6IDIwLFxyXG4gICAgICAgICAgICB1bmRlcl9zY2hvb2w6IDE1LFxyXG4gICAgICAgICAgICByZGNoOiAyMCxcclxuICAgICAgICAgICAgb3RoZXJzOiAxNSxcclxuICAgICAgICAgICAgVGFyZ2V0OiA2MDAsXHJcbiAgICAgICAgICAgIFN1bTogZnVuY3Rpb24oKSB7IGxldCBzID0gMDsgZm9yIChsZXQgayBpbiB0aGlzKSBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eShrKSAmJiBrICE9PSAnU3VtJyAmJiBrICE9PSAnVGFyZ2V0JykgcyArPSB0aGlzW2tdOyByZXR1cm4gczsgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgR2VuZGVyQWdlOiB7XHJcbiAgICAgICAgICAgIHdvbWVuXzMwOiAxNSxcclxuICAgICAgICAgICAgd29tZW5fMTRfMzA6IDI1LFxyXG4gICAgICAgICAgICB3b21lbl8xNDogMzUsXHJcbiAgICAgICAgICAgIG1lbl8zMDogMjgsXHJcbiAgICAgICAgICAgIG1lbl8xNF8zMDogNDEsXHJcbiAgICAgICAgICAgIG1lbl8xNDogMjMsXHJcbiAgICAgICAgICAgIFN1bTogZnVuY3Rpb24oKSB7IGxldCBzID0gMDsgZm9yIChsZXQgayBpbiB0aGlzKSBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eShrKSkgayAhPT0gJ1N1bScgPyBzICs9IHRoaXNba10gOiBzICs9IDA7IHJldHVybiBzOyB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBCb29rR2l2aW5nOiB7XHJcbiAgICAgICAgICAgIEJvb2tzOiAxMSxcclxuICAgICAgICAgICAgRG9jc0NvcGllczogMjIsXHJcbiAgICAgICAgICAgIENvbnN1bHRzOiAzMyxcclxuICAgICAgICAgICAgT3RoZXI6IDQ0LFxyXG4gICAgICAgICAgICBUYXJnZXQ6IDMwMCxcclxuICAgICAgICAgICAgU3VtOiBmdW5jdGlvbigpIHsgbGV0IHMgPSAwOyBmb3IgKGxldCBrIGluIHRoaXMpIGlmICh0aGlzLmhhc093blByb3BlcnR5KGspICYmIGsgIT09ICdTdW0nICYmIGsgIT09ICdUYXJnZXQnKSBzICs9IHRoaXNba107IHJldHVybiBzOyB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBQZXJjZW50OiB7XHJcbiAgICAgICAgICAgIFZpc2l0b3JzOiBmYWxzZSxcclxuICAgICAgICAgICAgUmVnaXN0ZXJzOiBmYWxzZSxcclxuICAgICAgICAgICAgR2VuZGVyQWdlOiBmYWxzZSxcclxuICAgICAgICAgICAgQm9va0dpdmluZzogZmFsc2VcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUHJvcEZvcm1hdDoge1xyXG4gICAgICAgICdWaXNpdG9ycy5OZXcnOiAoeCwgcCkgPT4gcC5QZXJjZW50LlZpc2l0b3JzID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5WaXNpdG9ycy5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsIC8vINGE0YPQvdC60YbQuNGPINC00LvRjyDQv9C+0YHQtdGJ0LDQtdC80L7RgdGC0LhcclxuICAgICAgICAnVmlzaXRvcnMuU3RhdGlvbmFyeSc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuVmlzaXRvcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlZpc2l0b3JzLlN1bSgpICogMTAwKSkgKyAnICUnIDogeCxcclxuICAgICAgICAnVmlzaXRvcnMuRXZlbnRzJzogKHgsIHApID0+IHAuUGVyY2VudC5WaXNpdG9ycyA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuVmlzaXRvcnMuU3VtKCkgKiAxMDApKSArICcgJScgOiB4LFxyXG4gICAgICAgICdWaXNpdG9ycy5DbHVicyc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuVmlzaXRvcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlZpc2l0b3JzLlN1bSgpICogMTAwKSkgKyAnICUnIDogeCxcclxuICAgICAgICAnVmlzaXRvcnMuU3VtJzogKHgsIHApID0+IHAuVmlzaXRvcnMuU3VtKCksXHJcblxyXG4gICAgICAgICdSZWdpc3RlcnMucGVuc2lvbmVyJzogKHgsIHApID0+IHAuUGVyY2VudC5SZWdpc3RlcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlJlZ2lzdGVycy5TdW0oKSAqIDEwMCkpKyAnICUnIDogeCwgLy8g0YTRg9C90LrRhtC40Y8g0LTQu9GPINCg0LXQs9C40YHRgtGA0LDRhtC40LhcclxuICAgICAgICAnUmVnaXN0ZXJzLmVtcGxveWVlJzogKHgsIHApID0+IHAuUGVyY2VudC5SZWdpc3RlcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlJlZ2lzdGVycy5TdW0oKSAqIDEwMCkpKyAnICUnIDogeCxcclxuICAgICAgICAnUmVnaXN0ZXJzLnN0dWRlbnRzJzogKHgsIHApID0+IHAuUGVyY2VudC5SZWdpc3RlcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlJlZ2lzdGVycy5TdW0oKSAqIDEwMCkpKyAnICUnIDogeCxcclxuICAgICAgICAnUmVnaXN0ZXJzLnNjaG9vbHMnOiAoeCwgcCkgPT4gcC5QZXJjZW50LlJlZ2lzdGVycyA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuUmVnaXN0ZXJzLlN1bSgpICogMTAwKSkrICcgJScgOiB4LFxyXG4gICAgICAgICdSZWdpc3RlcnMudW5kZXJfc2Nob29sJzogKHgsIHApID0+IHAuUGVyY2VudC5SZWdpc3RlcnMgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLlJlZ2lzdGVycy5TdW0oKSAqIDEwMCkpKyAnICUnIDogeCxcclxuICAgICAgICAnUmVnaXN0ZXJzLnJkY2gnOiAoeCwgcCkgPT4gcC5QZXJjZW50LlJlZ2lzdGVycyA/ICh4ID09PSAwID8gMCA6ICBNYXRoLnJvdW5kKHggLyBwLlJlZ2lzdGVycy5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ1JlZ2lzdGVycy5vdGhlcnMnOiAoeCwgcCkgPT4gcC5QZXJjZW50LlJlZ2lzdGVycyA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuUmVnaXN0ZXJzLlN1bSgpICogMTAwKSkrICcgJScgOiB4LFxyXG4gICAgICAgICdSZWdpc3RlcnMuU3VtJzogKHgsIHApID0+IHAuUmVnaXN0ZXJzLlN1bSgpLFxyXG4gICAgICAgICdSZWdpc3RlcnMuU3VtUGVyYyc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuUmVnaXN0ZXJzID8gJzEwMCAlJyA6IHAuUmVnaXN0ZXJzLlN1bSgpLFxyXG5cclxuICAgICAgICAnR2VuZGVyQWdlLndvbWVuXzE0XzMwJzogKHgsIHApID0+IHAuUGVyY2VudC5HZW5kZXJBZ2UgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLkdlbmRlckFnZS5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsIC8vINGE0YPQvdC60YbQuNGPINC00LvRjyDQv9C+0LvQvtCy0L7Qt9GA0LDRgdGC0L3QvtC5INGB0YLRgNGD0LrRgtGD0YDRi1xyXG4gICAgICAgICdHZW5kZXJBZ2Uud29tZW5fMTQnOiAoeCwgcCkgPT4gcC5QZXJjZW50LkdlbmRlckFnZSA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuR2VuZGVyQWdlLlN1bSgpICogMTAwKSkgKyAnICUnIDogeCxcclxuICAgICAgICAnR2VuZGVyQWdlLm1lbl8zMCc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuR2VuZGVyQWdlID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5HZW5kZXJBZ2UuU3VtKCkgKiAxMDApKSArICcgJScgOiB4LFxyXG4gICAgICAgICdHZW5kZXJBZ2UubWVuXzE0XzMwJzogKHgsIHApID0+IHAuUGVyY2VudC5HZW5kZXJBZ2UgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLkdlbmRlckFnZS5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ0dlbmRlckFnZS5tZW5fMTQnOiAoeCwgcCkgPT4gcC5QZXJjZW50LkdlbmRlckFnZSA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuR2VuZGVyQWdlLlN1bSgpICogMTAwKSkgKyAnICUnIDogeCxcclxuICAgICAgICAnR2VuZGVyQWdlLndvbWVuXzMwJzogKHgsIHApID0+IHAuUGVyY2VudC5HZW5kZXJBZ2UgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLkdlbmRlckFnZS5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IHgsXHJcbiAgICAgICAgJ0dlbmRlckFnZS5fMTQnOiAoeCwgcCwgbikgPT4gKG4gPSAocC5HZW5kZXJBZ2UubWVuXzE0ICsgcC5HZW5kZXJBZ2Uud29tZW5fMTQpLCBwLlBlcmNlbnQuR2VuZGVyQWdlID8gKCBuID09PSAwID8gMCA6TWF0aC5yb3VuZChuIC8gcC5HZW5kZXJBZ2UuU3VtKCkgKiAxMDApKSArICcgJScgOiBuKSxcclxuICAgICAgICAnR2VuZGVyQWdlLl8xNF8zMCc6ICh4LCBwLCBuKSA9PiAobiA9IChwLkdlbmRlckFnZS5tZW5fMTRfMzAgKyBwLkdlbmRlckFnZS53b21lbl8xNF8zMCksIHAuUGVyY2VudC5HZW5kZXJBZ2UgPyAoIG4gPT09IDAgPyAwIDpNYXRoLnJvdW5kKG4gLyBwLkdlbmRlckFnZS5TdW0oKSAqIDEwMCkpICsgJyAlJyA6IG4pLFxyXG4gICAgICAgICdHZW5kZXJBZ2UuXzMwJzogKHgsIHAsIG4pID0+IChuID0gKHAuR2VuZGVyQWdlLm1lbl8zMCArIHAuR2VuZGVyQWdlLndvbWVuXzMwKSwgcC5QZXJjZW50LkdlbmRlckFnZSA/ICggbiA9PT0gMCA/IDAgOk1hdGgucm91bmQobiAvIHAuR2VuZGVyQWdlLlN1bSgpICogMTAwKSkgKyAnICUnIDogbiksXHJcbiAgICAgICAgJ0dlbmRlckFnZS5tZW4nOiAoeCwgcCwgbikgPT4gKG4gPSAocC5HZW5kZXJBZ2UubWVuXzE0ICsgcC5HZW5kZXJBZ2UubWVuXzE0XzMwICsgcC5HZW5kZXJBZ2UubWVuXzMwKSwgcC5QZXJjZW50LkdlbmRlckFnZSA/ICggbiA9PT0gMCA/IDAgOk1hdGgucm91bmQobiAvIHAuR2VuZGVyQWdlLlN1bSgpICogMTAwKSkgKyAnICUnIDogbiksXHJcbiAgICAgICAgJ0dlbmRlckFnZS53b21lbic6ICh4LCBwLCBuKSA9PiAobiA9IChwLkdlbmRlckFnZS53b21lbl8xNCArIHAuR2VuZGVyQWdlLndvbWVuXzE0XzMwICsgcC5HZW5kZXJBZ2Uud29tZW5fMzApLCBwLlBlcmNlbnQuR2VuZGVyQWdlID8gKCBuID09PSAwID8gMCA6TWF0aC5yb3VuZChuIC8gcC5HZW5kZXJBZ2UuU3VtKCkgKiAxMDApKSArICcgJScgOiBuKSxcclxuXHJcbiAgICAgICAgJ0Jvb2tHaXZpbmcuQm9va3MnOiAoeCwgcCkgPT4gcC5QZXJjZW50LkJvb2tHaXZpbmcgPyAoeCA9PT0gMCA/IDAgOiBNYXRoLnJvdW5kKHggLyBwLkJvb2tHaXZpbmcuU3VtKCkgKiAxMDApKSsgJyAlJyA6IHgsIC8vINGE0YPQvdC60YbQuNGPINC00LvRjyDQutC90LjQs9C+0LLRi9C00LDRh9C4XHJcbiAgICAgICAgJ0Jvb2tHaXZpbmcuRG9jc0NvcGllcyc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuQm9va0dpdmluZyA/ICh4ID09PSAwID8gMCA6IE1hdGgucm91bmQoeCAvIHAuQm9va0dpdmluZy5TdW0oKSAqIDEwMCkpKyAnICUnIDogeCxcclxuICAgICAgICAnQm9va0dpdmluZy5Db25zdWx0cyc6ICh4LCBwKSA9PiBwLlBlcmNlbnQuQm9va0dpdmluZyA/ICh4ID09PSAwID8gMCA6ICBNYXRoLnJvdW5kKHggLyBwLkJvb2tHaXZpbmcuU3VtKCkgKiAxMDApKSArICcgJScgOiB4LFxyXG4gICAgICAgICdCb29rR2l2aW5nLk90aGVyJzogKHgsIHApID0+IHAuUGVyY2VudC5Cb29rR2l2aW5nID8gKHggPT09IDAgPyAwIDogTWF0aC5yb3VuZCh4IC8gcC5Cb29rR2l2aW5nLlN1bSgpICogMTAwKSkrICcgJScgOiB4LFxyXG4gICAgICAgICdCb29rR2l2aW5nLlN1bSc6ICh4LCBwKSA9PiBwLkJvb2tHaXZpbmcuU3VtKCksXHJcbiAgICAgICAgJ0RpdmlkZXInOiAoeCwgcCkgPT4gKHAuQm9va0dpdmluZy5UYXJnZXQgPiA5OTk5IHx8IHAuUmVnaXN0ZXJzLlRhcmdldCA+IDk5OTkgfHwgcC5WaXNpdG9ycy5UYXJnZXQgPiA5OTk5KSA/IFwiPGRpdiBzdHlsZT0nYm9yZGVyLXRvcDogMnB4IHNvbGlkIGJsYWNrOyc+PC9kaXY+XCIgOiAnLydcclxuICAgIH0sXHJcbiAgICBHZXRTZXQ6IHtcclxuICAgICAgICBnZXQgQ3VycmVudExpYnJhcmllcygpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5Qcm90by5EYXRhLkxpYnJhcnlJRExpc3RTZWxlY3RlZDtcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IHAgPSB0aGlzLlByb3RvLkRhdGE7XHJcbiAgICAgICAgdGhpcy5HZXRDaGFydE9wdGlvbnMgPSBmdW5jdGlvbiAodGFyZ2V0LCBzZXJpZXMpIHtcclxuICAgICAgICAgICAgbGV0IHJlcyA9IHtcclxuICAgICAgICAgICAgICAgIFRhcmdldDogdGFyZ2V0LFxyXG4gICAgICAgICAgICAgICAgVHlwZTogJ3BpZScsXHJcbiAgICAgICAgICAgICAgICBMYWJlbHM6IHtWaXNpYmxlOiBmYWxzZX0sXHJcbiAgICAgICAgICAgICAgICBMZWdlbmQ6IHtWaXNpYmxlOiBmYWxzZX0sXHJcbiAgICAgICAgICAgICAgICBTZXJpZXM6IFsgXSxcclxuICAgICAgICAgICAgICAgIEdyaWQ6IHtWaXNpYmxlOiBmYWxzZSx9LFxyXG4gICAgICAgICAgICAgICAgVG9vbHRpcDoge1xyXG4gICAgICAgICAgICAgICAgICAgIEZvcm1hdDogKFRpcCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3VtID0gVGlwLkVwaXNvZGUuRGF0YS5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBlcmMgPSBNYXRoLmZsb29yKHN1bSA9PT0gMCA/IDAgOiAoVGlwLlZhbHVlIC8gc3VtKSAqIDEwMDAwKSAvIDEwMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGA8ZGl2IGNsYXNzPVwidGlwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpcC1iZ1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXAtdmFsdWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpcC1pY29uXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAke1RpcC5Db2xvcn1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpcC1sYWJlbFwiPiR7VGlwLk5hbWV9OiAke1RpcC5WYWx1ZX0gKCR7cGVyY30lKTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PmA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIEF4aXNZOiB7VmlzaWJsZTogZmFsc2V9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGZvciAobGV0IGQgb2Ygc2VyaWVzKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBMYWJlbHM6IHtEYXRhOiBkLkxhYmVsc30sXHJcbiAgICAgICAgICAgICAgICAgICAgRGF0YTogZC5EYXRhLFxyXG4gICAgICAgICAgICAgICAgICAgIENvbG9yczogZC5Db2xvcnMsXHJcbiAgICAgICAgICAgICAgICAgICAgVHlwZTogZC5UeXBlID8gZC5UeXBlIDogJ3JpbmcnLFxyXG4gICAgICAgICAgICAgICAgICAgIEFuZ2xlU3RhcnQ6IC05MFxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIGlmIChkLldpZHRoKSBlLldpZHRoID0gZC5XaWR0aDtcclxuICAgICAgICAgICAgICAgIGlmIChkLk1hcmdpbikgZS5NYXJnaW4gPSBkLk1hcmdpbjtcclxuICAgICAgICAgICAgICAgIHJlcy5TZXJpZXMucHVzaChlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gcmVzO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5DaGFydFZpc2l0b3JzID0gbmV3IEx1cmUuQ2hhcnQodGhpcy5HZXRDaGFydE9wdGlvbnMoXHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0KCcucGllLnZpc2l0b3JzLWNoYXJ0JyksXHJcbiAgICAgICAgICAgIFt7XHJcbiAgICAgICAgICAgICAgICBMYWJlbHM6IFsn0LLQvdC+0LLRjCDQt9Cw0L/QuNGB0LDQstGI0LjQtdGB0Y8nLCAn0YHRgtCw0YbQuNC+0L3QsNGAJywgJ9C80LXRgNC+0L/RgNC40Y/RgtC40Y8nLCAn0LrQu9GD0LHRiyddLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogW3AuVmlzaXRvcnMuTmV3LCBwLlZpc2l0b3JzLlN0YXRpb25hcnksIHAuVmlzaXRvcnMuRXZlbnRzLCBwLlZpc2l0b3JzLkNsdWJzXSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogWycjNDE2RTc1JywgJyM3OUNEREInLCAnIzcwODI4NCcsICcjNTFBMkE4J10sXHJcbiAgICAgICAgICAgICAgICBXaWR0aDogMzJcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbXCLQn9C+0YHQtdGC0LjQu9C4XCIsIFwi0J7RgdGC0LDQu9C+0YHRjFwiXSxcclxuICAgICAgICAgICAgICAgIERhdGE6IFtwLlZpc2l0b3JzLlN1bSgpLCBwLlZpc2l0b3JzLlRhcmdldCAtIHAuVmlzaXRvcnMuU3VtKCldLFxyXG4gICAgICAgICAgICAgICAgQ29sb3JzOiBbXCIjNURBODVEXCIsIFwiIzRBODQ1M1wiXSxcclxuICAgICAgICAgICAgICAgIFdpZHRoOiAyMixcclxuICAgICAgICAgICAgICAgIE1hcmdpbjogM1xyXG4gICAgICAgICAgICB9XVxyXG4gICAgICAgICkpO1xyXG4gICAgICAgIHRoaXMuQ2hhcnRWaXNpdG9ycy5Mb2FkID0gbmV3IEx1cmUuTG9hZCh7VGFyZ2V0OiB0aGlzLkNoYXJ0VmlzaXRvcnMuVGFyZ2V0fSk7XHJcblxyXG4gICAgICAgIC8vINCa0L3QuNCz0L7QstGL0LTQsNGH0LBcclxuICAgICAgICB0aGlzLkNoYXJ0Qm9va0dpdmluZyA9IG5ldyBMdXJlLkNoYXJ0KHRoaXMuR2V0Q2hhcnRPcHRpb25zKFxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLnBpZS5ib29rLWdpdmluZy1jaGFydCcpLFxyXG4gICAgICAgICAgICBbe1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbJ9C60L3QuNCz0Lgg0Lgg0LHRgNC+0YjRjtGA0YsnLCAn0LTQvtC60YPQvNC10L3RgtGLINC4INC60L7Qv9C40LgnLCAn0YHQv9GA0LDQstC60Lgg0Lgg0LrQvtC90YHRg9C70YzRgtCw0YbQuNC4JywgJ9C/0YDQvtGH0LXQtSddLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogW3AuQm9va0dpdmluZy5Cb29rcywgcC5Cb29rR2l2aW5nLkRvY3NDb3BpZXMsIHAuQm9va0dpdmluZy5Db25zdWx0cywgcC5Cb29rR2l2aW5nLk90aGVyXSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogWycjNDE2RTc1JywgJyM3OUNEREInLCAnIzcwODI4NCcsICcjNTFBMkE4J10sXHJcbiAgICAgICAgICAgICAgICBXaWR0aDogMzJcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbJ9Cy0YvQtNCw0L3QvicsICfQvtGB0YLQsNC70L7RgdGMJ10sXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBbcC5Cb29rR2l2aW5nLlN1bSgpLCBwLkJvb2tHaXZpbmcuVGFyZ2V0IC0gcC5Cb29rR2l2aW5nLlN1bSgpXSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogIFtcIiM1REE4NURcIiwgXCIjNEE4NDUzXCJdLFxyXG4gICAgICAgICAgICAgICAgV2lkdGg6IDIyLFxyXG4gICAgICAgICAgICAgICAgTWFyZ2luOiAzXHJcbiAgICAgICAgICAgIH1dXHJcbiAgICAgICAgKSk7XHJcbiAgICAgICAgdGhpcy5DaGFydEJvb2tHaXZpbmcuTG9hZCA9IG5ldyBMdXJlLkxvYWQoe1RhcmdldDogdGhpcy5DaGFydEJvb2tHaXZpbmcuVGFyZ2V0fSk7XHJcblxyXG4gICAgICAgIC8vINCh0L7RhtC40LDQu9GM0L3Ri9C1INCz0YDRg9C/0L/Ri1xyXG4gICAgICAgIHRoaXMuQ2hhcnRTb2NpYWxHcm91cHMgPSBuZXcgTHVyZS5DaGFydCh0aGlzLkdldENoYXJ0T3B0aW9ucyhcclxuICAgICAgICAgICAgdGhpcy5TZWxlY3QoJy5waWUuc29jaWFsLWdyb3Vwcy1jaGFydCcpLFxyXG4gICAgICAgICAgICBbe1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbJ9C/0LXQvdGB0LjQvtC90LXRgNGLJywgJ9GB0LvRg9C20LDRidC40LUnLCAn0YHRgtGD0LTQtdC90YLRiycsICfRiNC60L7Qu9GM0L3QuNC60LgnLCAn0LTQvtGI0LrQvtC70YzQvdC40LrQuCcsICfRgNC00YcnLCAn0L/RgNC+0YfQtdC1J10sXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBbcC5SZWdpc3RlcnMucGVuc2lvbmVyLCBwLlJlZ2lzdGVycy5lbXBsb3llZSwgcC5SZWdpc3RlcnMuc3R1ZGVudHMsIHAuUmVnaXN0ZXJzLnNjaG9vbHMsIHAuUmVnaXN0ZXJzLnVuZGVyX3NjaG9vbCwgcC5SZWdpc3RlcnMucmRjaCwgcC5SZWdpc3RlcnMub3RoZXJzXSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogWycjNTFBMUE3JywgJyM0MTZFNzUnLCAnIzc5Q0NEQScsICcjMjBBNEE0JywgJyM0Qjc3OTgnLCAnIzQwNjY3RicsICcjMzQ1NDY2J10sXHJcbiAgICAgICAgICAgICAgICBXaWR0aDogMzJcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbJ9Cy0YvQtNCw0L3QvicsICfQvtGB0YLQsNC70L7RgdGMJ10sXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBbcC5SZWdpc3RlcnMuU3VtKCksIHAuUmVnaXN0ZXJzLlRhcmdldCAtIHAuUmVnaXN0ZXJzLlN1bSgpXSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogW1wiIzVEQTg1RFwiLCBcIiM0QTg0NTNcIl0sXHJcbiAgICAgICAgICAgICAgICBXaWR0aDogMjIsXHJcbiAgICAgICAgICAgICAgICBNYXJnaW46IDNcclxuICAgICAgICAgICAgfV1cclxuICAgICAgICApKTtcclxuICAgICAgICB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzLkxvYWQgPSBuZXcgTHVyZS5Mb2FkKHtUYXJnZXQ6IHRoaXMuQ2hhcnRTb2NpYWxHcm91cHMuVGFyZ2V0fSk7XHJcblxyXG4gICAgICAgIC8vINCf0L7Qu9C+0LLQvtC30YDQsNGB0YLQvdCw0Y8g0YHRgtGA0YPQutGC0YPRgNCwIDFcclxuICAgICAgICB0aGlzLkNoYXJ0R2VuZGVyQWdlID0gbmV3IEx1cmUuQ2hhcnQodGhpcy5HZXRDaGFydE9wdGlvbnMoXHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0KCcucGllLmdlbmRlci1hZ2UtY2hhcnQnKSxcclxuICAgICAgICAgICAgW3tcclxuICAgICAgICAgICAgICAgIExhYmVsczogWyfQttC10L3RidC40L3RiyAzMCsnLCAn0LbQtdC90YnQuNC90YsgMTQtMzAnLCAn0LbQtdC90YnQuNC90YsgMC0xNCcsICfQvNGD0LbRh9C40L3RiyAzMCsnLCAn0LzRg9C20YfQuNC90YsgMTQtMzAnLCAn0LzRg9C20YfQuNC90YsgMC0xNCddLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogW3AuR2VuZGVyQWdlLndvbWVuXzMwLCBwLkdlbmRlckFnZS53b21lbl8xNF8zMCwgcC5HZW5kZXJBZ2Uud29tZW5fMTQsIHAuR2VuZGVyQWdlLm1lbl8zMCwgcC5HZW5kZXJBZ2UubWVuXzE0XzMwLCBwLkdlbmRlckFnZS5tZW5fMTRdLFxyXG4gICAgICAgICAgICAgICAgQ29sb3JzOiBbJyM5OTNGNzMnLCAnIzdGMzY2MycsICcjNjYyQzUzJywgJyMzNDU0NjYnLCAnIzQwNjY3RicsICcjNEI3Nzk5J10sXHJcbiAgICAgICAgICAgICAgICBXaWR0aDogMzJcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbJ9C20LXQvdGJ0LjQvdGLJywgJ9C80YPQttGH0LjQvdGLJ10sXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBbcC5HZW5kZXJBZ2Uud29tZW5fMzAgKyBwLkdlbmRlckFnZS53b21lbl8xNF8zMCArIHAuR2VuZGVyQWdlLndvbWVuXzE0LCBwLkdlbmRlckFnZS5tZW5fMzAgKyBwLkdlbmRlckFnZS5tZW5fMTRfMzAgKyBwLkdlbmRlckFnZS5tZW5fMTRdLFxyXG4gICAgICAgICAgICAgICAgQ29sb3JzOiBbJyNENzU2OUMnLCAnIzZDQTlFMCddLFxyXG4gICAgICAgICAgICAgICAgVHlwZTogJ3BpZScsXHJcbiAgICAgICAgICAgICAgICBNYXJnaW46IDNcclxuICAgICAgICAgICAgfV1cclxuICAgICAgICApKTtcclxuICAgICAgICB0aGlzLkNoYXJ0R2VuZGVyQWdlLkxvYWQgPSBuZXcgTHVyZS5Mb2FkKHtUYXJnZXQ6IHRoaXMuQ2hhcnRHZW5kZXJBZ2UuVGFyZ2V0fSk7XHJcblxyXG4gICAgICAgIC8vINCf0L7Qu9C+0LLQvtC30YDQsNGB0YLQvdCw0Y8g0YHRgtGA0YPQutGC0YPRgNCwIDJcclxuICAgICAgICB0aGlzLkNoYXJ0QWdlR2VuZGVyID0gbmV3IEx1cmUuQ2hhcnQodGhpcy5HZXRDaGFydE9wdGlvbnMoXHJcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0KCcucGllLmdlbmRlci1hZ2UtY2hhcnQtMicpLFxyXG4gICAgICAgICAgICBbe1xyXG4gICAgICAgICAgICAgICAgTGFiZWxzOiBbJ9C20LXQvdGJ0LjQvdGLIDMwKycsICfQvNGD0LbRh9C40L3RiyAzMCsnLCAn0LbQtdC90YnQuNC90YsgMTQtMzAnLCAn0LzRg9C20YfQuNC90YsgMTQtMzAnLCAn0LbQtdC90YnQuNC90YsgMC0xNCcsICfQvNGD0LbRh9C40L3RiyAwLTE0J10sXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBbcC5HZW5kZXJBZ2Uud29tZW5fMzAsIHAuR2VuZGVyQWdlLm1lbl8zMCwgcC5HZW5kZXJBZ2Uud29tZW5fMTRfMzAsIHAuR2VuZGVyQWdlLm1lbl8xNF8zMCwgcC5HZW5kZXJBZ2Uud29tZW5fMTQsIHAuR2VuZGVyQWdlLm1lbl8xNF0sXHJcbiAgICAgICAgICAgICAgICBDb2xvcnM6IFsnIzk5M0Y3MycsICcjMzQ1NDY2JywgJyM3RjM2NjMnLCAnIzQwNjY3RicsICcjNjYyQzUzJywgJyM0Qjc3OTknXSxcclxuICAgICAgICAgICAgICAgIFdpZHRoOiAzMlxyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBMYWJlbHM6IFsn0KHRgtCw0YDRiNC1IDMwJywgJ9Ce0YIgMTQg0LTQviAzMCcsICfQnNC70LDQtNGI0LUgMTQnXSxcclxuICAgICAgICAgICAgICAgIERhdGE6IFtwLkdlbmRlckFnZS53b21lbl8zMCArIHAuR2VuZGVyQWdlLm1lbl8zMCwgcC5HZW5kZXJBZ2Uud29tZW5fMTRfMzAgKyBwLkdlbmRlckFnZS5tZW5fMTRfMzAsIHAuR2VuZGVyQWdlLndvbWVuXzE0ICsgcC5HZW5kZXJBZ2UubWVuXzE0XSxcclxuICAgICAgICAgICAgICAgIENvbG9yczogWycjNzRCODdBJywgJyM1ODkyNTUnLCAnIzNDNUY0MiddLFxyXG4gICAgICAgICAgICAgICAgVHlwZTogJ3BpZScsXHJcbiAgICAgICAgICAgICAgICBNYXJnaW46IDNcclxuICAgICAgICAgICAgfV1cclxuICAgICAgICApKTtcclxuICAgICAgICB0aGlzLkNoYXJ0QWdlR2VuZGVyLkxvYWQgPSBuZXcgTHVyZS5Mb2FkKHtUYXJnZXQ6IHRoaXMuQ2hhcnRBZ2VHZW5kZXIuVGFyZ2V0fSk7XHJcblxyXG4gICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gQU5PVEhFUiBQUk9QUyBcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRQZXJpb2QgPSBbIEx1cmUuRGF0ZSgpLkRheVN0YXJ0LCBMdXJlLkRhdGUoKS5EYXlFbmQgXTtcclxuICAgICAgICB0aGlzLlNlbGVjdExpYnJhcnkgPSB0aGlzLlNlbGVjdCgnLmxpYi1saXN0Jyk7XHJcblxyXG4gICAgICAgIHRoaXMuRGFpbHlDaGFydCA9IG5ldyBMdXJlLkNoYXJ0KHtcclxuICAgICAgICAgICAgVGFyZ2V0OiB0aGlzLlNlbGVjdCgnLmRhaWx5LWNoYXJ0IC5jaGFydC13cmFwJyksXHJcbiAgICAgICAgICAgIFR5cGU6ICdMaW5lJyxcclxuICAgICAgICAgICAgTmFtZTogJ9Ch0LLQvtC00L3Ri9C5INCz0YDQsNGE0LjQuicsXHJcbiAgICAgICAgICAgIExlZ2VuZDoge1Bvc2l0aW9uOiAncmlnaHQnfSxcclxuICAgICAgICAgICAgQXhpc1g6IHtEYXRhOiAobmV3IEFycmF5KDEyKSkuU2VsZWN0KChhLCBiKSA9PiBMdXJlLkRhdGUobmV3IERhdGUoMjAxOCwgYikpLkZvcm1hdCgnTU1NTScpKX0sXHJcbiAgICAgICAgICAgIFNlcmllczogW3tcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+0YHQtdGJ0LDQtdC80L7RgdGC0YwnLFxyXG4gICAgICAgICAgICAgICAgQ29sb3I6ICcjNjU1OTlFJyxcclxuICAgICAgICAgICAgICAgIERhdGE6IChuZXcgQXJyYXkoMTIpKS5TZWxlY3QoKGEsIGIpID0+IGIgJSA1KSxcclxuICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CX0LDQv9C40YHRjCcsXHJcbiAgICAgICAgICAgICAgICBDb2xvcjogJyM1M0FBNjInLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogKG5ldyBBcnJheSgxMikpLlNlbGVjdCgoYSwgYikgPT4gYiAlIDcpLFxyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0JrQvdC40LPQvtCy0YvQtNCw0YfQsCcsXHJcbiAgICAgICAgICAgICAgICBDb2xvcjogJyM5RjQ5NDQnLFxyXG4gICAgICAgICAgICAgICAgRGF0YTogKG5ldyBBcnJheSgxMikpLlNlbGVjdCgoYSwgYikgPT4gYiAlIDkpLFxyXG4gICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgVG9vbHRpcDoge1xyXG4gICAgICAgICAgICAgICAgRm9ybWF0OiBUaXAgPT5cclxuICAgICAgICAgICAgICAgICAgICBgPGRpdiBjbGFzcz1cInRpcFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLWJnXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXAtdmFsdWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXAtaWNvblwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogJHtUaXAuRXBpc29kZS5Db2xvcn1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGlwLWxhYmVsXCI+JHtUaXAuVmFsdWVYfTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3dcIj4ke1RpcC5FcGlzb2RlLk5hbWV9OiAke1RpcC5WYWx1ZX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5EYWlseUNoYXJ0LkxvYWQgPSBuZXcgTHVyZS5Mb2FkKHtUYXJnZXQ6IHRoaXMuRGFpbHlDaGFydC5UYXJnZXR9KTtcclxuICAgICAgICAvLyB0aGlzLkRhaWx5Q2hhcnQuUmVkcmF3KCk7XHJcbiAgICB9LFxyXG4gICAgU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmlzVmlzaWJsZSlcclxuICAgICAgICAgICAgdGhpcy5DaGFydHNVcGRhdGUoKTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB0aGlzLnNlbGVjdFBlcmlvZCA9IGZ1bmN0aW9uIChwZXJpb2QsIGUpIHtcclxuICAgICAgICAgICAgdGhpcy5TZWxlY3QoJy5wZXIuc2VsZWN0ZWQnKS5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICBlLmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZGF0ZV9zdGFydCA9IEx1cmUuRGF0ZSgpO1xyXG4gICAgICAgICAgICBsZXQgZGF0ZV9lbmQgPSBMdXJlLkRhdGUoKTtcclxuICAgICAgICAgICAgaWYgKCh0eXBlb2YgcGVyaW9kKSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuRGF0ZVBpY2tlci5SZXNldCgpO1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChwZXJpb2QpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICd0b2RheSc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQgPSBkYXRlX3N0YXJ0LkRheVN0YXJ0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX2VuZCA9IGRhdGVfZW5kLkRheUVuZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAneWVzdGVyZGF5JzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZV9zdGFydC5BZGREYXlzKC0xKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQuQWRkRGF5cygtMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQgPSBkYXRlX3N0YXJ0LkRheVN0YXJ0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX2VuZCA9IGRhdGVfZW5kLkRheUVuZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnd2Vlayc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQgPSBkYXRlX3N0YXJ0LldlZWtTdGFydDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZV9lbmQgPSBkYXRlX2VuZC5XZWVrRW5kO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdtb250aCc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQgPSBkYXRlX3N0YXJ0Lk1vbnRoU3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfZW5kID0gZGF0ZV9lbmQuTW9udGhFbmQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ3F1YXJ0ZXInOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbW9udGg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjbSA9IGRhdGVfc3RhcnQuRGF0ZS5nZXRNb250aCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY20gPD0gMilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoY20gPj0gMyAmJiBjbSA8PSA1KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9udGggPSAzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChjbSA+PSA2ICYmIGNtIDw9IDkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb250aCA9IDY7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgbW9udGggPSA5O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX3N0YXJ0ID0gTHVyZS5EYXRlKG5ldyBEYXRlKGRhdGVfc3RhcnQuRGF0ZS5nZXRGdWxsWWVhcigpLCBtb250aCkpLk1vbnRoU3RhcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVfZW5kID0gTHVyZS5EYXRlKG5ldyBEYXRlKGRhdGVfZW5kLkRhdGUuZ2V0RnVsbFllYXIoKSwgbW9udGggKyAyKSkuTW9udGhFbmQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ3llYXInOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX3N0YXJ0ID0gbmV3IERhdGUoZGF0ZV9zdGFydC5EYXRlLmdldEZ1bGxZZWFyKCksIDAsIDEsIDAsIDAsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlX2VuZCA9IG5ldyBEYXRlKGRhdGVfZW5kLkRhdGUuZ2V0RnVsbFllYXIoKSwgMTEsIDMxLCAyMywgNTksIDU5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkUGVyaW9kID0gW2RhdGVfc3RhcnQsIGRhdGVfZW5kXTtcclxuICAgICAgICAgICAgICAgIC8vIEx1cmUuU3lzdGVtLk5vdGljZShkYXRlX3N0YXJ0LkZvcm1hdCgnRCBNTU1NIFlZWVknLCB0cnVlKSArICcgLSAnICsgZGF0ZV9lbmQuRm9ybWF0KCdEIE1NTU0gWVlZWScsIHRydWUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGRhdGVfc3RhcnQgPSBMdXJlLkRhdGUocGVyaW9kWzBdKS5EYXlTdGFydDtcclxuICAgICAgICAgICAgICAgIGRhdGVfZW5kID0gTHVyZS5EYXRlKHBlcmlvZFsxXSkuRGF5RW5kO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFBlcmlvZCA9IFtkYXRlX3N0YXJ0LCBkYXRlX2VuZF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhwZXJpb2QsIHRoaXMuc2VsZWN0ZWRQZXJpb2QpO1xyXG4gICAgICAgICAgICB0aGlzLkNoYXJ0c1VwZGF0ZSgpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5DaGFuZ2VQZXJjZW50MTIzID0gZnVuY3Rpb24gKGVsZW0pIHtcclxuICAgICAgICAgICAgbGV0IHR5cGUgPSBlbGVtLmRhdGFzZXRbJ3R5cGUnXTtcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlBlcmNlbnRbdHlwZV0gPSAhdGhpcy5Qcm90by5EYXRhLlBlcmNlbnRbdHlwZV07XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ0dlbmRlckFnZScpXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBlIG9mIHRoaXMuU2VsZWN0QWxsKCcucGVyY2VudC0xMjNbZGF0YS10eXBlPVwiJyArIHR5cGUgKyAnXCJdJykpIHtcclxuICAgICAgICAgICAgICAgICAgICBlLmNoaWxkcmVuWzBdLmNsYXNzTGlzdC50b2dnbGUoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZS5jaGlsZHJlblsxXS5jbGFzc0xpc3QudG9nZ2xlKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGVsZW0uY2hpbGRyZW5bMF0uY2xhc3NMaXN0LnRvZ2dsZSgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgIGVsZW0uY2hpbGRyZW5bMV0uY2xhc3NMaXN0LnRvZ2dsZSgnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhlbGVtLCB0eXBlKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuQ2hhcnRzVXBkYXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgcGx1c19vcl96ZXJvID0gKHggPSBbXSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgayBpbiB4KVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh4Lmhhc093blByb3BlcnR5KGspICYmIHhba10gPCAwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB4W2tdID0gMDtcclxuICAgICAgICAgICAgICAgIHJldHVybiB4O1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgbGV0IGRhdGVfc3RhcnQgPSBuZXcgRGF0ZSh0aGlzLnNlbGVjdGVkUGVyaW9kWzBdKTtcclxuICAgICAgICAgICAgbGV0IGRhdGVfZW5kID0gbmV3IERhdGUodGhpcy5zZWxlY3RlZFBlcmlvZFsxXSk7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdEQVRFUzogJywgZGF0ZV9zdGFydCwgZGF0ZV9lbmQpO1xyXG4gICAgICAgICAgICBsZXQgbGliID0gdGhpcy5DdXJyZW50TGlicmFyaWVzO1xyXG4gICAgICAgICAgICAvLyDQn9C+0YHQtdGJ0LDQtdC80L7RgdGC0YxcclxuICAgICAgICAgICAgdGhpcy5DaGFydFZpc2l0b3JzLkxvYWQuU2hvdygpO1xyXG4gICAgICAgICAgICBhcGkuRGFzaF9WaXNpdGF0aW9uX0dldChsaWIsIGRhdGVfc3RhcnQsIGRhdGVfZW5kKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oXHJcbiAgICAgICAgICAgICAgICAgICAgciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHIgPSBwbHVzX29yX3plcm8ocik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5Qcm90by5EYXRhLlZpc2l0b3JzLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOZXc6IHIuUmVnaXN0ZXJlZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YXRpb25hcnk6IHIuU3RhdGlvbmFyeSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50czogci5FdmVudCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENsdWJzOiByLkNsdWIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUYXJnZXQ6IHIuQ291bnRQbGFuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSB0aGlzLlByb3RvLkRhdGEuVmlzaXRvcnM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRWaXNpdG9ycy5PcHRpb25zLlNlcmllc1swXS5EYXRhID0gW3AuTmV3LCBwLlN0YXRpb25hcnksIHAuRXZlbnRzLCBwLkNsdWJzXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydFZpc2l0b3JzLk9wdGlvbnMuU2VyaWVzWzFdLkRhdGEgPSBwbHVzX29yX3plcm8oW3AuU3VtKCksIHAuVGFyZ2V0IC0gcC5TdW0oKV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0VmlzaXRvcnMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRWaXNpdG9ycy5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiAgICAgICAgICAgIC8vINCX0LDQv9C40YHQsNCy0YjQuNC10YHRjyDQodC+0YbQuNCw0LvRjNC90YvQtSDQs9GA0YPQv9C/0YtcclxuICAgICAgICAgICAgdGhpcy5DaGFydFNvY2lhbEdyb3Vwcy5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgYXBpLkRhc2hfVmlzaXRSZWdpc3RlcmVkX0dldChsaWIsIGRhdGVfc3RhcnQsIGRhdGVfZW5kKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oXHJcbiAgICAgICAgICAgICAgICAgICAgciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHIgPSBwbHVzX29yX3plcm8ocik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5Qcm90by5EYXRhLlJlZ2lzdGVycywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVuc2lvbmVyOiByLlJldGlyZWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbXBsb3llZTogci5TZXJ2YW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R1ZGVudHM6IHIuU3R1ZGVudCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjaG9vbHM6IHIuU2Nob29sZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlcl9zY2hvb2w6IHIuUHJlc2Nob29sZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZGNoOiByLlJEQyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG90aGVyczogci5PdGhlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRhcmdldDogci5Db3VudFBsYW5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHRoaXMuUHJvdG8uRGF0YS5SZWdpc3RlcnM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRTb2NpYWxHcm91cHMuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YSA9IFtwLnBlbnNpb25lciwgcC5lbXBsb3llZSwgcC5zdHVkZW50cywgcC5zY2hvb2xzLCBwLnVuZGVyX3NjaG9vbCwgcC5yZGNoLCBwLm90aGVyc107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRTb2NpYWxHcm91cHMuT3B0aW9ucy5TZXJpZXNbMV0uRGF0YSA9IHBsdXNfb3JfemVybyhbcC5TdW0oKSwgcC5UYXJnZXQgLSBwLlN1bSgpXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRTb2NpYWxHcm91cHMuTG9hZC5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRTb2NpYWxHcm91cHMuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAvLyDQl9Cw0L/QuNGB0LDQstGI0LjQtdGB0Y8g0J/QvtC70L7QstC+0LfRgNCw0YHRgtC90LDRjyDRgdGC0YDRg9C60YLRg9GA0LBcclxuICAgICAgICAgICAgdGhpcy5DaGFydEdlbmRlckFnZS5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgdGhpcy5DaGFydEFnZUdlbmRlci5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgYXBpLkRhc2hfVmlzaXRHZW5nZXJBZ2VfR2V0KGxpYiwgZGF0ZV9zdGFydCwgZGF0ZV9lbmQpXHJcbiAgICAgICAgICAgICAgICAudGhlbihcclxuICAgICAgICAgICAgICAgICAgICByID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgciA9IHBsdXNfb3JfemVybyhyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLlByb3RvLkRhdGEuR2VuZGVyQWdlLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b21lbl8zMDogci5GZW1hbGVfT3ZlcjMwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd29tZW5fMTRfMzA6IHIuRmVtYWxlXzMwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd29tZW5fMTQ6IHIuRmVtYWxlXzE0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVuXzMwOiByLk1hbGVfT3ZlcjMwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVuXzE0XzMwOiByLk1hbGVfMzAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZW5fMTQ6IHIuTWFsZV8xNFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwID0gdGhpcy5Qcm90by5EYXRhLkdlbmRlckFnZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEdlbmRlckFnZS5PcHRpb25zLlNlcmllc1swXS5EYXRhID0gW3Aud29tZW5fMzAsIHAud29tZW5fMTRfMzAsIHAud29tZW5fMTQsIHAubWVuXzMwLCBwLm1lbl8xNF8zMCwgcC5tZW5fMTRdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0R2VuZGVyQWdlLk9wdGlvbnMuU2VyaWVzWzFdLkRhdGEgPSBbcC53b21lbl8zMCArIHAud29tZW5fMTRfMzAgKyBwLndvbWVuXzE0LCBwLm1lbl8zMCArIHAubWVuXzE0XzMwICsgcC5tZW5fMTRdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0QWdlR2VuZGVyLk9wdGlvbnMuU2VyaWVzWzBdLkRhdGEgPSBbcC53b21lbl8zMCwgcC5tZW5fMzAsIHAud29tZW5fMTRfMzAsIHAubWVuXzE0XzMwLCBwLndvbWVuXzE0LCBwLm1lbl8xNF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRBZ2VHZW5kZXIuT3B0aW9ucy5TZXJpZXNbMV0uRGF0YSA9IFtwLndvbWVuXzMwICsgcC5tZW5fMzAsIHAud29tZW5fMTRfMzAgKyBwLm1lbl8xNF8zMCwgcC53b21lbl8xNCArIHAubWVuXzE0XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEdlbmRlckFnZS5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEFnZUdlbmRlci5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEdlbmRlckFnZS5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRBZ2VHZW5kZXIuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAvLyDQmtC90LjQs9C+0LLRi9C00LDRh9CwXHJcbiAgICAgICAgICAgIHRoaXMuQ2hhcnRCb29rR2l2aW5nLkxvYWQuU2hvdygpO1xyXG4gICAgICAgICAgICBhcGkuRGFzaF9HaXZpbmdCb29rX0dldChsaWIsIGRhdGVfc3RhcnQsIGRhdGVfZW5kKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oXHJcbiAgICAgICAgICAgICAgICAgICAgciA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHIgPSBwbHVzX29yX3plcm8ocik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5Qcm90by5EYXRhLkJvb2tHaXZpbmcsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJvb2tzOiByLkdpdmluZ0Jvb2ssXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEb2NzQ29waWVzOiByLkdpdmluZ0RvYyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbnN1bHRzOiByLkdpdmluZ0NvbnN1bHQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPdGhlcjogci5HaXZpbmdPdGhlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRhcmdldDogci5Db3VudFBsYW5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHRoaXMuUHJvdG8uRGF0YS5Cb29rR2l2aW5nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0Qm9va0dpdmluZy5PcHRpb25zLlNlcmllc1swXS5EYXRhID0gW3AuQm9va3MsIHAuRG9jc0NvcGllcywgcC5Db25zdWx0cywgcC5PdGhlcl07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhcnRCb29rR2l2aW5nLk9wdGlvbnMuU2VyaWVzWzFdLkRhdGEgPSBwbHVzX29yX3plcm8oW3AuU3VtKCksIHAuVGFyZ2V0IC0gcC5TdW0oKV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYXJ0Qm9va0dpdmluZy5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFydEJvb2tHaXZpbmcuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAvLyDQodCy0L7QtNC90YvQuSDQs9GA0LDRhNC40LpcclxuICAgICAgICAgICAgbGV0IGRhdGVfZGlmZiA9IE1hdGguZmxvb3IoKGRhdGVfZW5kLmdldFRpbWUoKSAtIGRhdGVfc3RhcnQuZ2V0VGltZSgpKSAvIDEwMDApO1xyXG4gICAgICAgICAgICBpZiAoZGF0ZV9kaWZmIDwgOTAwMDApXHJcbiAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuVGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ25vbmUnKTtcclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuVGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuRGFpbHlDaGFydC5Mb2FkLlNob3coKTtcclxuICAgICAgICAgICAgICAgIGFwaS5EYXNoX1N1bW1hcnlHcmFwaF9HZXQobGliLCBMdXJlLkRhdGUoZGF0ZV9zdGFydCksIEx1cmUuRGF0ZShkYXRlX2VuZCkpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGxhYmVscztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRlX2RpZmYgLyA4NjQwMCA8IDMyKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscyA9IHIubWFwKGEgPT4gTHVyZS5EYXRlKGEuRGF0ZSkuRm9ybWF0KCdEIE1NTU0nLCB0cnVlKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxzID0gci5tYXAoYSA9PiBMdXJlLkRhdGUoYS5EYXRlKS5Gb3JtYXQoJ01NTU0gWVlZWScsIGZhbHNlKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuT3B0aW9ucy5TZXJpZXNbMF0uRGF0YSA9IHIubWFwKGEgPT4gYS5WaXNpdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuT3B0aW9ucy5TZXJpZXNbMV0uRGF0YSA9IHIubWFwKGEgPT4gYS5SZWdpc3RyYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0Lk9wdGlvbnMuU2VyaWVzWzJdLkRhdGEgPSByLm1hcChhID0+IGEuQm9va0dpdmluZyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0Lk9wdGlvbnMuQXhpc1guRGF0YSA9IGxhYmVscztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5EYWlseUNoYXJ0Lk9wdGlvbnMuR3JhcGgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0LlJlZHJhdygpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuRGFpbHlDaGFydC5PcHRpb25zLkdyYXBoWzBdLkF4aXNYLkRhdGEgPSBsYWJlbHM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkRhaWx5Q2hhcnQuT3B0aW9ucy5HcmFwaFsxXS5BeGlzWC5EYXRhID0gbGFiZWxzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5EYWlseUNoYXJ0Lk9wdGlvbnMuR3JhcGhbMl0uQXhpc1guRGF0YSA9IGxhYmVscztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuRGFpbHlDaGFydC5Mb2FkLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuRGFpbHlDaGFydC5SZWRyYXcoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIG5ldyBMaWJyYXJ5VHJlZSh0aGlzLCB0aGlzLlNlbGVjdCgnLmxpYnJhcnktdHJlZS1jb250cm9sJykpO1xyXG4gICAgICAgIHRoaXMuUHJvdG8uRGF0YS5MaWJyYXJ5SURMaXN0U2VsZWN0ZWQgPSBbTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0Lkxhc3QoKS5JRF07XHJcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuRGF0ZVBpY2tlciA9IG5ldyBMdXJlLlBlcmlvZFBpY2tlcih7XHJcbiAgICAgICAgICAgIFRhcmdldDogJy5jYWxlbmRhci1wZXJpb2QgLmRhdGVzJyxcclxuICAgICAgICAgICAgT25Db25maXJtOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdFBlcmlvZCh0aGlzLkRhdGUsIHRoaXMuVGFyZ2V0LnBhcmVudEVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5EYXRlUGlja2VyLlJlc2V0KCk7XHJcblxyXG4gICAgICAgIGxldCBjdXJyID0gdGhpcy5TZWxlY3QoJy5jdXJyX3NpZGUnKTtcclxuICAgICAgICBsZXQgbmV4dCA9IHRoaXMuU2VsZWN0KCcubmV4dF9zaWRlJyk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcuZG91YmxlLWNoYXJ0JywgKCkgPT4ge1xyXG4gICAgICAgICAgICBjdXJyLmNsYXNzTGlzdC50b2dnbGUoJ2ZsaXBwZWQnKTtcclxuICAgICAgICAgICAgbmV4dC5jbGFzc0xpc3QudG9nZ2xlKCduZXh0Jyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjbGljaycsICcucGVyaW9kcyAucGVyJywgKGUpID0+IHRoaXMuc2VsZWN0UGVyaW9kKGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3RbMV0sIGUuY3VycmVudFRhcmdldCkpO1xyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLnBlcmNlbnQtMTIzJywgKGUpID0+IHRoaXMuQ2hhbmdlUGVyY2VudDEyMyhlLmN1cnJlbnRUYXJnZXQpKTtcclxuICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5nZW5kZXItYWdlLWNoYXJ0LTItd3JhcCB0ZCwgLmdlbmRlci1hZ2UtY2hhcnQtd3JhcCB0ZCwgLnBpZS1yZWdpc3RlcnMtd3JhcCAucm93LCAucGllLWJvb2stZ2l2aW5nLXdyYXAgLnJvdywgLnBpZS12aXNpdG9ycy13cmFwIC5yb3cnLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ3R5cGUnXSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGRhdGEgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndHlwZSddLnNwbGl0KCctJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgZGF0YVsxXSA9IHBhcnNlSW50KGRhdGFbMV0pO1xyXG4gICAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ3Nlcmllcy1oaWRlJyk7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGRhdGFbMF0pIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICd2JzogIHRoaXMuQ2hhcnRWaXNpdG9ycy5TZXJpZVN3aXRjaCgwLCBkYXRhWzFdKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnYmcnOiB0aGlzLkNoYXJ0Qm9va0dpdmluZy5TZXJpZVN3aXRjaCgwLCBkYXRhWzFdKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnc2cnOiB0aGlzLkNoYXJ0U29jaWFsR3JvdXBzLlNlcmllU3dpdGNoKDAsIGRhdGFbMV0pOyBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdnYSc6IHRoaXMuQ2hhcnRHZW5kZXJBZ2UuU2VyaWVTd2l0Y2goMCwgZGF0YVsxXSk7IGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2FnJzogdGhpcy5DaGFydEFnZUdlbmRlci5TZXJpZVN3aXRjaCgwLCBkYXRhWzFdKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcbi8vIHdpbmRvdy5EYXNoLkRhc2hNYWluID0gRGFzaE1haW47XHJcbi8vIG1vZHVsZS5leHBvcnRzID0gRGFzaDtcclxuIiwiY29uc3QgRGljdGlvbmFyeSA9IHJlcXVpcmUoXCIuLi9fY29tbW9uL2RpY3Rpb25hcnlcIik7XHJcblxyXG5sZXQgV0Rhc2ggPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIC8vRGlzYWJsZWQ6IHRydWUsXHJcbiAgICBOYW1lOiAnV0Rhc2gnLFxyXG4gICAgVGFyZ2V0OiAnLmJvZHknLFxyXG4gICAgVHlwZTogJ2NvbnRlbnQnLFxyXG4gICAgQ29udHJvbDp7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi13ZGFzaCdcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuRGFzaGJvYXJkXVxyXG4gICAgfSxcclxuICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwid2Rhc2ggY29udGVudFwiPjwvZGl2PmAsXHJcbiAgICBTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5TaXhOSy5SZWZyZXNoKCk7XHJcbiAgICB9XHJcbn0pO1xyXG53aW5kb3cuV0Rhc2ggPSBXRGFzaDtcclxucmVxdWlyZSgnLi93ZGFzaC1tYWluL3dkYXNoLW1haW4uanMnKTtcclxucmVxdWlyZSgnLi9zdW1tYXJ5L3dkYXNoLXN1bW1hcnkuanMnKTtcclxucmVxdWlyZSgnLi9zaXgtbmsvc2l4LW5rLmpzJyk7XHJcbm1vZHVsZS5leHBvcnRzID0gV0Rhc2g7XHJcbiIsIi8vaW1wb3J0ICogYXMgRGljdGlvbmFyeSBmcm9tIFwiLi4vZ2xvYmFsL2RpY3Rpb25hcnlcIjtcclxuXHJcbmNvbnN0IERpY3Rpb25hcnkgPSByZXF1aXJlKFwiLi4vX2NvbW1vbi9kaWN0aW9uYXJ5XCIpO1xyXG5cclxuLyoqXHJcbiAqIEBjbGFzcyBEYXNoVGVzdGVyXHJcbiAqIEB0eXBlIEx1cmUuQ29udGVudFxyXG4gKi9cclxubGV0IERhc2hUZXN0ZXIgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIC8vRGlzYWJsZWQ6IHRydWUsXHJcbiAgICBOYW1lOiAnRGFzaFRlc3RlcicsXHJcbiAgICBUYXJnZXQ6ICcuYm9keScsXHJcbiAgICBUeXBlOiAnY29udGVudCcsXHJcbiAgICBDb250cm9sOntcclxuICAgICAgICBUYXJnZXQ6ICcjbmF2LWRhc2gtdGVzdCdcclxuICAgIH0sXHJcbiAgICBQZXJtaXNzaW9uOiB7XHJcbiAgICAgICAgUm9sZXM6IFtEaWN0aW9uYXJ5LlJvbGUuQWRtaW5dXHJcbiAgICB9LFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJkYXNoLXRlc3RlciBjb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgPGgxPkR1c2gtcHVzaDwvaDE+XHJcbiAgICAgICAgICAgICAgICAgPGgyPkRLdWs6IDxkaXYgY2xhc3M9XCJ3ZWYgZWRpdGFibGVcIj57e0t1a319PC9kaXY+PC9oMj5cclxuICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0c1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtcm93LTEgbC1yb3dcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LXJvdy0yIGwtcm93XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1yb3ctMyBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGljaGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImZpbGVtYW5cIiB0eXBlPVwiZmlsZVwiIG5hbWU9XCJQYWNrYWdlXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgU3RhdGU6e1xyXG4gICAgICAgIEt1azogMTIsXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLl9SZXNpemVUYXJnZXQgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLklucHV0RmlsZSA9IHRoaXMuU2VsZWN0KCcuZmlsZW1hbicpO1xyXG4gICAgfSxcclxuICAgIE1ldGhvZHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5NYWtlUmVzaXphYmxlID0gZnVuY3Rpb24gKENvbnRlbnQsIFJlc2l6ZXIsIE9uUmVzaXplKSB7XHJcbiAgICAgICAgICAgIGxldCBQYXJlbnQgPSB0aGlzO1xyXG4gICAgICAgICAgICBDb250ZW50Ll9SZXNpemVyID0gQ29udGVudC5TZWxlY3QoUmVzaXplcik7XHJcbiAgICAgICAgICAgIENvbnRlbnQuX1Jlc2l6ZSA9IHtcclxuICAgICAgICAgICAgICAgIHg6IG51bGwsXHJcbiAgICAgICAgICAgICAgICB5OiBudWxsLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBDb250ZW50Ll9PblJlc2l6ZSA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fUmVzaXplLnggIT09IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkeCA9IGUuY2xpZW50WCAtIHRoaXMuX1Jlc2l6ZS54O1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkeSA9IGUuY2xpZW50WSAtIHRoaXMuX1Jlc2l6ZS55O1xyXG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZHgsIGR5KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZHggPiAxNjUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlN0YXRlLldpZGdldC5XaWR0aCA9IHRoaXMuU3RhdGUuV2lkZ2V0LldpZHRoICsgMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgT25SZXNpemUuY2FsbCh0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fUmVzaXplLnggPSBlLmNsaWVudFg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkeCA8IC0xNjUgJiYgdGhpcy5TdGF0ZS5XaWRnZXQuV2lkdGggPiAyKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5TdGF0ZS5XaWRnZXQuV2lkdGggPSB0aGlzLlN0YXRlLldpZGdldC5XaWR0aCAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9uUmVzaXplLmNhbGwodGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX1Jlc2l6ZS54ID0gZS5jbGllbnRYO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGR5ID4gMTM3KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5TdGF0ZS5XaWRnZXQuSGVpZ2h0ID0gdGhpcy5TdGF0ZS5XaWRnZXQuSGVpZ2h0ICsgMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgT25SZXNpemUuY2FsbCh0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fUmVzaXplLnkgPSBlLmNsaWVudFk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkeSA8IC0xMzcgJiYgdGhpcy5TdGF0ZS5XaWRnZXQuSGVpZ2h0ID4gMil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuU3RhdGUuV2lkZ2V0LkhlaWdodCA9IHRoaXMuU3RhdGUuV2lkZ2V0LkhlaWdodCAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9uUmVzaXplLmNhbGwodGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX1Jlc2l6ZS55ID0gZS5jbGllbnRZO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SZXNpemUueCA9IGUuY2xpZW50WDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlc2l6ZS55ID0gZS5jbGllbnRZO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfS5iaW5kKENvbnRlbnQpO1xyXG4gICAgICAgICAgICBDb250ZW50Ll9SZXNpemVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgICAgICAgICAgUGFyZW50Ll9SZXNpemVUYXJnZXQgPSBDb250ZW50O1xyXG4gICAgICAgICAgICAgICAgQ29udGVudC5fUmVzaXplLnggPSBlLmNsaWVudFg7XHJcbiAgICAgICAgICAgICAgICBDb250ZW50Ll9SZXNpemUueSA9IGUuY2xpZW50WTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuVXBsb2FkVGVzdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IGZpbGUgPSB0aGlzLklucHV0RmlsZS5maWxlc1swXTtcclxuICAgICAgICAgICAgaWYgKCFmaWxlKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAvL2xldCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgICBhcGkuR2V0RmlsZVRlc3QoZmlsZSwge29ucHJvZ3Jlc3M6IChhLGIpPT57XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnb25wcm9ncmVzcy0+JyxhLGIpXHJcbiAgICAgICAgICAgICAgICB9fSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5EYXNoVGVzdFcuQ2hhcnQuUmVkcmF3KCk7XHJcbiAgICAgICAgdGhpcy5EYXNoVGVzdFcyLkNoYXJ0LlJlZHJhdygpO1xyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uKCl7XHJcblxyXG5cclxuICAgICAgICB0aGlzLklucHV0RmlsZS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlVwbG9hZFRlc3QoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLkNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIChlKT0+e1xyXG4gICAgICAgICAgICB0aGlzLl9SZXNpemVUYXJnZXQgPSBudWxsO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuQ29udGVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCAoZSk9PntcclxuICAgICAgICAgICAgaWYgKHRoaXMuX1Jlc2l6ZVRhcmdldCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9SZXNpemVUYXJnZXQuX09uUmVzaXplKGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxuICAgIH0sXHJcblxyXG5cclxufSk7XHJcblxyXG5EYXNoVGVzdGVyLkRhc2hUZXN0VyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgUGFyZW50OiBEYXNoVGVzdGVyLFxyXG4gICAgVGFyZ2V0OiAnLndpZGdldC1yb3ctMScsXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cIndpZGdldFwiIHN0eWxlPVwiLS13aWRnZXQtd2lkdGg6IHt7V2lkZ2V0LldpZHRofX07IC0td2lkZ2V0LWhlaWdodDoge3tXaWRnZXQuSGVpZ2h0fX1cIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVzaXplclwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZCBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC10aXRsZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWljb24gaWNvbi12aXNpdG9yLW5ld1wiPjwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY2FwdGlvblwiPtCa0YPRgNCy0LAg0Lgg0LrRg9GA0LLRkdC90L7QujwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbHNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLW1vdmVcIiB0aXRsZT1cItCf0LXRgNC10LzQtdGB0YLQuNGC0YxcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250cm9sIHdpZGdldC1jb250cm9sLWZhdm9yaXRlXCIgdGl0bGU9XCLQndCwINCz0LvQsNCy0L3Ri9C5INGN0LrRgNCw0L1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxlLWNoYXJ0LTFcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBTdGF0ZToge1xyXG4gICAgICAgIFdpZGdldDp7XHJcbiAgICAgICAgICAgIFdpZHRoOiAgNCxcclxuICAgICAgICAgICAgSGVpZ2h0OiAyLFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLkNoYXJ0ID0gbmV3IEx1cmUuQ2hhcnQoe1xyXG4gICAgICAgICAgICBEcmF3QWZ0ZXJJbml0OiBmYWxzZSxcclxuICAgICAgICAgICAgVGFyZ2V0OiB0aGlzLlNlbGVjdCgnLmxlLWNoYXJ0LTEnKSxcclxuICAgICAgICAgICAgQXhpc1g6IHtcclxuICAgICAgICAgICAgICAgIERhdGE6IFsxLDIsMyw0LDUsNiw3LDksMTAsMTEsMTIsMTVdXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFNlcmllczogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIE5hbWU6ICdWYWhhYml0JyxcclxuICAgICAgICAgICAgICAgICAgICBEYXRhOiAobmV3IEFycmF5KDEyKSkuU2VsZWN0KHg9Pkx1cmUuR2V0UmFuZG9tKDE1MCkpXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIE5hbWU6ICdWYWhhYnl0ZScsXHJcbiAgICAgICAgICAgICAgICAgICAgRGF0YTogKG5ldyBBcnJheSgxMikpLlNlbGVjdCh4PT5MdXJlLkdldFJhbmRvbSgyMDAsIDUpKVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBOYW1lOiAnVGVyYXBldXQnLFxyXG4gICAgICAgICAgICAgICAgICAgIERhdGE6IChuZXcgQXJyYXkoMTIpKS5TZWxlY3QoeD0+THVyZS5HZXRSYW5kb20oMTIwLCAxMDApKSxcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIEF4aXNZOntcclxuICAgICAgICAgICAgICAgIE1pbjogMCxcclxuICAgICAgICAgICAgICAgIC8vU3RlcDogMTBcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgU2VyaWVzT3B0aW9uczp7XHJcbiAgICAgICAgICAgICAgICBNYXJrZXI6e1xyXG4gICAgICAgICAgICAgICAgICAgIFZpc2libGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLk9uUmVzaXplID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuUmVzaXplLnggIT09IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgbGV0IGR4ID0gZS5jbGllbnRYIC0gdGhpcy5SZXNpemUueDtcclxuICAgICAgICAgICAgICAgIGxldCBkeSA9IGUuY2xpZW50WSAtIHRoaXMuUmVzaXplLnk7XHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGR4LCBkeSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZHggPiAxNjUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU3RhdGUuV2lkZ2V0LldpZHRoID0gdGhpcy5TdGF0ZS5XaWRnZXQuV2lkdGggKyAxO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUmVzaXplLnggPSBlLmNsaWVudFg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoZHggPCAtMTY1ICYmIHRoaXMuU3RhdGUuV2lkZ2V0LldpZHRoID4gMil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TdGF0ZS5XaWRnZXQuV2lkdGggPSB0aGlzLlN0YXRlLldpZGdldC5XaWR0aCAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SZXNpemUueCA9IGUuY2xpZW50WDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoZHkgPiAxMzcpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU3RhdGUuV2lkZ2V0LkhlaWdodCA9IHRoaXMuU3RhdGUuV2lkZ2V0LkhlaWdodCArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SZXNpemUueSA9IGUuY2xpZW50WTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChkeSA8IC0xMzcgJiYgdGhpcy5TdGF0ZS5XaWRnZXQuSGVpZ2h0ID4gMil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TdGF0ZS5XaWRnZXQuSGVpZ2h0ID0gdGhpcy5TdGF0ZS5XaWRnZXQuSGVpZ2h0IC0gMTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlc2l6ZS55ID0gZS5jbGllbnRZO1xyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMuUmVzaXplLnggPSBlLmNsaWVudFg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlJlc2l6ZS55ID0gZS5jbGllbnRZO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBSZWZyZXNoOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgIC8vdGhpcy5DaGFydC5SZWRyYXcoKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgRGFzaFRlc3Rlci5NYWtlUmVzaXphYmxlKHRoaXMsICcucmVzaXplcicsIHRoaXMuUmVmcmVzaCk7XHJcbiAgICB9LFxyXG59KTtcclxuXHJcblxyXG5EYXNoVGVzdGVyLkRhc2hUZXN0VzIgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIFBhcmVudDogRGFzaFRlc3RlcixcclxuICAgIFRhcmdldDogJy53aWRnZXQtcm93LTEnLFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJ3aWRnZXRcIiBzdHlsZT1cIi0td2lkZ2V0LXdpZHRoOiB7e1dpZGdldC5XaWR0aH19OyAtLXdpZGdldC1oZWlnaHQ6IHt7V2lkZ2V0LkhlaWdodH19XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlc2l6ZXJcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtdGl0bGUgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndpZGdldC1pY29uIGljb24tdmlzaXRvci1uZXdcIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNhcHRpb25cIj7QoNC10L/QtdC5INC4INGA0LXQv9C10LnQvdC40Lo8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRyb2xzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1tb3ZlXCIgdGl0bGU9XCLQn9C10YDQtdC80LXRgdGC0LjRgtGMXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udHJvbCB3aWRnZXQtY29udHJvbC1mYXZvcml0ZVwiIHRpdGxlPVwi0J3QsCDQs9C70LDQstC90YvQuSDRjdC60YDQsNC9XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsZS1jaGFydC0xXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgU3RhdGU6IHtcclxuICAgICAgICBXaWRnZXQ6e1xyXG4gICAgICAgICAgICBXaWR0aDogIDQsXHJcbiAgICAgICAgICAgIEhlaWdodDogMixcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5DaGFydCA9IG5ldyBMdXJlLkNoYXJ0KHtcclxuICAgICAgICAgICAgRHJhd0FmdGVySW5pdDogZmFsc2UsXHJcbiAgICAgICAgICAgIFRhcmdldDogdGhpcy5TZWxlY3QoJy5sZS1jaGFydC0xJyksXHJcbiAgICAgICAgICAgIExlZ2VuZDp7XHJcbiAgICAgICAgICAgICAgICBQb3NpdGlvbjogJ3JpZ2h0JyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgQXhpc1g6IHtcclxuICAgICAgICAgICAgICAgIERhdGE6IFsxLDIsMyw0LDUsNiw3LDksMTAsMTEsMTIsMTVdXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFNlcmllczogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIE5hbWU6ICdWYWhhYml0JyxcclxuICAgICAgICAgICAgICAgICAgICBEYXRhOiAobmV3IEFycmF5KDEyKSkuU2VsZWN0KHg9Pkx1cmUuR2V0UmFuZG9tKDE1MCkvMTAwKVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBOYW1lOiAnVmFoYWJ5dGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIERhdGE6IChuZXcgQXJyYXkoMTIpKS5TZWxlY3QoeD0+THVyZS5HZXRSYW5kb20oMjAwLCA1KS8xMDApXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIE5hbWU6ICdUZXJhcGV1dCcsXHJcbiAgICAgICAgICAgICAgICAgICAgRGF0YTogKG5ldyBBcnJheSgxMikpLlNlbGVjdCh4PT5MdXJlLkdldFJhbmRvbSgxMjAsIDEwMCkvMTAwKSxcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF0sXHJcblxyXG4gICAgICAgICAgICBTZXJpZXNPcHRpb25zOntcclxuICAgICAgICAgICAgICAgIE1hcmtlcjp7XHJcbiAgICAgICAgICAgICAgICAgICAgVmlzaWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBNZXRob2RzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuT25SZXNpemUgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5SZXNpemUueCAhPT0gbnVsbCl7XHJcbiAgICAgICAgICAgICAgICBsZXQgZHggPSBlLmNsaWVudFggLSB0aGlzLlJlc2l6ZS54O1xyXG4gICAgICAgICAgICAgICAgbGV0IGR5ID0gZS5jbGllbnRZIC0gdGhpcy5SZXNpemUueTtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZHgsIGR5KTtcclxuICAgICAgICAgICAgICAgIGlmIChkeCA+IDE2NSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TdGF0ZS5XaWRnZXQuV2lkdGggPSB0aGlzLlN0YXRlLldpZGdldC5XaWR0aCArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SZWZyZXNoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SZXNpemUueCA9IGUuY2xpZW50WDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChkeCA8IC0xNjUgJiYgdGhpcy5TdGF0ZS5XaWRnZXQuV2lkdGggPiAyKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlN0YXRlLldpZGdldC5XaWR0aCA9IHRoaXMuU3RhdGUuV2lkZ2V0LldpZHRoIC0gMTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlc2l6ZS54ID0gZS5jbGllbnRYO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChkeSA+IDEzNyl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TdGF0ZS5XaWRnZXQuSGVpZ2h0ID0gdGhpcy5TdGF0ZS5XaWRnZXQuSGVpZ2h0ICsgMTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJlc2l6ZS55ID0gZS5jbGllbnRZO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGR5IDwgLTEzNyAmJiB0aGlzLlN0YXRlLldpZGdldC5IZWlnaHQgPiAyKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlN0YXRlLldpZGdldC5IZWlnaHQgPSB0aGlzLlN0YXRlLldpZGdldC5IZWlnaHQgLSAxO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUmVzaXplLnkgPSBlLmNsaWVudFk7XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy5SZXNpemUueCA9IGUuY2xpZW50WDtcclxuICAgICAgICAgICAgICAgIHRoaXMuUmVzaXplLnkgPSBlLmNsaWVudFk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFJlZnJlc2g6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgdGhpcy5DaGFydC5SZWRyYXcoKTtcclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgRGFzaFRlc3Rlci5NYWtlUmVzaXphYmxlKHRoaXMsICcucmVzaXplcicsIHRoaXMuUmVmcmVzaCk7XHJcbiAgICB9LFxyXG59KTtcclxuXHJcblxyXG53aW5kb3cuRGFzaFRlc3RlciA9IERhc2hUZXN0ZXI7XHJcbm1vZHVsZS5leHBvcnRzID0gRGFzaFRlc3RlcjsiLCJtb2R1bGUuZXhwb3J0cyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0xpYnJhcnlTZXR0aW5ncycsXHJcbiAgICBUYXJnZXQ6ICcuYm9keScsXHJcbiAgICBUeXBlOiAnY29udGVudCcsXHJcbiAgICBDb250cm9sOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnI25hdi1zZXR0aW5ncy1tZW51J1xyXG4gICAgfSxcclxuICAgIFBlcm1pc3Npb246IHtcclxuICAgICAgICBSb2xlczogW0RpY3Rpb25hcnkuUm9sZS5BZG1pbl1cclxuICAgIH0sXHJcbiAgICBDb250ZW50OlxyXG4gICAgICAgIGA8ZGl2IGNsYXNzPVwic2V0dGluZ3MtbWVudSBjb250ZW50XCI+XHJcbiAgICAgICAgICAgIDxoMT7QndCw0YHRgtGA0L7QudC60Lgt0L3QsNGB0YLRgNC+0LXRh9C60Lg8L2gxPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2V0dGluZ3MtY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibG9jYWwtbmF2aWdhdG9yXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVudS1pdGVtLWNvbnRlbnRcIj48L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+YCxcclxuICAgIFN1YkNvbnRlbnQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyDQlNCe0JHQkNCS0JvQr9CV0KLQodCvINCf0J7Ql9CW0JVcclxuICAgIH1cclxufSk7IiwibGV0IERpY3Rpb25hcnkgPSB7XHJcbiAgICBQZXJzb25UeXBlOiB7XHJcbiAgICAgICAgU2Nob29sOiAxLFxyXG4gICAgICAgIFNjaG9vbFJEQzogMixcclxuICAgICAgICBTdHVkZW50OiAzLFxyXG4gICAgICAgIFNlcnZhbnQ6IDQsXHJcbiAgICAgICAgUmV0aXJlZDogNSxcclxuICAgICAgICBPdGhlcjogNixcclxuICAgICAgICBVbmRlclNjaG9vbDogNyxcclxuICAgIH0sXHJcbiAgICBQZXJzb25UeXBlRGljdDoge1xyXG4gICAgICAgIDE6ICfQqNC60L7Qu9CwJyxcclxuICAgICAgICAyOiAn0KjQutC+0LvQsCAo0KDQlNCnKScsXHJcbiAgICAgICAgMzogJ9Ch0YLRg9C00LXQvdGCJyxcclxuICAgICAgICA0OiAn0KHQu9GD0LbQsNGJ0LjQuScsXHJcbiAgICAgICAgNTogJ9Cf0LXQvdGB0LjQvtC90LXRgCcsXHJcbiAgICAgICAgNjogJ9Cf0YDQvtGH0LXQtScsXHJcbiAgICAgICAgNzogJ9CU0L7RiNC60L7Qu9CwJyxcclxuICAgIH0sXHJcbiAgICBVc2VyUG9zaXRpb246IHtcclxuICAgICAgICBMaWJyYXJpYW46IDEsXHJcbiAgICAgICAgTWFzdGVyOiAyLFxyXG4gICAgICAgIE1hc3RlckVsZGVyOiAzLFxyXG4gICAgICAgIE1vZGVyYXRvcjogNCxcclxuICAgICAgICBSZWdpb25Nb2RlcmF0b3I6IDUsXHJcbiAgICAgICAgUmVnaW9uQWRtaW46IDYsXHJcbiAgICAgICAgQWRtaW46IDcsXHJcbiAgICB9LFxyXG4gICAgVXNlclBvc2l0aW9uRGljdDoge1xyXG4gICAgICAgIDE6ICfQkdC40LHQu9C40L7RgtC10LrQsNGA0YwnLFxyXG4gICAgICAgIDI6ICfQl9Cw0LLQtdC00YPRjtGJ0LjQuSDQsdC40LHQu9C40L7RgtC10LrQuCcsXHJcbiAgICAgICAgMzogJ9Ch0YPQv9C10YAg0LfQsNCy0LXQtNGD0Y7RidC40LknLFxyXG4gICAgICAgIDQ6ICfQnNC+0LTQtdGA0LDRgtC+0YAnLFxyXG4gICAgICAgIDU6ICfQnNC+0LTQtdGA0LDRgtC+0YAg0KbQkdChJyxcclxuICAgICAgICA2OiAn0JDQtNC80LjQvdC40YHRgtGA0LDRgtC+0YAg0KbQkdChJyxcclxuICAgICAgICA3OiAn0JDQtNC80LjQvdC40YHRgtGA0LDRgtC+0YAnLFxyXG4gICAgfSxcclxuICAgIExpYnJhcnlFdmVudFR5cGU6IHtcclxuICAgICAgICBFdmVudEZyZWU6IDEsXHJcbiAgICAgICAgRXZlbnRQYWlkOiAyLFxyXG4gICAgICAgIENsdWJGcmVlOiAzLFxyXG4gICAgICAgIENsdWJQYWlkOiA0LFxyXG4gICAgICAgIEV4aGliaXRpb246IDUsXHJcbiAgICB9LFxyXG4gICAgTGlicmFyeUV2ZW50VHlwZURpY3Q6IHtcclxuICAgICAgICAxOiAn0JHQtdGB0L/Qu9Cw0YLQvdC+0LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjQtScsXHJcbiAgICAgICAgMjogJ9Cf0LvQsNGC0L3QvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUnLFxyXG4gICAgICAgIDM6ICfQkdC10YHQv9C70LDRgtC90YvQuSDQutC70YPQsScsXHJcbiAgICAgICAgNDogJ9Cf0LvQsNGC0L3Ri9C5INC60LvRg9CxJyxcclxuICAgICAgICA1OiAn0JLRi9GB0YLQsNCy0LrQsCdcclxuICAgIH0sXHJcbiAgICBMaWJyYXJ5Qm9va1R5cGU6IHtcclxuICAgICAgICBPUEw6IDEsXHJcbiAgICAgICAgTmF0dXJlOiAyLFxyXG4gICAgICAgIFRlY2g6IDMsXHJcbiAgICAgICAgQWdyaWN1bHR1cmU6IDQsXHJcbiAgICAgICAgQXJ0OiA1LFxyXG4gICAgICAgIFNwb3J0OiA2LFxyXG4gICAgICAgIFdURl84MTgzOiA3LFxyXG4gICAgICAgIENhdGFsb2c6IDgsXHJcbiAgICAgICAgQ2hpbGRyZW46IDksXHJcbiAgICAgICAgRmljdGlvbjogMTAsXHJcbiAgICAgICAgT3RoZXI6IDExLFxyXG4gICAgfSxcclxuICAgIExpYnJhcnlCb29rVHlwZURpY3Q6IHtcclxuICAgICAgICAxOiAn0J7Qn9CbJyxcclxuICAgICAgICAyOiAn0JXRgdGC0LXRgdGC0LLQvtC30L3QsNC90LjQtScsXHJcbiAgICAgICAgMzogJ9Ci0LXRhdC90LjQutCwJyxcclxuICAgICAgICA0OiAn0KHQtdC70YzRgdC60L7QtSDRhdC+0LfRj9C50YHRgtCy0L4nLFxyXG4gICAgICAgIDU6ICfQmNGB0LrRg9GB0YHRgtCy0L4nLFxyXG4gICAgICAgIDY6ICfQodC/0L7RgNGCJyxcclxuICAgICAgICA3OiAnODEsIDgzJyxcclxuICAgICAgICA4OiAn0KHQv9GA0LDQstC+0YfQvdC40LrQuCcsXHJcbiAgICAgICAgOTogJ9CU0LXRgtGB0LrQsNGPINC70LjRgtC10YDQsNGC0YPRgNCwJyxcclxuICAgICAgICAxMDogJ9Cl0YPQtNC+0LbQtdGB0YLQstC10L3QvdCw0Y8g0LvQuNGC0LXRgNCw0YLRg9GA0LAnLFxyXG4gICAgICAgIDExOiAn0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90L4nLFxyXG4gICAgfSxcclxuICAgIExpYnJhcnlCb29rQ2FycnlUeXBlOiB7XHJcbiAgICAgICAgUGh5c2ljYWw6IDEsXHJcbiAgICAgICAgRWxlY3Ryb246IDIsXHJcbiAgICAgICAgSW5zdGFsbGVkOiAzLFxyXG4gICAgICAgIFJlbW90ZTogNCxcclxuICAgICAgICBDb3B5OiA1LFxyXG4gICAgfSxcclxuICAgIExpYnJhcnlDb25zdWx0VHlwZToge1xyXG4gICAgICAgIFRoZW1lOiAxLFxyXG4gICAgICAgIEZhY3RvcjogMixcclxuICAgICAgICBMaWJyYXJ5OiAzLFxyXG4gICAgICAgIENvbnN1bHQ6IDQsXHJcbiAgICAgICAgQ29weTogNSxcclxuICAgIH0sXHJcblxyXG4gICAgQm9va3dhcmVPdGhlclBsYWNlOiB7XHJcbiAgICAgICAgTU1CQTogMSxcclxuICAgICAgICBWaXJ0dWFsUmVhZGluZ0hhbGw6IDIsXHJcbiAgICB9LFxyXG4gICAgQm9va3dhcmVPdGhlclBsYWNlRGljdDoge1xyXG4gICAgICAgIDE6ICfQnNCc0JHQkCcsXHJcbiAgICAgICAgMjogJ9CS0LjRgNGC0YPQsNC70YzQvdGL0LUg0YfQuNGC0LDQu9GM0L3Ri9C1INC30LDQu9GLJyxcclxuICAgIH0sXHJcblxyXG4gICAgUm9sZToge1xyXG4gICAgICAgIEFkbWluOiAxLFxyXG4gICAgICAgIFVzZXI6IDIsXHJcbiAgICAgICAgQWRtaW5DQlM6IDEzLFxyXG4gICAgICAgIE1vZGVyYXRvckNCUzogMTUsXHJcbiAgICAgICAgTW9kZXJhdG9yOiAyMSxcclxuXHJcbiAgICAgICAgRGFpcnlJbnB1dDogMyxcclxuICAgICAgICBEYWlyeUlucHV0TW92aW5nczogMjAsXHJcbiAgICAgICAgRGFpcnlTdW1tYXJ5OiA0LFxyXG4gICAgICAgIERhaXJ5U3VtbWFyeUVkaXQ6IDUsXHJcbiAgICAgICAgRGFpcnlTdW1tYXJ5RWRpdFJlbW90ZTogMjQsXHJcblxyXG4gICAgICAgIERhc2hib2FyZDogNixcclxuXHJcbiAgICAgICAgUGFzc3BvcnQ6IDcsXHJcbiAgICAgICAgUGFzc3BvcnRFZGl0OiAxNyxcclxuICAgICAgICBIZWxwZGVzazogOCxcclxuICAgICAgICBIZWxwZGVza1Jlc29sdmU6IDksXHJcbiAgICAgICAgSGVscGRlc2tNb2RlcmF0b3I6IDIzLFxyXG5cclxuICAgICAgICBTZXR1cFBsYW46IDEwLFxyXG4gICAgICAgIFNldHVwUGxhbkVkaXQ6IDE4LFxyXG4gICAgICAgIFNldHVwRXZlbnQ6IDExLFxyXG4gICAgICAgIFNldHVwRXZlbnRFZGl0OiAxOSxcclxuICAgICAgICBTZXR1cEV2ZW50T2ZmZXI6IDI5LFxyXG5cclxuICAgICAgICBNZXRlcjogMTIsXHJcbiAgICAgICAgTWV0ZXJDcmVhdGU6IDI3LFxyXG4gICAgICAgIE1ldGVyRWRpdDogMjgsXHJcblxyXG4gICAgICAgIExpYnJhcnlJRDogMTQsXHJcbiAgICAgICAgTGlicmFyeVJlZ2lvbklEOiAxNixcclxuXHJcbiAgICAgICAgQWRtaW5Vc2VyTWFuYWdlbWVudDogMjIsXHJcbiAgICAgICAgQWRtaW5UZWNoTWFuYWdlbWVudDogMjUsXHJcblxyXG4gICAgICAgIEFkbWluVXNlckNyZWF0ZTogMjYsXHJcblxyXG4gICAgICAgIFRlc3RlclBhbmVsOiAzMCxcclxuICAgIH0sXHJcbiAgICBSb2xlRGljdDoge1xyXG4gICAgICAgIDE6ICfQkNC00LzQuNC90LjRgdGC0YDQsNGC0L7RgCDRgdC40YHRgtC10LzRiycsXHJcbiAgICAgICAgMjogJ9Cu0LfQtdGAJyxcclxuICAgICAgICAxMzogJ9CQ0LTQvNC40L3QuNGB0YLRgNCw0YLQvtGAINCm0JHQoScsXHJcbiAgICAgICAgMTU6ICfQnNC+0LTQtdGA0LDRgtC+0YAg0KbQkdChJyxcclxuICAgICAgICAzOiAn0JLQstC+0LQg0L/QtdGA0LLQuNGH0L3Ri9GFINC00LDQvdC90YvRhScsXHJcbiAgICAgICAgMjA6ICfQktCy0L7QtCDQv9C10YDQstC40YfQvdGL0YUg0LTQsNC90L3Ri9GFINC/0LXRgNC10LTQstC40LbQtdC6JyxcclxuICAgICAgICA0OiAn0KHQstC+0LTQvdCw0Y8g0YLQsNCx0LvQuNGG0LAsINCy0LjQtNC40LzQvtGB0YLRjCcsXHJcbiAgICAgICAgNTogJ9Ch0LLQvtC00L3QsNGPINGC0LDQsdC70LjRhtCwLCDQuNC30LzQtdC90LXQvdC40LUnLFxyXG4gICAgICAgIDI0OiAn0KHQstC+0LTQvdCw0Y8g0YLQsNCx0LvQuNGG0LAsINC40LfQvNC10L3QtdC90LjQtSDRg9C00LDQu9C10L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C10LknLFxyXG4gICAgICAgIDY6ICfQlNCw0YjQsdC+0YDQtCcsXHJcbiAgICAgICAgNzogJ9Cf0LDRgdC/0L7RgNGCINCy0LjQtNC40LzQvtGB0YLRjCcsXHJcbiAgICAgICAgMTc6ICfQn9Cw0YHQv9C+0YDRgiDQuNC30LzQtdC90LXQvdC40LUnLFxyXG4gICAgICAgIDg6ICfQpdC10LvQv9C00LXRgdC6JyxcclxuICAgICAgICA5OiAn0KXQtdC70L/QtNC10YHQuiDRgtC10YXQvdC40LonLFxyXG4gICAgICAgIDIzOiAn0KXQtdC70L/QtNC10YHQuiDQvNC+0LTQtdGA0LDRgtC+0YAnLFxyXG4gICAgICAgIDEwOiAn0J/Qu9Cw0L3QvtCy0YvQtSDQv9C+0LrQsNC30LDRgtC10LvQuCwg0LLQuNC00LjQvNC+0YHRgtGMJyxcclxuICAgICAgICAxODogJ9Cf0LvQsNC90L7QstGL0LUg0L/QvtC60LDQt9Cw0YLQtdC70LgsINC40LfQvNC10L3QtdC90LjQtScsXHJcbiAgICAgICAgMTE6ICfQnNC10YDQvtC/0YDQuNGP0YLQuNGPICjQutC70YPQsdGLLCDQstGL0YHRgtCw0LLQutC4KSwg0LLQuNC00LjQvNC+0YHRgtGMJyxcclxuICAgICAgICAxOTogJ9Cc0LXRgNC+0L/RgNC40Y/RgtC40Y8gKNC60LvRg9Cx0YssINCy0YvRgdGC0LDQstC60LgpLCDQuNC30LzQtdC90LXQvdC40LUnLFxyXG4gICAgICAgIDI5OiAn0JzQtdGA0L7Qv9GA0LjRj9GC0LjRjyAo0LrQu9GD0LHRiywg0LLRi9GB0YLQsNCy0LrQuCksINGB0L7Qt9C00LDQvdC40LUgKNC90LAg0LzQvtC00LXRgNCw0YbQuNGOKScsXHJcbiAgICAgICAgMTI6ICfQodGH0LXRgtGH0LjQutC4LCDQstC90LXRgdC10L3QuNC1INC00LDQvdC90YvRhScsXHJcbiAgICAgICAgMjc6ICfQodGH0LXRgtGH0LjQutC4LCDRgdC+0LfQtNCw0L3QuNC1JyxcclxuICAgICAgICAyODogJ9Ch0YfQtdGC0YfQuNC60LgsINC40LfQvNC10L3QtdC90LjQtScsXHJcbiAgICAgICAgMTQ6ICfQlNC+0YHRgtGD0L8g0Log0LHQuNCx0LvQuNC+0YLQtdC60LDQvCcsXHJcbiAgICAgICAgMTY6ICfQlNC+0YHRgtGD0L8g0Log0KbQkdChJyxcclxuICAgICAgICAyMTogJ9Cc0L7QtNC10YDQsNGC0L7RgCDQsdC40LHQu9C40L7RgtC10LrQuCcsXHJcbiAgICAgICAgMjI6ICfQo9C/0YDQsNCy0LvQtdC90LjQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y/QvNC4LCDQuNC30LzQtdC90LXQvdC40LUnLFxyXG4gICAgICAgIDI1OiAn0KPQv9GA0LDQstC70LXQvdC40LUg0YLQtdGF0L3QuNC60LDQvNC4JyxcclxuICAgICAgICAyNjogJ9Cj0L/RgNCw0LLQu9C10L3QuNC1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj9C80LgsINGB0L7Qt9C00LDQvdC40LUnLFxyXG4gICAgICAgIDMwOiAn0JAg0Y3RgtC+INC/0LDQvdC10LvRjCDRgtC10YHRgtC+0LLQvtCz0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPJyxcclxuICAgICAgICAvLzI5IGxhc3RcclxuICAgIH0sXHJcbiAgICBFdmVudFR5cGU6IHtcclxuICAgICAgICBBY3Q6IDEsXHJcbiAgICAgICAgQmFsOiAyLFxyXG4gICAgICAgIC8vLi4uXHJcbiAgICB9LFxyXG4gICAgRXZlbnRUeXBlRGljdDoge1xyXG4gICAgICAgICdudWxsJzon0L3QtdC40LfQstC10YHRgtC90L4nLFxyXG4gICAgICAgICd1bmRlZmluZWQnOifQvdC10LjQt9Cy0LXRgdGC0L3QvicsXHJcbiAgICAgICAgJzAnOifQvdC10LjQt9Cy0LXRgdGC0L3QvicsXHJcbiAgICAgICAgMTogJ9Cw0LrRhtC40Y8nLFxyXG4gICAgICAgIDI6ICfQsdCw0LsnLFxyXG4gICAgICAgIDM6ICfQsdC10YHQtdC00LAnLFxyXG4gICAgICAgIDQ6ICfQstC10LHQuNC90LDRgCcsXHJcbiAgICAgICAgNTogJ9Cy0LXRh9C10YAnLFxyXG4gICAgICAgIDY6ICfQstC40LrRgtC+0YDQuNC90LAnLFxyXG4gICAgICAgIDc6ICfQstGB0YLRgNC10YfQsCcsXHJcbiAgICAgICAgODogJ9Cy0YvRgdGC0LDQstC60LAnLFxyXG4gICAgICAgIDk6ICfQs9C+0YHRgtC40L3QsNGPJyxcclxuICAgICAgICAxMDogJ9C00LjRgdC60YPRgdGB0LjRjycsXHJcbiAgICAgICAgMTE6ICfQuNC90YLQtdGA0LDQutGC0LjQsicsXHJcbiAgICAgICAgMTI6ICfQutCw0YDQvdCw0LLQsNC7JyxcclxuICAgICAgICAxMzogJ9C60LjQvdC+0LvQtdC60YLQvtGA0LjQuScsXHJcbiAgICAgICAgMTQ6ICfQmtCb0KPQkScsXHJcbiAgICAgICAgMTU6ICfQutC+0L3QutGD0YDRgScsXHJcbiAgICAgICAgMTY6ICfQutC+0L3RhNC10YDQtdC90YbQuNGPJyxcclxuICAgICAgICAxNzogJ9C60L7QvdGG0LXRgNGCJyxcclxuICAgICAgICAxODogJ9C60YDRg9Cz0LvRi9C5INGB0YLQvtC7JyxcclxuICAgICAgICAxOTogJ9C70LXQutGG0LjRjycsXHJcbiAgICAgICAgMjA6ICfQvNCw0YHRgtC10YAg0LrQu9Cw0YHRgScsXHJcbiAgICAgICAgMjE6ICfQvdCw0YDQvtC00L3QvtC1INCz0YPQu9GP0L3QuNC1JyxcclxuICAgICAgICAyMjogJ9C/0LDQvNGP0YLQvdCw0Y8g0LTQsNGC0LAnLFxyXG4gICAgICAgIDIzOiAn0L/RgNCw0LfQtNC90LjQuicsXHJcbiAgICAgICAgMjQ6ICfQv9GA0LXQtNGB0YLQsNCy0LvQtdC90LjQtScsXHJcbiAgICAgICAgMjU6ICfQv9GA0LXQt9C10L3RgtCw0YbQuNGPJyxcclxuICAgICAgICAyNjogJ9C/0YDQvtCz0YDQsNC80LzQsC/QutC+0LzQv9C70LXQutGB0L3QvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUnLFxyXG4gICAgICAgIDI3OiAn0YHQtdC80LjQvdCw0YAnLFxyXG4gICAgICAgIDI4OiAn0YLQvtC6LdGI0L7RgycsXHJcbiAgICAgICAgMjk6ICfRg9GC0YDQtdC90L3QuNC6JyxcclxuICAgICAgICAzMDogJ9GE0LXRgdGC0LjQstCw0LvRjCcsXHJcbiAgICAgICAgMzE6ICfRhNC+0YDRg9C8JyxcclxuICAgICAgICAzMjogJ9GN0LrRgdC60YPRgNGB0LjRjycsXHJcbiAgICAgICAgMzM6ICfRjtCx0LjQu9C10LknLFxyXG4gICAgICAgIDM0OiAn0Y/RgNC80LDRgNC60LAnLFxyXG4gICAgfSxcclxuICAgIEV2ZW50VHJlbmRzRGljdDoge1xyXG4gICAgICAgIDE6ICfQkNC90YLQuNC90LDRgNC60L7RgtC40YfQtdGB0LrQvtC1JyxcclxuICAgICAgICAyOiAn0JDQvdGC0LjRgtC10YDRgNC+0YDQuNGB0YLQuNGH0LXRgdC60L7QtScsXHJcbiAgICAgICAgMzogJ9CR0LXQt9C+0L/QsNGB0L3QvtGB0YLRjCDQtNCy0LjQttC10L3QuNGPJyxcclxuICAgICAgICA0OiAn0JjRhNC+0YDQvNCw0YbQuNC+0L3QvdC+LdC/0YDQvtGB0LLQtdGC0LjRgtC10LvRjNGB0LrQvtC1JyxcclxuICAgICAgICA1OiAn0JrRg9C70YzRgtGD0YDQvdC+LdC00L7RgdGD0LPQvtCy0L7QtScsXHJcbiAgICAgICAgNjogJ9Ca0YPQu9GM0YLRg9GA0L3Qvi3Qv9GA0L7RgdCy0LXRgtC40YLQtdC70YzRgdC60L7QtScsXHJcbiAgICAgICAgNzogJ9Ca0YPQu9GM0YLRg9GA0L3Qvi3RgNCw0LfQstC70LXQutCw0YLQtdC70YzQvdC+0LUnLFxyXG4gICAgICAgIDg6ICfQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQtSDQuCDQvNC10LbRgNC10LPQuNC+0L3QsNC70YzQvdGL0LUg0YHQstGP0LfQuCcsXHJcbiAgICAgICAgOTogJ9Cc0LXQttGN0YLQvdC40YfQtdGB0LrQuNC1INC4INGN0YLQvdC+0LrQvtC90YTQtdGB0YHQuNC+0L3QsNC70YzQvdGL0LUg0L7RgtC90L7RiNC10L3QuNGPJyxcclxuICAgICAgICAxMDogJ9Cc0LXQvNC+0YDQuNCw0LvRjNC90L7QtScsXHJcbiAgICAgICAgMTE6ICfQnNGD0LfRi9C60LDQu9GM0L3Qvi3Qv9GA0L7RgdCy0LXRgtC40YLQtdC70YzRgdC60L7QtScsXHJcbiAgICAgICAgMTI6ICfQntCx0YDQsNC30L7QstCw0YLQtdC70YzQvdC+0LUnLFxyXG4gICAgICAgIDEzOiAn0J/QsNGC0YDQuNC+0YLQuNGH0LXRgdC60L7QtScsXHJcbiAgICAgICAgMTQ6ICfQn9GA0L7Qv9Cw0LPQsNC90LTQsCDQt9C00L7RgNC+0LLQvtCz0L4g0L7QsdGA0LDQt9CwINC20LjQt9C90LgnLFxyXG4gICAgICAgIDE1OiAn0J/RgNC+0L/QsNCz0LDQvdC00LAg0JfQntCWJyxcclxuICAgICAgICAxNjogJ9Cf0YDQvtGE0LjQu9Cw0LrRgtC40LrQsCDQsdC10YHQv9GA0LjQt9C+0YDQvdC+0YHRgtC4INC4INCx0LXQt9C90LDQtNC30L7RgNC90L7RgdGC0Lgg0L3QtdGB0L7QstC10YDRiNC10L3QvdC+0LvQtdGC0L3QuNGFJyxcclxuICAgICAgICAxNzogJ9Cf0YDQvtGE0LjQu9Cw0LrRgtC40LrQsCDQttC10YHRgtC+0LrQvtCz0L4g0L7QsdGA0LDRidC10L3QuNGPINGBINC00LXRgtGM0LzQuCDQuCDQv9C+0LTRgNC+0YHRgtC60LDQvNC4JyxcclxuICAgICAgICAxODogJ9Cf0YDQvtGE0LjQu9Cw0LrRgtC40LrQsCDQv9GA0LDQstC+0L3QsNGA0YPRiNC10L3QuNC5INGB0YDQtdC00Lgg0L3QtdGB0L7QstC10YDRiNC10L3QvdC+0LvQtdGC0L3QuNGFJyxcclxuICAgICAgICAxOTogJ9Cg0LDQsdC+0YLQsCDRgSDQvNC10YHRgtC90YvQvCDRgdC+0L7QsdGJ0LXRgdGC0LLQvtC8JyxcclxuICAgICAgICAyMDogJ9Ch0L7RhdGA0LDQvdC10L3QuNC1INGB0LXQvNC10LnQvdGL0YUg0YbQtdC90L3QvtGB0YLQtdC5JyxcclxuICAgICAgICAyMTogJ9Ch0L7RhtC40LDQu9GM0L3QvtC1JyxcclxuICAgICAgICAyMjogJ9Ct0LrQvtC70L7Qs9C40YfQtdGB0LrQvtC1J1xyXG4gICAgfSxcclxuICAgIEV2ZW50UGxhY2VUeXBlOiB7XHJcbiAgICAgICAgU3RhdGlvbmFyeTogICAgMSxcclxuICAgICAgICBOb25TdGF0aW9uYXJ5OiAyXHJcbiAgICB9LFxyXG4gICAgRXZlbnRQbGFjZVR5cGVEaWN0OiB7XHJcbiAgICAgICAgMTogJ9Ch0YLQsNGG0LjQvtC90LDRgCcsXHJcbiAgICAgICAgMjogJ9CS0L3QtdGB0YLQsNGG0LjQvtC90LDRgCcsXHJcbiAgICB9LFxyXG4gICAgSG9saWRheXM6IHtcclxuICAgICAgICAwOiBcItCd0LXRglwiLFxyXG4gICAgICAgIDE6IFwi0JHQuNCx0LvQuNC+0L3QvtGH0YwgKNC+0LHRidC10LPQvtGA0L7QtNGB0LrQvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUpXCIsXHJcbiAgICAgICAgMjogXCLQkdC40YLQstCwINC/0L7QtCDQnNC+0YHQutCy0L7QuSAoNSDQtNC10LrQsNCx0YDRjylcIixcclxuICAgICAgICAzOiBcItCS0YHQtdC80LjRgNC90LDRjyDQsNC60YbQuNGPICfQlNC10L3RjCDQl9C10LzQu9C4JyAoMjIg0LDQv9GA0LXQu9GPKVwiLFxyXG4gICAgICAgIDQ6IFwi0JLRgdC10LzQuNGA0L3Ri9C5INC00LXQvdGMINCx0L7RgNGM0LHRiyDRgSDQvdCw0YDQutC+0LzQsNC90LjQtdC5INC4INC90LDRgNC60L7QsdC40LfQvdC10YHQvtC8ICgyNiDQuNGO0L3RjylcIixcclxuICAgICAgICA1OiBcItCS0YHQtdC80LjRgNC90YvQuSDQtNC10L3RjCDQutC90LjQs9C4INC4INCw0LLRgtC+0YDRgdC60L7Qs9C+INC/0YDQsNCy0LAgKDIzINCw0L/RgNC10LvRjylcIixcclxuICAgICAgICA2OiBcItCS0YHQtdC80LjRgNC90YvQuSDQtNC10L3RjCDQutGD0LvRjNGC0YPRgNC90L7Qs9C+INGA0LDQt9C90L7QvtCx0YDQsNC30LjRjyDQstC+INC40LzRjyDQtNC40LDQu9C+0LPQsCDQuCDRgNCw0LfQstC40YLQuNGPICgyMSDQvNCw0Y8pXCIsXHJcbiAgICAgICAgNzogXCLQktGB0LXQvNC40YDQvdGL0Lkg0LTQtdC90Ywg0L/QuNGB0LDRgtC10LvRjyAoMyDQvNCw0YDRgtCwKVwiLFxyXG4gICAgICAgIDg6IFwi0JLRgdC10LzQuNGA0L3Ri9C5INC00LXQvdGMINC/0L7RjdC30LjQuCAoMjEg0LzQsNGA0YLQsClcIixcclxuICAgICAgICA5OiBcItCS0YHQtdC80LjRgNC90YvQuSDQtNC10L3RjCDRgNC10LHQtdC90LrQsCAoMjAg0L3QvtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDEwOiBcItCS0YHQtdC80LjRgNC90YvQuSDQtNC10L3RjCDRgdCy0L7QsdC+0LTRiyDQv9C10YfQsNGC0LggKDMg0LzQsNGPKVwiLFxyXG4gICAgICAgIDExOiBcItCS0YHQtdC80LjRgNC90YvQuSDQlNC10L3RjCDQodC+0LPQu9Cw0YHQuNGPINC4INCf0YDQuNC80LjRgNC10L3QuNGPICg3INC90L7Rj9Cx0YDRjylcIixcclxuICAgICAgICAxMjogXCLQk9C+0LQg0LrQuNC90L4gKNC+0LHRidC10LPQvtGA0L7QtNGB0LrQvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUgMjAxNiDQs9C+0LQpXCIsXHJcbiAgICAgICAgMTM6IFwi0JPQvtC00L7QstGJ0LjQvdCwINCy0YvQstC+0LTQsCDQodC+0LLQtdGC0YHQutC40YUg0LLQvtC50YHQuiDQuNC3INCQ0YTQs9Cw0L3QuNGB0YLQsNC90LAgKDE1INGE0LXQstGA0LDQu9GPKVwiLFxyXG4gICAgICAgIDE0OiBcItCT0L7QtNC+0LLRidC40L3QsCDQn9C+0LHQtdC00Ysg0LIg0JLQntCSIDE5NDEtMTk0NSAoOSDQvNCw0Y8pXCIsXHJcbiAgICAgICAgMTU6IFwi0JTQtdC90Ywg0LLRgdC10YUg0LLQu9GO0LHQu9GR0L3QvdGL0YUgKDE0INGE0LXQstGA0LDQu9GPKVwiLFxyXG4gICAgICAgIDE2OiBcItCU0LXQvdGMINCT0LXRgNC+0LXQsiDQntGC0LXRh9C10YHRgtCy0LAgKDkg0LTQtdC60LDQsdGA0Y8pXCIsXHJcbiAgICAgICAgMTc6IFwi0JTQtdC90Ywg0LPQvtGA0L7QtNCwICg0INGB0LXQvdGC0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgMTg6IFwi0JTQtdC90Ywg0JPQvtGB0YPQtNCw0YDRgdGC0LLQtdC90L3QvtCz0L4g0YTQu9Cw0LPQsCDQoNC+0YHRgdC40LnRgdC60L7QuSDQpNC10LTQtdGA0LDRhtC40LggKDIyINCw0LLQs9GD0YHRgtCwKVwiLFxyXG4gICAgICAgIDE5OiBcItCU0LXQvdGMINC30LDRidC40YLQvdC40LrQsCDQntGC0LXRh9C10YHRgtCy0LAgKDIzINGE0LXQstGA0LDQu9GPKVwiLFxyXG4gICAgICAgIDIwOiBcItCU0LXQvdGMINC30LDRidC40YLRiyDQtNC10YLQtdC5ICgxINC40Y7QvdGPKVwiLFxyXG4gICAgICAgIDIxOiBcItCU0LXQvdGMINC30L3QsNC90LjQuSAoMSDRgdC10L3RgtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDIyOiBcItCU0LXQvdGMINCa0L7QvdGB0YLQuNGC0YPRhtC40Lgg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4ICgxMiDQtNC10LrQsNCx0YDRjylcIixcclxuICAgICAgICAyMzogXCLQlNC10L3RjCDQutC+0YHQvNC+0L3QsNCy0YLQuNC60LggKDEyINCw0L/RgNC10LvRjylcIixcclxuICAgICAgICAyNDogXCLQlNC10L3RjCDQvNCw0YLQtdGA0LggKNC/0L7RgdC70LXQtNC90LjQuSDQstGL0YXQvtC00L3QvtC5INC90L7Rj9Cx0YDRjylcIixcclxuICAgICAgICAyNTogXCLQlNC10L3RjCDQvNC+0LvQvtC00LXQttC4ICgyNyDQuNGO0L3RjylcIixcclxuICAgICAgICAyNjogXCLQlNC10L3RjCDQnNCk0KYgKDIyINCw0LLQs9GD0YHRgtCwKVwiLFxyXG4gICAgICAgIDI3OiBcItCU0LXQvdGMINC90LDRgNC+0LTQvdC+0LPQviDQtdC00LjQvdGB0YLQstCwICg0INC90L7Rj9Cx0YDRjylcIixcclxuICAgICAgICAyODogXCLQlNC10L3RjCDQv9Cw0LzRj9GC0Lgg0Lgg0YHQutC+0YDQsdC4ICgyMiDQuNGO0L3RjylcIixcclxuICAgICAgICAyOTogXCLQlNC10L3RjCDQv9GA0LDQstC+0YHQu9Cw0LLQvdC+0Lkg0LrQvdC40LPQuCAoMTQg0LzQsNGA0YLQsClcIixcclxuICAgICAgICAzMDogXCLQlNC10L3RjCDRgNCw0LHQvtGC0L3QuNC60LAg0LDRgNGF0LjQstCwICgxMCDQvNCw0YDRgtCwKVwiLFxyXG4gICAgICAgIDMxOiBcItCU0LXQvdGMINGA0LDQsdC+0YLQvdC40LrQvtCyINC60YPQu9GM0YLRg9GA0Ysg0KDQvtGB0YHQuNC4ICgyNSDQvNCw0YDRgtCwKVwiLFxyXG4gICAgICAgIDMyOiBcItCU0LXQvdGMINGA0LDQsdC+0YLQvdC40LrQvtCyINGC0L7RgNCz0L7QstC70LgsINCx0YvRgtC+0LLQvtCz0L4g0L7QsdGB0LvRg9C20LjQstCw0L3QuNGPINC90LDRgdC10LvQtdC90LjRjyDQuCDQttC40LvQuNGJ0L3Qvi3QutC+0LzQvNGD0L3QsNC70YzQvdC+0LPQviDRhdC+0LfRj9C50YHRgtCy0LAgKDMg0LLQvtGB0LrRgNC10YHQtdC90YzQtSDQvNCw0YDRgtCwKVwiLFxyXG4gICAgICAgIDMzOiBcItCU0LXQvdGMINGA0LDQt9Cz0YDQvtC80LAg0L3QtdC80LXRhtC60L4t0YTQsNGI0LjRgdGC0YHQutC40YUg0LLQvtC50YHQuiDQv9C+0LQg0KHRgtCw0LvQuNC90LPRgNCw0LTQvtC8ICgyINGE0LXQstGA0LDQu9GPKVwiLFxyXG4gICAgICAgIDM0OiBcItCU0LXQvdGMINGA0L7QtNC90L7Qs9C+INGP0LfRi9C60LAgKDIxINGE0LXQstGA0LDQu9GPKVwiLFxyXG4gICAgICAgIDM1OiBcItCU0LXQvdGMINCg0L7RgdGB0LjQuCAoMTIg0LjRjtC90Y8pXCIsXHJcbiAgICAgICAgMzY6IFwi0JTQtdC90Ywg0YDQvtGB0YHQuNC50YHQutC+0LPQviDQutC40L3QviAoMjcg0LDQstCz0YPRgdGC0LApXCIsXHJcbiAgICAgICAgMzc6IFwi0JTQtdC90Ywg0YDQvtGB0YHQuNC50YHQutC+0Lkg0L3QsNGD0LrQuCAoOCDRhNC10LLRgNCw0LvRjylcIixcclxuICAgICAgICAzODogXCLQlNC10L3RjCDRgNGD0YHRgdC60L7Qs9C+INGP0LfRi9C60LAgKDYg0LjRjtC90Y8pXCIsXHJcbiAgICAgICAgMzk6IFwi0JTQtdC90Ywg0YHQtdC80YzQuCAoMTUg0LzQsNGPKVwiLFxyXG4gICAgICAgIDQwOiBcItCU0LXQvdGMINGB0LXQvNGM0Lgg0LvRjtCx0LLQuCDQuCDQstC10YDQvdC+0YHRgtC4ICg4INC40Y7Qu9GPKVwiLFxyXG4gICAgICAgIDQxOiBcItCU0LXQvdGMINGB0LvQsNCy0Y/QvdGB0LrQvtC5INC/0LjRgdGM0LzQtdC90L3QvtGB0YLQuCDQuCDQutGD0LvRjNGC0YPRgNGLICgyNCDQvNCw0Y8pXCIsXHJcbiAgICAgICAgNDI6IFwi0JTQtdC90Ywg0YHQvdGP0YLQuNGPINCx0LvQvtC60LDQtNGLINCb0LXQvdC40L3Qs9GA0LDQtNCwICgyNyDRj9C90LLQsNGA0Y8pXCIsXHJcbiAgICAgICAgNDM6IFwi0JTQtdC90Ywg0YHQvtC70LjQtNCw0YDQvdC+0YHRgtC4INCyINCx0L7RgNGM0LHQtSDRgSDRgtC10YDRgNC+0YDQuNC30LzQvtC8ICgzINGB0LXQvdGC0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgNDQ6IFwi0JTQtdC90Ywg0YHQvtGC0YDRg9C00L3QuNC60L7QsiDQvtGA0LPQsNC90L7QsiDQstC90YPRgtGA0LXQvdC90LjRhSDQtNC10Lsg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4ICgxMCDQvdC+0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgNDU6IFwi0JTQtdC90Ywg0YPRh9C40YLQtdC70Y8gKDUg0L7QutGC0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgNDY6IFwi0JzQsNGB0LvQtdC90LjRhtCwICgxMyDQvNCw0YDRgtCwKVwiLFxyXG4gICAgICAgIDQ3OiBcItCc0LXQttC00YPQvdCw0YDQvtC00L3Ri9C5INC00LXQvdGMINC00LXRgtGB0LrQvtCz0L4g0YLQtdC70LXQstC40LTQtdC90LjRjyDQuCDRgNCw0LTQuNC+0LLQtdGJ0LDQvdC40Y8gKDYg0LzQsNGA0YLQsClcIixcclxuICAgICAgICA0ODogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQtNC10L3RjCDQtNC10YLRgdC60L7QuSDQutC90LjQs9C4ICgyINCw0L/RgNC10LvRjylcIixcclxuICAgICAgICA0OTogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQlNC10L3RjCDQuNC90LLQsNC70LjQtNC+0LIgKDMg0LTQtdC60LDQsdGA0Y8pXCIsXHJcbiAgICAgICAgNTA6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0LTQtdC90Ywg0LjRgdC60L7RgNC10L3QtdC90LjRjyDQvdC10LPRgNCw0LzQvtGC0L3QvtGB0YLQuCAoOCDRgdC10L3RgtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDUxOiBcItCc0LXQttC00YPQvdCw0YDQvtC00L3Ri9C5INC00LXQvdGMINC60LjQvdC+ICgyOCDQtNC10LrQsNCx0YDRjylcIixcclxuICAgICAgICA1MjogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQtNC10L3RjCDQvNC40YDQsCAoMjEg0YHQtdC90YLRj9Cx0YDRjylcIixcclxuICAgICAgICA1MzogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQtNC10L3RjCDQvNC+0LvQvtC00ZHQttC4ICgxMiDQsNCy0LPRg9GB0YLQsClcIixcclxuICAgICAgICA1NDogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQtNC10L3RjCDQvNGD0LfQtdC10LIgKDE4INC80LDRjylcIixcclxuICAgICAgICA1NTogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQtNC10L3RjCDQvNGD0LfRi9C60LggKDEg0L7QutGC0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgNTY6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0JTQtdC90Ywg0L/QvtC20LjQu9GL0YUg0LvRjtC00LXQuSAoMSDQvtC60YLRj9Cx0YDRjylcIixcclxuICAgICAgICA1NzogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQlNC10L3RjCDRgtC+0LvQtdGA0LDQvdGC0L3QvtGB0YLQuCAoMTYg0L3QvtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDU4OiBcItCc0LXQttC00YPQvdCw0YDQvtC00L3Ri9C5INC20LXQvdGB0LrQuNC5INC00LXQvdGMICg4INC80LDRgNGC0LApXCIsXHJcbiAgICAgICAgNTk6IFwi0J3QtdC00LXQu9GPINC00LXRgtGB0LrQvtC5INC60L3QuNCz0LggKNC/0L7RgdC70LXQtNC90Y/RjyDQvdC10LTQtdC70Y8g0LzQsNGA0YLQsClcIixcclxuICAgICAgICA2MDogXCLQndC+0LLRi9C5INCz0L7QtFwiLFxyXG4gICAgICAgIDYxOiBcItCd0L7Rh9GMINC40YHQutGD0YHRgdGC0LIgKNC+0LHRidC10LPQvtGA0L7QtNGB0LrQvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUpXCIsXHJcbiAgICAgICAgNjI6IFwi0J3QvtGH0Ywg0LzRg9C30LXQtdCyICjQvtCx0YnQtdCz0L7RgNC+0LTRgdC60L7QtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC1IDE4INC80LDRjylcIixcclxuICAgICAgICA2MzogXCLQndC+0YfRjCDQvNGD0LfRi9C60LggKNC+0LHRidC10LPQvtGA0L7QtNGB0LrQvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUpXCIsXHJcbiAgICAgICAgNjQ6IFwi0J7QsdGJ0LXRgNC+0YHRgdC40LnRgdC60LjQuSDQtNC10L3RjCDQsdC40LHQu9C40L7RgtC10LogKNCx0LjQsdC70LjQvtGC0LXQutCw0YDRjykgKDI3INC80LDRjylcIixcclxuICAgICAgICA2NTogXCLQn9Cw0YHRhdCwXCIsXHJcbiAgICAgICAgNjY6IFwi0J/RgNCw0LfQtNC90LjQuiDQstC10YHQvdGLINC4INGC0YDRg9C00LAgKDEg0LzQsNGPKVwiLFxyXG4gICAgICAgIDY3OiBcItCf0YPRiNC60LjQvdGB0LrQuNC5INC00LXQvdGMINCg0L7RgdGB0LjQuCAoNiDQuNGO0L3RjylcIixcclxuICAgICAgICA2ODogXCLQoNC+0LbQtNC10YHRgtCy0L4g0KXRgNC40YHRgtC+0LLQviAoNyDRj9C90LLQsNGA0Y8pXCIsXHJcbiAgICAgICAgNjk6IFwi0KHRgtCw0YDRi9C5INCd0L7QstGL0Lkg0LPQvtC0ICgxNCDRj9C90LLQsNGA0Y8pXCIsXHJcbiAgICAgICAgNzA6IFwi0KLQsNGC0YzRj9C90LjQvSDQtNC10L3RjCAoMjUg0Y/QvdCy0LDRgNGPKVwiLFxyXG4gICAgICAgIDcxOiBcItCk0LXRgdGC0LjQstCw0LvRjCDQnNC+0YHQutC+0LLRgdC60L7QtSDQm9C10YLQviDigJMg0JzQvtGB0LrQvtCy0YHQutC+0LUg0LLQsNGA0LXQvdGM0LUgKNC+0LHRidC10LPQvtGA0L7QtNGB0LrQvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUgMTMg0LDQstCz0YPRgdGC0LAg4oCTIDIzINCw0LLQs9GD0YHRgtCwKVwiLFxyXG4gICAgICAgIDcyOiBcItCk0LXRgdGC0LjQstCw0LvRjCDQn9GD0YLQtdGI0LXRgdGC0LLQuNC1INCyINCg0L7QttC00LXRgdGC0LLQviAo0L7QsdGJ0LXQs9C+0YDQvtC00YHQutC+0LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjQtSAxOCDQtNC10LrQsNCx0YDRjyDigJMgMTAg0Y/QvdCy0LDRgNGPKVwiXHJcbiAgICB9LFxyXG4gICAgQ2VsZWJyYXRpb25EaWN0OiB7XHJcbiAgICAgICAgMDogXCLQndC10YJcIixcclxuICAgICAgICAxOiBcItCR0LjQsdC70LjQvtC90L7Rh9GMICjQvtCx0YnQtdCz0L7RgNC+0LTRgdC60L7QtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC1KVwiLFxyXG4gICAgICAgIDI6IFwi0JHQuNGC0LLQsCDQv9C+0LQg0JzQvtGB0LrQstC+0LkgKDUg0LTQtdC60LDQsdGA0Y8pXCIsXHJcbiAgICAgICAgMzogXCLQktGB0LXQvNC40YDQvdCw0Y8g0LDQutGG0LjRjyAn0JTQtdC90Ywg0JfQtdC80LvQuCcgKDIyINCw0L/RgNC10LvRjylcIixcclxuICAgICAgICA0OiBcItCS0YHQtdC80LjRgNC90YvQuSDQtNC10L3RjCDQsdC+0YDRjNCx0Ysg0YEg0L3QsNGA0LrQvtC80LDQvdC40LXQuSDQuCDQvdCw0YDQutC+0LHQuNC30L3QtdGB0L7QvCAoMjYg0LjRjtC90Y8pXCIsXHJcbiAgICAgICAgNTogXCLQktGB0LXQvNC40YDQvdGL0Lkg0LTQtdC90Ywg0LrQvdC40LPQuCDQuCDQsNCy0YLQvtGA0YHQutC+0LPQviDQv9GA0LDQstCwICgyMyDQsNC/0YDQtdC70Y8pXCIsXHJcbiAgICAgICAgNjogXCLQktGB0LXQvNC40YDQvdGL0Lkg0LTQtdC90Ywg0LrRg9C70YzRgtGD0YDQvdC+0LPQviDRgNCw0LfQvdC+0L7QsdGA0LDQt9C40Y8g0LLQviDQuNC80Y8g0LTQuNCw0LvQvtCz0LAg0Lgg0YDQsNC30LLQuNGC0LjRjyAoMjEg0LzQsNGPKVwiLFxyXG4gICAgICAgIDc6IFwi0JLRgdC10LzQuNGA0L3Ri9C5INC00LXQvdGMINC/0LjRgdCw0YLQtdC70Y8gKDMg0LzQsNGA0YLQsClcIixcclxuICAgICAgICA4OiBcItCS0YHQtdC80LjRgNC90YvQuSDQtNC10L3RjCDQv9C+0Y3Qt9C40LggKDIxINC80LDRgNGC0LApXCIsXHJcbiAgICAgICAgOTogXCLQktGB0LXQvNC40YDQvdGL0Lkg0LTQtdC90Ywg0YDQtdCx0LXQvdC60LAgKDIwINC90L7Rj9Cx0YDRjylcIixcclxuICAgICAgICAxMDogXCLQktGB0LXQvNC40YDQvdGL0Lkg0LTQtdC90Ywg0YHQstC+0LHQvtC00Ysg0L/QtdGH0LDRgtC4ICgzINC80LDRjylcIixcclxuICAgICAgICAxMTogXCLQktGB0LXQvNC40YDQvdGL0Lkg0JTQtdC90Ywg0KHQvtCz0LvQsNGB0LjRjyDQuCDQn9GA0LjQvNC40YDQtdC90LjRjyAoNyDQvdC+0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgMTI6IFwi0JPQvtC0INC60LjQvdC+ICjQvtCx0YnQtdCz0L7RgNC+0LTRgdC60L7QtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC1IDIwMTYg0LPQvtC0KVwiLFxyXG4gICAgICAgIDEzOiBcItCT0L7QtNC+0LLRidC40L3QsCDQstGL0LLQvtC00LAg0KHQvtCy0LXRgtGB0LrQuNGFINCy0L7QudGB0Log0LjQtyDQkNGE0LPQsNC90LjRgdGC0LDQvdCwICgxNSDRhNC10LLRgNCw0LvRjylcIixcclxuICAgICAgICAxNDogXCLQk9C+0LTQvtCy0YnQuNC90LAg0J/QvtCx0LXQtNGLINCyINCS0J7QkiAxOTQxLTE5NDUgKDkg0LzQsNGPKVwiLFxyXG4gICAgICAgIDE1OiBcItCU0LXQvdGMINCy0YHQtdGFINCy0LvRjtCx0LvRkdC90L3Ri9GFICgxNCDRhNC10LLRgNCw0LvRjylcIixcclxuICAgICAgICAxNjogXCLQlNC10L3RjCDQk9C10YDQvtC10LIg0J7RgtC10YfQtdGB0YLQstCwICg5INC00LXQutCw0LHRgNGPKVwiLFxyXG4gICAgICAgIDE3OiBcItCU0LXQvdGMINCz0L7RgNC+0LTQsCAoNCDRgdC10L3RgtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDE4OiBcItCU0LXQvdGMINCT0L7RgdGD0LTQsNGA0YHRgtCy0LXQvdC90L7Qs9C+INGE0LvQsNCz0LAg0KDQvtGB0YHQuNC50YHQutC+0Lkg0KTQtdC00LXRgNCw0YbQuNC4ICgyMiDQsNCy0LPRg9GB0YLQsClcIixcclxuICAgICAgICAxOTogXCLQlNC10L3RjCDQt9Cw0YnQuNGC0L3QuNC60LAg0J7RgtC10YfQtdGB0YLQstCwICgyMyDRhNC10LLRgNCw0LvRjylcIixcclxuICAgICAgICAyMDogXCLQlNC10L3RjCDQt9Cw0YnQuNGC0Ysg0LTQtdGC0LXQuSAoMSDQuNGO0L3RjylcIixcclxuICAgICAgICAyMTogXCLQlNC10L3RjCDQt9C90LDQvdC40LkgKDEg0YHQtdC90YLRj9Cx0YDRjylcIixcclxuICAgICAgICAyMjogXCLQlNC10L3RjCDQmtC+0L3RgdGC0LjRgtGD0YbQuNC4INCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuCAoMTIg0LTQtdC60LDQsdGA0Y8pXCIsXHJcbiAgICAgICAgMjM6IFwi0JTQtdC90Ywg0LrQvtGB0LzQvtC90LDQstGC0LjQutC4ICgxMiDQsNC/0YDQtdC70Y8pXCIsXHJcbiAgICAgICAgMjQ6IFwi0JTQtdC90Ywg0LzQsNGC0LXRgNC4ICjQv9C+0YHQu9C10LTQvdC40Lkg0LLRi9GF0L7QtNC90L7QuSDQvdC+0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgMjU6IFwi0JTQtdC90Ywg0LzQvtC70L7QtNC10LbQuCAoMjcg0LjRjtC90Y8pXCIsXHJcbiAgICAgICAgMjY6IFwi0JTQtdC90Ywg0JzQpNCmICgyMiDQsNCy0LPRg9GB0YLQsClcIixcclxuICAgICAgICAyNzogXCLQlNC10L3RjCDQvdCw0YDQvtC00L3QvtCz0L4g0LXQtNC40L3RgdGC0LLQsCAoNCDQvdC+0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgMjg6IFwi0JTQtdC90Ywg0L/QsNC80Y/RgtC4INC4INGB0LrQvtGA0LHQuCAoMjIg0LjRjtC90Y8pXCIsXHJcbiAgICAgICAgMjk6IFwi0JTQtdC90Ywg0L/RgNCw0LLQvtGB0LvQsNCy0L3QvtC5INC60L3QuNCz0LggKDE0INC80LDRgNGC0LApXCIsXHJcbiAgICAgICAgMzA6IFwi0JTQtdC90Ywg0YDQsNCx0L7RgtC90LjQutCwINCw0YDRhdC40LLQsCAoMTAg0LzQsNGA0YLQsClcIixcclxuICAgICAgICAzMTogXCLQlNC10L3RjCDRgNCw0LHQvtGC0L3QuNC60L7QsiDQutGD0LvRjNGC0YPRgNGLINCg0L7RgdGB0LjQuCAoMjUg0LzQsNGA0YLQsClcIixcclxuICAgICAgICAzMjogXCLQlNC10L3RjCDRgNCw0LHQvtGC0L3QuNC60L7QsiDRgtC+0YDQs9C+0LLQu9C4LCDQsdGL0YLQvtCy0L7Qs9C+INC+0LHRgdC70YPQttC40LLQsNC90LjRjyDQvdCw0YHQtdC70LXQvdC40Y8g0Lgg0LbQuNC70LjRidC90L4t0LrQvtC80LzRg9C90LDQu9GM0L3QvtCz0L4g0YXQvtC30Y/QudGB0YLQstCwICgzINCy0L7RgdC60YDQtdGB0LXQvdGM0LUg0LzQsNGA0YLQsClcIixcclxuICAgICAgICAzMzogXCLQlNC10L3RjCDRgNCw0LfQs9GA0L7QvNCwINC90LXQvNC10YbQutC+LdGE0LDRiNC40YHRgtGB0LrQuNGFINCy0L7QudGB0Log0L/QvtC0INCh0YLQsNC70LjQvdCz0YDQsNC00L7QvCAoMiDRhNC10LLRgNCw0LvRjylcIixcclxuICAgICAgICAzNDogXCLQlNC10L3RjCDRgNC+0LTQvdC+0LPQviDRj9C30YvQutCwICgyMSDRhNC10LLRgNCw0LvRjylcIixcclxuICAgICAgICAzNTogXCLQlNC10L3RjCDQoNC+0YHRgdC40LggKDEyINC40Y7QvdGPKVwiLFxyXG4gICAgICAgIDM2OiBcItCU0LXQvdGMINGA0L7RgdGB0LjQudGB0LrQvtCz0L4g0LrQuNC90L4gKDI3INCw0LLQs9GD0YHRgtCwKVwiLFxyXG4gICAgICAgIDM3OiBcItCU0LXQvdGMINGA0L7RgdGB0LjQudGB0LrQvtC5INC90LDRg9C60LggKDgg0YTQtdCy0YDQsNC70Y8pXCIsXHJcbiAgICAgICAgMzg6IFwi0JTQtdC90Ywg0YDRg9GB0YHQutC+0LPQviDRj9C30YvQutCwICg2INC40Y7QvdGPKVwiLFxyXG4gICAgICAgIDM5OiBcItCU0LXQvdGMINGB0LXQvNGM0LggKDE1INC80LDRjylcIixcclxuICAgICAgICA0MDogXCLQlNC10L3RjCDRgdC10LzRjNC4INC70Y7QsdCy0Lgg0Lgg0LLQtdGA0L3QvtGB0YLQuCAoOCDQuNGO0LvRjylcIixcclxuICAgICAgICA0MTogXCLQlNC10L3RjCDRgdC70LDQstGP0L3RgdC60L7QuSDQv9C40YHRjNC80LXQvdC90L7RgdGC0Lgg0Lgg0LrRg9C70YzRgtGD0YDRiyAoMjQg0LzQsNGPKVwiLFxyXG4gICAgICAgIDQyOiBcItCU0LXQvdGMINGB0L3Rj9GC0LjRjyDQsdC70L7QutCw0LTRiyDQm9C10L3QuNC90LPRgNCw0LTQsCAoMjcg0Y/QvdCy0LDRgNGPKVwiLFxyXG4gICAgICAgIDQzOiBcItCU0LXQvdGMINGB0L7Qu9C40LTQsNGA0L3QvtGB0YLQuCDQsiDQsdC+0YDRjNCx0LUg0YEg0YLQtdGA0YDQvtGA0LjQt9C80L7QvCAoMyDRgdC10L3RgtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDQ0OiBcItCU0LXQvdGMINGB0L7RgtGA0YPQtNC90LjQutC+0LIg0L7RgNCz0LDQvdC+0LIg0LLQvdGD0YLRgNC10L3QvdC40YUg0LTQtdC7INCg0L7RgdGB0LjQudGB0LrQvtC5INCk0LXQtNC10YDQsNGG0LjQuCAoMTAg0L3QvtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDQ1OiBcItCU0LXQvdGMINGD0YfQuNGC0LXQu9GPICg1INC+0LrRgtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDQ2OiBcItCc0LDRgdC70LXQvdC40YbQsCAoMTMg0LzQsNGA0YLQsClcIixcclxuICAgICAgICA0NzogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQtNC10L3RjCDQtNC10YLRgdC60L7Qs9C+INGC0LXQu9C10LLQuNC00LXQvdC40Y8g0Lgg0YDQsNC00LjQvtCy0LXRidCw0L3QuNGPICg2INC80LDRgNGC0LApXCIsXHJcbiAgICAgICAgNDg6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0LTQtdC90Ywg0LTQtdGC0YHQutC+0Lkg0LrQvdC40LPQuCAoMiDQsNC/0YDQtdC70Y8pXCIsXHJcbiAgICAgICAgNDk6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0JTQtdC90Ywg0LjQvdCy0LDQu9C40LTQvtCyICgzINC00LXQutCw0LHRgNGPKVwiLFxyXG4gICAgICAgIDUwOiBcItCc0LXQttC00YPQvdCw0YDQvtC00L3Ri9C5INC00LXQvdGMINC40YHQutC+0YDQtdC90LXQvdC40Y8g0L3QtdCz0YDQsNC80L7RgtC90L7RgdGC0LggKDgg0YHQtdC90YLRj9Cx0YDRjylcIixcclxuICAgICAgICA1MTogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQtNC10L3RjCDQutC40L3QviAoMjgg0LTQtdC60LDQsdGA0Y8pXCIsXHJcbiAgICAgICAgNTI6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0LTQtdC90Ywg0LzQuNGA0LAgKDIxINGB0LXQvdGC0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgNTM6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0LTQtdC90Ywg0LzQvtC70L7QtNGR0LbQuCAoMTIg0LDQstCz0YPRgdGC0LApXCIsXHJcbiAgICAgICAgNTQ6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0LTQtdC90Ywg0LzRg9C30LXQtdCyICgxOCDQvNCw0Y8pXCIsXHJcbiAgICAgICAgNTU6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0LTQtdC90Ywg0LzRg9C30YvQutC4ICgxINC+0LrRgtGP0LHRgNGPKVwiLFxyXG4gICAgICAgIDU2OiBcItCc0LXQttC00YPQvdCw0YDQvtC00L3Ri9C5INCU0LXQvdGMINC/0L7QttC40LvRi9GFINC70Y7QtNC10LkgKDEg0L7QutGC0Y/QsdGA0Y8pXCIsXHJcbiAgICAgICAgNTc6IFwi0JzQtdC20LTRg9C90LDRgNC+0LTQvdGL0Lkg0JTQtdC90Ywg0YLQvtC70LXRgNCw0L3RgtC90L7RgdGC0LggKDE2INC90L7Rj9Cx0YDRjylcIixcclxuICAgICAgICA1ODogXCLQnNC10LbQtNGD0L3QsNGA0L7QtNC90YvQuSDQttC10L3RgdC60LjQuSDQtNC10L3RjCAoOCDQvNCw0YDRgtCwKVwiLFxyXG4gICAgICAgIDU5OiBcItCd0LXQtNC10LvRjyDQtNC10YLRgdC60L7QuSDQutC90LjQs9C4ICjQv9C+0YHQu9C10LTQvdGP0Y8g0L3QtdC00LXQu9GPINC80LDRgNGC0LApXCIsXHJcbiAgICAgICAgNjA6IFwi0J3QvtCy0YvQuSDQs9C+0LRcIixcclxuICAgICAgICA2MTogXCLQndC+0YfRjCDQuNGB0LrRg9GB0YHRgtCyICjQvtCx0YnQtdCz0L7RgNC+0LTRgdC60L7QtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC1KVwiLFxyXG4gICAgICAgIDYyOiBcItCd0L7Rh9GMINC80YPQt9C10LXQsiAo0L7QsdGJ0LXQs9C+0YDQvtC00YHQutC+0LUg0LzQtdGA0L7Qv9GA0LjRj9GC0LjQtSAxOCDQvNCw0Y8pXCIsXHJcbiAgICAgICAgNjM6IFwi0J3QvtGH0Ywg0LzRg9C30YvQutC4ICjQvtCx0YnQtdCz0L7RgNC+0LTRgdC60L7QtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC1KVwiLFxyXG4gICAgICAgIDY0OiBcItCe0LHRidC10YDQvtGB0YHQuNC50YHQutC40Lkg0LTQtdC90Ywg0LHQuNCx0LvQuNC+0YLQtdC6ICjQsdC40LHQu9C40L7RgtC10LrQsNGA0Y8pICgyNyDQvNCw0Y8pXCIsXHJcbiAgICAgICAgNjU6IFwi0J/QsNGB0YXQsFwiLFxyXG4gICAgICAgIDY2OiBcItCf0YDQsNC30LTQvdC40Log0LLQtdGB0L3RiyDQuCDRgtGA0YPQtNCwICgxINC80LDRjylcIixcclxuICAgICAgICA2NzogXCLQn9GD0YjQutC40L3RgdC60LjQuSDQtNC10L3RjCDQoNC+0YHRgdC40LggKDYg0LjRjtC90Y8pXCIsXHJcbiAgICAgICAgNjg6IFwi0KDQvtC20LTQtdGB0YLQstC+INCl0YDQuNGB0YLQvtCy0L4gKDcg0Y/QvdCy0LDRgNGPKVwiLFxyXG4gICAgICAgIDY5OiBcItCh0YLQsNGA0YvQuSDQndC+0LLRi9C5INCz0L7QtCAoMTQg0Y/QvdCy0LDRgNGPKVwiLFxyXG4gICAgICAgIDcwOiBcItCi0LDRgtGM0Y/QvdC40L0g0LTQtdC90YwgKDI1INGP0L3QstCw0YDRjylcIixcclxuICAgICAgICA3MTogXCLQpNC10YHRgtC40LLQsNC70Ywg0JzQvtGB0LrQvtCy0YHQutC+0LUg0JvQtdGC0L4g4oCTINCc0L7RgdC60L7QstGB0LrQvtC1INCy0LDRgNC10L3RjNC1ICjQvtCx0YnQtdCz0L7RgNC+0LTRgdC60L7QtSDQvNC10YDQvtC/0YDQuNGP0YLQuNC1IDEzINCw0LLQs9GD0YHRgtCwIOKAkyAyMyDQsNCy0LPRg9GB0YLQsClcIixcclxuICAgICAgICA3MjogXCLQpNC10YHRgtC40LLQsNC70Ywg0J/Rg9GC0LXRiNC10YHRgtCy0LjQtSDQsiDQoNC+0LbQtNC10YHRgtCy0L4gKNC+0LHRidC10LPQvtGA0L7QtNGB0LrQvtC1INC80LXRgNC+0L/RgNC40Y/RgtC40LUgMTgg0LTQtdC60LDQsdGA0Y8g4oCTIDEwINGP0L3QstCw0YDRjylcIlxyXG4gICAgfSxcclxuXHJcbiAgICBMaWJyYXJ5UmVnaW9uOiB7XHJcbiAgICAgICAgQ0FPOiAxLFxyXG4gICAgICAgIFZBTzogMixcclxuICAgICAgICBaQU86IDMsXHJcbiAgICAgICAgWkVMQU86IDQsXHJcbiAgICAgICAgTk9WT01PU0NPVzogNSxcclxuICAgICAgICBTQU86IDYsXHJcbiAgICAgICAgU1ZBTzogNyxcclxuICAgICAgICBTWkFPOiA4LFxyXG4gICAgICAgIFVBTzogMTAsXHJcbiAgICAgICAgVVZBTzogMTEsXHJcbiAgICAgICAgVVpBTzogMTIsXHJcbiAgICB9LFxyXG4gICAgTGlicmFyeVJlZ2lvbkRpY3Q6IHtcclxuICAgICAgICAxOiAn0KbQkdChIMKr0KbQkNCewrsnLFxyXG4gICAgICAgIDI6ICfQptCR0KEgwqvQktCQ0J7CuycsXHJcbiAgICAgICAgMzogJ9Cm0JHQoSDCq9CX0JDQnsK7JyxcclxuICAgICAgICA0OiAn0KbQkdChIMKr0JfQtdC70JDQnsK7JyxcclxuICAgICAgICA1OiAn0KbQkdChIMKr0J3QvtCy0L7QvNC+0YHQutC+0LLRgdC60LDRj8K7JyxcclxuICAgICAgICA2OiAn0KbQkdChIMKr0KHQkNCewrsnLFxyXG4gICAgICAgIDc6ICfQptCR0KEgwqvQodCS0JDQnsK7JyxcclxuICAgICAgICA4OiAn0KbQkdChIMKr0KHQl9CQ0J7CuycsXHJcbiAgICAgICAgMTA6ICfQptCR0KEgwqvQrtCQ0J7CuycsXHJcbiAgICAgICAgMTE6ICfQptCR0KEgwqvQrtCS0JDQnsK7JyxcclxuICAgICAgICAxMjogJ9Cm0JHQoSDCq9Cu0JfQkNCewrsnLFxyXG4gICAgfSxcclxuXHJcbiAgICBIZWxwUmVxdWVzdFR5cGU6IHtcclxuICAgICAgICBXb3JraW5nUGxhY2U6IDAsXHJcbiAgICAgICAgUEM6IDEsXHJcbiAgICAgICAgT2ZmaWNlRXF1aXA6IDIsXHJcbiAgICAgICAgU29mdHdhcmU6IDMsXHJcbiAgICAgICAgTWV0ZXJzQWxhcm1zOiA0LFxyXG4gICAgICAgIEV2ZW50VGVjaFByb3Zpc2lvbjogNSxcclxuICAgICAgICBSZXBhaXI6IDYsXHJcbiAgICAgICAgUmVwbGFjZUluc3RhbGw6IDcsXHJcbiAgICAgICAgSVQ6IDgsXHJcbiAgICAgICAgQUhEOiA5XHJcbiAgICB9LFxyXG4gICAgSGVscFJlcXVlc3RUeXBlRGljdDoge1xyXG4gICAgICAgIDA6ICfQntCg0JPQkNCd0JjQl9CQ0KbQmNCvINCg0JDQkdCe0KfQldCT0J4g0JzQldCh0KLQkCcsXHJcbiAgICAgICAgMTogJ9Ce0JHQodCb0KPQltCY0JLQkNCd0JjQlSDQmtCe0JzQn9Cs0K7QotCV0KDQntCSJyxcclxuICAgICAgICAyOiAn0J7QkdCh0JvQo9CW0JjQktCQ0J3QmNCVINCe0KDQk9Ci0JXQpdCd0JjQmtCYJyxcclxuICAgICAgICAzOiAn0J7QkdCh0JvQo9CW0JjQktCQ0J3QmNCVINCf0KDQntCT0KDQkNCc0JzQndCe0JPQniDQntCR0JXQodCf0JXQp9CV0J3QmNCvJyxcclxuICAgICAgICA0OiAn0J3QkNCR0JvQrtCU0JXQndCY0JUsINCh0KfQldCi0KfQmNCa0JgsINCh0JjQk9Cd0JDQm9CY0JfQkNCm0JjQrycsXHJcbiAgICAgICAgNTogJ9Ci0JXQpdCd0JjQp9CV0KHQmtCe0JUg0KHQntCf0KDQntCS0J7QltCU0JXQndCY0JUg0JzQldCg0J7Qn9Cg0JjQr9Ci0JjQmScsXHJcbiAgICAgICAgNjogJ9Cg0JXQnNCe0J3QoicsXHJcbiAgICAgICAgNzogJ9CX0JDQnNCV0J3QkCAvINCj0KHQotCQ0J3QntCS0JrQkCcsXHJcbiAgICAgICAgODogJ9CY0KInLFxyXG4gICAgICAgIDk6ICfQkNCl0JQnLFxyXG4gICAgfSxcclxuICAgIEhlbHBSZXF1ZXN0VHlwZUlUTGlzdDogW10sICAvL2ZpbGxlZCBpbiBhcHAuanNcclxuICAgIEhlbHBSZXF1ZXN0VHlwZUFIRExpc3Q6IFtdLCAvL2ZpbGxlZCBpbiBhcHAuanNcclxuXHJcbiAgICBIZWxwUmVxdWVzdFN0YXR1czoge1xyXG4gICAgICAgIE5ldzogMCxcclxuICAgICAgICBBY3RpdmU6IDEsXHJcbiAgICAgICAgQ2xvc2VkOiAyLFxyXG4gICAgICAgIFJlamVjdGVkOiAzLFxyXG4gICAgICAgIFJldHVybmVkOiA0XHJcbiAgICAgICAgLy8gMSAtINCyINGA0LDQsdC+0YLQtVxyXG4gICAgICAgIC8vIDIgLSDQt9Cw0LrRgNGL0YLRi9C1XHJcbiAgICAgICAgLy8gMyAtINC+0YLQutC70L7QvdC10L3QvdGL0LVcclxuICAgICAgICAvLyA0IC0g0LLQvtC30LLRgNCw0YnQtdC90L3Ri9C1XHJcbiAgICB9LFxyXG4gICAgSGVscFJlcXVlc3RTdGF0dXNEaWN0OiB7XHJcbiAgICAgICAgMDogJ9Cd0L7QstCw0Y8nLFxyXG4gICAgICAgIDE6ICfQkiDRgNCw0LHQvtGC0LUnLFxyXG4gICAgICAgIDI6ICfQl9Cw0LrRgNGL0YLQsCcsXHJcbiAgICAgICAgMzogJ9Ce0YLQutC70L7QvdC10L3QsCcsXHJcbiAgICAgICAgNDogJ9CS0L7Qt9Cy0YDQsNGJ0LXQvdCwJ1xyXG4gICAgfSxcclxuICAgIEhlbHBSZXF1ZXN0UHJpb3JpdHk6IHtcclxuICAgICAgICBMb3c6IDEsXHJcbiAgICAgICAgTWlkOiAyLFxyXG4gICAgICAgIEhpZ2g6IDMsXHJcbiAgICAgICAgRXhhY3REYXRlOiA0LFxyXG4gICAgfSxcclxuICAgIEhlbHBSZXF1ZXN0UHJpb3JpdHlEaWN0OntcclxuICAgICAgICAxOiAn0J3QuNC30LrQuNC5JyxcclxuICAgICAgICAyOiAn0KHRgNC10LTQvdC40LknLFxyXG4gICAgICAgIDM6ICfQktGL0YHQvtC60LjQuScsXHJcbiAgICAgICAgNDogJ9Ci0L7Rh9C90LDRjyDQtNCw0YLQsCcsXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBUZWNobmljaWFuRGljdDoge1xyXG4gICAgICAgICctMSc6ICfQndC10LjQt9Cy0LXRgdGC0L3QvicsXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBNZXRlclR5cGU6IHtcclxuICAgICAgICBXYXRlckNvbGQ6IDAsXHJcbiAgICAgICAgV2F0ZXJIb3Q6ICAxLFxyXG4gICAgICAgIEVsZWN0cmljaXR5OiAgMixcclxuICAgIH0sXHJcbiAgICBNZXRlclR5cGVEaWN0OiB7XHJcbiAgICAgICAgMDogJ9Cl0JLQoScsXHJcbiAgICAgICAgMTogJ9CT0JLQoScsXHJcbiAgICAgICAgMjogJ9Ct0LvQtdC60YLRgNC40YfQtdGB0YLQstC+JyxcclxuICAgIH0sXHJcblxyXG4gICAgU3Vic2NyaWJlVHlwZToge1xyXG4gICAgICAgIFZpc2l0UmVnaXN0ZXJBZGQ6IDEsXHJcbiAgICAgICAgVmlzaXRWaXNpdEFkZDogMixcclxuICAgICAgICBWaXNpdEV2ZW50QWRkOiAzLFxyXG4gICAgICAgIEJvb2t3YXJlOiA0LFxyXG4gICAgICAgIE1vdmluZ3M6IDUsXHJcbiAgICAgICAgU3VtbWFyeUNoYW5nZTogNixcclxuICAgICAgICBQYXNzcG9ydENoYW5nZTogNyxcclxuICAgICAgICBEYXRhSW5wdXRQbGFuOiA4LFxyXG4gICAgICAgIERhdGFJbnB1dEV2ZW50OiA5LFxyXG4gICAgICAgIFN1cHBvcnRBZGQ6IDEwLFxyXG4gICAgICAgIFN1cHBvcnRNZXNzYWdlQWRkOiAxMCxcclxuICAgIH1cclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRGljdGlvbmFyeTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIm1vZHVsZS5leHBvcnRzID0gY2xhc3MgRHJhZ0FuZERyb3BJdGVtIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge0RyYWdBbmREcm9wSXRlbX0gY29cclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IgKHtcclxuICAgICAgICAgICAgICAgICAgICAgVGFyZ2V0ID0gbnVsbCxcclxuICAgICAgICAgICAgICAgICB9KVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMuX1RhcmdldCA9IFRhcmdldDtcclxuICAgICAgICBsZXQgZHJhZ1NyY0VsID0gbnVsbDtcclxuICAgICAgICBsZXQgdGhhdCAgICAgID0gdGhpcztcclxuICAgICAgICB0aGlzLl9oYW5kbGVEcmFnU3RhcnQgPSAoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLnRhcmdldC5zdHlsZS5vcGFjaXR5ID0gJzEnOyAvLyB0aGlzIC8gZS50YXJnZXQgaXMgdGhlIHNvdXJjZSBub2RlLlxyXG4gICAgICAgICAgICBkcmFnU3JjRWwgPSBlLnRhcmdldDtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoYXQuX2hhbmRsZURyYWdPdmVyID0gKGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcclxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsgLy8gTmVjZXNzYXJ5LiBBbGxvd3MgdXMgdG8gZHJvcC5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID0gJ21vdmUnO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGF0Ll9oYW5kbGVEcmFnRW50ZXIgPSAoZSkgPT4ge1xyXG4gICAgICAgICAgICAvLyB0aGlzIC8gZS50YXJnZXQgaXMgdGhlIGN1cnJlbnQgaG92ZXIgdGFyZ2V0LlxyXG4gICAgICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKCdvdmVyJyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGF0Ll9oYW5kbGVEcmFnTGVhdmUgPSAoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdvdmVyJyk7IC8vIHRoaXMgLyBlLnRhcmdldCBpcyBwcmV2aW91cyB0YXJnZXQgZWxlbWVudC5cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoYXQuX2lzQXRyaWJ1dGUgPSAoKSA9PiB7XHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhhdC5faGFuZGxlRHJvcCA9IChlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlLnN0b3BQcm9wYWdhdGlvbikge1xyXG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsgLy8gc3RvcHMgdGhlIGJyb3dzZXIgZnJvbSByZWRpcmVjdGluZy5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKGRyYWdTcmNFbC5wYXJlbnROb2RlKTtcclxuXHJcbiAgICAgICAgICAgIC8vaWYgKGUudGFyZ2V0LnBhcmVudE5vZGUuaGFzQXR0cmlidXRlcygnZHJhZ2dhYmxlJykpIHtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZS50YXJnZXQuaGFzQXR0cmlidXRlcygnZHJhZ2dhYmxlJykpO1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJzEyMzEyMycpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vaWYgKGRyYWdTcmNFbCAhPSBlLnRhcmdldCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgc291cmNlIGNvbHVtbiBIVE1MIHRvIHRoZSBIVE1MIG9mIHRoZSBjb2x1bW4gd2UgZHJvcHBlZCBvbi5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGxQbGFjZSAgID0gZS50YXJnZXQucGFyZW50Tm9kZS5jbG9uZU5vZGUoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZS50YXJnZXQucGFyZW50Tm9kZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShmaWxsUGxhY2UsIGRyYWdTcmNFbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShkcmFnU3JjRWwsIGUudGFyZ2V0LnBhcmVudE5vZGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZS50YXJnZXQucGFyZW50Tm9kZSwgZmlsbFBsYWNlKTtcclxuICAgICAgICAgICAgICAgICAgICBmaWxsUGxhY2UucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICAvL31cclxuXHJcbiAgICAgICAgICAgIC8vfVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhhdC5faGFuZGxlRHJhZ0VuZCA9IChlKSA9PiB7XHJcbiAgICAgICAgICAgIC8vIHRoaXMvZS50YXJnZXQgaXMgdGhlIHNvdXJjZSBub2RlLlxyXG4gICAgICAgICAgICBlLnRhcmdldC5zdHlsZS5vcGFjaXR5ID0gJzEnO1xyXG4gICAgICAgICAgICBUYXJnZXQuZm9yRWFjaChmdW5jdGlvbiAoZWxlbSkge1xyXG4gICAgICAgICAgICAgICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKCdvdmVyJyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIFRhcmdldC5mb3JFYWNoKGZ1bmN0aW9uKGVsZW0pIHtcclxuICAgICAgICAgICAgZWxlbS5hZGRFdmVudExpc3RlbmVyKCdkcmFnc3RhcnQnLCB0aGF0Ll9oYW5kbGVEcmFnU3RhcnQsIGZhbHNlKTtcclxuICAgICAgICAgICAgZWxlbS5hZGRFdmVudExpc3RlbmVyKCdkcmFnZW50ZXInLCB0aGF0Ll9oYW5kbGVEcmFnRW50ZXIsIGZhbHNlKTtcclxuICAgICAgICAgICAgZWxlbS5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIHRoYXQuX2hhbmRsZURyYWdPdmVyLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGVsZW0uYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2xlYXZlJywgdGhhdC5faGFuZGxlRHJhZ0xlYXZlLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGVsZW0uYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsIHRoYXQuX2hhbmRsZURyb3AsIGZhbHNlKTtcclxuICAgICAgICAgICAgZWxlbS5hZGRFdmVudExpc3RlbmVyKCdkcmFnZW5kJywgdGhhdC5faGFuZGxlRHJhZ0VuZCwgZmFsc2UpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHdpbmRvdy5kZGRkID0gdGhpcztcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMpO1xyXG4gICAgfVxyXG4gICAgZ2V0IFRhcmdldCgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9UYXJnZXQ7XHJcbiAgICB9XHJcbiAgICBzZXQgVGFyZ2V0KHYpe1xyXG4gICAgICAgIHRoaXMuX1RhcmdldCA9IHY7XHJcbiAgICB9XHJcblxyXG59O1xyXG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChcclxuICAgIHtcclxuICAgICAgICBDb250cm9sID0gbnVsbCxcclxuICAgICAgICB0YXJnZXQgPSAnJyxcclxuICAgICAgICBLZXkgPSAnS2V5JyxcclxuICAgICAgICBWYWx1ZSA9ICdWYWx1ZScsXHJcbiAgICAgICAgQ2hlY2tLZXkgPSAnQ2hlY2snLFxyXG4gICAgICAgIERhdGEgPSAoKSA9PiAoW10pLFxyXG4gICAgICAgIG9uT0sgPSAoKSA9PiB7fSxcclxuICAgICAgICByaWdodCA9ICcnLFxyXG4gICAgICAgIGNoZWNrZWQgPSAnY2hlY2tlZCcsIC8vICcnIC0g0L3QuNGH0LXQs9C+INC90LUg0LLRi9Cx0YDQsNC90L4sICdjaGVja2VkJyAtINCy0YHQtSDQstGL0LHRgNCw0L3QviwgJ2tleScgLSDQv9C+INC60LvRjtGH0YNcclxuICAgICAgICBBbGxTZWxlY3RvciA9IHRydWUsXHJcbiAgICAgICAgVXBkYXRlTGlzdExpdmUgPSBmYWxzZVxyXG4gICAgfSA9IHt9ICkge1xyXG4gICAgbGV0IEFsbFNlbGVjdG9yVGV4dCA9IGA8bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiYWxsLWNoZWNrXCIgJHtjaGVja2VkfT7QktGB0LU8L2xhYmVsPmA7XHJcbiAgICBpZiAoIUFsbFNlbGVjdG9yKVxyXG4gICAgICAgIEFsbFNlbGVjdG9yVGV4dCA9ICcnO1xyXG4gICAgZWxzZSBBbGxTZWxlY3RvciA9IHRydWU7XHJcblxyXG4gICAgcmV0dXJuIG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgICAgIFRhcmdldDogdGFyZ2V0LFxyXG4gICAgICAgIFR5cGU6ICdzZWxlY3QtZmlsdGVyJyxcclxuICAgICAgICBDb250ZW50OlxyXG4gICAgICAgICAgICBgPGRpdiBjbGFzcz1cImZpbHRlci1zZWxlY3RvciAke3JpZ2h0fVwiPlxyXG4gICAgICAgICAgICAgICAgJHtBbGxTZWxlY3RvclRleHR9XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid3JhcFwiPlxyXG4gICAgICAgICAgICAgICAge3sjZWFjaCBJdGVtTGlzdH19XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiB2YWx1ZT1cInt7JHtLZXl9fX1cIiBjbGFzcz1cIml0ZW0tY2hlY2tcIiAke2NoZWNrZWQgPT09ICdjaGVja2VkJyA/ICdjaGVja2VkJyA6ICcnfSB7e0NoZWNrS2V5fX0+e3ske1ZhbHVlfX19PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIHt7I2VuZGVhY2h9fVxyXG4gICAgICAgICAgICAgICAgPC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImwtYnV0dG9uIGJ1dHRvbiBvay1idXR0b25cIj5PSzwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLlByb3RvLkRhdGEuSXRlbUxpc3QgfHwgVXBkYXRlTGlzdExpdmUpXHJcbiAgICAgICAgICAgICAgICB0aGlzLlByb3RvLlNldFByb3BlcnR5KCdJdGVtTGlzdCcsICh0eXBlb2YgRGF0YSA9PT0gJ2Z1bmN0aW9uJyA/IERhdGEoKSA6IERhdGEpKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIEhpZGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5uZWVkVXBkYXRlID0gdHJ1ZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIFByb3RvOiB7SXRlbUxpc3Q6IG51bGx9LFxyXG4gICAgICAgIFByb3BGb3JtYXQ6IHtcclxuICAgICAgICAgICAgQ2hlY2tLZXk6ICh4LCBwKSA9PiBjaGVja2VkID09PSAna2V5JyAmJiBwW0NoZWNrS2V5XSA/ICdjaGVja2VkJyA6ICcnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBQcm9wczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyB0aGlzLm5lZWRVcGRhdGUgPSB0cnVlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLlJlc2V0U2VsZWN0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgZWxlbSBvZiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChMdXJlLlNlbGVjdEFsbCgnLndyYXAgaW5wdXQnLCB0aGlzLkNvbnRlbnQpKSlcclxuICAgICAgICAgICAgICAgICAgICBlbGVtLmNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoQ29udHJvbCkgQ29udHJvbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gdGhpcy5TaG93KCkpO1xyXG4gICAgICAgICAgICB0aGlzLkFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJy5vay1idXR0b24nLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhhKTtcclxuICAgICAgICAgICAgICAgIG9uT0soQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKEx1cmUuU2VsZWN0QWxsKCcud3JhcCBpbnB1dDpjaGVja2VkJywgdGhpcy5Db250ZW50KSwgeCA9PiB4LnZhbHVlKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkhpZGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmIChBbGxTZWxlY3Rvcikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAnLndyYXAgaW5wdXQnLCBlID0+IHRoaXMuU2VsZWN0KCcuYWxsLWNoZWNrJykuY2hlY2tlZCA9IGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5hbGwtY2hlY2snLCBlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBlbGVtIG9mIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKEx1cmUuU2VsZWN0QWxsKCcud3JhcCBpbnB1dCcsIHRoaXMuQ29udGVudCkpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtLmNoZWNrZWQgPSBlLmN1cnJlbnRUYXJnZXQuY2hlY2tlZDtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQgIT09IHRoaXMuQ29udGVudCAmJiBlLnRhcmdldCAhPT0gQ29udHJvbCAmJiBlLnRhcmdldCAhPT0gdGFyZ2V0ICYmICBlLnRhcmdldC5vZmZzZXRQYXJlbnQgIT09IHRoaXMuQ29udGVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGUudGFyZ2V0LCBlLnRhcmdldC5vZmZzZXRQYXJlbnQgPT09IHRoaXMuQ29udGVudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcbiIsImxldCBGb290ZXIgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdGb290ZXInLFxyXG4gICAgVGFyZ2V0OiAnYm9keScsXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cImZvb3RlciBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9vdC1sZWZ0IGwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvb3QtaXRlbVwiPtCe0YDQs9Cw0L3QuNC30LDRhtC40Y86IHt7T3JnYW5pc2F0aW9ufX08L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb290LWl0ZW1cIj58PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvb3QtaXRlbVwiPklEINC60LvQuNC10L3RgtCwOiB7e0NsaWVudElEfX08L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb290LWl0ZW1cIj58PC9kaXY+ICBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9vdC1pdGVtXCI+4oSWINC70LjRhtC10L3Qt9C40Lg6IHt7TGljZW5zZUlEfX08L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvb3QtcmlnaHQgbC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9vdC1pdGVtXCI+wqkgJHtMdXJlLkRhdGUoKS5Gb3JtYXQoJ1lZWVknKX0g0JHQuNCx0LvQuNC+UFJPPC9kaXY+ICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb290LWl0ZW1cIj58PC9kaXY+ICBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9vdC1pdGVtXCI+0JrRgNGD0LPQu9C+0YHRg9GC0L7Rh9C90LDRjyDRgdC70YPQttCx0LAg0YLQtdGF0L3QuNGH0LXRgdC60L7QuSDQv9C+0LTQtNC10YDQttC60LggOC04MDAtMjI4LTE0LTg4PC9kaXY+ICBcclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFN0YXRlOiB7XHJcbiAgICAgICAgT3JnYW5pc2F0aW9uOiAn0JPQkdCj0Jog0LMuINCc0L7RgdC60LLRiyDCq9Cm0JHQoSDQptCQ0J7CuycsXHJcbiAgICAgICAgQ2xpZW50SUQ6ICdMMjM0MzI0MzI0MzI0JyxcclxuICAgICAgICBMaWNlbnNlSUQ6ICcwMTAyMDEwMjAxMDIwMTAyMDEnLFxyXG4gICAgfSxcclxuICAgIEFmdGVyQnVpbGQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL3RoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ05hbWUnLCBMdXJlLlVzZXIuTmFtZSk7XHJcbiAgICAgICAgLy90aGlzLlByb3RvLlNldFByb3BlcnR5KCdQb3NpdGlvbicsIERpY3Rpb25hcnkuVXNlclBvc2l0aW9uRGljdFtMdXJlLlVzZXIuUG9zaXRpb25JRF0pO1xyXG4gICAgfVxyXG59KTsiLCJtb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIEdldERpZ2l0KG51bWJlciwgbiwgTnVtYmVyU29ja2V0cz00KXtcclxuICAgICAgICBsZXQgY291bnQgPSBudW1iZXIudG9TdHJpbmcoKTtcclxuICAgICAgICBpZiAobiA8PSBOdW1iZXJTb2NrZXRzIC0gY291bnQubGVuZ3RoKXtcclxuICAgICAgICAgICAgcmV0dXJuIFwiMFwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY291bnQuY2hhckF0KG4tKE51bWJlclNvY2tldHMrMS1jb3VudC5sZW5ndGgpKTtcclxuICAgIH1cclxufTsiLCJtb2R1bGUuZXhwb3J0cyA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0hlYWRsaW5lJyxcclxuICAgIFRhcmdldDogJy5oZWFkZXInLFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJoZWFkbGluZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGxpbmUtbG9nb1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGxpbmUtYnVzaFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGxpbmUtdXNlciBsLWNvbCBsLWZsZXgtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBvc2l0aW9uXCI+e3tQb3NpdGlvbn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hbWVcIj57e05hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1Ym1lbnUtY29udHJvbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLW1lbnVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaSB1c2VyLW1lbnVfYWNjb3VudFwiPtCj0YfQtdGC0L3QsNGPINC30LDQv9C40YHRjDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpIGV4aXRcIj7QktGL0YXQvtC0PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PmAsXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5TZWxlY3QoJy5leGl0JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xyXG4gICAgICAgICAgICBhcGkuTG9nT2ZmKHtUaGVuOiAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGFwaS5vblVuYXV0aCgpO1xyXG4gICAgICAgICAgICAgICAgfX0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuUHJvdG8uU2V0UHJvcGVydHkoJ05hbWUnLCBMdXJlLlVzZXIuTmFtZSk7XHJcbiAgICAgICAgdGhpcy5Qcm90by5TZXRQcm9wZXJ0eSgnUG9zaXRpb24nLCBMdXJlLlVzZXIuUG9zaXRpb24pO1xyXG4gICAgfVxyXG59KTsiLCJsZXQgQ29vbERvd24gPSAzMDAwO1xyXG5cclxubGV0IFdpbmRvd0ludGVydmFsID0gbnVsbDtcclxubGV0IFN1YnNjcmliZXJzID0gW107XHJcbmxldCBMYXN0SUQgPSAtMTtcclxubGV0IENsaWVudElEID0gTHVyZS5TdHJpbmcuUmFuZG9tKDM2LCB0cnVlKTsgLy9zb21ldGhpbmcgbGlrZSAnUTNkUDllWGsyazhsWjAya1lVVlNtTGxXZ2dTbjI2NWtsZDVYJ1xyXG5cclxuZnVuY3Rpb24gR2V0SGlzdG9yeSgpIHtcclxuICAgIGFwaS5DYWNoZV9HZXRNYXN0ZXJIaXN0b3J5TGFzdChMYXN0SUQsIHtcclxuICAgICAgICBUaGVuOiBhc3luYyAoaGlzdG9yeSk9PntcclxuICAgICAgICAgICAgLypmb3IgKGxldCBpID0gMDsgaSA8IGhpc3RvcnkubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgbGV0IE1hbiA9IGF3YWl0IERhdGFTdG9yYWdlLkdldFVzZXIoaGlzdG9yeVtpXS5NYW5hZ2VySUQpO1xyXG4gICAgICAgICAgICAgICAgaGlzdG9yeVtpXS5NYW5hZ2VyID0gTWFuLk5hbWU7XHJcbiAgICAgICAgICAgICAgICBoaXN0b3J5W2ldLlBvc2l0aW9uID0gTWFuLlBvc2l0aW9uO1xyXG4gICAgICAgICAgICB9Ki9cclxuICAgICAgICAgICAgaWYgKExhc3RJRCA+IDAgJiYgaGlzdG9yeS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgIENoZWNrKGhpc3RvcnkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChoaXN0b3J5Lmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgTGFzdElEID0gaGlzdG9yeS5MYXN0KCkuSUQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIENhdGNoOiAoZSk9PntcclxuICAgICAgICAgICAgLy9IaXN0b3J5TWFzdGVyLlN0b3AoKTtcclxuICAgICAgICAgICAgLy9IaXN0b3J5TWFzdGVyLlJlc2V0KCk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5lcnJvcihlKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBDaGVjayhoaXN0b3J5KSB7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IFN1YnNjcmliZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IFN1YnNjcmliZXIgPSBTdWJzY3JpYmVyc1tpXTtcclxuICAgICAgICBpZiAoU3Vic2NyaWJlci5faXNEaXNhYmxlZCl7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgRGF0YSA9IGhpc3RvcnkuV2hlcmUoU3Vic2NyaWJlci5fQ29uZGl0aW9uKTtcclxuICAgICAgICBpZiAoRGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIFN1YnNjcmliZXIuX09uU3Vic2NyaWJlKEx1cmUuT2JqZWN0LkNsb25lKERhdGEpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmxldCBIaXN0b3J5TWFzdGVyID0ge1xyXG4gICAgUnVuKEludGVydmFsPTIwMDApe1xyXG4gICAgICAgIFdpbmRvd0ludGVydmFsID0gd2luZG93LnNldEludGVydmFsKEdldEhpc3RvcnksIEludGVydmFsKTtcclxuICAgIH0sXHJcbiAgICBTdG9wKCl7XHJcbiAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwoV2luZG93SW50ZXJ2YWwpO1xyXG4gICAgICAgIFdpbmRvd0ludGVydmFsID0gbnVsbDtcclxuICAgIH0sXHJcbiAgICBSZXNldCgpe1xyXG4gICAgICAgIC8vY29uc29sZS5pbmZvKCdIaXN0b3J5TWFzdGVyLlJlc2V0Jyk7XHJcbiAgICAgICAgdGhpcy5TdG9wKCk7XHJcbiAgICAgICAgd2luZG93LnNldFRpbWVvdXQodGhpcy5SdW4sIENvb2xEb3duKTtcclxuICAgIH0sXHJcbiAgICBBZGRTdWJzY3JpcHRpb24oU3Vic2NyaXB0aW9uKXtcclxuICAgICAgICBTdWJzY3JpYmVycy5wdXNoKFN1YnNjcmlwdGlvbik7XHJcbiAgICB9LFxyXG5cclxuICAgIEluY3JlYXNlTGFzdElEKCl7XHJcbiAgICAgICAgTGFzdElEKys7XHJcbiAgICB9LFxyXG4gICAgRGVjcmVhc2VMYXN0SUQoKXtcclxuICAgICAgICBMYXN0SUQrKztcclxuICAgIH1cclxufTtcclxuXHJcblxyXG5cclxubGV0IEhNRCA9IHsgIC8vaGlzdG9yeSBtYXN0ZXIgZGljdGlvbmFyeVxyXG4gICAgVHlwZToge1xyXG4gICAgICAgIFZpc2l0YXRpb246e1xyXG4gICAgICAgICAgICBJRDogMCxcclxuICAgICAgICAgICAgTWVzc2FnZVR5cGU6e1xyXG4gICAgICAgICAgICAgICAgUmVnaXN0ZXI6ICAgMSxcclxuICAgICAgICAgICAgICAgIENvdW50OiAgICAgIDIsXHJcbiAgICAgICAgICAgICAgICBFdmVudEZyZWU6ICAzLFxyXG4gICAgICAgICAgICAgICAgRXZlbnRQYWlkOiAgNCxcclxuICAgICAgICAgICAgICAgIENsdWJGcmVlOiAgIDUsXHJcbiAgICAgICAgICAgICAgICBDbHViUGFpZDogICA2LFxyXG4gICAgICAgICAgICAgICAgRXhoaWJpdGlvbjogNyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBUeXBlSUQ6e1xyXG4gICAgICAgIFZpc2l0YXRpb246IDAsXHJcbiAgICAgICAgQm9va3dhcmU6IDEsXHJcbiAgICAgICAgU3VtbWFyeTogMixcclxuICAgICAgICBQYXNzcG9ydDogMyxcclxuICAgICAgICBNZXRlcnM6IDQsXHJcbiAgICAgICAgU2V0dXBFdmVudHM6IDUsXHJcbiAgICB9XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEhpc3RvcnlNYXN0ZXI7IiwibGV0IEhpc3RvcnlNYXN0ZXIgPSByZXF1aXJlKCcuL2hpc3RvcnktbWFzdGVyJyk7XHJcblxyXG4vKipcclxuICogQHR5cGVkZWYge09iamVjdH0gSGlzdG9yeUl0ZW1cclxuICogQHByb3BlcnR5IHtpbnR9IElEXHJcbiAqXHJcbiAqIEBwcm9wZXJ0eSB7RGF0ZX0gRGF0ZUNyZWF0ZWRcclxuICogQHByb3BlcnR5IHtEYXRlfSBEYXRlVmFsdWVcclxuICogQHByb3BlcnR5IHtpbnR9IFR5cGVJRFxyXG4gKiBAcHJvcGVydHkge2ludH0gTWVzc2FnZVR5cGVcclxuXHJcbiAqIEBwcm9wZXJ0eSB7aW50fSBJdGVtSURcclxuICogQHByb3BlcnR5IHtpbnR9IExpYnJhcnlJRFxyXG4gKiBAcHJvcGVydHkge2ludH0gTG9naW5JRFxyXG4gKiBAcHJvcGVydHkge2ludH0gVmFsdWUxXHJcbiAqIEBwcm9wZXJ0eSB7aW50fSBWYWx1ZTJcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IE1lc3NhZ2VUZXh0MVxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gTWVzc2FnZVRleHQyXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqQGNhbGxiYWNrIENvbmRpdGlvbl9jYWxsXHJcbiAqIEBwYXJhbSB7SGlzdG9yeUl0ZW19IGhpc3RJdGVtXHJcbiAqL1xyXG4vKipcclxuICpAY2FsbGJhY2sgT25TdWJzY3JpYmVfY2FsbFxyXG4gKiBAcGFyYW0ge1tIaXN0b3J5SXRlbV19IGhpc3RJdGVtXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEB0eXBlZGVmIHtPYmplY3R9IEhpc3RvcnlDb25zdHJ1Y3RvclxyXG4gKiBAcHJvcGVydHkge0NvbmRpdGlvbl9jYWxsfSBDb25kaXRpb25cclxuICogQHByb3BlcnR5IHtPblN1YnNjcmliZV9jYWxsfSBPblN1YnNjcmliZVxyXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IGlzSW5zdGFudFN1YnNjcmliZVxyXG4gKi9cclxuZnVuY3Rpb24gSE1TQ29uc3RydWN0b3Ioe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29uZGl0aW9uICAgICAgICAgID0gKGgpPT50cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgT25TdWJzY3JpYmUgICAgICAgID0gKGhpc3RJdGVtTGlzdCk9Pnt9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNJbnN0YW50U3Vic2NyaWJlID0gZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSl7XHJcbiAgICB0aGlzLl9pc0Rpc2FibGVkICA9ICFpc0luc3RhbnRTdWJzY3JpYmU7XHJcbiAgICB0aGlzLl9PblN1YnNjcmliZSA9IE9uU3Vic2NyaWJlO1xyXG4gICAgdGhpcy5fQ29uZGl0aW9uICAgPSBDb25kaXRpb247XHJcbiAgICBIaXN0b3J5TWFzdGVyLkFkZFN1YnNjcmlwdGlvbih0aGlzKTtcclxufVxyXG5cclxuXHJcbmNsYXNzIEhpc3RvcnlTdWJzY3JpcHRpb257XHJcbiAgICBTdWJzY3JpYmUoKXtcclxuICAgICAgICB0aGlzLl9pc0Rpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBVbnN1YnNjcmliZSgpe1xyXG4gICAgICAgIHRoaXMuX2lzRGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgZ2V0IGlzQWN0aXZlKCl7XHJcbiAgICAgICAgcmV0dXJuICF0aGlzLl9pc0Rpc2FibGVkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7SGlzdG9yeUNvbnN0cnVjdG9yfSBjb1xyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihjbyl7XHJcbiAgICAgICAgSE1TQ29uc3RydWN0b3IuY2FsbCh0aGlzLCBjbyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gSGlzdG9yeVN1YnNjcmlwdGlvbjsiLCJjb25zdCBJbnB1dEJveCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgTmFtZTogJ0lucHV0Qm94JyxcclxuICAgIFRhcmdldDogJ2JvZHknLFxyXG4gICAgVmlzaWJsZTogZmFsc2UsXHJcbiAgICBSb3V0ZTogZmFsc2UsXHJcbiAgICBDb250ZW50OiBgPGRpdiBjbGFzcz1cImlucHV0LWJveFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlubmVyXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkXCI+PGRpdiBjbGFzcz1cImNhcHRpb25cIj57e0NhcHRpb259fTwvZGl2PjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2NyZWVuIHRleHQtc2NyZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhbmdlLWJsb2NrXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYW5nZS1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGFydC12YWx1ZVwiPtCe0YIgMDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48aW5wdXQgdHlwZT1cInJhbmdlXCIgY2xhc3M9XCJyYW5nZSByYW5nZS1zdGFydFwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJhbmdlLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVuZC12YWx1ZVwiPtCU0L4gMDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48aW5wdXQgdHlwZT1cInJhbmdlXCIgY2xhc3M9XCJyYW5nZSByYW5nZS1lbmRcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwidGV4dGJveCBsLXRleHRib3hcIiB0eXBlPVwidGV4dFwiIHZhbHVlPVwie3tWYWx1ZX19XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPVwidGV4dGFyZWEgbC10ZXh0YXJlYVwiPnt7VmFsdWV9fTwvdGV4dGFyZWE+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPVwiQ0tFZGl0b3ItYXJlYVwiIG5hbWU9XCJDS0VkaXRvci1hcmVhXCI+e3tWYWx1ZX19PC90ZXh0YXJlYT5cclxuICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwic2VsZWN0IGwtc2VsZWN0XCI+PC9zZWxlY3Q+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNlbGVjdC1zY3JlZW5cIj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJudW1wYWQtaW5uZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzY3JlZW5cIj57e1ZhbHVlfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZWxsIGJ0bi1jbGVhclwiPtCe0KfQmNCh0KLQmNCi0Kw8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VsbCBidG4tcmVtb3ZlXCI+0KPQlNCQ0JvQmNCi0Kw8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbGwgZGlnaXRcIiBkYXRhLXZhbHVlPVwiMVwiPjE8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VsbCBkaWdpdFwiIGRhdGEtdmFsdWU9XCIyXCI+MjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZWxsIGRpZ2l0XCIgZGF0YS12YWx1ZT1cIjNcIj4zPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZWxsIGRpZ2l0XCIgZGF0YS12YWx1ZT1cIjRcIj40PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbGwgZGlnaXRcIiBkYXRhLXZhbHVlPVwiNVwiPjU8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VsbCBkaWdpdFwiIGRhdGEtdmFsdWU9XCI2XCI+NjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibC1yb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VsbCBkaWdpdFwiIGRhdGEtdmFsdWU9XCI3XCI+NzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZWxsIGRpZ2l0XCIgZGF0YS12YWx1ZT1cIjhcIj44PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbGwgZGlnaXRcIiBkYXRhLXZhbHVlPVwiOVwiPjk8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtcm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbGwgZGlnaXRcIiBkYXRhLXZhbHVlPVwiLVwiPi08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VsbCBkaWdpdFwiIGRhdGEtdmFsdWU9XCIwXCI+MDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZWxsIGRpZ2l0XCIgZGF0YS12YWx1ZT1cIitcIj4rPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbGwgYnV0dG9uIGJ1dHRvbjIgYnRuLWNhbmNlbFwiPtCe0KLQnNCV0J3QkDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNlbGwgYnV0dG9uIGJ0bi1jb25maXJtXCI+0J7QmjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lyZXNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lyZSB3aXJlLTFcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lyZSB3aXJlLTJcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lyZSB3aXJlLTNcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwid2lyZTQgd2lyZS00XCI+PC9kaXY+IFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgIFByb3RvOntcclxuICAgICAgICBDYXB0aW9uOiAnJyxcclxuICAgICAgICBWYWx1ZTogJycsXHJcblxyXG4gICAgICAgIFdpZHRoOiAwLFxyXG4gICAgICAgIEhlaWdodDogMCxcclxuICAgIH0sXHJcbiAgICBDb250cm9sbGVyOiB7XHJcbiAgICAgICAgVGFyZ2V0OiAnLnNlbGVjdCcsXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8b3B0aW9uIHZhbHVlPVwie3tWYWx1ZX19XCI+e3tWaWV3fX08L29wdGlvbj5gLFxyXG4gICAgfSxcclxuICAgIFByb3BzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5UZXh0Qm94ID0gdGhpcy5TZWxlY3QoJy50ZXh0Ym94Jyk7XHJcbiAgICAgICAgdGhpcy5UZXh0QXJlYSA9IHRoaXMuU2VsZWN0KCcudGV4dGFyZWEnKTtcclxuICAgICAgICB0aGlzLklucHV0U2VsZWN0ID0gdGhpcy5TZWxlY3QoJy5zZWxlY3QnKTtcclxuICAgICAgICB0aGlzLklucHV0UmFuZ2UgPSB0aGlzLlNlbGVjdCgnLnJhbmdlLWJsb2NrJyk7XHJcbiAgICAgICAgdGhpcy5JbnB1dFJhbmdlU3RhcnQgPSB0aGlzLlNlbGVjdCgnLnJhbmdlLWJsb2NrIC5yYW5nZS1zdGFydCcpO1xyXG4gICAgICAgIHRoaXMuSW5wdXRSYW5nZUVuZCA9IHRoaXMuU2VsZWN0KCcucmFuZ2UtYmxvY2sgLnJhbmdlLWVuZCcpO1xyXG4gICAgICAgIHRoaXMuQ0tFZGl0b3IgPSB0aGlzLlNlbGVjdCgnLkNLRWRpdG9yLWFyZWEnKTtcclxuXHJcbiAgICAgICAgdGhpcy5JbnB1dFRleHQgPSB0aGlzLlNlbGVjdCgnLnRleHQtc2NyZWVuJyk7XHJcbiAgICAgICAgdGhpcy5JbnB1dE51bVBhZCA9IHRoaXMuU2VsZWN0KCcubnVtcGFkLWlubmVyJyk7XHJcblxyXG4gICAgICAgIHRoaXMuX0NvbnRyb2xDb25maXJtRGVsZWdhdGUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX0p1c3RTaG93ZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICB0aGlzLldpcmVzID0gW1xyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLndpcmUtMScpLFxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLndpcmUtMicpLFxyXG4gICAgICAgICAgICB0aGlzLlNlbGVjdCgnLndpcmUtMycpLFxyXG4gICAgICAgICAgICAvL3RoaXMuU2VsZWN0KCcud2lyZS00JylcclxuICAgICAgICBdO1xyXG4gICAgICAgIHRoaXMuX1JlZ2V4RGlnaXQgPSBuZXcgUmVnRXhwKFwiXFxcXGRcIik7IC8vIC9cXGQvXHJcblxyXG4gICAgICAgIHRoaXMuX1R5cGUgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLklubmVyQ29udGVudCA9IHRoaXMuU2VsZWN0KCcuaW5uZXInKTtcclxuXHJcbiAgICB9LFxyXG4gICAgTWV0aG9kczogZnVuY3Rpb24gKCkge1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5TaG93VHlwZSA9IGZ1bmN0aW9uICh0eXBlKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5DS0VkaXRvcilcclxuICAgICAgICAgICAgICAgIHRoaXMuQ0tFZGl0b3IgPSB0aGlzLlNlbGVjdCgnI2NrZV9DS0VkaXRvci1hcmVhJyk7XHJcbiAgICAgICAgICAgIHRoaXMuQ0tFZGl0b3Iuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdudW1iZXInOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5wdXROdW1QYWQuc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5wdXRUZXh0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dFJhbmdlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdzZWxlY3QnOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5wdXROdW1QYWQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLklucHV0UmFuZ2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlRleHRCb3guc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlRleHRBcmVhLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dFNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dFRleHQuc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAncmljaHRleHQnOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5wdXROdW1QYWQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLklucHV0UmFuZ2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlRleHRCb3guc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLklucHV0U2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dFRleHQuc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVGV4dEFyZWEuc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAndGV4dCc6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dE51bVBhZC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLklucHV0UmFuZ2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlRleHRBcmVhLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dFNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVGV4dEJveC5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dFRleHQuc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAncmFuZ2UnOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5wdXROdW1QYWQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlRleHRBcmVhLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dFNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVGV4dEJveC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5wdXRSYW5nZS5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdlZGl0b3InOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5wdXROdW1QYWQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlRleHRBcmVhLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbnB1dFNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVGV4dEJveC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5wdXRSYW5nZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ0tFZGl0b3Iuc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLl9SdW5OdW1wYWQgPSBmdW5jdGlvbiAoRWxlbWVudCwgQ3VycmVudFZhbHVlLCBDb25maXJtRGVsZWdhdGUsIEV4dHJhT3B0aW9ucyA9IHt9KSB7XHJcbiAgICAgICAgICAgIHRoaXMuU2hvd1R5cGUoJ251bWJlcicpO1xyXG4gICAgICAgICAgICB0aGlzLl9UeXBlID0gJ251bWJlcic7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLl9SdW5TZWxlY3Rpb24gPSBmdW5jdGlvbiAoRWxlbWVudCwgQ3VycmVudFZhbHVlLCBDb25maXJtRGVsZWdhdGUsIEV4dHJhT3B0aW9ucykge1xyXG4gICAgICAgICAgICAvLyBFeHRyYU9wdGlvbnNFeGFtcGxlID0ge1xyXG4gICAgICAgICAgICAvLyAgICAgRGF0YTogW3tJRDogMSwgTmFtZTogJ0tla3JvcHVzJ31dLFxyXG4gICAgICAgICAgICAvLyAgICAgS2V5VmFsdWU6ICdJRCcsXHJcbiAgICAgICAgICAgIC8vICAgICBLZXlWaWV3OiAnTmFtZScsXHJcbiAgICAgICAgICAgIC8vICAgICBUZXh0QXJlYTogZmFsc2UsXHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgLy9cclxuXHJcbiAgICAgICAgICAgIHRoaXMuX1R5cGUgPSAnc2VsZWN0JztcclxuICAgICAgICAgICAgdGhpcy5TaG93VHlwZSgnc2VsZWN0Jyk7XHJcblxyXG4gICAgICAgICAgICBsZXQgS2V5VmFsdWUgPSBFeHRyYU9wdGlvbnMuS2V5VmFsdWU7XHJcbiAgICAgICAgICAgIGxldCBLZXlWaWV3ID0gRXh0cmFPcHRpb25zLktleVZpZXc7XHJcbiAgICAgICAgICAgIGxldCBEYXRhID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgRXh0cmFPcHRpb25zLkRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGxldCBJdGVtID0gRXh0cmFPcHRpb25zLkRhdGFbaV07XHJcbiAgICAgICAgICAgICAgICBpZiAoS2V5VmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBEYXRhLnB1c2goe1ZhbHVlOiBJdGVtW0tleVZhbHVlXSwgVmlldzogSXRlbVtLZXlWaWV3XX0pXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIERhdGEucHVzaCh7VmFsdWU6IEl0ZW0sIFZpZXc6IEl0ZW19KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuQ29udHJvbGxlci5SZWZyZXNoKERhdGEpLnRoZW4oKCkgPT4gdGhpcy5JbnB1dFNlbGVjdC52YWx1ZSA9IEN1cnJlbnRWYWx1ZSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLl9SdW5UZXh0ID0gZnVuY3Rpb24gKEVsZW1lbnQsIEN1cnJlbnRWYWx1ZSwgQ29uZmlybURlbGVnYXRlLCBFeHRyYU9wdGlvbnMpIHtcclxuXHJcbiAgICAgICAgICAgIGlmIChFeHRyYU9wdGlvbnMuVGV4dEFyZWEgfHwgRXh0cmFPcHRpb25zLlR5cGUgPT09ICdyaWNodGV4dCcpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9UeXBlID0gJ3JpY2h0ZXh0JztcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fVHlwZSA9ICd0ZXh0JztcclxuXHJcbiAgICAgICAgICAgIHRoaXMuU2hvd1R5cGUodGhpcy5fVHlwZSk7XHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5fUnVuSW50ZXJ2YWwgPSBmdW5jdGlvbiAoRWxlbWVudCwgQ3VycmVudFZhbHVlLCBDb25maXJtRGVsZWdhdGUsIEV4dHJhT3B0aW9ucykge1xyXG4gICAgICAgICAgICB0aGlzLl9UeXBlID0gJ3JhbmdlJztcclxuICAgICAgICAgICAgdGhpcy5TaG93VHlwZSgncmFuZ2UnKTtcclxuICAgICAgICAgICAgbGV0IG1pblZhbHVlID0gMCwgbWF4VmFsdWUgPSAxMDA7XHJcbiAgICAgICAgICAgIGlmIChFeHRyYU9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ01pblZhbHVlJykpIG1pblZhbHVlID0gRXh0cmFPcHRpb25zLk1pblZhbHVlO1xyXG4gICAgICAgICAgICBpZiAoRXh0cmFPcHRpb25zLmhhc093blByb3BlcnR5KCdNYXhWYWx1ZScpKSBtYXhWYWx1ZSA9IEV4dHJhT3B0aW9ucy5NYXhWYWx1ZTtcclxuICAgICAgICAgICAgaWYgKEV4dHJhT3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgnVmFsdWUnKSAmJiBFeHRyYU9wdGlvbnMuVmFsdWVbMF0gJiYgRXh0cmFPcHRpb25zLlZhbHVlWzFdKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLklucHV0UmFuZ2VTdGFydC52YWx1ZSA9IHBhcnNlSW50KEV4dHJhT3B0aW9ucy5WYWx1ZVswXSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLklucHV0UmFuZ2VFbmQudmFsdWUgPSBwYXJzZUludChFeHRyYU9wdGlvbnMuVmFsdWVbMV0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5JbnB1dFJhbmdlU3RhcnQudmFsdWUgPSBtaW5WYWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuSW5wdXRSYW5nZUVuZC52YWx1ZSA9IG1heFZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLklucHV0UmFuZ2VTdGFydC5taW4gPSBtaW5WYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5JbnB1dFJhbmdlU3RhcnQubWF4ID0gbWF4VmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMuSW5wdXRSYW5nZUVuZC5taW4gPSBtaW5WYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5JbnB1dFJhbmdlRW5kLm1heCA9IG1heFZhbHVlO1xyXG5cclxuICAgICAgICAgICAgbGV0IFJTdGFydCA9IHRoaXMuU2VsZWN0KCcucmFuZ2UtYmxvY2sgLnN0YXJ0LXZhbHVlJyk7XHJcbiAgICAgICAgICAgIGxldCBSRW5kID0gdGhpcy5TZWxlY3QoJy5yYW5nZS1ibG9jayAuZW5kLXZhbHVlJyk7XHJcbiAgICAgICAgICAgIFJTdGFydC5pbm5lclRleHQgPSBcItCe0YIgXCIgKyB0aGlzLklucHV0UmFuZ2VTdGFydC52YWx1ZTtcclxuICAgICAgICAgICAgUkVuZC5pbm5lclRleHQgPSBcItCU0L4gXCIgKyB0aGlzLklucHV0UmFuZ2VFbmQudmFsdWU7XHJcblxyXG4gICAgICAgICAgICB0aGlzLklucHV0UmFuZ2VTdGFydC5vbmlucHV0ID0gZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgYSA9IHBhcnNlSW50KHRoaXMuSW5wdXRSYW5nZVN0YXJ0LnZhbHVlKSxcclxuICAgICAgICAgICAgICAgICAgICBiID0gcGFyc2VJbnQodGhpcy5JbnB1dFJhbmdlRW5kLnZhbHVlKTtcclxuICAgICAgICAgICAgICAgIGlmIChhID49IGIpIHRoaXMuSW5wdXRSYW5nZUVuZC52YWx1ZSA9IHRoaXMuSW5wdXRSYW5nZVN0YXJ0LnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgUlN0YXJ0LmlubmVyVGV4dCA9IFwi0J7RgiBcIiArIGE7XHJcbiAgICAgICAgICAgICAgICBSRW5kLmlubmVyVGV4dCA9IFwi0JTQviBcIiArIHRoaXMuSW5wdXRSYW5nZUVuZC52YWx1ZTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdGhpcy5JbnB1dFJhbmdlRW5kLm9uaW5wdXQgPSBlID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBhID0gcGFyc2VJbnQodGhpcy5JbnB1dFJhbmdlU3RhcnQudmFsdWUpLFxyXG4gICAgICAgICAgICAgICAgICAgIGIgPSBwYXJzZUludCh0aGlzLklucHV0UmFuZ2VFbmQudmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGIgPD0gYSkgdGhpcy5JbnB1dFJhbmdlU3RhcnQudmFsdWUgPSB0aGlzLklucHV0UmFuZ2VFbmQudmFsdWU7XHJcbiAgICAgICAgICAgICAgICBSU3RhcnQuaW5uZXJUZXh0ID0gXCLQntGCIFwiICsgdGhpcy5JbnB1dFJhbmdlU3RhcnQudmFsdWU7XHJcbiAgICAgICAgICAgICAgICBSRW5kLmlubmVyVGV4dCA9IFwi0JTQviBcIiArIGI7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgbGV0IGNrID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fUnVuRWRpdG9yID0gZnVuY3Rpb24gKEVsZW1lbnQsIEN1cnJlbnRWYWx1ZSwgQ29uZmlybURlbGVnYXRlLCBFeHRyYU9wdGlvbnMpIHtcclxuICAgICAgICAgICAgdGhpcy5fVHlwZSA9ICdlZGl0b3InO1xyXG4gICAgICAgICAgICB0aGlzLlNob3dUeXBlKCdlZGl0b3InKTtcclxuICAgICAgICAgICAgaWYgKCFjaykge1xyXG4gICAgICAgICAgICAgICAgQ0tFRElUT1IucmVwbGFjZSgnQ0tFZGl0b3ItYXJlYScpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DS0VkaXRvciA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICBjayA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgQ0tFRElUT1IuaW5zdGFuY2VzW1wiQ0tFZGl0b3ItYXJlYVwiXS5zZXREYXRhKEN1cnJlbnRWYWx1ZSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlJ1biA9IGZ1bmN0aW9uIChFbGVtZW50LCBDdXJyZW50VmFsdWUsIENvbmZpcm1EZWxlZ2F0ZSwgRXh0cmFPcHRpb25zID0ge30pIHtcclxuICAgICAgICAgICAgRXh0cmFPcHRpb25zLkN1c3RvbVdpZHRoID0gRXh0cmFPcHRpb25zLkN1c3RvbVdpZHRoID8gRXh0cmFPcHRpb25zLkN1c3RvbVdpZHRoIDogMTI0O1xyXG4gICAgICAgICAgICBFeHRyYU9wdGlvbnMuVHlwZSA9IEV4dHJhT3B0aW9ucy5UeXBlICE9PSB2b2lkIDAgPyBFeHRyYU9wdGlvbnMuVHlwZSA6ICdhdXRvJztcclxuICAgICAgICAgICAgdGhpcy5TdGF0ZS5DYXB0aW9uID0gKEV4dHJhT3B0aW9ucy5DYXB0aW9uICE9PSB2b2lkIDAgJiYgRXh0cmFPcHRpb25zLkNhcHRpb24gIT09IG51bGwpID8gRXh0cmFPcHRpb25zLkNhcHRpb24gOiAnJztcclxuXHJcbiAgICAgICAgICAgIGlmIChFeHRyYU9wdGlvbnMuVHlwZSA9PT0gJ3JhbmdlJylcclxuICAgICAgICAgICAgICAgIEV4dHJhT3B0aW9ucy5DdXN0b21XaWR0aCA9IDIxMDtcclxuICAgICAgICAgICAgdGhpcy5UZXh0QXJlYS5zdHlsZS5taW5IZWlnaHQgPSBFeHRyYU9wdGlvbnMuQ3VzdG9tSGVpZ2h0ICsgJ3B4JztcclxuICAgICAgICAgICAgLy90aGlzLlRleHRBcmVhLnN0eWxlLndpZHRoID0gRXh0cmFPcHRpb25zLkN1c3RvbVdpZHRoICsgJ3B4JztcclxuICAgICAgICAgICAgLy90aGlzLkNvbnRlbnQuc3R5bGUud2lkdGggPSBFeHRyYU9wdGlvbnMuQ3VzdG9tV2lkdGggKyAncHgnO1xyXG5cclxuXHJcbiAgICAgICAgICAgIHRoaXMuQ29udGVudC5zdHlsZS53aWR0aCA9IEV4dHJhT3B0aW9ucy5DdXN0b21XaWR0aCArICdweCc7XHJcblxyXG4gICAgICAgICAgICAvLyBpZiAoRXh0cmFPcHRpb25zLlR5cGUgPT09ICdyYW5nZScgfHwgdGhpcy5fVHlwZSA9PT0gJ3JpY2h0ZXh0Jykge1xyXG4gICAgICAgICAgICAvLyAgICAgaWYgKCFFeHRyYU9wdGlvbnMuQ3VzdG9tV2lkdGgpXHJcbiAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5Db250ZW50LnN0eWxlLndpZHRoID0gJzIxMHB4JztcclxuICAgICAgICAgICAgLy8gICAgIGVsc2VcclxuICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLkNvbnRlbnQuc3R5bGUud2lkdGggPSBFeHRyYU9wdGlvbnMuQ3VzdG9tV2lkdGggKyAncHgnO1xyXG4gICAgICAgICAgICAvLyB9IGVsc2UgaWYgKEV4dHJhT3B0aW9ucy5UeXBlID09PSAnZWRpdG9yJykge1xyXG4gICAgICAgICAgICAvLyAgICAgdGhpcy5Db250ZW50LnN0eWxlLndpZHRoID0gJzU1MHB4JztcclxuICAgICAgICAgICAgLy8gICAgIC8vIHRoaXMuQ0tFZGl0b3Iuc3R5bGUubWluV2lkdGggPSAnNTUwcHgnO1xyXG4gICAgICAgICAgICAvLyAgICAgLy8gdGhpcy5DS0VkaXRvci5zdHlsZS5taW5IZWlnaHQgPSAnNTUwcHgnO1xyXG4gICAgICAgICAgICAvLyB9IGVsc2UgdGhpcy5Db250ZW50LnN0eWxlLndpZHRoID0gJyc7XHJcblxyXG5cclxuXHJcbiAgICAgICAgICAgIGlmIChFeHRyYU9wdGlvbnMuVHlwZSA9PT0gJ3JhbmdlJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fUnVuSW50ZXJ2YWwoRWxlbWVudCwgQ3VycmVudFZhbHVlLCBDb25maXJtRGVsZWdhdGUsIEV4dHJhT3B0aW9ucyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoRXh0cmFPcHRpb25zLkRhdGEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX1J1blNlbGVjdGlvbihFbGVtZW50LCBDdXJyZW50VmFsdWUsIENvbmZpcm1EZWxlZ2F0ZSwgRXh0cmFPcHRpb25zKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChFeHRyYU9wdGlvbnMuVHlwZSA9PT0gJ251bWJlcicgfHwgKEV4dHJhT3B0aW9ucy5UeXBlID09PSAnYXV0bycgJiYgTHVyZS5pc051bWVyaWMoQ3VycmVudFZhbHVlKSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX1J1bk51bXBhZChFbGVtZW50LCBDdXJyZW50VmFsdWUsIENvbmZpcm1EZWxlZ2F0ZSwgRXh0cmFPcHRpb25zKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChFeHRyYU9wdGlvbnMuVHlwZSA9PT0gJ2VkaXRvcicpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX1J1bkVkaXRvcihFbGVtZW50LCBDdXJyZW50VmFsdWUsIENvbmZpcm1EZWxlZ2F0ZSwgRXh0cmFPcHRpb25zKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fUnVuVGV4dChFbGVtZW50LCBDdXJyZW50VmFsdWUsIENvbmZpcm1EZWxlZ2F0ZSwgRXh0cmFPcHRpb25zKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy5fQ29udHJvbENvbmZpcm1EZWxlZ2F0ZSA9IENvbmZpcm1EZWxlZ2F0ZTtcclxuICAgICAgICAgICAgdGhpcy5UZXh0Qm94LnZhbHVlID0gQ3VycmVudFZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLlRleHRBcmVhLnZhbHVlID0gQ3VycmVudFZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuVmFsdWUgPSBDdXJyZW50VmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5FbGVtZW50KVxyXG4gICAgICAgICAgICAgICAgdGhpcy5FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ251bXBhZC1lZGl0Jyk7XHJcbiAgICAgICAgICAgIHRoaXMuRWxlbWVudCA9IEVsZW1lbnQ7XHJcbiAgICAgICAgICAgIHRoaXMuRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdudW1wYWQtZWRpdCcpO1xyXG4gICAgICAgICAgICB0aGlzLkhpZGVXaXJlcygpO1xyXG4gICAgICAgICAgICB0aGlzLlNob3coKTtcclxuICAgICAgICAgICAgdGhpcy5TZXRQb3MoRWxlbWVudCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5IaWRlV2lyZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5XaXJlcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLldpcmVzW2ldLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU2hvd1dpcmVzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuV2lyZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5XaXJlc1tpXS5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU2V0UG9zID0gZnVuY3Rpb24oRWxlbWVudCl7XHJcbiAgICAgICAgICAgIGxldCBCb2R5UmVjdCA9IGRvY3VtZW50LmJvZHkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgIGxldCBFbGVtUmVjdCA9IEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG4gICAgICAgICAgICBsZXQgT2Zmc2V0VG9wID0gIEVsZW1SZWN0LnRvcCArIEVsZW1SZWN0LmhlaWdodCArIDU7XHJcbiAgICAgICAgICAgIGxldCBPZmZzZXRMZWZ0ID0gRWxlbVJlY3QubGVmdCArIEVsZW1SZWN0LndpZHRoICsgNTtcclxuXHJcbiAgICAgICAgICAgIGxldCBNYXhMZWZ0ID0gQm9keVJlY3Qud2lkdGggLSAxMzA7XHJcbiAgICAgICAgICAgIGxldCBNYXhUb3AgPSBCb2R5UmVjdC5oZWlnaHQgLSAyMzAgLSBFbGVtUmVjdC5oZWlnaHQ7XHJcbiAgICAgICAgICAgIGlmIChPZmZzZXRMZWZ0ID4gTWF4TGVmdCl7XHJcbiAgICAgICAgICAgICAgICBPZmZzZXRMZWZ0ID0gRWxlbVJlY3QubGVmdCAtIDEzMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoT2Zmc2V0VG9wID4gTWF4VG9wKXtcclxuICAgICAgICAgICAgICAgIE9mZnNldFRvcCA9IEVsZW1SZWN0LnRvcCAtIDIzMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlBvc2l0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAgIEVsZW1SZWN0OiBFbGVtUmVjdCxcclxuICAgICAgICAgICAgICAgIE9mZnNldExlZnQ6IE9mZnNldExlZnQsXHJcbiAgICAgICAgICAgICAgICBPZmZzZXRUb3A6IE9mZnNldFRvcCxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdGhpcy5Db250ZW50LnN0eWxlLmxlZnQgPSBPZmZzZXRMZWZ0ICsgJ3B4JztcclxuICAgICAgICAgICAgdGhpcy5Db250ZW50LnN0eWxlLnRvcCA9IE9mZnNldFRvcCArICdweCc7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coYHc6ICR7dGhpcy5TdGF0ZS5XaWR0aH0sIGg6ICR7dGhpcy5TdGF0ZS5IZWlnaHR9LCBldzoke0VsZW1SZWN0LndpZHRofSwgZWg6JHtFbGVtUmVjdC5oZWlnaHR9LCBNYXhMZWZ0OiAke01heExlZnR9LCBNYXhUb3A6JHtNYXhUb3B9YClcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuU2V0V2lyZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5FbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygndGNlbGwnKSkgLy93aXJlXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICBsZXQgUCA9IHRoaXMuUG9zaXRpb25zO1xyXG4gICAgICAgICAgICBsZXQgUmVjdCA9IHRoaXMuQ29udGVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICAgICAgUC5PZmZzZXRUb3AgPSBSZWN0LnRvcDtcclxuICAgICAgICAgICAgUC5PZmZzZXRMZWZ0ID0gUmVjdC5sZWZ0O1xyXG4gICAgICAgICAgICBsZXQgV2lyZU9mZnNldFRvcCAgPSBbXHJcbiAgICAgICAgICAgICAgICBQLk9mZnNldFRvcCA+IFAuRWxlbVJlY3QudG9wID8gLTIgOiAyLFxyXG4gICAgICAgICAgICAgICAgUC5PZmZzZXRUb3AgPiBQLkVsZW1SZWN0LnRvcCA/IC0yIDogMixcclxuICAgICAgICAgICAgICAgIFAuT2Zmc2V0VG9wID4gUC5FbGVtUmVjdC50b3AgPyAtUC5FbGVtUmVjdC5oZWlnaHQ6UC5FbGVtUmVjdC5oZWlnaHQtMixcclxuICAgICAgICAgICAgICAgIFAuT2Zmc2V0VG9wID4gUC5FbGVtUmVjdC50b3AgPyAtUC5FbGVtUmVjdC5oZWlnaHQ6UC5FbGVtUmVjdC5oZWlnaHQsXHJcbiAgICAgICAgICAgIF07XHJcbiAgICAgICAgICAgIGxldCBXaXJlT2Zmc2V0TGVmdCA9IFtcclxuICAgICAgICAgICAgICAgIFAuT2Zmc2V0TGVmdCA+IFAuRWxlbVJlY3QubGVmdCA/IC0yIDogMixcclxuICAgICAgICAgICAgICAgIFAuT2Zmc2V0TGVmdCA+IFAuRWxlbVJlY3QubGVmdCA/IC1QLkVsZW1SZWN0LndpZHRoOlAuRWxlbVJlY3Qud2lkdGgtMixcclxuICAgICAgICAgICAgICAgIFAuT2Zmc2V0TGVmdCA+IFAuRWxlbVJlY3QubGVmdCA/IC0yIDogMixcclxuICAgICAgICAgICAgICAgIFAuT2Zmc2V0TGVmdCA+IFAuRWxlbVJlY3QubGVmdCA/IC1QLkVsZW1SZWN0LndpZHRoOlAuRWxlbVJlY3Qud2lkdGgsXHJcbiAgICAgICAgICAgIF07XHJcblxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuV2lyZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgbGV0IERvdCA9IHtcclxuICAgICAgICAgICAgICAgICAgICBTdGFydDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBUb3A6ICAoUC5PZmZzZXRUb3AgID4gUC5FbGVtUmVjdC50b3AgPyAwIDogUC5IZWlnaHQgLTIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBMZWZ0OiAoUC5PZmZzZXRMZWZ0ID4gUC5FbGVtUmVjdC5sZWZ0PyAwIDogUC5XaWR0aCAtMiksXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBFbmQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgVG9wOiAgV2lyZU9mZnNldFRvcFtpXSArIChQLk9mZnNldFRvcCAgPiBQLkVsZW1SZWN0LnRvcCA/IChQLkVsZW1SZWN0LnRvcCArUC5FbGVtUmVjdC5oZWlnaHQtUC5PZmZzZXRUb3ApIDogKFAuRWxlbVJlY3QudG9wLVAuT2Zmc2V0VG9wKSAgKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgTGVmdDogV2lyZU9mZnNldExlZnRbaV0rIChQLk9mZnNldExlZnQ+IFAuRWxlbVJlY3QubGVmdD8gKFAuRWxlbVJlY3QubGVmdCtQLkVsZW1SZWN0LndpZHRoIC1QLk9mZnNldExlZnQpOiAoUC5FbGVtUmVjdC5sZWZ0LVAuT2Zmc2V0TGVmdCkgKSxcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgLy8xc3RcclxuICAgICAgICAgICAgICAgIGxldCBXaWR0aDEgPSBNYXRoLnNxcnQoIE1hdGgucG93KCAoRG90LlN0YXJ0LlRvcC1Eb3QuRW5kLlRvcCksIDIpICsgTWF0aC5wb3coIChEb3QuU3RhcnQuTGVmdC1Eb3QuRW5kLkxlZnQpLCAyKSAgKTtcclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgayA9IChEb3QuU3RhcnQuVG9wIC0gRG90LkVuZC5Ub3ApIC8gKERvdC5TdGFydC5MZWZ0IC0gRG90LkVuZC5MZWZ0KTtcclxuICAgICAgICAgICAgICAgIGxldCBhbmdsZSA9IE1hdGguYXRhbihrKTtcclxuICAgICAgICAgICAgICAgIGxldCBhbmdsZURlZyA9IGFuZ2xlICogMTgwLyBNYXRoLlBJO1xyXG4gICAgICAgICAgICAgICAgaWYgKGFuZ2xlIDwgMClcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBhbmdsZURlZyA9IDE4MCsgYW5nbGVEZWc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvL2lmIGlucHV0IHVuZGVyIG91dHB1dFxyXG4gICAgICAgICAgICAgICAgaWYgKERvdC5TdGFydC5Ub3AgLSBEb3QuRW5kLlRvcCA+IDApXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgYW5nbGVEZWcgPSAxODArIGFuZ2xlRGVnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy9pbiBzYW1lIGxpbmUgYnVnIGZpeFxyXG4gICAgICAgICAgICAgICAgaWYgKERvdC5TdGFydC5Ub3AgLSBEb3QuRW5kLlRvcCA9PT0gMCAmJiBEb3QuU3RhcnQuTGVmdCA+IERvdC5FbmQuTGVmdClcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBhbmdsZURlZyA9IDE4MCsgYW5nbGVEZWc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLldpcmVzW2ldLnN0eWxlLmxlZnQgPSBEb3QuU3RhcnQuTGVmdCArICdweCc7XHJcbiAgICAgICAgICAgICAgICB0aGlzLldpcmVzW2ldLnN0eWxlLnRvcCAgPSBEb3QuU3RhcnQuVG9wICArICdweCc7XHJcbiAgICAgICAgICAgICAgICB0aGlzLldpcmVzW2ldLnN0eWxlLndpZHRoID0gV2lkdGgxICArICdweCc7XHJcbiAgICAgICAgICAgICAgICB0aGlzLldpcmVzW2ldLnN0eWxlLnRyYW5zZm9ybSA9IGByb3RhdGUoJHthbmdsZURlZ31kZWcpYDtcclxuICAgICAgICAgICAgICAgIHRoaXMuV2lyZXNbaV0uc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5Db25maXJtID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgdmFsID0gdGhpcy5Qcm90by5EYXRhLlZhbHVlO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fVHlwZSA9PT0gJ251bWJlcicpXHJcbiAgICAgICAgICAgICAgICB2YWwgPSBwYXJzZUludCh2YWwpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fVHlwZSA9PT0gJ3JhbmdlJylcclxuICAgICAgICAgICAgICAgIHZhbCA9IFtwYXJzZUludCh0aGlzLklucHV0UmFuZ2VTdGFydC52YWx1ZSksIHBhcnNlSW50KHRoaXMuSW5wdXRSYW5nZUVuZC52YWx1ZSldO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fVHlwZSA9PT0gJ2VkaXRvcicpXHJcbiAgICAgICAgICAgICAgICB2YWwgPSBDS0VESVRPUi5pbnN0YW5jZXNbXCJDS0VkaXRvci1hcmVhXCJdLmdldERhdGEoKTtcclxuICAgICAgICAgICAgdGhpcy5fQ29udHJvbENvbmZpcm1EZWxlZ2F0ZSh2YWwpO1xyXG4gICAgICAgICAgICB0aGlzLl9KdXN0U2hvd2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLkNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5fSnVzdFNob3dlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuSGlkZSgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuQWRkRGlnaXQgPSBmdW5jdGlvbiAodikge1xyXG5cclxuICAgICAgICAgICAgaWYgKHYgPT09ICctJyl7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5Qcm90by5EYXRhLlZhbHVlID09PSAnJyB8fCB0aGlzLlByb3RvLkRhdGEuVmFsdWUgPD0gMSlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuVmFsdWUgPSBcIjBcIjtcclxuICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuVmFsdWUgPSBwYXJzZUludCh0aGlzLlByb3RvLkRhdGEuVmFsdWUpIC0gMSArICcnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHYgPT09ICcrJyl7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5Qcm90by5EYXRhLlZhbHVlID09PSAnJylcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuVmFsdWUgPSBcIjFcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgdmFsID0gcGFyc2VJbnQodGhpcy5Qcm90by5EYXRhLlZhbHVlKSArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbCA+IDk5OTk5OTk5KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlZhbHVlID0gdmFsICsgJyc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5Qcm90by5EYXRhLlZhbHVlLmxlbmd0aCA+IDcpXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX0p1c3RTaG93ZWQpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5WYWx1ZSA9IFwiMFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX0p1c3RTaG93ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5WYWx1ZSA9IHRoaXMuUHJvdG8uRGF0YS5WYWx1ZSArIHY7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlZhbHVlID0gdGhpcy5Qcm90by5EYXRhLlZhbHVlLnJlcGxhY2UoL14oWzBdKylbXFxkXSokLywgZnVuY3Rpb24gKG0semVyb3MpIHtcclxuICAgICAgICAgICAgICAgIG0gPSBtLnN1YnN0cmluZyh6ZXJvcy5sZW5ndGgsIG0ubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBtPT09JycgPyBcIjBcIjogbTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uUmVmcmVzaCgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgfSxcclxuICAgIFNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5fVHlwZSA9PT0gJ3RleHQnKXtcclxuICAgICAgICAgICAgdGhpcy5UZXh0Qm94LmZvY3VzKCk7XHJcbiAgICAgICAgICAgIHRoaXMuVGV4dEJveC5zZWxlY3QoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5fVHlwZSA9PT0gJ3JpY2h0ZXh0Jyl7XHJcbiAgICAgICAgICAgIHRoaXMuVGV4dEFyZWEuZm9jdXMoKTtcclxuICAgICAgICAgICAgdGhpcy5UZXh0QXJlYS5zZWxlY3QoKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX1R5cGUgPT09ICdzZWxlY3QnKXtcclxuICAgICAgICAgICAgbGV0IE9wdGlvbkRlZmF1bHQgPSBMdXJlLlNlbGVjdChgW3ZhbHVlPVwiJHt0aGlzLlByb3RvLkRhdGEuVmFsdWV9XCJdYCxJbnB1dEJveC5JbnB1dFNlbGVjdCk7XHJcbiAgICAgICAgICAgIGlmIChPcHRpb25EZWZhdWx0KVxyXG4gICAgICAgICAgICAgICAgT3B0aW9uRGVmYXVsdC5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLlBvc2l0aW9ucy5IZWlnaHQgPSB0aGlzLkNvbnRlbnQub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIHRoaXMuUG9zaXRpb25zLldpZHRoICA9IHRoaXMuQ29udGVudC5vZmZzZXRXaWR0aDtcclxuICAgICAgICB0aGlzLlNldFdpcmVzKCk7XHJcbiAgICB9LFxyXG4gICAgSGlkZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh0aGlzLkVsZW1lbnQpXHJcbiAgICAgICAgICAgIHRoaXMuRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdudW1wYWQtZWRpdCcpO1xyXG5cclxuICAgIH0sXHJcbiAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5EcmFnZ2FibGUgPSBMdXJlLkRyYWdnYWJsZSh0aGlzLlNlbGVjdCgnLmhlYWQnKSwgdGhpcy5Db250ZW50LCB7T25Nb3ZlOiB0aGlzLlNldFdpcmVzLCBDb250YWlubWVudDogWzAsIDAsICdhdXRvJywgJ2F1dG8nXX0pO1xyXG5cclxuICAgICAgICBsZXQgUmVjdCA9IHRoaXMuQ29udGVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICB0aGlzLlN0YXRlLldpZHRoICA9IFJlY3Qud2lkdGg7XHJcbiAgICAgICAgdGhpcy5TdGF0ZS5IZWlnaHQgPSBSZWN0LmhlaWdodDtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcuYnRuLWNvbmZpcm0nKS5vbmNsaWNrID0gKCk9Pnt0aGlzLkNvbmZpcm0oKTt9O1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcuYnRuLWNhbmNlbCcpLm9uY2xpY2sgPSAoKT0+e3RoaXMuQ2FuY2VsKCk7fTtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuSW5wdXRTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpPT57XHJcbiAgICAgICAgICAgIHRoaXMuUHJvdG8uRGF0YS5WYWx1ZSA9IGUuY3VycmVudFRhcmdldC52YWx1ZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLlRleHRCb3guYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCAoZSk9PntcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlZhbHVlID0gZS5jdXJyZW50VGFyZ2V0LnZhbHVlO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0FjdGl2ZSAmJiBlLmtleUNvZGUgPT09IDEzKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ29uZmlybSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5UZXh0QXJlYS5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChlKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuVmFsdWUgPSBlLmN1cnJlbnRUYXJnZXQudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmRpZ2l0JywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgbGV0IHYgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFsndmFsdWUnXTtcclxuICAgICAgICAgICAgdGhpcy5BZGREaWdpdCh2KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnLmJ0bi1jbGVhcicpLm9uY2xpY2sgPSAoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLkRhdGEuVmFsdWUgPSAnJztcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5SZWZyZXNoKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLlNlbGVjdCgnLmJ0bi1yZW1vdmUnKS5vbmNsaWNrID0gKCk9PntcclxuICAgICAgICAgICAgdGhpcy5Qcm90by5EYXRhLlZhbHVlID0gdGhpcy5Qcm90by5EYXRhLlZhbHVlLnN1YnN0cmluZygwLCB0aGlzLlByb3RvLkRhdGEuVmFsdWUubGVuZ3RoLTEpO1xyXG4gICAgICAgICAgICB0aGlzLlByb3RvLlJlZnJlc2goKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChlKT0+e1xyXG4gICAgICAgICAgICAvL251bXBhZCBvcGVuIGFuZCBwcmVzc2VkIDAtOVxyXG4gICAgICAgICAgICAvL2lmICh0aGlzLmlzQWN0aXZlICYmIChlLmtleUNvZGUgPj0gNDggJiYgZS5rZXlDb2RlIDw9IDU3KXtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNBY3RpdmUgJiYgdGhpcy5fVHlwZT09PSdudW1iZXInICYmIHRoaXMuX1JlZ2V4RGlnaXQudGVzdChlLmtleSkgKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuQWRkRGlnaXQoZS5rZXkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuaXNBY3RpdmUgJiYgZS5rZXlDb2RlID09PSAxMyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkNvbmZpcm0oKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pO1xyXG5cclxud2luZG93LklucHV0Qm94ID0gSW5wdXRCb3g7XHJcbm1vZHVsZS5leHBvcnRzID0gSW5wdXRCb3g7IiwiY2xhc3MgTGlicmFyeVRyZWV7XHJcbiAgICBjb25zdHJ1Y3RvcihQYXJlbnQsIENvbnRyb2xUYXJnZXQsIE9wdGlvbnM9e30pe1xyXG4gICAgICAgIGlmICghUGFyZW50Lkhhc1Blcm1pc3Npb24pXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAvL2RlYnVnZ2VyXHJcbiAgICAgICAgT3B0aW9ucy5NdWx0aVNlbGVjdCA9IE9wdGlvbnMuTXVsdGlTZWxlY3QgIT09IHZvaWQgMCA/IE9wdGlvbnMuTXVsdGlTZWxlY3QgOiBmYWxzZTtcclxuICAgICAgICBPcHRpb25zLkNvbnRyb2xQdXNoID0gT3B0aW9ucy5Db250cm9sUHVzaCAhPT0gdm9pZCAwID8gT3B0aW9ucy5Db250cm9sUHVzaCA6IHRydWU7XHJcbiAgICAgICAgT3B0aW9ucy5TZWxlY3RlZExpc3QgPSBPcHRpb25zLlNlbGVjdGVkTGlzdCAhPT0gdm9pZCAwID8gT3B0aW9ucy5TZWxlY3RlZExpc3QgOiBudWxsO1xyXG4gICAgICAgIE9wdGlvbnMuQnV0dG9uT2tDYXB0aW9uID0gT3B0aW9ucy5CdXR0b25Pa0NhcHRpb24gIT09IHZvaWQgMCA/IE9wdGlvbnMuQnV0dG9uT2tDYXB0aW9uIDogXCLQn9C+0LrQsNC30LDRgtGMXCI7XHJcbiAgICAgICAgT3B0aW9ucy5CdXR0b25DYW5jZWxDYXB0aW9uID0gT3B0aW9ucy5CdXR0b25DYW5jZWxDYXB0aW9uICE9PSB2b2lkIDAgPyBPcHRpb25zLkJ1dHRvbkNhbmNlbENhcHRpb24gOiBcItCe0YLQvNC10L3QsFwiO1xyXG5cclxuICAgICAgICBQYXJlbnQuUHJvdG8uRGF0YS5MaWJyYXJ5SURMaXN0U2VsZWN0ZWQgPSBbXTtcclxuICAgICAgICBQYXJlbnQuTGlicmFyeVRyZWUgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgICAgICAgICAgTmFtZTogJ0xpYnJhcnlUcmVlJyxcclxuICAgICAgICAgICAgVmlzaWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIFBhcmVudDogUGFyZW50LFxyXG4gICAgICAgICAgICBSb3V0ZTogZmFsc2UsXHJcbiAgICAgICAgICAgIENvbnRlbnQ6IGA8ZGl2IGNsYXNzPVwibGlicmFyeS10cmVlXCI+XHJcbiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNlYXJjaC1ib3ggbC1yb3cgbC1mbGV4YS1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCf0L7QuNGB0Lo6IDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTEwMFwiPjxpbnB1dCBjbGFzcz1cInRleHRib3ggbC10ZXh0Ym94IHNlYXJjaFwiIHR5cGU9XCJ0ZXh0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpYi1ncm91cC1saXN0ICR7T3B0aW9ucy5NdWx0aVNlbGVjdCA/ICdtdWx0aS1zZWxlY3QnOidzaW5nbGUtc2VsZWN0J31cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlciBsLXJvdyBsLWZsZXgtZW5kXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiBidXR0b24yIGwtYnV0dG9uIGJ0bi1jYW5jZWxcIj4ke09wdGlvbnMuQnV0dG9uQ2FuY2VsQ2FwdGlvbn08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGwtYnV0dG9uIGJ0bi1va1wiPiR7T3B0aW9ucy5CdXR0b25Pa0NhcHRpb259PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgICAgICAgICAgQ29udHJvbDoge1xyXG4gICAgICAgICAgICAgICAgVGFyZ2V0OiBDb250cm9sVGFyZ2V0LFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBBbmltYXRpb246IHtcclxuICAgICAgICAgICAgICAgIEhpZGU6ICdsdXJlLWFuaW1hdGlvbi1mYWRlT3V0JyxcclxuICAgICAgICAgICAgICAgIFNob3c6ICdsdXJlLWFuaW1hdGlvbi1mYWRlJyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgQ29udHJvbGxlcjoge1xyXG4gICAgICAgICAgICAgICAgVGFyZ2V0OiAnLmxpYi1ncm91cC1saXN0JyxcclxuICAgICAgICAgICAgICAgIERhdGE6IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5R3JvdXBMaXN0LFxyXG4gICAgICAgICAgICAgICAgTGlzdEVsZW1lbnQ6IGA8ZGl2IGNsYXNzPVwidHJlZS1lbGVtZW50IGNic1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaWItbGluZSBsLXJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtY2hlY2tib3ggY2hlY2tib3ggY2hlY2tib3gtY2JzXCIgdHlwZT1cIiR7T3B0aW9ucy5NdWx0aVNlbGVjdCA/ICdjaGVja2JveCc6J3JhZGlvJ31cIiBpZD1cImxpYnRyZWUte3soJGcuTHVyZS5HZXRJRCgpKX19XCIgIGRhdGEtaWQ9XCJ7e0lEfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCBsLWNoZWNrYm94LWxhYmVsIGxhYmVsLWNicyBsLXBvaW50ZXJcIiBmb3I9XCJsaWJ0cmVlLXt7KCRnLkx1cmUuR2V0TGFzdElEKCkpfX1cIj57e05hbWV9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN1YlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I2VhY2ggTGlicmFyeUxpc3R9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaWItbGluZSBsaWItcm93IGwtcm93XCIgZGF0YS1uYW1lPVwie3soJGcudGhpcy5HZXRTZWFyY2hOYW1lKG8uTmFtZSkpfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImwtY2hlY2tib3ggY2hlY2tib3ggY2hlY2tib3gtbGliXCIgdHlwZT1cIiR7T3B0aW9ucy5NdWx0aVNlbGVjdCA/ICdjaGVja2JveCc6J3JhZGlvJ31cIiBpZD1cImxpYnRyZWUte3soJGcuTHVyZS5HZXRJRCgpKX19XCIgZGF0YS1pZD1cInt7SUR9fVwiIGRhdGEtY2JzaWQ9XCJ7eyRpdGVtLklEfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImxhYmVsIGwtY2hlY2tib3gtbGFiZWwgbC1wb2ludGVyXCIgZm9yPVwibGlidHJlZS17eygkZy5MdXJlLkdldExhc3RJRCgpKX19XCI+e3tOYW1lfX08L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBQcm9wczogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuSW5wdXRTZWFyY2ggPSB0aGlzLlNlbGVjdCgnLnNlYXJjaCcpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZWxlY3RlZCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZWxlY3RlZENCUyA9IFtdO1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuQ2hhbmdlcyA9IFtdO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBNZXRob2RzOiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5HZXRTZWFyY2hOYW1lID0gZnVuY3Rpb24gKFRleHQpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gVGV4dC5yZXBsYWNlKC9cIi9nLCAnJykudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB0aGlzLlNldFNlbGVjdGVkTGlicmFyaWVzID0gZnVuY3Rpb24gKGlzSW5pdD1mYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLlNlbGVjdGVkLmxlbmd0aCA8IDEpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5TaG93V2Fybign0JLRi9Cx0LXRgNC40YLQtSwg0L/QviDQutGA0LDQudC90LXQuSDQvNC10YDQtSwg0L7QtNC90YMg0LHQuNCx0LvQuNC+0YLQtdC60YMnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoT3B0aW9ucy5Db250cm9sUHVzaCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLlNlbGVjdGVkQ0JTLmxlbmd0aCA8IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IExpYnNOYW1lcyA9IEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5XaGVyZSh4PT4gdGhpcy5TZWxlY3RlZC5pbmRleE9mKHguSUQpID4gLTEpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLlNlbGVjdCh4PT54Lk5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IE5hbWVzID0gTGlic05hbWVzLmpvaW4oJ1xcbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sLl9Db250cm9sTGlzdFswXS5Db250cm9sWzBdLnNldEF0dHJpYnV0ZSgndGl0bGUnLCBOYW1lcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNvbnRyb2wuX0NvbnRyb2xMaXN0WzBdLkNvbnRyb2xbMF0uaW5uZXJIVE1MID0gTGlic05hbWVzLmxlbmd0aCA+IDEgPyBMaWJzTmFtZXNbMF0rYCAo0Lgg0LXRidC1ICR7TGlic05hbWVzLmxlbmd0aC0xfSlgIDogTGlic05hbWVzWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IE5hbWVzID0gdGhpcy5TZWxlY3RlZENCU1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5TZWxlY3QoeD0+RGljdGlvbmFyeS5MaWJyYXJ5UmVnaW9uRGljdFt4XSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuam9pbignLCAnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ29udHJvbC5fQ29udHJvbExpc3RbMF0uQ29udHJvbFswXS5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgTmFtZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5Db250cm9sLl9Db250cm9sTGlzdFswXS5Db250cm9sWzBdLmlubmVySFRNTCA9IE5hbWVzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNJbml0KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChPcHRpb25zLk9uU2VsZWN0KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgT3B0aW9ucy5PblNlbGVjdCh0aGlzLlNlbGVjdGVkKTtcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgUGFyZW50LlByb3RvLkRhdGEuTGlicmFyeUlETGlzdFNlbGVjdGVkID0gdGhpcy5TZWxlY3RlZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgUGFyZW50LlJlZnJlc2goKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5IaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZXREZWZhdWx0TGlicmFyeSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoT3B0aW9ucy5TZWxlY3RlZExpc3Qpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdGVkID0gT3B0aW9ucy5TZWxlY3RlZExpc3RcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWQgPSBbdGhpcy5Db250cm9sbGVyLkRhdGFbMF0uTGlicmFyeUxpc3QuTGFzdCgpLklEXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgTGliSUQgb2YgdGhpcy5TZWxlY3RlZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0KGAuY2hlY2tib3hbZGF0YS1pZD1cIiR7TGliSUR9XCJdYCkuY2hlY2tlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2V0U2VsZWN0ZWRMaWJyYXJpZXModHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZWFyY2ggPSBmdW5jdGlvbiAoVGV4dCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBFbGVtcyA9IHRoaXMuU2VsZWN0QWxsKCcubGliLXJvdycpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IEVsZW1zLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IEVsZW0gPSBFbGVtc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEVsZW0uY2xhc3NMaXN0LmNvbnRhaW5zKCdjYnMnKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKEVsZW0uZGF0YXNldFsnbmFtZSddLmluZGV4T2YoVGV4dCkgPiAtMSwgRWxlbS5kYXRhc2V0WyduYW1lJ10sIFRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoRWxlbS5kYXRhc2V0WyduYW1lJ10uaW5kZXhPZihUZXh0KSA+IC0xKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRWxlbS5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVsZW0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5PbkNoYW5nZUNCUyA9IGZ1bmN0aW9uIChDQlNDaGVja2JveCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBMaWJyYXJ5UmVnaW9uSUQgPSBwYXJzZUludChDQlNDaGVja2JveC5kYXRhc2V0WydpZCddKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgTGlicyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBDaEJveGVzID0gdGhpcy5TZWxlY3RBbGwoYC5jaGVja2JveC1saWJbZGF0YS1jYnNpZD1cIiR7TGlicmFyeVJlZ2lvbklEfVwiXWApO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgQ2hCb3hlcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENoQm94ZXNbaV0uY2hlY2tlZCA9IENCU0NoZWNrYm94LmNoZWNrZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChDaEJveGVzW2ldLmNoZWNrZWQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMaWJzLnB1c2gocGFyc2VJbnQoQ2hCb3hlc1tpXS5kYXRhc2V0WydpZCddKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuQXJyYXkuUmVtb3ZlKExpYnMsIHg9Png9PT1wYXJzZUludChDaEJveGVzW2ldLmRhdGFzZXRbJ2lkJ10pKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKENCU0NoZWNrYm94LmNoZWNrZWQgJiYgdGhpcy5TZWxlY3RlZENCUy5pbmRleE9mKExpYnJhcnlSZWdpb25JRCkgPCAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5TZWxlY3RlZENCUy5wdXNoKExpYnJhcnlSZWdpb25JRClcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoIUNCU0NoZWNrYm94LmNoZWNrZWQgJiYgdGhpcy5TZWxlY3RlZENCUy5pbmRleE9mKExpYnJhcnlSZWdpb25JRCkgPiAtMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEx1cmUuQXJyYXkuUmVtb3ZlKHRoaXMuU2VsZWN0ZWRDQlMsIHg9Png9PT1MaWJyYXJ5UmVnaW9uSUQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdGVkID0gTGlicztcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB0aGlzLk9uQ2hhbmdlTGlicmFyeSA9IGZ1bmN0aW9uIChDaGVja2JveCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBDaHMgPSB0aGlzLlNlbGVjdEFsbCgnLmNoZWNrYm94OmNoZWNrZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgTGlicyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgQ2hzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFPcHRpb25zLk11bHRpU2VsZWN0ICYmIENoc1tpXSAhPT0gQ2hlY2tib3gpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hzW2ldLmNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBMaWJzLnB1c2gocGFyc2VJbnQoQ2hzW2ldLmRhdGFzZXRbJ2lkJ10pKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TZWxlY3RlZCA9IExpYnM7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFPcHRpb25zLk11bHRpU2VsZWN0KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5TZWxlY3RlZCA9IFtwYXJzZUludChDaGVja2JveC5kYXRhc2V0WydpZCddKV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuU2V0U2VsZWN0ZWRMaWJyYXJpZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLlNhdmVDaGVja2JveFN0YXR1c2VzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hlY2tib3hTdGF0dXNlcyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5DaGVja2JveGVzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGVja2JveFN0YXR1c2VzW2ldID0gdGhpcy5DaGVja2JveGVzW2ldLmNoZWNrZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuUmVzdG9yZUNoZWNrYm94U3RhdHVzZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkNoZWNrYm94ZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoZWNrYm94ZXNbaV0uY2hlY2tlZCA9IHRoaXMuQ2hlY2tib3hTdGF0dXNlc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DYW5jZWwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SZXN0b3JlQ2hlY2tib3hTdGF0dXNlcygpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUmVmcmVzaDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIGlmICghUGFyZW50Lkhhc1Blcm1pc3Npb24pXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Db250cm9sbGVyLlJlZnJlc2goTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlHcm91cExpc3QpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZXREZWZhdWx0TGlicmFyeSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DaGVja2JveGVzID0gdGhpcy5TZWxlY3RBbGwoJy5jaGVja2JveCcpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBCZWZvcmVTaG93OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TYXZlQ2hlY2tib3hTdGF0dXNlcygpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBBZnRlckJ1aWxkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlJlZnJlc2goKTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdCgnLmJ0bi1vaycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNldFNlbGVjdGVkTGlicmFyaWVzKCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0KCcuYnRuLWNhbmNlbCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNhbmNlbCgpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5JbnB1dFNlYXJjaC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChlKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2VhcmNoKGUuY3VycmVudFRhcmdldC52YWx1ZS50b0xvd2VyQ2FzZSgpKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5BZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAnLmNoZWNrYm94LWNicycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFPcHRpb25zLk11bHRpU2VsZWN0KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGFuZ2VzLnB1c2goZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLk9uQ2hhbmdlQ0JTKGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5jaGVja2JveC1saWInLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hhbmdlcy5wdXNoKGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5PbkNoYW5nZUxpYnJhcnkoZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgLy9jYWxsaW5nIHRoaXMuaXNBY3RpdmUgaXMgY2hlYXBlciB0aGFuIGlzVmlzaWJsZSwgc28gaWYgaW5hY3RpdmUgdGhhbiBpbnZpc2libGUgdG9vXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNBY3RpdmUgJiYgdGhpcy5pc1Zpc2libGUgJiYgZS50YXJnZXQgIT09IHRoaXMuQ29udGVudCAmJiBlLnRhcmdldC5jbG9zZXN0KCcubGlicmFyeS10cmVlJykgPT09IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNhbmNlbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gTGlicmFyeVRyZWU7IiwiY2xhc3MgTGlzdFNlbGVjdG9ye1xyXG4gICAgUnVuKFNlbGVjdGVkSURMaXN0PVtdKXtcclxuXHJcbiAgICB9XHJcbiAgICBTZXRTZWxlY3RlZChTZWxlY3RlZCl7XHJcbiAgICAgICAgdGhpcy5Db250ZXh0LlNlbGVjdGVkID0gU2VsZWN0ZWQ7XHJcbiAgICB9XHJcbiAgICBSZWZyZXNoKERhdGEpe1xyXG4gICAgICAgIHRoaXMuQ29udGV4dC5Db250cm9sbGVyLlJlZnJlc2goRGF0YSk7XHJcbiAgICB9XHJcbiAgICBIaWRlKCl7XHJcbiAgICAgICAgdGhpcy5Db250ZXh0LkhpZGUoKTtcclxuICAgIH1cclxuICAgIGNvbnN0cnVjdG9yKE9wdGlvbnM9e30pe1xyXG4gICAgICAgIC8vZGVidWdnZXJcclxuICAgICAgICBPcHRpb25zLk11bHRpU2VsZWN0ID0gT3B0aW9ucy5NdWx0aVNlbGVjdCAhPT0gdm9pZCAwID8gT3B0aW9ucy5NdWx0aVNlbGVjdCA6IGZhbHNlO1xyXG4gICAgICAgIE9wdGlvbnMuaXNBbGxvd0VtcHR5ID0gT3B0aW9ucy5pc0FsbG93RW1wdHkgIT09IHZvaWQgMCA/IE9wdGlvbnMuaXNBbGxvd0VtcHR5IDogZmFsc2U7XHJcbiAgICAgICAgT3B0aW9ucy5Db250cm9sUHVzaCA9IE9wdGlvbnMuQ29udHJvbFB1c2ggIT09IHZvaWQgMCA/IE9wdGlvbnMuQ29udHJvbFB1c2ggOiB0cnVlO1xyXG4gICAgICAgIE9wdGlvbnMuU2VsZWN0ZWQgPSBPcHRpb25zLlNlbGVjdGVkICE9PSB2b2lkIDAgPyBPcHRpb25zLlNlbGVjdGVkIDogW107XHJcbiAgICAgICAgT3B0aW9ucy5CdXR0b25Pa0NhcHRpb24gPSBPcHRpb25zLkJ1dHRvbk9rQ2FwdGlvbiAhPT0gdm9pZCAwID8gT3B0aW9ucy5CdXR0b25Pa0NhcHRpb24gOiBcItCS0YvQsdGA0LDRgtGMXCI7XHJcbiAgICAgICAgT3B0aW9ucy5CdXR0b25DYW5jZWxDYXB0aW9uID0gT3B0aW9ucy5CdXR0b25DYW5jZWxDYXB0aW9uICE9PSB2b2lkIDAgPyBPcHRpb25zLkJ1dHRvbkNhbmNlbENhcHRpb24gOiBcItCe0YLQvNC10L3QsFwiO1xyXG4gICAgICAgIE9wdGlvbnMuR3JvdXBzID0gT3B0aW9ucy5Hcm91cHMgPyBPcHRpb25zLkdyb3VwcyA6IFtdO1xyXG5cclxuXHJcblxyXG4gICAgICAgIHRoaXMuQ29udGV4dCA9IG5ldyBMdXJlLkNvbnRlbnQoe1xyXG4gICAgICAgICAgICBUYXJnZXQ6IE9wdGlvbnMuVGFyZ2V0LFxyXG4gICAgICAgICAgICBOYW1lOiAnTGlzdFNlbGVjdG9yJyxcclxuICAgICAgICAgICAgVmlzaWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIFJvdXRlOiBmYWxzZSxcclxuICAgICAgICAgICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJsaXN0LXNlbGVjdG9yXCI+XHJcbiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNlYXJjaC1ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FwdGlvblwiPtCf0L7QuNGB0Lo6IDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTEwMFwiPjxpbnB1dCBjbGFzcz1cInRleHRib3ggbC10ZXh0Ym94IHNlYXJjaFwiIHR5cGU9XCJ0ZXh0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNlbGVjdC1kZXNlbGVjdC1mdWxsIGwtcm93IGwtZmxleC1zdGFydCAke09wdGlvbnMuTXVsdGlTZWxlY3QgPyAnJzonbm9uZSd9XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiBidXR0b24yIGwtYnV0dG9uIGJ0bi1kZXNlbGVjdC1hbGxcIj7QodC90Y/RgtGMINCy0YHQtTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gbC1idXR0b24gYnRuLXNlbGVjdC1hbGxcIj7QktGL0LHRgNCw0YLRjCDQstGB0LU8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ3JvdXBzICR7T3B0aW9ucy5Hcm91cHMubGVuZ3RoID4gMCA/ICcnOiAnbm9uZSd9XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdyb3VwLWNhcHRpb25cIj7Qn9GA0LjQvNC10L3QuNGC0Ywg0LPQvtGC0L7QstGL0Lkg0L3QsNCx0L7RgDo8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ3JvdXAtbGlzdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIEdyb3Vwc319XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJncm91cC1pdGVtXCIgZGF0YS1pbmRleD1cInt7an19XCI+e3tOYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW1zLWdyb3VwLWxpc3QgJHtPcHRpb25zLk11bHRpU2VsZWN0ID8gJ211bHRpLXNlbGVjdCc6J3NpbmdsZS1zZWxlY3QnfVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyIGwtcm93IGwtZmxleC1lbmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGJ1dHRvbjIgbC1idXR0b24gYnRuLWNhbmNlbFwiPiR7T3B0aW9ucy5CdXR0b25DYW5jZWxDYXB0aW9ufTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gbC1idXR0b24gYnRuLW9rXCI+JHtPcHRpb25zLkJ1dHRvbk9rQ2FwdGlvbn08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgICAgICAgICBTdGF0ZToge1xyXG4gICAgICAgICAgICAgICAgR3JvdXBzOiBPcHRpb25zLkdyb3VwcyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgQ29udHJvbDoge1xyXG4gICAgICAgICAgICAgICAgVGFyZ2V0OiBPcHRpb25zLkNvbnRyb2wsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEFuaW1hdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgSGlkZTogJ2x1cmUtYW5pbWF0aW9uLWZhZGVPdXQnLFxyXG4gICAgICAgICAgICAgICAgU2hvdzogJ2x1cmUtYW5pbWF0aW9uLWZhZGUnLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBDb250cm9sbGVyOiB7XHJcbiAgICAgICAgICAgICAgICBUYXJnZXQ6ICcuaXRlbXMtZ3JvdXAtbGlzdCcsXHJcbiAgICAgICAgICAgICAgICBEYXRhOiBPcHRpb25zLkRhdGEsXHJcbiAgICAgICAgICAgICAgICBMaXN0RWxlbWVudDogYDxkaXYgY2xhc3M9XCJpdGVtLWxpbmUgbGliLXJvdyBsLXJvd1wiIGRhdGEtbmFtZT1cInt7KCRnLnRoaXMuR2V0U2VhcmNoTmFtZShvLk5hbWUpKX19XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwibC1jaGVja2JveCBjaGVja2JveCBjaGVja2JveC1pdGVtXCIgdHlwZT1cIiR7T3B0aW9ucy5NdWx0aVNlbGVjdCA/ICdjaGVja2JveCc6J3JhZGlvJ31cIiBpZD1cImxpYnRyZWUte3soJGcuTHVyZS5HZXRJRCgpKX19XCIgZGF0YS1pZD1cInt7SUR9fVwiIGRhdGEtY2JzaWQ9XCJ7eyRpdGVtLklEfX1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCBsLWNoZWNrYm94LWxhYmVsIGwtcG9pbnRlclwiIGZvcj1cImxpYnRyZWUte3soJGcuTHVyZS5HZXRMYXN0SUQoKSl9fVwiPnt7TmFtZX19PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgUHJvcHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLklucHV0U2VhcmNoID0gdGhpcy5TZWxlY3QoJy5zZWFyY2gnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWQgPSBPcHRpb25zLlNlbGVjdGVkO1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuQnV0dG9uU2VsZWN0QWxsID0gdGhpcy5TZWxlY3QoJy5idG4tc2VsZWN0LWFsbCcpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5CdXR0b25EZXNlbGVjdEFsbCA9IHRoaXMuU2VsZWN0KCcuYnRuLWRlc2VsZWN0LWFsbCcpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DaGFuZ2VzID0gW107XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIE1ldGhvZHM6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkdldFNlYXJjaE5hbWUgPSBmdW5jdGlvbiAoVGV4dCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBUZXh0LnJlcGxhY2UoL1wiL2csICcnKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuU2V0U2VsZWN0ZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuU2VsZWN0ZWQubGVuZ3RoIDwgMSAmJiAhT3B0aW9ucy5pc0FsbG93RW1wdHkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBMdXJlLlN5c3RlbS5TaG93V2Fybign0J3QuNGH0LXQs9C+INC90LUg0LLRi9Cx0YDQsNC90L4nKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoT3B0aW9ucy5PblNlbGVjdCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9wdGlvbnMuT25TZWxlY3QodGhpcy5TZWxlY3RlZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuU2VhcmNoID0gZnVuY3Rpb24gKFRleHQpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgRWxlbXMgPSB0aGlzLlNlbGVjdEFsbCgnLmxpYi1yb3cnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBFbGVtcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBFbGVtID0gRWxlbXNbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChFbGVtLmNsYXNzTGlzdC5jb250YWlucygnY2JzJykpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhFbGVtLmRhdGFzZXRbJ25hbWUnXS5pbmRleE9mKFRleHQpID4gLTEsIEVsZW0uZGF0YXNldFsnbmFtZSddLCBUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEVsZW0uZGF0YXNldFsnbmFtZSddLmluZGV4T2YoVGV4dCkgPiAtMSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVsZW0uc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuT25DaGFuZ2UgPSBmdW5jdGlvbiAoQ2hlY2tib3gpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgQ2hzID0gdGhpcy5TZWxlY3RBbGwoJy5jaGVja2JveDpjaGVja2VkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IExpYnMgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IENocy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghT3B0aW9ucy5NdWx0aVNlbGVjdCAmJiBDaHNbaV0gIT09IENoZWNrYm94KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENoc1tpXS5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgTGlicy5wdXNoKHBhcnNlSW50KENoc1tpXS5kYXRhc2V0WydpZCddKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWQgPSBMaWJzO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghT3B0aW9ucy5NdWx0aVNlbGVjdCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWQgPSBbcGFyc2VJbnQoQ2hlY2tib3guZGF0YXNldFsnaWQnXSldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLlNldFNlbGVjdGVkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuU2F2ZUNoZWNrYm94U3RhdHVzZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGVja2JveFN0YXR1c2VzID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkNoZWNrYm94ZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLkNoZWNrYm94ZXNbaV0uY2hlY2tlZCA9IHRoaXMuU2VsZWN0ZWQuaW5kZXhPZihwYXJzZUludCh0aGlzLkNoZWNrYm94ZXNbaV0uZGF0YXNldFsnaWQnXSkpID4gLTE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQ2hlY2tib3hTdGF0dXNlc1tpXSA9IHRoaXMuQ2hlY2tib3hlc1tpXS5jaGVja2VkO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB0aGlzLlJlc3RvcmVDaGVja2JveFN0YXR1c2VzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5DaGVja2JveGVzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DaGVja2JveGVzW2ldLmNoZWNrZWQgPSB0aGlzLkNoZWNrYm94U3RhdHVzZXNbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2FuY2VsID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUmVzdG9yZUNoZWNrYm94U3RhdHVzZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH07XHJcblxyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0R3JvdXAgPSBmdW5jdGlvbiAoR3JvdXBJbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0ZWQgPSB0aGlzLlN0YXRlLkdyb3Vwc1tHcm91cEluZGV4XS5WYWx1ZXM7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TZXRTZWxlY3RlZCgpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLlNldEFsbENoZWNrYm94ZXMgPSBmdW5jdGlvbiAoQ2hlY2tlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGNoIG9mIHRoaXMuQ2hlY2tib3hlcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoLmNoZWNrZWQgPSBDaGVja2VkO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgQmVmb3JlU2hvdzogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuU2F2ZUNoZWNrYm94U3RhdHVzZXMoKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DaGVja2JveGVzID0gdGhpcy5TZWxlY3RBbGwoJy5jaGVja2JveCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0KCcuYnRuLW9rJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2V0U2VsZWN0ZWQoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TZWxlY3QoJy5idG4tY2FuY2VsJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2FuY2VsKCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuSW5wdXRTZWFyY2guYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCAoZSk9PntcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNlYXJjaChlLmN1cnJlbnRUYXJnZXQudmFsdWUudG9Mb3dlckNhc2UoKSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgJy5jaGVja2JveC1pdGVtJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkNoYW5nZXMucHVzaChlLmN1cnJlbnRUYXJnZXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuT25DaGFuZ2UoZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuQWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAnLmdyb3VwLWl0ZW0nLCAoZSk9PnRoaXMuU2VsZWN0R3JvdXAoZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbJ2luZGV4J10pKTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLkJ1dHRvblNlbGVjdEFsbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT50aGlzLlNldEFsbENoZWNrYm94ZXModHJ1ZSkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5CdXR0b25EZXNlbGVjdEFsbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT50aGlzLlNldEFsbENoZWNrYm94ZXMoZmFsc2UpKTtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgLy9jYWxsaW5nIHRoaXMuaXNBY3RpdmUgaXMgY2hlYXBlciB0aGFuIGlzVmlzaWJsZSwgc28gaWYgaW5hY3RpdmUgdGhhbiBpbnZpc2libGUgdG9vXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNBY3RpdmUgJiYgdGhpcy5pc1Zpc2libGUgJiYgZS50YXJnZXQgIT09IHRoaXMuQ29udGVudCAmJiBlLnRhcmdldC5jbG9zZXN0KCcubGlzdC1zZWxlY3RvcicpID09PSBudWxsKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5DYW5jZWwoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IExpc3RTZWxlY3RvcjsiLCJjb25zdCBJbnB1dEJveCA9IHJlcXVpcmUoXCIuLi9pbnB1dC1ib3gvaW5wdXQtYm94XCIpO1xyXG5cclxuLyoqXHJcbiAqIEBjbGFzcyBOYXZpZ2F0b3JcclxuICovXHJcbmxldCBOYXZpZ2F0b3IgPSBuZXcgTHVyZS5Db250ZW50KHtcclxuICAgIE5hbWU6ICdOYXZpZ2F0b3InLFxyXG4gICAgVGFyZ2V0OiAnLmJvZHknLFxyXG4gICAgQ29udGVudDogYDxkaXYgY2xhc3M9XCJuYXZpZ2F0b3IgbC1jb2xcIj5cclxuICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmF2aWdhdG9yLWFjdGl2YXRvclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYXZpZ2F0b3ItY29udGVudC1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hdmlnYXRvci1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYXYtY29udHJvbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGlcIj48L2Rpdj4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGlcIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmF2aWdhdG9yLWNvbnRlbnQyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmF2aWdhdG9yLWxpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmF2aWdhdG9yLWl0ZW0gbC1yb3dcIiBpZD1cIm5hdi1zZXR0aW5ncy1tZW51XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hdi1pY29uIG5hdi1zZXR0aW5ncy1tZW51XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hdi1uYW1lXCI+0J3QsNGB0YLRgNC+0LnQutC4PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5gLFxyXG4gICAgQ29udHJvbGxlcjp7XHJcbiAgICAgICAgVGFyZ2V0OiAnLm5hdmlnYXRvci1jb250ZW50JyxcclxuICAgICAgICBEYXRhOltcclxuICAgICAgICAgICAgLy8ge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAvLyAgICAgTmFtZTogJ0ZlYXR1cmVkJyxcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgLy8gICAgIE5hbWVDbGFzczogJ25hdi1mZWF0dXJlZCcsXHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIC8vICAgICBTdWJzOiBbXVxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAvLyB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBOYW1lOiAn0KDQsNCx0L7Rh9C40Lkg0YHRgtC+0Lsg0YDRg9C60L7QstC+0LTQuNGC0LXQu9GPJyxcclxuICAgICAgICAgICAgICAgIE5hbWVDbGFzczogJ25hdi1kYXNoJyxcclxuICAgICAgICAgICAgICAgIFN1YnM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7TmFtZTogJ9Cg0LDQsdC+0YfQuNC5INGB0YLQvtC7JywgSUQ6ICduYXYtZGFzaC1tYWluJ30sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KHQstC+0LTQvdCw0Y8g0YLQsNCx0LvQuNGG0LAnLCBJRDogJ25hdi1kYXNoLXN1bW1hcnknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTdWJzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7TmFtZTogJ9Cn0LDRgdGC0YwgMScsIElEOiAnbmF2LWRhc2gtc3VtbS1wMSd9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge05hbWU6ICfQp9Cw0YHRgtGMIDInLCBJRDogJ25hdi1kYXNoLXN1bW0tcDInfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtOYW1lOiAn0KfQsNGB0YLRjCAzJywgSUQ6ICduYXYtZGFzaC1zdW1tLXAzJ30sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7TmFtZTogJ9Cn0LDRgdGC0YwgNCcsIElEOiAnbmF2LWRhc2gtc3VtbS1wNCd9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge05hbWU6ICfQp9Cw0YHRgtGMIDUnLCBJRDogJ25hdi1kYXNoLXN1bW0tcDUnfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtOYW1lOiAn0KfQsNGB0YLRjCA2JywgSUQ6ICduYXYtZGFzaC1zdW1tLXA2J30sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtOYW1lOiAnNiDQndCaJywgSUQ6ICduYXYtc2l4LW5rJ31cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9CS0YLQvtGA0L7QuSDQoNCw0LHQvtGH0LjQuSDRgdGC0L7QuycsXHJcbiAgICAgICAgICAgICAgICBOYW1lQ2xhc3M6ICduYXYtd2Rhc2gnLFxyXG4gICAgICAgICAgICAgICAgU3ViczogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtOYW1lOiAnV9Cg0LDQsdC+0YfQuNC5INGB0YLQvtC7JywgSUQ6ICduYXYtd2Rhc2gtbWFpbid9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ1fQodCy0L7QtNC90LDRjyDRgtCw0LHQu9C40YbQsCcsIElEOiAnbmF2LXdkYXNoLXN1bW1hcnknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTdWJzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7TmFtZTogJ9Cn0LDRgdGC0YwgMScsIElEOiAnbmF2LXdkYXNoLXN1bW0tcDEnfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtOYW1lOiAn0KfQsNGB0YLRjCAyJywgSUQ6ICduYXYtd2Rhc2gtc3VtbS1wMid9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge05hbWU6ICfQp9Cw0YHRgtGMIDMnLCBJRDogJ25hdi13ZGFzaC1zdW1tLXAzJ30sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7TmFtZTogJ9Cn0LDRgdGC0YwgNCcsIElEOiAnbmF2LXdkYXNoLXN1bW0tcDQnfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtOYW1lOiAn0KfQsNGB0YLRjCA1JywgSUQ6ICduYXYtd2Rhc2gtc3VtbS1wNSd9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge05hbWU6ICfQp9Cw0YHRgtGMIDYnLCBJRDogJ25hdi13ZGFzaC1zdW1tLXA2J30sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtOYW1lOiAnNiDQndCaJywgSUQ6ICduYXYtd3NpeC1uayd9XHJcbiAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIC8vIHtcclxuICAgICAgICAgICAgLy8gICAgIE5hbWU6ICfQlNCw0YjRgtGD0YHRgtC10YAnLFxyXG4gICAgICAgICAgICAvLyAgICAgTmFtZUNsYXNzOiAnbmF2LWRhc2gtdGVzdCcsXHJcbiAgICAgICAgICAgIC8vICAgICBTdWJzOiBbXHJcbiAgICAgICAgICAgIC8vICAgICBdXHJcbiAgICAgICAgICAgIC8vIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQrdC70LXQutGC0YDQvtC90L3Ri9C5INC00L3QtdCy0L3QuNC6JyxcclxuICAgICAgICAgICAgICAgIE5hbWVDbGFzczogJ25hdi1kaWFyeScsXHJcbiAgICAgICAgICAgICAgICBTdWJzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge05hbWU6ICfQn9C+0YHQtdGJ0LXQvdC40Y8nLCAgICAgICBJRDogJ25hdi1kaWFyeS12aXNpdCd9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtOYW1lOiAn0JrQvdC40LPQvtCy0YvQtNCw0YfQsCcsICAgICBJRDogJ25hdi1kaWFyeS1ib29rd2FyZSd9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtOYW1lOiAn0JLQvdC10YHRgtCw0YbQuNC+0L3QsNGAJywgICAgSUQ6ICduYXYtZGlhcnktYm9vay1vdXQnfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQodCy0L7QtNC90LDRjyDRgtCw0LHQu9C40YbQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIElEOiAnbmF2LWRpYXJ5LXN1bW1hcnknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTdWJzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LDRgdGC0YwgMScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtZGlhcnktc3VtbWFyeS0xJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSx7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LDRgdGC0YwgMicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtZGlhcnktc3VtbWFyeS0yJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSx7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LDRgdGC0YwgMycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtZGlhcnktc3VtbWFyeS0zJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSx7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LDRgdGC0YwgNCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtZGlhcnktc3VtbWFyeS00J1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSx7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LDRgdGC0YwgNScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtZGlhcnktc3VtbWFyeS01J1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSx7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cn0LDRgdGC0YwgNicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtZGlhcnktc3VtbWFyeS02J1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgXX0sXHJcbiAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQn9Cw0YHQv9C+0YDRgiDRg9GH0YDQtdC20LTQtdC90LjRjycsXHJcbiAgICAgICAgICAgICAgICBOYW1lQ2xhc3M6ICduYXYtcGFzc3BvcnQnLFxyXG4gICAgICAgICAgICAgICAgU3ViczogW11cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ9Cj0YfQtdGCINC/0L7QutCw0LfQsNC90LjQuSDRgdGH0LXRgtGH0LjQutC+0LInLFxyXG4gICAgICAgICAgICAgICAgTmFtZUNsYXNzOiAnbmF2LW1ldGVyJyxcclxuICAgICAgICAgICAgICAgIFN1YnM6IFt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQktC90LXRgdC10L3QuNC1INC/0L7QutCw0LfQsNC90LjQuScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIElEOiAnbmF2LW1ldGVyLWluY29taW5nJ1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0KPQv9GA0LDQstC70LXQvdC40LUg0YHRh9C10YLRh9C40LrQsNC80LgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBJRDogJ25hdi1tZXRlci1tYW5hZ2VtZW50J1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQktCy0L7QtCDQtNCw0L3QvdGL0YUnLFxyXG4gICAgICAgICAgICAgICAgTmFtZUNsYXNzOiAnbmF2LWRhdGEtaW5wdXQnLFxyXG4gICAgICAgICAgICAgICAgU3ViczogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cf0LvQsNC90L7QstGL0LUg0L/QvtC60LDQt9Cw0YLQtdC70LgnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBJRDogJ25hdi1kYXRhLWlucHV0LXBsYW4nXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQnNC10YDQvtC/0YDQuNGP0YLQuNGPJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtZGF0YS1pbnB1dC1hZmZpY2hlJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICfQn9C+0LTQtNC10YDQttC60LAnLFxyXG4gICAgICAgICAgICAgICAgTmFtZUNsYXNzOiAnbmF2LWhlbHAtZGVzaycsXHJcbiAgICAgICAgICAgICAgICBTdWJzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JzQvtC4INC30LDRj9Cy0LrQuCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIElEOiAnbmF2LWhlbHAtZGVzay1teS1yZXEnXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQndC+0LLQsNGPINC30LDRj9Cy0LrQsCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIElEOiAnbmF2LWhlbHAtZGVzay1uZXctcmVxJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIE5hbWU6ICdBZG1pbicsXHJcbiAgICAgICAgICAgICAgICBOYW1lQ2xhc3M6ICduYXYtYWRtaW4nLFxyXG4gICAgICAgICAgICAgICAgU3ViczogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Ch0L7Qt9C00LDRgtGMINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIElEOiAnbmF2LWFkbWluLXVzZXItY3JlYXRlJ1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBOYW1lOiAn0JjQt9C80LXQvdC40YLRjCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBJRDogJ25hdi1hZG1pbi11c2VyLW1hbmFnZW1lbnQnXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQotC10YXQvdC40LrQuCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIElEOiAnbmF2LWFkbWluLXRlY2huaWNpYW4tbWFuYWdlbWVudCdcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgTmFtZTogJ1Rlc3RuYXYnLFxyXG4gICAgICAgICAgICAgICAgTmFtZUNsYXNzOiAnbmF2LXRlc3QnLFxyXG4gICAgICAgICAgICAgICAgU3ViczogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cg0LDQsdC+0YfQuNC5INGB0YLQvtC7JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtdGVzdC1tYWluJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgU3ViczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWU6ICfQo9GA0L7QstC10L3RjCAzLTEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElEOiAnbmF2LXRlc3QtbWFpbi1sZXZlbDMtMSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9CS0YLQvtGA0L7QuSDRgdGC0L7QuycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIElEOiAnbmF2LXRlc3QtbWFpbjInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTdWJzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogJ9Cj0YDQvtCy0LXQvdGMIDMtMicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQ6ICduYXYtdGVzdC1tYWluMi0xJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgTGlzdEVsZW1lbnQ6IGA8ZGl2IGNsYXNzPVwibmF2aWdhdG9yLWxpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYXZpZ2F0b3ItaXRlbSBsLXJvd1wiIGlkPVwie3tOYW1lQ2xhc3N9fVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hdi1pY29uIHt7TmFtZUNsYXNzfX1cIj48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYXYtbmFtZVwiPnt7TmFtZX19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmF2LWxpLXN1YnMgbC1jb2xcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIFN1YnN9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtZWxlbWVudC1saW5lIG5hdi1zdWJuYW1lXCIgaWQ9XCJ7e0lEfX1cIj57e05hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYXYtc3VibGlzdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlYWNoIFN1YnN9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImwtZWxlbWVudC1saW5lIHN1Yi1saVwiIGlkPVwie3tJRH19XCI+e3tOYW1lfX08L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sjZW5kZWFjaH19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNlbmRlYWNofX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gXHJcbiAgICB9LFxyXG4gICAgUHJvcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLk5hdiA9IHRoaXMuU2VsZWN0KCcubmF2aWdhdG9yLWNvbnRlbnQtY29udGFpbmVyJyk7XHJcbiAgICB9LFxyXG4gICAgQWZ0ZXJCdWlsZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuQ29udGVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsIChlKT0+e1xyXG4gICAgICAgICAgICBpZiAoZS50YXJnZXQgPT09IHRoaXMuQ29udGVudClcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0aGlzLkNvbnRlbnQgbW91c2VvdXQnLCBlLnRhcmdldCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5Db250ZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcclxuICAgICAgICAgICAgSW5wdXRCb3guSGlkZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuU2VsZWN0KCcubmF2aWdhdG9yLWFjdGl2YXRvcicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcclxuICAgICAgICAgICAgdGhpcy5OYXYuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdpc0FjdGl2ZU5hdmlnYXRvcicsICh0aGlzLk5hdi5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKjEpLnRvU3RyaW5nKCkgKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gTmF2aWdhdG9yO1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJsZXQgRGljdGlvbmFyeSA9IHJlcXVpcmUoJy4vZGljdGlvbmFyeS5qcycpO1xyXG5cclxubGV0IFN0YXRpYyA9IHtcclxuICAgIERhdGVIb3Vyc0VkaXRpbmdMaW1pdDogMTQsXHJcblxyXG59O1xyXG5cclxuXHJcbi8qIG1ha2UgbGlzdHMgZnJvbSBEaWN0Ki9cclxuKGZ1bmN0aW9uICgpIHtcclxuICAgIGZvciAobGV0IGsgaW4gRGljdGlvbmFyeSl7XHJcbiAgICAgICAgaWYgKERpY3Rpb25hcnkuaGFzT3duUHJvcGVydHkoaykgJiYgay5pbmRleE9mKCdEaWN0JykgPiAtMSl7XHJcbiAgICAgICAgICAgIGxldCBTdGF0aWNLZXkgPSBrLnJlcGxhY2UoJ0RpY3QnLCAnJykgKyAncyc7XHJcbiAgICAgICAgICAgIFN0YXRpY1tTdGF0aWNLZXldID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGtpIGluIERpY3Rpb25hcnlba10pe1xyXG4gICAgICAgICAgICAgICAgaWYgKERpY3Rpb25hcnlba10uaGFzT3duUHJvcGVydHkoa2kpKXtcclxuICAgICAgICAgICAgICAgICAgICBTdGF0aWNbU3RhdGljS2V5XS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgSUQ6IHBhcnNlSW50KGtpKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgTmFtZTogRGljdGlvbmFyeVtrXVtraV1cclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSkoKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gU3RhdGljO1xyXG5cclxuXHJcblxyXG5cclxuIiwid2luZG93LkRFQlVHID0gdHJ1ZTtcclxud2luZG93LmlzTW9iaWxlID0gZmFsc2U7XHJcbmxldCBEb2N1bWVudFBlcmYgPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCk7XHJcblxyXG5sZXQgQ3VzdG9tU3ZnID0gYDxzdmdcclxuICAgeG1sbnM6ZGM9XCJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xL1wiXHJcbiAgIHhtbG5zOmNjPVwiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjXCJcclxuICAgeG1sbnM6cmRmPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zI1wiXHJcbiAgIHhtbG5zOnN2Zz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcclxuICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXHJcbiAgIHhtbG5zOnNvZGlwb2RpPVwiaHR0cDovL3NvZGlwb2RpLnNvdXJjZWZvcmdlLm5ldC9EVEQvc29kaXBvZGktMC5kdGRcIlxyXG4gICB4bWxuczppbmtzY2FwZT1cImh0dHA6Ly93d3cuaW5rc2NhcGUub3JnL25hbWVzcGFjZXMvaW5rc2NhcGVcIlxyXG4gICB2ZXJzaW9uPVwiMS4xXCJcclxuICAgaWQ9XCLQodC70L7QuV8xXCJcclxuICAgeD1cIjBweFwiXHJcbiAgIHk9XCIwcHhcIlxyXG4gICB3aWR0aD1cIjYwXCJcclxuICAgaGVpZ2h0PVwiNjBcIlxyXG4gICB2aWV3Qm94PVwiMCAwIDYwLjAwMDAwMSA2MFwiXHJcbiAgIGVuYWJsZS1iYWNrZ3JvdW5kPVwibmV3IDAgMCAxMTUuNSA2NFwiXHJcbiAgIHhtbDpzcGFjZT1cInByZXNlcnZlXCJcclxuICAgc29kaXBvZGk6ZG9jbmFtZT1cImdlYXIxLnN2Z1wiXHJcbiAgIGlua3NjYXBlOnZlcnNpb249XCIwLjkyLjMgKDI0MDU1NDYsIDIwMTgtMDMtMTEpXCI+PG1ldGFkYXRhXHJcbiAgIGlkPVwibWV0YWRhdGE0NVwiPjxyZGY6UkRGPjxjYzpXb3JrXHJcbiAgICAgICByZGY6YWJvdXQ9XCJcIj48ZGM6Zm9ybWF0PmltYWdlL3N2Zyt4bWw8L2RjOmZvcm1hdD48ZGM6dHlwZVxyXG4gICAgICAgICByZGY6cmVzb3VyY2U9XCJodHRwOi8vcHVybC5vcmcvZGMvZGNtaXR5cGUvU3RpbGxJbWFnZVwiIC8+PGRjOnRpdGxlPjwvZGM6dGl0bGU+PC9jYzpXb3JrPjwvcmRmOlJERj48L21ldGFkYXRhPjxkZWZzXHJcbiAgIGlkPVwiZGVmczQzXCIgLz48c29kaXBvZGk6bmFtZWR2aWV3XHJcbiAgIHBhZ2Vjb2xvcj1cIiNmZmZmZmZcIlxyXG4gICBib3JkZXJjb2xvcj1cIiM2NjY2NjZcIlxyXG4gICBib3JkZXJvcGFjaXR5PVwiMVwiXHJcbiAgIG9iamVjdHRvbGVyYW5jZT1cIjEwXCJcclxuICAgZ3JpZHRvbGVyYW5jZT1cIjEwXCJcclxuICAgZ3VpZGV0b2xlcmFuY2U9XCIxMFwiXHJcbiAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PVwiMFwiXHJcbiAgIGlua3NjYXBlOnBhZ2VzaGFkb3c9XCIyXCJcclxuICAgaW5rc2NhcGU6d2luZG93LXdpZHRoPVwiMTYxNVwiXHJcbiAgIGlua3NjYXBlOndpbmRvdy1oZWlnaHQ9XCI4MzdcIlxyXG4gICBpZD1cIm5hbWVkdmlldzQxXCJcclxuICAgc2hvd2dyaWQ9XCJmYWxzZVwiXHJcbiAgIGlua3NjYXBlOnpvb209XCI5LjMwNTY0NzdcIlxyXG4gICBpbmtzY2FwZTpjeD1cIjE5LjIxNTkzOVwiXHJcbiAgIGlua3NjYXBlOmN5PVwiMzAuNjcxNjlcIlxyXG4gICBpbmtzY2FwZTp3aW5kb3cteD1cIjBcIlxyXG4gICBpbmtzY2FwZTp3aW5kb3cteT1cIjBcIlxyXG4gICBpbmtzY2FwZTp3aW5kb3ctbWF4aW1pemVkPVwiMFwiXHJcbiAgIGlua3NjYXBlOmN1cnJlbnQtbGF5ZXI9XCLQodC70L7QuV8xXCJcclxuICAgdW5pdHM9XCJweFwiXHJcbiAgIHdpZHRoPVwiNjBpblwiIC8+XHJcblxyXG48cGF0aCBjbGFzcz1cImN1c3RvbS1sb2FkLXBhc3NcIlxyXG4gICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPVwiMFwiXHJcbiAgIGQ9XCJtIDU0LjgzNjE3Myw0NC44NjM1NDUgYyAtMy4zNjQ4NDMsMy4zNjQ4NDMgLTYuNTk2NzIsNi41OTQwMDcgLTkuODI4NTk3LDkuODIzMTcgLTAuMTc5MDk3LDAuMTc5MDk3IC0wLjM2NjMzNCwwLjM0NDYyNSAtMC43MDgyNDYsMC42NjQ4MjggLTEuMjQ1NTM0LC0xLjI3NTM4NCAtMi41Njk3NjMsLTIuNDYxMjIgLTMuNjc5NjE4LC0zLjgyMDcyNSAtMS4wMTc1OTQsLTEuMjQyODIxIC0xLjg1NjA5MSwtMC4yMzg3OTUgLTIuNzg2ODUsLTAuMDQ2MTMgLTAuODk4MTk2LDAuMTg0NTI0IC0wLjY5NzM5LDAuODY4MzQ3IC0wLjcwMDEwNCwxLjQ1NDQ4MSAtMC4wMDgxLDEuNjYwNzEzIC0wLjAwMjcsMy4zMjE0MjUgLTAuMDAyNyw1LjA2MDgzMiAtNC45MzYwMDcsMCAtOS43NzQzMjUsMCAtMTQuNzY3MzE4LDAgMCwtMS43NTAyNjEgLTAuMDM3OTksLTMuNDc2MSAwLjAxNjI4LC01LjIwMTkzOCAwLjAyNDQyLC0wLjc2MjUxNyAtMC4yMjc5NDEsLTEuMDg1NDM0IC0wLjkzMzQ3MiwtMS40MzI3NzIgLTEuMjgwODEyLC0wLjYyNjgzOCAtMi4xNTcyOTksLTAuNDQ3NzQxIC0zLjA1Mjc4MSwwLjY2NDgyOCAtMC45NDcwNDEsMS4xNzc2OTUgLTIuMDU2ODk2LDIuMjI1MTM4IC0zLjA2NjM0OSwzLjI5NDI4OSBDIDExLjczOTA0OSw1MS43MTI2MjggOC4zMjI2NDgyLDQ4LjI3NDUxOSA0LjgxOTQxMjYsNDQuNzQ0MTQ3IDYuMDE4ODE2Myw0My41NTAxNzEgNy4yNjk3NzgsNDIuMTkzMzggOC42NDAxMzc0LDQwLjk3NDk4MSA5Ljc2MzU2MDcsMzkuOTc2MzgyIDguNjU2NDE4OSwzOS4yMjIwMDYgOC41MjYxNjY5LDM4LjM2NDUxNCA4LjQxMjE5NjQsMzcuNjIwOTkyIDcuODQ3NzcxMiwzNy42NTM1NTUgNy4yODMzNDU5LDM3LjY1NjI2OSBjIC0xLjczNjY5MywwIC0zLjQ3MDY3MjUsMCAtNS4yODMzNDU5LDAgMCwtNC45NDk1NzUgMCwtOS43OTMzMjEgMCwtMTQuODAyNTk1IDEuNjcxNTY3MSwwIDMuMzYyMTI5MiwwLjAyNzE0IDUuMDQ5OTc3OCwwIDAuNTYxNzExNywwIDEuMjg4OTUxOSwwLjI4MjIxMyAxLjQ3MzQ3NTUsLTAuNjU2Njg3IEMgOC43MDUyNjM0LDIxLjI3NzA4MiA5Ljc1MjcwNjQsMjAuNDUyMTUzIDguNTEyNTk5LDE5LjQzMTg0NiA3LjE1MzA5MzksMTguMzExMTM2IDUuOTYxODMxLDE2Ljk4OTYyMSA0Ljc0NjE0NTksMTUuODAxMDcyIDguMjkyNzk4OCwxMi4yNTcxMzMgMTEuNzIwMDU0LDguODI5ODc3NyAxNS4yOTM4NDIsNS4yNTYwODkgYyAxLjE5Mzk3NywxLjIzNzM5MzggMi40NzIwNzQsMi41MTU0OTEzIDMuNjkzMTg2LDMuODQ3ODYwNSAwLjUxMDE1NCwwLjU1MzU3MSAwLjkzMzQ3MywwLjcwNTUzMTYgMS42NzE1NjgsMC4zNzE3NjA5IDEuNjg3ODQ4LC0wLjc2MjUxNjggMS43MDY4NDMsLTAuNzEzNjcyMyAxLjcwOTU1NywtMi42MjY3NDgzIDAsLTEuMzQwNTA5OSAwLjAwODEsLTIuNjgzNzMzNSAwLjAxNjI4LC00LjAyNDI0MzQgMCwtMC4wNzA1NTMgMC4wMzI1NiwtMC4xNDExMDYzIDAuMDcwNTUsLTAuMzAzOTIxMyA0LjgxMzg5NywwIDkuNjUyMjE1LDAgMTQuNjc3NzcxLDAgMCwxLjY2ODg1MzUgLTAuMDE2MjgsMy4zNTM5ODg1IDAuMDEwODUsNS4wMzkxMjM1IDAuMDA4MSwwLjQ0MjMxNCAwLjAwODEsMS4xMjA3MDk3IDAuMjYzMjE4LDEuMjc1MzgzOSAwLjY5NzM5MSwwLjQxNzg5MTggMS41MTk2MDYsMC42NTM5NzM1IDIuMzE0Njg2LDAuODY1NjMzIDAuMTY1NTI5LDAuMDQzNDE3IDAuNDU4NTk2LC0wLjMwMTIwNzcgMC42NTk0MDEsLTAuNTAyMDEyOSAxLjMwNTIzMywtMS4zMDI1MTk4IDIuNjAyMzI2LC0yLjYxMzE4MDMgMy44NjQxNDIsLTMuODg1ODUwNyAzLjQ5MjM4MSwzLjUwODY2MjcgNi45MDg3ODIsNi45NDQwNTg4IDEwLjQ1MDAwOCwxMC41MDQyNzk4IC0xLjE5OTQwNCwxLjE4NTgzNSAtMi40NDc2NTIsMi41MzcyIC0zLjgyNjE1MiwzLjc0MjAzIC0xLjEzMTU2NCwwLjk4Nzc0NSAtMC4wNDM0MiwxLjc0MjEyMSAwLjA3ODY5LDIuNTk2ODk5IDAuMTIyMTExLDAuODQ2NjM4IDAuNzY1MjMsMC43MDI4MTggMS4zMzIzNjksMC43MDI4MTggMS43MDE0MTYsMCAzLjQwMjgzMywwIDUuMTk2NTExLDAgMCw0LjkyMjQ0IDAsOS43OTA2MDcgMCwxNC43OTk4ODIgLTEuNzU1Njg4LDAgLTMuNDg0MjQsMCAtNS4yMTU1MDYsMCAtMC42MDc4NDMsMCAtMS4yMDQ4MzEsLTAuMDI3MTQgLTEuMzI0MjI5LDAuNzYyNTE2IC0wLjEzMDI1MiwwLjg1NDc3OSAtMS4yMzE5NjYsMS42MDY0NDEgLTAuMDc1OTgsMi41OTY4OTkgMS4zNzg1LDEuMTc3Njk1IDIuNjEwNDY3LDIuNTE4MjA1IDMuOTc1Mzk5LDMuODU2MDAxIHogTSAxNC43NDAyNzEsMTkuMDE2NjY4IGMgLTEuMDE3NTkzLDIuODUxOTc2IC0xLjg5Njc5NCw1LjM2MjA0IC0yLjgzMjk4LDcuODUwMzk1IC0wLjEwMDQwMiwwLjI2MzIxOCAtMC41NDI3MTYsMC41NDU0MyAtMC44Mzg0OTcsMC41NjE3MTIgLTEuMjI5MjUzLDAuMDY1MTMgLTIuNDY2NjQ2OCwwIC0zLjY5NTg5OTgsMC4wNTY5OCAtMC4zMDEyMDc3LDAuMDI3MTQgLTAuODM4NDk3MiwwLjMyMjkxNyAtMC44NDY2Mzc5LDAuNTEyODY3IC0wLjA2Nzg0LDEuNjUyNTcyIC0wLjAzNzk5LDMuMzEwNTcxIC0wLjAzNzk5LDUuMDg3OTY4IDEuODU4ODA0MywwIDMuNTgxOTI5NywwIDUuMDI1NTU1NywwIDEuMTIwNzA5LDIuODQzODM1IDIuMTYyNzI1LDUuNDg0MTUxIDMuMzAyNDMsOC4zNzk1NDQgLTEuMDY2NDM5LDEuMDMxMTYyIC0yLjMwOTI1OSwyLjIzMzI3OSAtMy40NDg5NjQsMy4zMzQ5OTQgMS4yODg5NTIsMS4zMDI1MiAyLjU1MzQ4MSwyLjU4MDYxNyAzLjk4MDgyNiw0LjAyMTUzIDEuMTE1MjgyLC0xLjI1MzY3NiAyLjI2NTg0MiwtMi41NDUzNDEgMy4xMzE0NzQsLTMuNTIyMjMxIDIuODg3MjUzLDEuMDE3NTk0IDUuNDAyNzQ1LDEuODg1OTQgNy44OTM4MTQsMi44MTM5ODUgMC4yNTIzNjMsMC4wOTQ5OCAwLjUwMjAxMywwLjU2MTcxMiAwLjUxMjg2NywwLjg2NTYzMyAwLjA1MTU2LDEuNDczNDc2IDAuMDI0NDIsMi45NDk2NjUgMC4wMjQ0Miw0LjQ1ODQxNyAxLjk1NjQ5MywwIDMuNzc0NTk0LDAgNS42NzY4MTYsMCAwLC0xLjQyNDYzMSAwLjA3MzI3LC0yLjc2Nzg1NCAtMC4wMjQ0MiwtNC4wOTc1MSAtMC4wNzA1NSwtMC45Mzg5IDAuMzI4MzQ0LC0xLjIwNzU0NCAxLjE0NTEzMiwtMS40NDYzNCAxLjYyNTQzNiwtMC40Nzc1OSAzLjIxODMxLC0xLjA3MTg2NSA0LjgwMDMyOCwtMS42ODc4NDggMC43MjQ1MjcsLTAuMjgyMjEzIDEuMzgzOTI4LC0wLjczMjY2OCAyLjM4MjUyNiwtMS4yNzUzODQgMS4xNjY4NDEsMS4yNjcyNDMgMi4zMzM2ODIsMi41MzcyIDMuMzY0ODQzLDMuNjU3OTA5IDEuMzEzMzc0LC0xLjMxMDY2IDIuNTgwNjE3LC0yLjU3NTE5IDQuMDA1MjQ4LC0zLjk5NzEwNyAtMS4xOTEyNjIsLTEuMDk2Mjg4IC0yLjQ2NjY0NiwtMi4yNjg1NTUgLTMuNTI0OTQ0LC0zLjI0MDAxOCAxLjEyMzQyNCwtMi44NjgyNTcgMi4xNTcyOTksLTUuNTExMjg3IDMuMjQ1NDQ1LC04LjI5ODEzNyAxLjUxNDE4LDAgMy4yMDQ3NDIsMCA1LjAyNTU1NiwwIDAsLTEuNzUyOTc0IDAuMDI0NDIsLTMuNDEwOTczIC0wLjAzNTI4LC01LjA2NjI1OSAtMC4wMDU0LC0wLjE4MTgxIC0wLjQ4MzAxNywtMC40ODAzMDQgLTAuNzU0Mzc2LC0wLjQ5MTE1OCAtMS4yMjkyNTMsLTAuMDU2OTkgLTIuNDY2NjQ3LDAgLTMuNjk1OSwtMC4wNjI0MSAtMC4zMzEwNTcsLTAuMDI3MTQgLTAuODI3NjQyLC0wLjI5ODQ5NCAtMC45MzM0NzIsLTAuNTc1Mjc5IC0wLjk0MTYxMywtMi40ODU2NDIgLTEuODE1Mzg3LC00Ljk5ODQyIC0yLjgyNDg0LC03LjgzMTQwMSAwLjk4Nzc0NCwtMC45MTE3NjQgMi4yNjA0MTUsLTIuMDg0MDMxIDMuNTE2ODA0LC0zLjI0MjczMSAtMS4zODEyMTQsLTEuMzcwMzYgLTIuNjU2NTk4LC0yLjYzNDg4OSAtNC4wNDA1MjUsLTQuMDA1MjQ5IC0wLjk3MTQ2MywwLjk4Nzc0NCAtMi4wMDUzMzgsMS45OTQ0ODQgLTIuOTc5NTE0LDMuMDU1NDk1IC0wLjQ2OTQ1LDAuNTEyODY3IC0wLjgzODQ5OCwwLjU4MzQyIC0xLjQ3MDc2MiwwLjIyNzk0MSAtMS4xMzE1NjQsLTAuNjM0OTc5IC0yLjMxMTk3MywtMS4yMDc1NDUgLTMuNTIyMjMxLC0xLjY3NDI4MSAtMS4xNzIyNjgsLTAuNDUzMTY4IC0yLjQwNjk0OCwtMC43MzgwOTUgLTMuNzE0ODk1LC0xLjEyODg1MSAwLC0xLjY5ODcwMiAwLC0zLjM4OTI2NDYgMCwtNS4xMDE1MzU0IC0xLjkyOTM1NywwIC0zLjc0NDc0NCwwIC01LjYzNjExMiwwIDAsMS43NjY1NDI1IDAsMy40MjQ1NDE0IDAsNC43OTIxODc0IC0yLjY0NTc0MywxLjE1MDU1OSAtNS4xMDk2NzcsMi4yNDQxMzMgLTcuNjAwNzQ2LDMuMjcyNTgxIC0wLjI0MTUwOSwwLjEwMDQwMyAtMC43NDA4MDgsLTAuMTEzOTcgLTAuOTY2MDM2LC0wLjMzNjQ4NCAtMS4wNTAxNTYsLTEuMDM5MzAzIC0yLjA0ODc1NSwtMi4xMzU1OSAtMi45NzQwODYsLTMuMTE1MTkzIC0xLjQ0OTA1NCwxLjQzMDA1OCAtMi43MjQ0MzcsMi42OTE4NzQgLTQuMDk3NTEsNC4wNDU5NTIgMS4yMTAyNTgsMS4xMTc5OTYgMi40ODI5MjgsMi4yOTI5NzcgMy40NjI1MzEsMy4xOTkzMTQgelwiXHJcbiAgIGlkPVwicGF0aDMwXCJcclxuICAgc3R5bGU9XCJmaWxsOiM1YzliYWE7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlLXdpZHRoOjIuNzEzNTgyOTlcIiAvPjxwYXRoXHJcbiAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9XCIwXCJcclxuICAgZD1cIm0gMjkuODM1OTMzLDE3LjgwMDk4MyBjIDYuNDI1NzY1LDAgMTIuMzcxMjI1LDUuOTQ1NDYgMTIuNDE3MzU2LDEyLjQyNTQ5NiAwLjA0MzQyLDYuNTA5ODg1IC02LjAwMjQ0NiwxMi41NjY2MDIgLTEyLjUzOTQ2NywxMi41NTU3NDggLTYuNDM2NjE5LDAgLTEyLjQ3NzA1NSwtNi4wMTMzIC0xMi40NzcwNTUsLTEyLjM5ODM2IC0wLjAwMjcsLTYuNjQwMTM4IDUuOTQwMDMzLC0xMi41Nzc0NTcgMTIuNTk5MTY2LC0xMi41ODI4ODQgeiBtIDcuODA5NjkyLDEyLjQ4NTE5NSBjIC0wLjAwNTQsLTQuNjIxMjMyIC0zLjI2NDQ0LC03LjkyNjM3NiAtNy44MzE0LC03LjkzOTk0NCAtNC42NTEwODEsLTAuMDI3MTQgLTcuOTY5Nzk0LDMuMjgzNDM1IC03Ljk2OTc5NCw3LjkxODIzNSAwLjAwMjcsNC42NjE5MzYgMy4yNjQ0NDEsNy45MjM2NjIgNy45NDI2NTgsNy45NDUzNzEgNC41Mzk4MjQsMC4wMjcxNCA3Ljg2Mzk2MywtMy4zMzIyOCA3Ljg1ODUzNiwtNy45MjM2NjIgelwiXHJcbiAgIGlkPVwicGF0aDMyXCJcclxuICAgc3R5bGU9XCJmaWxsOiM1YzliYWE7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlLXdpZHRoOjIuNzEzNTgyOTlcIiAvPjwvc3ZnPmA7XHJcblxyXG4vLyBkZXZpY2UgZGV0ZWN0aW9uXHJcbihmdW5jdGlvbigpe1xyXG4gICAgaWYoLyhhbmRyb2lkfGJiXFxkK3xtZWVnbykuK21vYmlsZXxhdmFudGdvfGJhZGFcXC98YmxhY2tiZXJyeXxibGF6ZXJ8Y29tcGFsfGVsYWluZXxmZW5uZWN8aGlwdG9wfGllbW9iaWxlfGlwKGhvbmV8b2QpfGlwYWR8aXJpc3xraW5kbGV8QW5kcm9pZHxTaWxrfGxnZSB8bWFlbW98bWlkcHxtbXB8bmV0ZnJvbnR8b3BlcmEgbShvYnxpbilpfHBhbG0oIG9zKT98cGhvbmV8cChpeGl8cmUpXFwvfHBsdWNrZXJ8cG9ja2V0fHBzcHxzZXJpZXMoNHw2KTB8c3ltYmlhbnx0cmVvfHVwXFwuKGJyb3dzZXJ8bGluayl8dm9kYWZvbmV8d2FwfHdpbmRvd3MgKGNlfHBob25lKXx4ZGF8eGlpbm8vaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpXHJcbiAgICAgICAgfHwgLzEyMDd8NjMxMHw2NTkwfDNnc298NHRocHw1MFsxLTZdaXw3NzBzfDgwMnN8YSB3YXxhYmFjfGFjKGVyfG9vfHNcXC0pfGFpKGtvfHJuKXxhbChhdnxjYXxjbyl8YW1vaXxhbihleHxueXx5dyl8YXB0dXxhcihjaHxnbyl8YXModGV8dXMpfGF0dHd8YXUoZGl8XFwtbXxyIHxzICl8YXZhbnxiZShja3xsbHxucSl8YmkobGJ8cmQpfGJsKGFjfGF6KXxicihlfHYpd3xidW1ifGJ3XFwtKG58dSl8YzU1XFwvfGNhcGl8Y2N3YXxjZG1cXC18Y2VsbHxjaHRtfGNsZGN8Y21kXFwtfGNvKG1wfG5kKXxjcmF3fGRhKGl0fGxsfG5nKXxkYnRlfGRjXFwtc3xkZXZpfGRpY2F8ZG1vYnxkbyhjfHApb3xkcygxMnxcXC1kKXxlbCg0OXxhaSl8ZW0obDJ8dWwpfGVyKGljfGswKXxlc2w4fGV6KFs0LTddMHxvc3x3YXx6ZSl8ZmV0Y3xmbHkoXFwtfF8pfGcxIHV8ZzU2MHxnZW5lfGdmXFwtNXxnXFwtbW98Z28oXFwud3xvZCl8Z3IoYWR8dW4pfGhhaWV8aGNpdHxoZFxcLShtfHB8dCl8aGVpXFwtfGhpKHB0fHRhKXxocCggaXxpcCl8aHNcXC1jfGh0KGMoXFwtfCB8X3xhfGd8cHxzfHQpfHRwKXxodShhd3x0Yyl8aVxcLSgyMHxnb3xtYSl8aTIzMHxpYWMoIHxcXC18XFwvKXxpYnJvfGlkZWF8aWcwMXxpa29tfGltMWt8aW5ub3xpcGFxfGlyaXN8amEodHx2KWF8amJyb3xqZW11fGppZ3N8a2RkaXxrZWppfGtndCggfFxcLyl8a2xvbnxrcHQgfGt3Y1xcLXxreW8oY3xrKXxsZShub3x4aSl8bGcoIGd8XFwvKGt8bHx1KXw1MHw1NHxcXC1bYS13XSl8bGlid3xseW54fG0xXFwtd3xtM2dhfG01MFxcL3xtYSh0ZXx1aXx4byl8bWMoMDF8MjF8Y2EpfG1cXC1jcnxtZShyY3xyaSl8bWkobzh8b2F8dHMpfG1tZWZ8bW8oMDF8MDJ8Yml8ZGV8ZG98dChcXC18IHxvfHYpfHp6KXxtdCg1MHxwMXx2ICl8bXdicHxteXdhfG4xMFswLTJdfG4yMFsyLTNdfG4zMCgwfDIpfG41MCgwfDJ8NSl8bjcoMCgwfDEpfDEwKXxuZSgoY3xtKVxcLXxvbnx0Znx3Znx3Z3x3dCl8bm9rKDZ8aSl8bnpwaHxvMmltfG9wKHRpfHd2KXxvcmFufG93ZzF8cDgwMHxwYW4oYXxkfHQpfHBkeGd8cGcoMTN8XFwtKFsxLThdfGMpKXxwaGlsfHBpcmV8cGwoYXl8dWMpfHBuXFwtMnxwbyhja3xydHxzZSl8cHJveHxwc2lvfHB0XFwtZ3xxYVxcLWF8cWMoMDd8MTJ8MjF8MzJ8NjB8XFwtWzItN118aVxcLSl8cXRla3xyMzgwfHI2MDB8cmFrc3xyaW05fHJvKHZlfHpvKXxzNTVcXC98c2EoZ2V8bWF8bW18bXN8bnl8dmEpfHNjKDAxfGhcXC18b298cFxcLSl8c2RrXFwvfHNlKGMoXFwtfDB8MSl8NDd8bWN8bmR8cmkpfHNnaFxcLXxzaGFyfHNpZShcXC18bSl8c2tcXC0wfHNsKDQ1fGlkKXxzbShhbHxhcnxiM3xpdHx0NSl8c28oZnR8bnkpfHNwKDAxfGhcXC18dlxcLXx2ICl8c3koMDF8bWIpfHQyKDE4fDUwKXx0NigwMHwxMHwxOCl8dGEoZ3R8bGspfHRjbFxcLXx0ZGdcXC18dGVsKGl8bSl8dGltXFwtfHRcXC1tb3x0byhwbHxzaCl8dHMoNzB8bVxcLXxtM3xtNSl8dHhcXC05fHVwKFxcLmJ8ZzF8c2kpfHV0c3R8djQwMHx2NzUwfHZlcml8dmkocmd8dGUpfHZrKDQwfDVbMC0zXXxcXC12KXx2bTQwfHZvZGF8dnVsY3x2eCg1Mnw1M3w2MHw2MXw3MHw4MHw4MXw4M3w4NXw5OCl8dzNjKFxcLXwgKXx3ZWJjfHdoaXR8d2koZyB8bmN8bncpfHdtbGJ8d29udXx4NzAwfHlhc1xcLXx5b3VyfHpldG98enRlXFwtL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50LnN1YnN0cigwLDQpKSlcclxuICAgIHtcclxuICAgICAgICAvL2RvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoTHVyZS5DcmVhdGVFbGVtZW50RnJvbVN0cmluZyhgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJjc3MvbW9iaWxlLmNzc1wiIHR5cGU9XCJ0ZXh0L2Nzc1wiIC8+YCkpO1xyXG4gICAgICAgIHdpbmRvdy5pc01vYmlsZSA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICAvL2RvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoTHVyZS5DcmVhdGVFbGVtZW50RnJvbVN0cmluZyhgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJjc3Mvbm8tbW9iaWxlLmNzc1wiIHR5cGU9XCJ0ZXh0L2Nzc1wiIC8+YCkpO1xyXG4gICAgfVxyXG59KCkpO1xyXG5cclxuLyogVGVzdCBMaWJyYXJ5SUQgPSA0NDAgKi9cclxuXHJcblxyXG5hcGkuZGVidWcgPSB0cnVlO1xyXG4vL2FwaS5vblVuYXV0aCA9IG51bGw7XHJcbi8vYXBpLnRpbWVvdXQgPSB4eHg7XHJcbi8vaGVyZSAneHh4JyBpbiBndWxwZmlsZSAoNzAwMCBvciBzYW1lIHZhbHVlKVxyXG5hcGkub250aW1lb3V0ID0gKG1ldGhvZCk9PntcclxuICAgIGlmIChtZXRob2QgIT09ICdDYWNoZV9HZXRNYXN0ZXJIaXN0b3J5TGFzdCcpe1xyXG4gICAgICAgIEx1cmUuU3lzdGVtLkVycm9yKCfQn9GA0LXQstGL0YjQtdC90L4g0LLRgNC10LzRjyDQvtC20LjQtNCw0L3QuNGPINC+0YLQstC10YLQsCDRgdC10YDQstC10YDQsC4g0J7Qv9C10YDQsNGG0LjRjyDQv9GA0LXRgNCy0LDQvdCwJyk7XHJcbiAgICB9XHJcbn07XHJcbmFwaS5kZWJ1Z0V4Y2x1ZGVzID0ge1xyXG4gICAgLy9rZXk6IHZhbHVlLFxyXG4gICAgLy97c3RyaW5nfSBtZXRob2Q6IHtib29sfSBMb2dJZk5vdEVtcHR5XHJcbiAgICAnQ2FjaGVfR2V0TWFzdGVySGlzdG9yeUxhc3QnOiB0cnVlLFxyXG4gICAgLy8nUGFzc3BvcnRfR2V0JzogZmFsc2UsXHJcbn07XHJcbkx1cmUuQXBwbGljYXRpb24uRW50cnkgPSAnRGFzaCc7Ly8gVmlzaXRhdGlvbiAvIEJvb2t3YXJlIC8gU3VtbWFyeVBhcnQxIC8gRGFzaCAvL0FjY291bnRcclxuTHVyZS5Sb3V0ZS5FbmFibGVkID0gdHJ1ZTtcclxuXHJcbkx1cmUuU2V0dGluZ3MuVHV0b3IuT3B0aW9ucy5GcmFtZS5iYWNrZ3JvdW5kQ29sb3IgPSAnJztcclxuTHVyZS5TZXR0aW5ncy5UdXRvci5PcHRpb25zLkZyYW1lLm91dGxpbmUgPSAnbm9uZSc7XHJcbkx1cmUuU2V0dGluZ3MuQ29udGVudC5QZXJtaXNzaW9uLlN0cmljdCA9IGZhbHNlO1xyXG5MdXJlLlNldHRpbmdzLkxvYWQuU3ZnID0gQ3VzdG9tU3ZnO1xyXG5cclxuXHJcbmxldCBMb2FkID0gbmV3IEx1cmUuTG9hZCh7QmFja2dyb3VuZENvbG9yOiAnI2ZmZid9KTtcclxud2luZG93LkxvYWQgPSBMb2FkO1xyXG5Mb2FkLlNob3coKTtcclxuXHJcbmlmICh3aW5kb3cuaXNNb2JpbGUpe1xyXG4gICAvL3NvbWV0aGluZyB0byBkb1xyXG59XHJcbkx1cmUuVXNlci5DYWNoZSA9IHtcclxuICAgIExpYnJhcmllczogW10sIC8vaW50XHJcbiAgICBMaWJyYXJ5TGlzdDpbXSxcclxuICAgIExpYnJhcnlMaXN0RGljdDp7fSxcclxuICAgIExpYnJhcnlHcm91cExpc3Q6IFtdLCAvL2J5IExpYnJhcnlSZWdpb25JRFxyXG4gICAgTGlicmFyeVJlZ2lvbnM6W10sIC8vaW50XHJcbiAgICBXb3JraW5nRGF0ZXM6IFtdLCAvLyBbTGFzdFdvcmtpbmdEYXlEYXRlLCBUb2RheURhdGVdXHJcbiAgICBUZWNobmljaWFuczogW10sXHJcbiAgICBUZWNobmljaWFuRGljdDoge30sXHJcbiAgICBVc2VyTGlzdDogW10sXHJcblxyXG59O1xyXG5cclxuXHJcbndpbmRvdy5HbG9iYWwgPSByZXF1aXJlKCcuL19jb21tb24vZ2xvYmFsJyk7XHJcblxyXG5jb25zdCBEaWN0aW9uYXJ5ID0gcmVxdWlyZSgnLi9fY29tbW9uL2RpY3Rpb25hcnknKTtcclxud2luZG93LkRpY3Rpb25hcnkgPSBEaWN0aW9uYXJ5O1xyXG53aW5kb3cuRCA9IERpY3Rpb25hcnk7XHJcbndpbmRvdy5TdGF0aWMgPSByZXF1aXJlKCcuL19jb21tb24vc3RhdGljJyk7XHJcblxyXG5cclxuRGljdGlvbmFyeS5IZWxwUmVxdWVzdFR5cGVJVExpc3QgPSBbXHJcbiAgICBEaWN0aW9uYXJ5LkhlbHBSZXF1ZXN0VHlwZS5JVCxcclxuICAgIERpY3Rpb25hcnkuSGVscFJlcXVlc3RUeXBlLkV2ZW50VGVjaFByb3Zpc2lvbixcclxuICAgIERpY3Rpb25hcnkuSGVscFJlcXVlc3RUeXBlLk1ldGVyc0FsYXJtcyxcclxuICAgIERpY3Rpb25hcnkuSGVscFJlcXVlc3RUeXBlLk9mZmljZUVxdWlwLFxyXG4gICAgRGljdGlvbmFyeS5IZWxwUmVxdWVzdFR5cGUuUEMsXHJcbiAgICBEaWN0aW9uYXJ5LkhlbHBSZXF1ZXN0VHlwZS5Tb2Z0d2FyZSxcclxuICAgIERpY3Rpb25hcnkuSGVscFJlcXVlc3RUeXBlLldvcmtpbmdQbGFjZSxcclxuXTtcclxuRGljdGlvbmFyeS5IZWxwUmVxdWVzdFR5cGVBSERMaXN0ID0gW1xyXG4gICAgRGljdGlvbmFyeS5IZWxwUmVxdWVzdFR5cGUuQUhELFxyXG4gICAgRGljdGlvbmFyeS5IZWxwUmVxdWVzdFR5cGUuUmVwYWlyLFxyXG4gICAgRGljdGlvbmFyeS5IZWxwUmVxdWVzdFR5cGUuUmVwbGFjZUluc3RhbGwsXHJcbl07XHJcblxyXG4vLyBFeHRlcm5hbCBwbHVnaW5zXHJcbi8vIHJlcXVpcmUoJy4vLi4vanMvcGx1Z2lucy9ja2VkaXRvci9ja2VkaXRvcicpO1xyXG5cclxucmVxdWlyZSgnLi9fY29tbW9uL2hlYWRsaW5lL2hlYWRsaW5lJyk7XHJcbnJlcXVpcmUoJy4vX2NvbW1vbi9mb290ZXIvZm9vdGVyJyk7XHJcbmxldCBOYXZpZ2F0b3IgPSByZXF1aXJlKCcuL19jb21tb24vbmF2aWdhdG9yL25hdmlnYXRvcicpO1xyXG5sZXQgTGlicmFyeVRyZWUgPSByZXF1aXJlKCcuL19jb21tb24vbGlicmFyeS10cmVlL2xpYnJhcnktdHJlZScpO1xyXG4vL2xldCBJbnB1dEJveCA9IHJlcXVpcmUoJy4vX2NvbW1vbi9pbnB1dC1ib3gvaW5wdXQtYm94Jyk7IHdpbmRvdy5JbnB1dEJveCA9IElucHV0Qm94O1xyXG5cclxud2luZG93LkxpYnJhcnlUcmVlID0gTGlicmFyeVRyZWU7XHJcblxyXG5cclxuXHJcblxyXG5cclxubGV0IEZlYXR1cmVkID0gcmVxdWlyZSgnLi9GZWF0dXJlZC9GZWF0dXJlZCcpO1xyXG5sZXQgRGFzaCA9IHJlcXVpcmUoJy4vRGFzaC9kYXNoYm9hcmQnKTtcclxuXHJcbmxldCBXRGFzaCA9IHJlcXVpcmUoJy4vV0Rhc2gvd2Rhc2hib2FyZCcpO1xyXG5cclxubGV0IERhc2hUZXN0ZXIgPSByZXF1aXJlKCcuL19EYXNoVGVzdGVyL0Rhc2hUZXN0ZXInKTtcclxubGV0IERpYXJ5ID0gcmVxdWlyZSgnLi9EaWFyeS9EaWFyeScpO1xyXG5sZXQgTGlicmFyeVNldHRpbmdzID0gcmVxdWlyZSgnLi9fX0xpYnJhcnlTZXR0aW5ncy9saWJyYXJ5LXNldHRpbmdzJyk7XHJcbmxldCBQYXNzcG9ydCA9IHJlcXVpcmUoJy4vUGFzc3BvcnQvUGFzc3BvcnQnKTtcclxubGV0IE1ldGVyID0gcmVxdWlyZSgnLi9NZXRlci9NZXRlcicpO1xyXG5sZXQgRGF0YUlucHV0ID0gcmVxdWlyZSgnLi9EYXRhSW5wdXQvZGF0YS1pbnB1dCcpO1xyXG5sZXQgSGVscERlc2sgPSByZXF1aXJlKCcuL0hlbHBEZXNrL0hlbHBEZXNrJyk7XHJcbmxldCBBZG1pbiA9IHJlcXVpcmUoJy4vQWRtaW4vQWRtaW4nKTtcclxubGV0IFRlc3RuYXYgPSByZXF1aXJlKCcuL1Rlc3RuYXYvVGVzdG5hdicpO1xyXG5sZXQgQWNjb3VudCA9IHJlcXVpcmUoJy4vQWNjb3VudC9BY2NvdW50Jyk7XHJcblxyXG4vL3dpbmRvdy5QYXNzcG9ydCA9IFBhc3Nwb3J0O1xyXG5cclxuLyoqXHJcbiAqIEBmdW5jdGlvbiBOYXZpZ2F0b3IuX0luaXRcclxuICovXHJcbk5hdmlnYXRvci5fSW5pdCgpO1xyXG5cclxubGV0IEhpc3RvcnlNYXN0ZXIgPSByZXF1aXJlKCcuL19jb21tb24vaGlzdG9yeS1tYXN0ZXIvaGlzdG9yeS1tYXN0ZXInKTtcclxuXHJcbkx1cmUuUGVyZihEb2N1bWVudFBlcmYsIFwiQ29udGVudCBTY3JpcHRzXCIpO1xyXG5cclxuKGFzeW5jIGZ1bmN0aW9uIFN0YXJ0UG9pbnQoKSB7XHJcbiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2lzQWN0aXZlTmF2aWdhdG9yJykgPiAwKXtcclxuICAgICAgICBOYXZpZ2F0b3IuTmF2LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgfVxyXG4gICAgbGV0IEdlbnRsZVBhY2sgPSBhd2FpdCBhcGkuR2V0U3RhcnRQYWNrKHt9KTtcclxuICAgIEx1cmUuVXNlci5JRCAgICAgICAgICA9IEdlbnRsZVBhY2suVXNlcklEO1xyXG4gICAgTHVyZS5Vc2VyLk5hbWUgICAgICAgID0gR2VudGxlUGFjay5Vc2VyTmFtZTtcclxuICAgIEx1cmUuVXNlci5FbWFpbCAgICAgICA9IEdlbnRsZVBhY2suRW1haWw7XHJcbiAgICBMdXJlLlVzZXIuUGhvbmUgICAgICAgPSBHZW50bGVQYWNrLlBob25lO1xyXG4gICAgTHVyZS5Vc2VyLlBvc2l0aW9uICAgID0gR2VudGxlUGFjay5Qb3NpdGlvbjtcclxuICAgIEx1cmUuVXNlci5Sb2xlcyAgICAgICA9IEdlbnRsZVBhY2suUm9sZXM7XHJcbiAgICAvL0x1cmUuVXNlci5Sb2xlcy5wdXNoKERpY3Rpb25hcnkuUm9sZS5UZXN0ZXJQYW5lbCk7XHJcblxyXG4gICAgTHVyZS5Vc2VyLldlYlNldHRpbmdzID0gSlNPTi5wYXJzZShHZW50bGVQYWNrLldlYlNldHRpbmdzKTtcclxuICAgIC8vTHVyZS5Vc2VyLlN1YlJvbGVzICAgPSBHZW50bGVQYWNrLlN1YlJvbGVzO1xyXG4gICAgZm9yIChsZXQgciBvZiBHZW50bGVQYWNrLlN1YlJvbGVzKXtcclxuICAgICAgICBMdXJlLlVzZXIuU3ViUm9sZXNbci5LZXldID0gci5WYWx1ZTtcclxuICAgIH1cclxuICAgIEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5UmVnaW9ucyA9IEx1cmUuVXNlci5TdWJSb2xlc1tEaWN0aW9uYXJ5LlJvbGUuTGlicmFyeVJlZ2lvbklEXTtcclxuICAgIEx1cmUuVXNlci5DYWNoZS5MaWJyYXJpZXMgPSBMdXJlLlVzZXIuU3ViUm9sZXNbRGljdGlvbmFyeS5Sb2xlLkxpYnJhcnlJRF07XHJcbiAgICBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3QgID0gR2VudGxlUGFjay5MaWJyYXJpZXMuV2hlcmUoeD0+IXguSXNWaXJ0dWFsKTtcclxuICAgIEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5RnVsbExpc3QgID0gR2VudGxlUGFjay5MaWJyYXJpZXM7XHJcbiAgICBMdXJlLlVzZXIuQ2FjaGUuV29ya2luZ0RhdGVzID0gR2VudGxlUGFjay5Xb3JraW5nRGF0ZXMuU2VsZWN0KHg9Pkx1cmUuRGF0ZSh4KS5EYXRlKTtcclxuXHJcbiAgICBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUdyb3VwTGlzdCA9IFtdO1xyXG4gICAgTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0RGljdCA9IHt9O1xyXG4gICAgZm9yIChsZXQgbCBvZiBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUZ1bGxMaXN0KXtcclxuICAgICAgICBMdXJlLlVzZXIuQ2FjaGUuTGlicmFyeUxpc3REaWN0W2wuSURdID0gbDtcclxuICAgIH1cclxuICAgIEx1cmUuVXNlci5DYWNoZS5MaWJyYXJ5TGlzdERpY3RbLTFdID0ge0lEOiAtMSwgTmFtZTogJ9CS0YHQtSDQsdC40LHQu9C40L7RgtC10LrQuCd9O1xyXG4gICAgLy9kZWJ1Z2dlclxyXG4gICAgTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlHcm91cExpc3QgPSAgTHVyZS5Vc2VyLkNhY2hlLkxpYnJhcnlMaXN0XHJcbiAgICAgICAgLkdyb3VwQnkoJ0xpYnJhcnlSZWdpb25JRCcpXHJcbiAgICAgICAgLlNlbGVjdCh4PT57XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBJRDogcGFyc2VJbnQoeC5LZXkpLFxyXG4gICAgICAgICAgICAgICAgTmFtZTogRGljdGlvbmFyeS5MaWJyYXJ5UmVnaW9uRGljdFt4LktleV0sXHJcbiAgICAgICAgICAgICAgICBpc0NCUzogMSxcclxuICAgICAgICAgICAgICAgIExpYnJhcnlMaXN0OiB4LFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgLy8gKiBUZWNobmljaWFucyAqXHJcbiAgICBMdXJlLlVzZXIuQ2FjaGUuVGVjaG5pY2lhbnMgPSBHZW50bGVQYWNrLlRlY2huaWNpYW5zO1xyXG4gICAgZm9yKGxldCB0IG9mIEdlbnRsZVBhY2suVGVjaG5pY2lhbnMpe1xyXG4gICAgICAgIEx1cmUuVXNlci5DYWNoZS5UZWNobmljaWFuRGljdFt0LklEXSA9IHQ7XHJcbiAgICB9XHJcbiAgICBMdXJlLlVzZXIuQ2FjaGUuVXNlckxpc3QgPSBHZW50bGVQYWNrLlVzZXJMaXN0O1xyXG4gICAgTHVyZS5Vc2VyLkNhY2hlLlVzZXJEaWN0ID0gTHVyZS5Vc2VyLkNhY2hlLlVzZXJMaXN0LlRvRGljdGlvbmFyeSh4PT54LklELCB4PT54KTtcclxuXHJcblxyXG5cclxuICAgIC8vZGVidWdnZXI7XHJcbiAgICBpZiAoTHVyZS5Vc2VyLklEICE9PSAzICYmIEx1cmUuVXNlci5Sb2xlcy5pbmRleE9mKERpY3Rpb25hcnkuUm9sZS5EYWlyeUlucHV0KSA+IC0xKVxyXG4gICAgICAgIEx1cmUuQXBwbGljYXRpb24uRW50cnkgPSAnVmlzaXRhdGlvbic7XHJcbiAgICBpZiAoTHVyZS5Vc2VyLklEICE9PSAzICYmIEx1cmUuVXNlci5Sb2xlcy5pbmRleE9mKERpY3Rpb25hcnkuUm9sZS5EYWlyeUlucHV0KSA8IDApXHJcbiAgICAgICAgTHVyZS5BcHBsaWNhdGlvbi5FbnRyeSA9ICdEYXNoJztcclxuXHJcblxyXG4gICAgTHVyZS5BcHBsaWNhdGlvbi5SdW4oKTtcclxuICAgIEhpc3RvcnlNYXN0ZXIuUnVuKCk7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKT0+e1xyXG4gICAgICAgIExvYWQuSGlkZSgpO1xyXG4gICAgICAgIEx1cmUuUGVyZihEb2N1bWVudFBlcmYsIFwiRG9jdW1lbnQgcmVuZGVyIGRvbmVcIik7XHJcbiAgICB9LCAwKVxyXG5cclxufSkoKTtcclxuLy9TdGFydFBvaW50KCk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdfQ==
